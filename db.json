{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"themes/hexo-theme-aircloud-master/source/js/gitment.js","path":"js/gitment.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-aircloud-master/source/js/index.js","path":"js/index.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-aircloud-master/source/css/aircloud.css","path":"css/aircloud.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-aircloud-master/source/css/aircloud.css.map","path":"css/aircloud.css.map","modified":1,"renderable":1},{"_id":"themes/hexo-theme-aircloud-master/source/css/aircloud.less","path":"css/aircloud.less","modified":1,"renderable":1},{"_id":"themes/hexo-theme-aircloud-master/source/css/gitment.css","path":"css/gitment.css","modified":1,"renderable":1}],"Cache":[{"_id":"source/_posts/ES6的解构.md","hash":"e5e3de8dbc706fdfbe641929461f9ef78a45cd08","modified":1600074840000},{"_id":"source/_posts/Echart使用记录.md","hash":"e96830933a48901dab5d69302f638c0953e49559","modified":1599201078000},{"_id":"source/_posts/ElementUI的使用.md","hash":"7ce69700a4b085fa1c54c4d2317ece88c13e9dbc","modified":1616124366000},{"_id":"source/_posts/VUE高级技巧记录.md","hash":"8c810edb03885ae8078d88874a61c4054e74341d","modified":1613996396000},{"_id":"source/_posts/git合并两个本地库.md","hash":"e23828cc876e683ac781604689b2cc2f559e2755","modified":1598926518000},{"_id":"source/_posts/hexo图片不显示.md","hash":"d65ff74d36f5b28b2b2211f3f458de7df735f068","modified":1593763388000},{"_id":"source/_posts/PostMessage跨域.md","hash":"89daf2e16039604192e4604122b92ebec211d477","modified":1597648924000},{"_id":"source/_posts/markdown语法.md","hash":"d1e7f305e1bf5a8b9a2bbea9ff155be508a3b720","modified":1575367498000},{"_id":"source/_posts/cancletoken的使用（取消上一次的请求）.md","hash":"8f9a53d4c746c26859135445764e4a10c8da2961","modified":1593592628000},{"_id":"source/_posts/node实现自动备份数据库.md","hash":"265400a6c0b091d3e7d3bb097b59ed4e56ca6b6a","modified":1599032156000},{"_id":"source/_posts/origin.md","hash":"a91d751f54a81865744fbe860a8d6c9a2c068915","modified":1630246760032},{"_id":"source/_posts/vue中的防抖和节流.md","hash":"d2414e9d72c1ad53d299287a4b17c4dc3e0b4b6b","modified":1621564729120},{"_id":"source/_posts/vue的文档阅读.md","hash":"b12410377a5029c61ca74fb47db2e7e6add9dba7","modified":1615880598000},{"_id":"source/_posts/scss的换肤功能.md","hash":"9cec550fd0237d7e27fa7258689d13ea7a55374b","modified":1618388274867},{"_id":"source/_posts/uni开发app.md","hash":"6e9a650ea55f62dbb3c1ae9cc83c660ef94656ac","modified":1611046130000},{"_id":"source/_posts/vue项目上线优化记录.md","hash":"58400c404a28f5b0536f95e26c571423ad1f4096","modified":1593763304000},{"_id":"source/_posts/上传多个excle到服务器解析.md","hash":"8eb3c143111414af2fade05da3034cd9d41b52a0","modified":1613723640000},{"_id":"source/_posts/websokect初体验.md","hash":"8eabffa7247c2f87fa8742c4d2adbaf30df3cdea","modified":1623053164018},{"_id":"source/_posts/你可能会用到的webpack.md","hash":"72b2b8e8900216591e53e5c3c8ac4671f0c90915","modified":1617347888000},{"_id":"source/_posts/从JavaScript的构造函数讲到多态.md","hash":"a1851493b0e77fc00eb5132e5e24890f5c8b86a3","modified":1618212717011},{"_id":"source/_posts/使用node上传和下载文件.md","hash":"aba3c7d1d237b05c51582db620d922549d4ab938","modified":1599017588000},{"_id":"source/_posts/使用uniapp调用摄像头.md","hash":"e3b3bbfcb0fe0e052f4ab2784b1460e63f1ddaf7","modified":1610962440000},{"_id":"source/_posts/利用宝塔面板实现Https.md","hash":"b431d62d4954b3bc00f64c41ecf98f1e52245203","modified":1614932298000},{"_id":"source/_posts/可能用到的请求.md","hash":"1861307ee59ee7b489087d91d2f08e9e57c03fa5","modified":1624934608559},{"_id":"source/_posts/基础算法记录.md","hash":"22c9329e5236fc844e3fd2dc9e0536bb8c548139","modified":1615973028000},{"_id":"source/_posts/小技巧.md","hash":"f4c860344d5150119eeaf0d5f03b69874a1cd2fd","modified":1611048068000},{"_id":"source/_posts/原生JS方法记录.md","hash":"d49a883d4ec169a7d4ccd53fd1358d50af7f0261","modified":1593763282000},{"_id":"source/_posts/异步迭代器和await.md","hash":"3a54f0d5e90180091b57370555634564fc7c19bb","modified":1630249333486},{"_id":"source/_posts/小程序常用组件.md","hash":"051fb27618138e9db463999d503c9e89f2cd8765","modified":1602752866000},{"_id":"source/_posts/常用点记录（ES6flexvue写法).md","hash":"5b522e91a2dbeb325f924f1c1bc07f8d5e9c4f9b","modified":1599207298000},{"_id":"source/_posts/当你换了新电脑需要做什么.md","hash":"273f1604119d215f93a3c1e65a3b5cb6e085cf07","modified":1618212946513},{"_id":"source/_posts/微信小程序日常.md","hash":"32e85da31f7784d29a7955d13e36d44de67c99d8","modified":1618293662344},{"_id":"source/_posts/当你重启了服务器，应该做什么 ？.md","hash":"38365f8000ac3a00de8ec1f3fd86c965ac4bb9ff","modified":1601026458000},{"_id":"source/_posts/正则记录.md","hash":"c402a10fdf58aa8b2d0295044eccc2965a4afe47","modified":1612343292000},{"_id":"source/_posts/时间小工具.md","hash":"f10521351fcede9b0eb94d330ac54451e90588ff","modified":1611109952000},{"_id":"source/_posts/服务器目录说明.md","hash":"87363c52b5a813b9be98c70d01cf4b9dc1969af4","modified":1614821920000},{"_id":"source/_posts/监听页面和浏览器离开.md","hash":"dfd4583a7d22683c2b339900bef932bd1f9dcddd","modified":1608803708000},{"_id":"source/_posts/纯js实现上传视频，截取关键帧作为封面，上传后端保存.md","hash":"355a20e113cb41280de94bd323ddc2213dab11a5","modified":1599794470000},{"_id":"source/_posts/用插槽去二次封装.md","hash":"ccde832824c9e064fb9a181c7aae00c0f7a0d810","modified":1624346014454},{"_id":"source/_posts/记录网站功能实现.md","hash":"8b44c5db43b3bb573124f280a59cd8505cefb259","modified":1593762016000},{"_id":"source/_posts/路由守卫使用-判断登录状态.md","hash":"10c30f81a57a2a9a6650bcc04b183f42aa3557ed","modified":1593763402000},{"_id":"source/_posts/静态布局、自适应布局、流式布局、响应式布局、弹性布局等的概念和区别.md","hash":"0fb30fa82452c4c9ee7d3bfe08b9ca09b1558c92","modified":1593763360000},{"_id":"themes/hexo-theme-aircloud-master/layout/catagory.ejs","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1643891927000},{"_id":"themes/hexo-theme-aircloud-master/layout/page.ejs","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1643891927000},{"_id":"themes/hexo-theme-aircloud-master/source/_less/about.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1643891927000},{"_id":"themes/hexo-theme-aircloud-master/source/_less/about.less","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1643891927000},{"_id":"themes/hexo-theme-aircloud-master/source/_less/diff.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1643891927000},{"_id":"themes/hexo-theme-aircloud-master/source/_less/diff.less","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1643891927000},{"_id":"themes/hexo-theme-aircloud-master/source/_less/page.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1643891927000},{"_id":"themes/hexo-theme-aircloud-master/source/_less/page.less","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1643891927000},{"_id":"themes/hexo-theme-aircloud-master/source/_less/theme.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1643891927000},{"_id":"themes/hexo-theme-aircloud-master/source/_less/theme.less","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1643891927000},{"_id":"themes/hexo-theme-aircloud-master/.gitignore","hash":"5a4a925cfd624633dafaacaced416c8d7272dcef","modified":1643891927000},{"_id":"themes/hexo-theme-aircloud-master/LICENSE","hash":"218b4bf797149a2751a015812a9adefe368185c1","modified":1643891927000},{"_id":"themes/hexo-theme-aircloud-master/_config.yml","hash":"0ad3a6ab2c9bb07fb1e030052622fdcde5c6f28a","modified":1643891927000},{"_id":"themes/hexo-theme-aircloud-master/languages/ko.yml","hash":"c58138bcc1087201c22e996d24eb314c0447228f","modified":1643891927000},{"_id":"themes/hexo-theme-aircloud-master/readme-en.md","hash":"26ea5c998b0c1f1947fbae5313b722bcf57ea7fe","modified":1643891927000},{"_id":"themes/hexo-theme-aircloud-master/languages/zh.yml","hash":"9ffaff1f5d240c94e44f9ef3b02bbae146af0dd4","modified":1643891927000},{"_id":"themes/hexo-theme-aircloud-master/layout/404.ejs","hash":"8a30233a7b99831bd771121b5f450aaba412e8d5","modified":1643891927000},{"_id":"themes/hexo-theme-aircloud-master/languages/en.yml","hash":"f3dd50ca369974ac7d335fb1cfabf4ebb04a64fa","modified":1643891927000},{"_id":"themes/hexo-theme-aircloud-master/layout/archive.ejs","hash":"0f8a062f4f2f0648b23bd8c4a21945a6ca60dc1f","modified":1643891927000},{"_id":"themes/hexo-theme-aircloud-master/readme.md","hash":"4be1fc64bd1dc335a986a39594564e89bd7eba43","modified":1643891927000},{"_id":"themes/hexo-theme-aircloud-master/layout/index.ejs","hash":"9869a800bd9e236b8c3f12623e0cbd7599984d5e","modified":1643891927000},{"_id":"themes/hexo-theme-aircloud-master/layout/about.ejs","hash":"cec034166ce08d2f8c961178e07b2f0ceac95cf2","modified":1643891927000},{"_id":"themes/hexo-theme-aircloud-master/layout/post.ejs","hash":"2eb5fc0c2bb801528c3db3b09e6cb4d073e3ad99","modified":1643891927000},{"_id":"themes/hexo-theme-aircloud-master/layout/layout.ejs","hash":"7efd113aee90e698e187d0ea1f0b42a1c00d210e","modified":1643891927000},{"_id":"themes/hexo-theme-aircloud-master/layout/_partial/footer.ejs","hash":"33db88f1b03548c5181c04d44387dc68a9c4cdf6","modified":1643891927000},{"_id":"themes/hexo-theme-aircloud-master/layout/_partial/nav.ejs","hash":"079fa72aa7a02ee11f6a44a8a9e58eb80fe28190","modified":1643891927000},{"_id":"themes/hexo-theme-aircloud-master/layout/_partial/donate.ejs","hash":"81c976a3b7fa5c47ef61181d537220eaf1d55eac","modified":1643891927000},{"_id":"themes/hexo-theme-aircloud-master/layout/tags.ejs","hash":"1a174d9213d25d9bf6ef28aabdaea6661cdd88c8","modified":1643891927000},{"_id":"themes/hexo-theme-aircloud-master/layout/_partial/head.ejs","hash":"3f18d5d4951a205bab25b08d6bf85b054c84a21b","modified":1643891927000},{"_id":"themes/hexo-theme-aircloud-master/layout/_partial/toc.ejs","hash":"41d11d159011466f0b6272aca9a74df8642b693f","modified":1643891927000},{"_id":"themes/hexo-theme-aircloud-master/source/css/aircloud.css.map","hash":"50db34961d11f6f461e23912609d25141068a6fc","modified":1643891927000},{"_id":"themes/hexo-theme-aircloud-master/source/js/index.js","hash":"fcec9a2e4fd90a40957359d423f7f61caa712830","modified":1643891927000},{"_id":"themes/hexo-theme-aircloud-master/source/css/aircloud.less","hash":"45cab2da310dbfcba37ac3db657db77b4adac60d","modified":1643891927000},{"_id":"themes/hexo-theme-aircloud-master/source/css/aircloud.css","hash":"2fe1fc9d6fa13cc4660cb8ae3d80b8d51e04dbf6","modified":1643891927000},{"_id":"themes/hexo-theme-aircloud-master/source/css/gitment.css","hash":"926b553be983d6dd90bcb60c5d6d4ee215d268a6","modified":1643891927000},{"_id":"themes/hexo-theme-aircloud-master/source/_less/archive.less","hash":"5538d38614960e69b97a7f80f38b5933851212b8","modified":1643891927000},{"_id":"themes/hexo-theme-aircloud-master/source/_less/archive.css","hash":"905efcc06a62d1e8b60df0e12434afa353378d3a","modified":1643891927000},{"_id":"themes/hexo-theme-aircloud-master/source/_less/common.css","hash":"64914aa6ecd5b948676870e0809e0f220b162e3b","modified":1643891927000},{"_id":"themes/hexo-theme-aircloud-master/source/_less/donate.css","hash":"ae6a676a42321512f0536c5230bb53084aaf2c2f","modified":1643891927000},{"_id":"themes/hexo-theme-aircloud-master/source/_less/common.less","hash":"8aef4d8cfdefbcd2e28d4985a4f79a5005ca0b6c","modified":1643891927000},{"_id":"themes/hexo-theme-aircloud-master/source/_less/donate.less","hash":"d63139f4aa148bf894afa5c1007a4398696a0e4c","modified":1643891927000},{"_id":"themes/hexo-theme-aircloud-master/source/_less/gitment.css","hash":"7d560b64e367129f98424052c660ae82b03a1d02","modified":1643891927000},{"_id":"themes/hexo-theme-aircloud-master/source/_less/gitment.less","hash":"916deb8ecdee798d7a9b43b544e31dfd5bbd6de4","modified":1643891927000},{"_id":"themes/hexo-theme-aircloud-master/source/_less/hightlight.css","hash":"cb4cad2f034bd369a858349cec2da3df6ba08e6a","modified":1643891927000},{"_id":"themes/hexo-theme-aircloud-master/source/_less/hightlight.less","hash":"cb4cad2f034bd369a858349cec2da3df6ba08e6a","modified":1643891927000},{"_id":"themes/hexo-theme-aircloud-master/source/_less/index.css","hash":"52fe4d1b93dfb4c9c9d63e24862354b6a0ef47f8","modified":1643891927000},{"_id":"themes/hexo-theme-aircloud-master/source/_less/index.less","hash":"502d689e3568056cc27dd4da7da2499b0be4253e","modified":1643891927000},{"_id":"themes/hexo-theme-aircloud-master/source/_less/layout.css","hash":"40d7cadf42b130ea1b40de1ae73b2b00e27f476f","modified":1643891927000},{"_id":"themes/hexo-theme-aircloud-master/source/_less/layout.less","hash":"194ac7db2eeee7307fcb7470302f8172100181fb","modified":1643891927000},{"_id":"themes/hexo-theme-aircloud-master/source/_less/nav.css","hash":"32e352d71dc2e67d69a26d8b5116a27d8d2a7718","modified":1643891927000},{"_id":"themes/hexo-theme-aircloud-master/source/_less/nav.less","hash":"627e33cafb4ca9c191053b10917fc21c68c6ee8c","modified":1643891927000},{"_id":"themes/hexo-theme-aircloud-master/source/_less/post.css","hash":"9f84ce8341a2590589baa502a8d547aba3de9013","modified":1643891927000},{"_id":"themes/hexo-theme-aircloud-master/source/_less/post.less","hash":"d570a036e4e8253a3edf56ac8c1def702fc72ecc","modified":1643891927000},{"_id":"themes/hexo-theme-aircloud-master/source/_less/tag.css","hash":"3250887aaae0bc62bd82082d000ce3de8cc55ab6","modified":1643891927000},{"_id":"themes/hexo-theme-aircloud-master/source/_less/toc.css","hash":"83b1a219e7fe66d9d6cc34600e5a16311381a883","modified":1643891927000},{"_id":"themes/hexo-theme-aircloud-master/source/_less/tag.less","hash":"47e1ce2f55e2b62beefd0f69dfe7deb594e7b309","modified":1643891927000},{"_id":"themes/hexo-theme-aircloud-master/source/_less/variables.css","hash":"9768d38beea904c4febc704192a49c8f7ae6e06c","modified":1643891927000},{"_id":"themes/hexo-theme-aircloud-master/source/_less/toc.less","hash":"c873ce552b22b0aa2c51a386a91516cadf9160ba","modified":1643891927000},{"_id":"themes/hexo-theme-aircloud-master/source/_less/_partial/footer.css","hash":"e00d722211b4695449d72850340ac0dd701d6ede","modified":1643891927000},{"_id":"themes/hexo-theme-aircloud-master/source/_less/variables.less","hash":"49503f7a6c51edd6f1dbdea5345df6bb903b18a5","modified":1643891927000},{"_id":"themes/hexo-theme-aircloud-master/source/_less/_partial/footer.css.map","hash":"9e8d4df5d08425de5a8b247d0dd8b805c6edc661","modified":1643891927000},{"_id":"themes/hexo-theme-aircloud-master/source/_less/_partial/footer.less","hash":"d1469f97daf750f3e4be18c4d640772780c32a75","modified":1643891927000},{"_id":"themes/hexo-theme-aircloud-master/source/js/gitment.js","hash":"89687f8fffe1125e08323fd6635ca4e53771c05e","modified":1643891927000},{"_id":"public/2022/03/17/监听页面和浏览器离开/index.html","hash":"73a6a51fbb4619ef0180076766ff9525f2980ec7","modified":1647513367683},{"_id":"public/2020/07/12/PostMessage跨域/index.html","hash":"ea40dc1860b48a6ceaf2e169d3cda4009182c631","modified":1647513367683},{"_id":"public/2020/07/12/git合并两个本地库/index.html","hash":"34571d6e4f79cb63fbd6bb227a60ed29ef539eb3","modified":1647513367683},{"_id":"public/2020/07/12/origin/index.html","hash":"038496c2769857213e6dc96bed09e5ce79eb5793","modified":1647513367683},{"_id":"public/2020/07/12/vue中的防抖和节流/index.html","hash":"adc24b55b364996830b929cbf082825fc75edad5","modified":1647513367683},{"_id":"public/2020/07/12/uni开发app/index.html","hash":"884daf47c92c922e31aa8aedbda697b9cd11f455","modified":1647513367683},{"_id":"public/2020/07/12/利用宝塔面板实现Https/index.html","hash":"5bcb3c8e1d1312de4264a578e4d2b608716dc92d","modified":1647513367683},{"_id":"public/2020/07/12/基础算法记录/index.html","hash":"c6ee1b860da53642243b581b552a2e45c4f2a4e8","modified":1647513367683},{"_id":"public/2020/07/12/小技巧/index.html","hash":"bee6ebcf332a8a5c97a24461ca22148014d2cb90","modified":1647513367683},{"_id":"public/2020/07/12/当你换了新电脑需要做什么/index.html","hash":"e0e77e5d1bf56dce753549de317b7bd2a407aee2","modified":1647513367683},{"_id":"public/2020/07/12/正则记录/index.html","hash":"83ca7a90a0f6f41f12ccab3b13bf456504df828b","modified":1647513367683},{"_id":"public/2020/07/12/当你重启了服务器，应该做什么 ？/index.html","hash":"7eff396855ee60d683a978786f1a06d4765c30ec","modified":1647513367683},{"_id":"public/2020/07/12/服务器目录说明/index.html","hash":"97a324e3cf8ddb47209fbda6aea11ad693b2782a","modified":1647513367683},{"_id":"public/2020/07/01/cancletoken的使用（取消上一次的请求）/index.html","hash":"0be3129b8c97ff249f9d20c7a36473dbb47b5a89","modified":1647513367683},{"_id":"public/2019/12/02/hexo图片不显示/index.html","hash":"b087f34ac0879802a9d19b8bbdfe6345bf8d9a3f","modified":1647513367683},{"_id":"public/index.html","hash":"824a06dd034be238fb1ded77d5f431127e04b81a","modified":1647513367683},{"_id":"public/page/2/index.html","hash":"5e53d400510eca465c3d159c82cbc3278a1b3c27","modified":1647513367683},{"_id":"public/page/3/index.html","hash":"9a90d08d4f807314f34e475abf9be55df4576159","modified":1647513367683},{"_id":"public/page/4/index.html","hash":"c92773e2195b2faec19020d334343907b10862ba","modified":1647513367683},{"_id":"public/page/5/index.html","hash":"9f4421c3fe92dd7f2116a244080e3c85e064e68e","modified":1647513367683},{"_id":"public/2020/07/12/ES6的解构/index.html","hash":"1adefb5449bf6cb09bdd9ce20d920d373504fea4","modified":1647513367683},{"_id":"public/2020/07/12/VUE高级技巧记录/index.html","hash":"c5a13a249cdf38eabfa91b3fdda2cb74fa9be35b","modified":1647513367683},{"_id":"public/2020/07/12/Echart使用记录/index.html","hash":"6b9156e4ef414b2ca066e193e79a98be19dba42c","modified":1647513367683},{"_id":"public/2020/07/12/node实现自动备份数据库/index.html","hash":"8d71ed267045b8846a4894a140eaac6cacf6034e","modified":1647513367683},{"_id":"public/2020/07/12/scss的换肤功能/index.html","hash":"10323cf208ca5e010cfe923b417e2730b128815b","modified":1647513367683},{"_id":"public/2020/07/12/vue的文档阅读/index.html","hash":"86ebd4dcd007b31581344befddabca4246b78e00","modified":1647513367683},{"_id":"public/2020/07/12/websokect初体验/index.html","hash":"550de732e57c6f2e2e18787ae2d23e84b39e8bbb","modified":1647513367683},{"_id":"public/2020/07/12/上传多个excle到服务器解析/index.html","hash":"130bf3f1236d77d8a66d8b2d53cef7ffa0cb9d6d","modified":1647513367683},{"_id":"public/2020/07/12/从JavaScript的构造函数讲到多态/index.html","hash":"e7ce9336c23d56987e9e3cf292e5c991de19e78d","modified":1647513367683},{"_id":"public/2020/07/12/你可能会用到的webpack/index.html","hash":"eb4e08734d9b543f07a7c439431a36a1b1ec0639","modified":1647513367683},{"_id":"public/2020/07/12/使用node上传和下载文件/index.html","hash":"5c7b866fdbc42dce6522d2d544e46ad4787d888f","modified":1647513367683},{"_id":"public/2020/07/12/使用uniapp调用摄像头/index.html","hash":"8085419213432d076a86a2fb369b4b9f0f596c2e","modified":1647513367683},{"_id":"public/2020/07/12/可能用到的请求/index.html","hash":"679c32043c64cba5c9c1a9fa13abae712683f632","modified":1647513367683},{"_id":"public/2020/07/12/小程序常用组件/index.html","hash":"83dc1eed5c8a1dda0286eb5e9c653e19eb81ea39","modified":1647513367683},{"_id":"public/2020/07/12/异步迭代器和await/index.html","hash":"e3e1536fb1995eeb1d0166ed64e83f761cdd4c3f","modified":1647513367683},{"_id":"public/2020/07/12/微信小程序日常/index.html","hash":"6d2fea4a2f7a502c7d9e076d322e3a12ca609a96","modified":1647513367683},{"_id":"public/2020/07/12/时间小工具/index.html","hash":"fbd2872a7af4b1d5d85cbdb006a982c2655b35f1","modified":1647513367683},{"_id":"public/2020/07/12/纯js实现上传视频，截取关键帧作为封面，上传后端保存/index.html","hash":"e2854f4fbc2e7b2a6e8721b802aaa9e057808340","modified":1647513367683},{"_id":"public/2020/07/12/用插槽去二次封装/index.html","hash":"8c15de455595c474bfb206bfb43887e0a22abed5","modified":1647513367683},{"_id":"public/2020/03/24/路由守卫使用-判断登录状态/index.html","hash":"4a2ca792111aefa2c6fb90d050c10395e797858d","modified":1647513367683},{"_id":"public/2020/03/18/原生JS方法记录/index.html","hash":"cc0b87b987e47bb11447d2422557d33c3391c52f","modified":1647513367683},{"_id":"public/2020/03/12/vue项目上线优化记录/index.html","hash":"6f13092f44287c4e580290d16a08a61a2c5ea7dc","modified":1647513367683},{"_id":"public/2020/03/02/常用点记录（ES6flexvue写法)/index.html","hash":"f73ed839781d552b0085d3b61ed153538b162c1d","modified":1647513367683},{"_id":"public/2020/01/02/ElementUI的使用/index.html","hash":"38b01fbf304327b8c335f56f0bceb6e47fc3647d","modified":1647513367683},{"_id":"public/2019/12/02/记录网站功能实现/index.html","hash":"70f8eaff4f107299b86234c189e8499657fd9aad","modified":1647513367683},{"_id":"public/2019/12/02/静态布局、自适应布局、流式布局、响应式布局、弹性布局等的概念和区别/index.html","hash":"c13a7b9fdc8ad8644252dcbf8b4c4b0df857cabc","modified":1647513367683},{"_id":"public/2019/12/01/markdown语法/index.html","hash":"f09fba8892345f16638f0dc422cc72a98269ad69","modified":1647513367683},{"_id":"public/archives/index.html","hash":"8d5ee4b269ff0cdb0d5fc68e798ff661fe966401","modified":1647513367683},{"_id":"public/archives/page/2/index.html","hash":"8d5ee4b269ff0cdb0d5fc68e798ff661fe966401","modified":1647513367683},{"_id":"public/archives/page/3/index.html","hash":"8d5ee4b269ff0cdb0d5fc68e798ff661fe966401","modified":1647513367683},{"_id":"public/archives/page/5/index.html","hash":"8d5ee4b269ff0cdb0d5fc68e798ff661fe966401","modified":1647513367683},{"_id":"public/archives/2019/index.html","hash":"8d5ee4b269ff0cdb0d5fc68e798ff661fe966401","modified":1647513367683},{"_id":"public/archives/page/4/index.html","hash":"8d5ee4b269ff0cdb0d5fc68e798ff661fe966401","modified":1647513367683},{"_id":"public/archives/2019/12/index.html","hash":"8d5ee4b269ff0cdb0d5fc68e798ff661fe966401","modified":1647513367683},{"_id":"public/archives/2020/index.html","hash":"8d5ee4b269ff0cdb0d5fc68e798ff661fe966401","modified":1647513367683},{"_id":"public/archives/2020/page/2/index.html","hash":"8d5ee4b269ff0cdb0d5fc68e798ff661fe966401","modified":1647513367683},{"_id":"public/archives/2020/page/3/index.html","hash":"8d5ee4b269ff0cdb0d5fc68e798ff661fe966401","modified":1647513367683},{"_id":"public/archives/2020/page/4/index.html","hash":"8d5ee4b269ff0cdb0d5fc68e798ff661fe966401","modified":1647513367683},{"_id":"public/archives/2020/01/index.html","hash":"8d5ee4b269ff0cdb0d5fc68e798ff661fe966401","modified":1647513367683},{"_id":"public/archives/2020/03/index.html","hash":"8d5ee4b269ff0cdb0d5fc68e798ff661fe966401","modified":1647513367683},{"_id":"public/archives/2020/07/index.html","hash":"8d5ee4b269ff0cdb0d5fc68e798ff661fe966401","modified":1647513367683},{"_id":"public/archives/2020/07/page/3/index.html","hash":"8d5ee4b269ff0cdb0d5fc68e798ff661fe966401","modified":1647513367683},{"_id":"public/archives/2020/07/page/4/index.html","hash":"8d5ee4b269ff0cdb0d5fc68e798ff661fe966401","modified":1647513367683},{"_id":"public/archives/2020/07/page/2/index.html","hash":"8d5ee4b269ff0cdb0d5fc68e798ff661fe966401","modified":1647513367683},{"_id":"public/archives/2022/index.html","hash":"8d5ee4b269ff0cdb0d5fc68e798ff661fe966401","modified":1647513367683},{"_id":"public/archives/2022/03/index.html","hash":"8d5ee4b269ff0cdb0d5fc68e798ff661fe966401","modified":1647513367683},{"_id":"public/tags/ES6/index.html","hash":"39ddc5afe8ab917f6293734ee38ba0f868e7c99c","modified":1647513367683},{"_id":"public/tags/解构/index.html","hash":"39ddc5afe8ab917f6293734ee38ba0f868e7c99c","modified":1647513367683},{"_id":"public/tags/echart/index.html","hash":"39ddc5afe8ab917f6293734ee38ba0f868e7c99c","modified":1647513367683},{"_id":"public/tags/ElementUI/index.html","hash":"39ddc5afe8ab917f6293734ee38ba0f868e7c99c","modified":1647513367683},{"_id":"public/tags/form，tabs/index.html","hash":"39ddc5afe8ab917f6293734ee38ba0f868e7c99c","modified":1647513367683},{"_id":"public/tags/table/index.html","hash":"39ddc5afe8ab917f6293734ee38ba0f868e7c99c","modified":1647513367683},{"_id":"public/tags/js/index.html","hash":"39ddc5afe8ab917f6293734ee38ba0f868e7c99c","modified":1647513367683},{"_id":"public/tags/js/page/2/index.html","hash":"39ddc5afe8ab917f6293734ee38ba0f868e7c99c","modified":1647513367683},{"_id":"public/tags/js/page/3/index.html","hash":"39ddc5afe8ab917f6293734ee38ba0f868e7c99c","modified":1647513367683},{"_id":"public/tags/hexo/index.html","hash":"39ddc5afe8ab917f6293734ee38ba0f868e7c99c","modified":1647513367683},{"_id":"public/tags/hexo/page/2/index.html","hash":"39ddc5afe8ab917f6293734ee38ba0f868e7c99c","modified":1647513367683},{"_id":"public/tags/hexo/page/3/index.html","hash":"39ddc5afe8ab917f6293734ee38ba0f868e7c99c","modified":1647513367683},{"_id":"public/tags/图片地址/index.html","hash":"39ddc5afe8ab917f6293734ee38ba0f868e7c99c","modified":1647513367683},{"_id":"public/tags/refer/index.html","hash":"39ddc5afe8ab917f6293734ee38ba0f868e7c99c","modified":1647513367683},{"_id":"public/tags/PostMessage/index.html","hash":"39ddc5afe8ab917f6293734ee38ba0f868e7c99c","modified":1647513367683},{"_id":"public/tags/跨域/index.html","hash":"39ddc5afe8ab917f6293734ee38ba0f868e7c99c","modified":1647513367683},{"_id":"public/tags/cancletoken/index.html","hash":"39ddc5afe8ab917f6293734ee38ba0f868e7c99c","modified":1647513367683},{"_id":"public/tags/vue/index.html","hash":"39ddc5afe8ab917f6293734ee38ba0f868e7c99c","modified":1647513367683},{"_id":"public/tags/github/index.html","hash":"39ddc5afe8ab917f6293734ee38ba0f868e7c99c","modified":1647513367683},{"_id":"public/tags/git/index.html","hash":"39ddc5afe8ab917f6293734ee38ba0f868e7c99c","modified":1647513367683},{"_id":"public/tags/node/index.html","hash":"39ddc5afe8ab917f6293734ee38ba0f868e7c99c","modified":1647513367683},{"_id":"public/tags/mongodb/index.html","hash":"39ddc5afe8ab917f6293734ee38ba0f868e7c99c","modified":1647513367683},{"_id":"public/tags/优化/index.html","hash":"39ddc5afe8ab917f6293734ee38ba0f868e7c99c","modified":1647513367683},{"_id":"public/tags/express，multer/index.html","hash":"39ddc5afe8ab917f6293734ee38ba0f868e7c99c","modified":1647513367683},{"_id":"public/tags/小程序/index.html","hash":"39ddc5afe8ab917f6293734ee38ba0f868e7c99c","modified":1647513367683},{"_id":"public/tags/原生/index.html","hash":"39ddc5afe8ab917f6293734ee38ba0f868e7c99c","modified":1647513367683},{"_id":"public/tags/JavaScript/index.html","hash":"39ddc5afe8ab917f6293734ee38ba0f868e7c99c","modified":1647513367683},{"_id":"public/tags/新特性/index.html","hash":"39ddc5afe8ab917f6293734ee38ba0f868e7c99c","modified":1647513367683},{"_id":"public/tags/centsos/index.html","hash":"39ddc5afe8ab917f6293734ee38ba0f868e7c99c","modified":1647513367683},{"_id":"public/tags/路由守卫/index.html","hash":"39ddc5afe8ab917f6293734ee38ba0f868e7c99c","modified":1647513367683},{"_id":"public/tags/登录，动画/index.html","hash":"39ddc5afe8ab917f6293734ee38ba0f868e7c99c","modified":1647513367683},{"_id":"public/tags/vue-router/index.html","hash":"39ddc5afe8ab917f6293734ee38ba0f868e7c99c","modified":1647513367683},{"_id":"public/tags/自适应布局/index.html","hash":"39ddc5afe8ab917f6293734ee38ba0f868e7c99c","modified":1647513367683},{"_id":"public/tags/响应式布局，弹性布局/index.html","hash":"39ddc5afe8ab917f6293734ee38ba0f868e7c99c","modified":1647513367683},{"_id":"public/css/aircloud.less","hash":"45cab2da310dbfcba37ac3db657db77b4adac60d","modified":1647513367683},{"_id":"public/css/aircloud.css.map","hash":"50db34961d11f6f461e23912609d25141068a6fc","modified":1647513367683},{"_id":"public/js/index.js","hash":"fcec9a2e4fd90a40957359d423f7f61caa712830","modified":1647513367683},{"_id":"public/css/aircloud.css","hash":"2fe1fc9d6fa13cc4660cb8ae3d80b8d51e04dbf6","modified":1647513367683},{"_id":"public/css/gitment.css","hash":"926b553be983d6dd90bcb60c5d6d4ee215d268a6","modified":1647513367683},{"_id":"public/js/gitment.js","hash":"89687f8fffe1125e08323fd6635ca4e53771c05e","modified":1647513367683}],"Category":[],"Data":[],"Page":[],"Post":[{"title":"ES6的解构","date":"2020-07-12T09:16:26.000Z","_content":"\n<meta name=\"referrer\" content=\"no-referrer\"/>\n\n## ES6的解构\n\nES6 允许按照一定模式，从数组和对象中提取值，对变量进行赋值，这被称为解构（Destructuring）。\n\n<!-- more -->\n\n> ```javascript\n> let [a, b, c] = [1, 2, 3];\n> ```\n\n### 数组的解构用法\n\n```js\nlet [foo, [[bar], baz]] = [1, [[2], 3]];\nfoo // 1\nbar // 2\nbaz // 3\n```\n\n如果解构不成功，变量的值就等于`undefined`。\n\n```js\nlet [foo] = [];\nlet [bar, foo] = [1];\n```\n\n以上两种情况都属于解构不成功，`foo`的值都会等于`undefined`。\n\n不完全解构\n\n```js\nlet [x, y] = [1, 2, 3];\nx // 1\ny // 2\n\nlet [a, [b], d] = [1, [2, 3], 4];\na // 1\nb // 2\nd // 4\n```\n\n默认值\n\n```js\nlet [foo = true] = [];\nfoo // true\n\nlet [x, y = 'b'] = ['a']; // x='a', y='b'\nlet [x, y = 'b'] = ['a', undefined]; // x='a', y='b'\n```\n\n省去了提前定义变量及赋值的工作。\n\n原理：S6 内部使用严格相等运算符（`===`），判断一个位置是否有值。所以，只有当一个数组成员严格等于`undefined`，默认值才会生效。\n\n例子：\n\n```js\nfunction f() {\n  console.log('aaa');\n}\n\nlet [x = f()] = [1];\n```\n\n等价于\n\n```js\nlet x;\nif ([1][0] === undefined) {\n  x = f();\n} else {\n  x = [1][0];\n}\n```\n\n上述代码判断[1]数组的第一个值是不是undefined，不是的话，就是正常赋值，所以console不会出现\n\n### 对象的解构\n\n```js\nlet { foo, bar } = { foo: 'aaa', bar: 'bbb' };\nfoo // \"aaa\"\nbar // \"bbb\"\n```\n\n重命名\n\n```javascript\nlet { foo: baz } = { foo: 'aaa', bar: 'bbb' };\nbaz // \"aaa\"\n```\n\n嵌套解构\n\n```javascript\nlet obj = {\n  p: [\n    'Hello',\n    { y: 'World' }\n  ]\n};\n\nlet { p, p: [x, { y }] } = obj;\nx // \"Hello\"\ny // \"World\"\np // [\"Hello\", {y: \"World\"}]\n```\n\n前一个p是简写，完整模式是p：p，后一个p是用来做为对象中的匹配使用的，而不是变量。\n\n默认值\n\n```javascript\nvar {x = 3} = {};\nx // 3\n\nvar {x, y = 5} = {x: 1};\nx // 1\ny // 5\n\nvar {x: y = 3} = {};\ny // 3\n\nvar {x: y = 3} = {x: 5};\ny // 5\n\nvar { message: msg = 'Something went wrong' } = {};\nmsg // \"Something went wrong\"\n```\n\n### 将数组解构成对象\n\n上面两个例子都是将数据解构成数据，对象解构成对象，现在尝试将数组解构成对象\n\n```javascript\nlet arr = [1, 2, 3];\nlet {0 : first, [arr.length - 1] : last} = arr;\nfirst // 1\nlast // 3\n```\n\n相当于将数组的index键视为对象的key来进行匹配。\n\n### 字符串解构\n\n```javascript\nconst [a, b, c, d, e] = 'hello';\na // \"h\"\nb // \"e\"\nc // \"l\"\nd // \"l\"\ne // \"o\"\n```\n\n字符串本身也有length属性。所有也可以进行解构\n\n```javascript\nlet {length : len} = 'hello';\nlen // 5\n```\n\n### 函数参数解构\n\n```javascript\nfunction add([x, y]){\n  return x + y;\n}\n\nadd([1, 2]); // 3\n```\n\n```javascript\n[[1, 2], [3, 4]].map(([a, b]) => a + b);\n```\n\n比较以下两个例子：\n\n```javascript\nfunction move({x = 0, y = 0} = {}) {\n  return [x, y];\n}\n\nmove({x: 3, y: 8}); // [3, 8]\nmove({x: 3}); // [3, 0]\nmove({}); // [0, 0]\nmove(); // [0, 0]\n```\n\n```javascript\nfunction move({x, y} = { x: 0, y: 0 }) {\n  return [x, y];\n}\n\nmove({x: 3, y: 8}); // [3, 8]\nmove({x: 3}); // [3, undefined]\nmove({}); // [undefined, undefined]\nmove(); // [0, 0]\n```\n\n解构很相似，看起来都是设定了默认值，实际上有很大区别\n\nmove({x: 3, y: 8})里的参数实际上是传入了function中的后面这个{}，在第一个例子中，即：\n\n```js\t\nmove({x: 3})运作如下\nfunction move({x = 0, y = 0} = {x: 3}) {\n  return [x, y];\n}\n```\n\n第二个例子中：\n\n```js\nmove({x: 3})运作如下\nfunction move({x , y } = {x: 3}) {\n  return [x, y];\n}\n```\n\n这里很明显看到第二个例子中，传参被替换掉了。y找不到对应的解构对象中的y这个key。会默认为undefined\n\n### 实际使用\n\n**函数参数的定义**\n\n```javascript\n// 参数是一组有次序的值\nfunction f([x, y, z]) { ... }\nf([1, 2, 3]);\n\n// 参数是一组无次序的值\nfunction f({x, y, z}) { ... }\nf({z: 3, y: 2, x: 1});\n```\n\n**提取 JSON 数据**\n\n```javascript\nlet jsonData = {\n  id: 42,\n  status: \"OK\",\n  data: [867, 5309]\n};\n\nlet { id, status, data: number } = jsonData;\n\nconsole.log(id, status, number);\n// 42, \"OK\", [867, 5309]\n```\n\n**遍历 Map 结构**\n\n```javascript\nconst map = new Map();\nmap.set('first', 'hello');\nmap.set('second', 'world');\n\nfor (let [key, value] of map) {\n  console.log(key + \" is \" + value);\n}\n// first is hello\n// second is world\n```\n\nmap解构类似于：[[first:hello],[second:world]]\n\n如果只想获取键名，或者只想获取键值，可以写成下面这样。\n\n```javascript\n// 获取键名\nfor (let [key] of map) {\n  // ...\n}\n\n// 获取键值\nfor (let [,value] of map) {\n  // ...\n}\n```","source":"_posts/ES6的解构.md","raw":"---\ntitle: ES6的解构\ndate: 2020-07-12 17:16:26\ntags: [ES6,解构]\n---\n\n<meta name=\"referrer\" content=\"no-referrer\"/>\n\n## ES6的解构\n\nES6 允许按照一定模式，从数组和对象中提取值，对变量进行赋值，这被称为解构（Destructuring）。\n\n<!-- more -->\n\n> ```javascript\n> let [a, b, c] = [1, 2, 3];\n> ```\n\n### 数组的解构用法\n\n```js\nlet [foo, [[bar], baz]] = [1, [[2], 3]];\nfoo // 1\nbar // 2\nbaz // 3\n```\n\n如果解构不成功，变量的值就等于`undefined`。\n\n```js\nlet [foo] = [];\nlet [bar, foo] = [1];\n```\n\n以上两种情况都属于解构不成功，`foo`的值都会等于`undefined`。\n\n不完全解构\n\n```js\nlet [x, y] = [1, 2, 3];\nx // 1\ny // 2\n\nlet [a, [b], d] = [1, [2, 3], 4];\na // 1\nb // 2\nd // 4\n```\n\n默认值\n\n```js\nlet [foo = true] = [];\nfoo // true\n\nlet [x, y = 'b'] = ['a']; // x='a', y='b'\nlet [x, y = 'b'] = ['a', undefined]; // x='a', y='b'\n```\n\n省去了提前定义变量及赋值的工作。\n\n原理：S6 内部使用严格相等运算符（`===`），判断一个位置是否有值。所以，只有当一个数组成员严格等于`undefined`，默认值才会生效。\n\n例子：\n\n```js\nfunction f() {\n  console.log('aaa');\n}\n\nlet [x = f()] = [1];\n```\n\n等价于\n\n```js\nlet x;\nif ([1][0] === undefined) {\n  x = f();\n} else {\n  x = [1][0];\n}\n```\n\n上述代码判断[1]数组的第一个值是不是undefined，不是的话，就是正常赋值，所以console不会出现\n\n### 对象的解构\n\n```js\nlet { foo, bar } = { foo: 'aaa', bar: 'bbb' };\nfoo // \"aaa\"\nbar // \"bbb\"\n```\n\n重命名\n\n```javascript\nlet { foo: baz } = { foo: 'aaa', bar: 'bbb' };\nbaz // \"aaa\"\n```\n\n嵌套解构\n\n```javascript\nlet obj = {\n  p: [\n    'Hello',\n    { y: 'World' }\n  ]\n};\n\nlet { p, p: [x, { y }] } = obj;\nx // \"Hello\"\ny // \"World\"\np // [\"Hello\", {y: \"World\"}]\n```\n\n前一个p是简写，完整模式是p：p，后一个p是用来做为对象中的匹配使用的，而不是变量。\n\n默认值\n\n```javascript\nvar {x = 3} = {};\nx // 3\n\nvar {x, y = 5} = {x: 1};\nx // 1\ny // 5\n\nvar {x: y = 3} = {};\ny // 3\n\nvar {x: y = 3} = {x: 5};\ny // 5\n\nvar { message: msg = 'Something went wrong' } = {};\nmsg // \"Something went wrong\"\n```\n\n### 将数组解构成对象\n\n上面两个例子都是将数据解构成数据，对象解构成对象，现在尝试将数组解构成对象\n\n```javascript\nlet arr = [1, 2, 3];\nlet {0 : first, [arr.length - 1] : last} = arr;\nfirst // 1\nlast // 3\n```\n\n相当于将数组的index键视为对象的key来进行匹配。\n\n### 字符串解构\n\n```javascript\nconst [a, b, c, d, e] = 'hello';\na // \"h\"\nb // \"e\"\nc // \"l\"\nd // \"l\"\ne // \"o\"\n```\n\n字符串本身也有length属性。所有也可以进行解构\n\n```javascript\nlet {length : len} = 'hello';\nlen // 5\n```\n\n### 函数参数解构\n\n```javascript\nfunction add([x, y]){\n  return x + y;\n}\n\nadd([1, 2]); // 3\n```\n\n```javascript\n[[1, 2], [3, 4]].map(([a, b]) => a + b);\n```\n\n比较以下两个例子：\n\n```javascript\nfunction move({x = 0, y = 0} = {}) {\n  return [x, y];\n}\n\nmove({x: 3, y: 8}); // [3, 8]\nmove({x: 3}); // [3, 0]\nmove({}); // [0, 0]\nmove(); // [0, 0]\n```\n\n```javascript\nfunction move({x, y} = { x: 0, y: 0 }) {\n  return [x, y];\n}\n\nmove({x: 3, y: 8}); // [3, 8]\nmove({x: 3}); // [3, undefined]\nmove({}); // [undefined, undefined]\nmove(); // [0, 0]\n```\n\n解构很相似，看起来都是设定了默认值，实际上有很大区别\n\nmove({x: 3, y: 8})里的参数实际上是传入了function中的后面这个{}，在第一个例子中，即：\n\n```js\t\nmove({x: 3})运作如下\nfunction move({x = 0, y = 0} = {x: 3}) {\n  return [x, y];\n}\n```\n\n第二个例子中：\n\n```js\nmove({x: 3})运作如下\nfunction move({x , y } = {x: 3}) {\n  return [x, y];\n}\n```\n\n这里很明显看到第二个例子中，传参被替换掉了。y找不到对应的解构对象中的y这个key。会默认为undefined\n\n### 实际使用\n\n**函数参数的定义**\n\n```javascript\n// 参数是一组有次序的值\nfunction f([x, y, z]) { ... }\nf([1, 2, 3]);\n\n// 参数是一组无次序的值\nfunction f({x, y, z}) { ... }\nf({z: 3, y: 2, x: 1});\n```\n\n**提取 JSON 数据**\n\n```javascript\nlet jsonData = {\n  id: 42,\n  status: \"OK\",\n  data: [867, 5309]\n};\n\nlet { id, status, data: number } = jsonData;\n\nconsole.log(id, status, number);\n// 42, \"OK\", [867, 5309]\n```\n\n**遍历 Map 结构**\n\n```javascript\nconst map = new Map();\nmap.set('first', 'hello');\nmap.set('second', 'world');\n\nfor (let [key, value] of map) {\n  console.log(key + \" is \" + value);\n}\n// first is hello\n// second is world\n```\n\nmap解构类似于：[[first:hello],[second:world]]\n\n如果只想获取键名，或者只想获取键值，可以写成下面这样。\n\n```javascript\n// 获取键名\nfor (let [key] of map) {\n  // ...\n}\n\n// 获取键值\nfor (let [,value] of map) {\n  // ...\n}\n```","slug":"ES6的解构","published":1,"updated":"2020-09-14T09:14:00.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl0uux6v100007suf60f3bud5","content":"<meta name=\"referrer\" content=\"no-referrer\"/>\n\n<h2 id=\"ES6的解构\"><a href=\"#ES6的解构\" class=\"headerlink\" title=\"ES6的解构\"></a>ES6的解构</h2><p>ES6 允许按照一定模式，从数组和对象中提取值，对变量进行赋值，这被称为解构（Destructuring）。</p>\n<span id=\"more\"></span>\n\n<blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> [a, b, c] = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>];</span><br></pre></td></tr></table></figure>\n</blockquote>\n<h3 id=\"数组的解构用法\"><a href=\"#数组的解构用法\" class=\"headerlink\" title=\"数组的解构用法\"></a>数组的解构用法</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> [foo, [[bar], baz]] = [<span class=\"number\">1</span>, [[<span class=\"number\">2</span>], <span class=\"number\">3</span>]];</span><br><span class=\"line\">foo <span class=\"comment\">// 1</span></span><br><span class=\"line\">bar <span class=\"comment\">// 2</span></span><br><span class=\"line\">baz <span class=\"comment\">// 3</span></span><br></pre></td></tr></table></figure>\n\n<p>如果解构不成功，变量的值就等于<code>undefined</code>。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> [foo] = [];</span><br><span class=\"line\"><span class=\"keyword\">let</span> [bar, foo] = [<span class=\"number\">1</span>];</span><br></pre></td></tr></table></figure>\n\n<p>以上两种情况都属于解构不成功，<code>foo</code>的值都会等于<code>undefined</code>。</p>\n<p>不完全解构</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> [x, y] = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>];</span><br><span class=\"line\">x <span class=\"comment\">// 1</span></span><br><span class=\"line\">y <span class=\"comment\">// 2</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> [a, [b], d] = [<span class=\"number\">1</span>, [<span class=\"number\">2</span>, <span class=\"number\">3</span>], <span class=\"number\">4</span>];</span><br><span class=\"line\">a <span class=\"comment\">// 1</span></span><br><span class=\"line\">b <span class=\"comment\">// 2</span></span><br><span class=\"line\">d <span class=\"comment\">// 4</span></span><br></pre></td></tr></table></figure>\n\n<p>默认值</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> [foo = <span class=\"literal\">true</span>] = [];</span><br><span class=\"line\">foo <span class=\"comment\">// true</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> [x, y = <span class=\"string\">&#x27;b&#x27;</span>] = [<span class=\"string\">&#x27;a&#x27;</span>]; <span class=\"comment\">// x=&#x27;a&#x27;, y=&#x27;b&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> [x, y = <span class=\"string\">&#x27;b&#x27;</span>] = [<span class=\"string\">&#x27;a&#x27;</span>, <span class=\"literal\">undefined</span>]; <span class=\"comment\">// x=&#x27;a&#x27;, y=&#x27;b&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<p>省去了提前定义变量及赋值的工作。</p>\n<p>原理：S6 内部使用严格相等运算符（<code>===</code>），判断一个位置是否有值。所以，只有当一个数组成员严格等于<code>undefined</code>，默认值才会生效。</p>\n<p>例子：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">f</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;aaa&#x27;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> [x = <span class=\"title function_\">f</span>()] = [<span class=\"number\">1</span>];</span><br></pre></td></tr></table></figure>\n\n<p>等价于</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> x;</span><br><span class=\"line\"><span class=\"keyword\">if</span> ([<span class=\"number\">1</span>][<span class=\"number\">0</span>] === <span class=\"literal\">undefined</span>) &#123;</span><br><span class=\"line\">  x = <span class=\"title function_\">f</span>();</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">  x = [<span class=\"number\">1</span>][<span class=\"number\">0</span>];</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>上述代码判断[1]数组的第一个值是不是undefined，不是的话，就是正常赋值，所以console不会出现</p>\n<h3 id=\"对象的解构\"><a href=\"#对象的解构\" class=\"headerlink\" title=\"对象的解构\"></a>对象的解构</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> &#123; foo, bar &#125; = &#123; <span class=\"attr\">foo</span>: <span class=\"string\">&#x27;aaa&#x27;</span>, <span class=\"attr\">bar</span>: <span class=\"string\">&#x27;bbb&#x27;</span> &#125;;</span><br><span class=\"line\">foo <span class=\"comment\">// &quot;aaa&quot;</span></span><br><span class=\"line\">bar <span class=\"comment\">// &quot;bbb&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>重命名</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> &#123; <span class=\"attr\">foo</span>: baz &#125; = &#123; <span class=\"attr\">foo</span>: <span class=\"string\">&#x27;aaa&#x27;</span>, <span class=\"attr\">bar</span>: <span class=\"string\">&#x27;bbb&#x27;</span> &#125;;</span><br><span class=\"line\">baz <span class=\"comment\">// &quot;aaa&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>嵌套解构</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> obj = &#123;</span><br><span class=\"line\">  <span class=\"attr\">p</span>: [</span><br><span class=\"line\">    <span class=\"string\">&#x27;Hello&#x27;</span>,</span><br><span class=\"line\">    &#123; <span class=\"attr\">y</span>: <span class=\"string\">&#x27;World&#x27;</span> &#125;</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> &#123; p, <span class=\"attr\">p</span>: [x, &#123; y &#125;] &#125; = obj;</span><br><span class=\"line\">x <span class=\"comment\">// &quot;Hello&quot;</span></span><br><span class=\"line\">y <span class=\"comment\">// &quot;World&quot;</span></span><br><span class=\"line\">p <span class=\"comment\">// [&quot;Hello&quot;, &#123;y: &quot;World&quot;&#125;]</span></span><br></pre></td></tr></table></figure>\n\n<p>前一个p是简写，完整模式是p：p，后一个p是用来做为对象中的匹配使用的，而不是变量。</p>\n<p>默认值</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> &#123;x = <span class=\"number\">3</span>&#125; = &#123;&#125;;</span><br><span class=\"line\">x <span class=\"comment\">// 3</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> &#123;x, y = <span class=\"number\">5</span>&#125; = &#123;<span class=\"attr\">x</span>: <span class=\"number\">1</span>&#125;;</span><br><span class=\"line\">x <span class=\"comment\">// 1</span></span><br><span class=\"line\">y <span class=\"comment\">// 5</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> &#123;<span class=\"attr\">x</span>: y = <span class=\"number\">3</span>&#125; = &#123;&#125;;</span><br><span class=\"line\">y <span class=\"comment\">// 3</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> &#123;<span class=\"attr\">x</span>: y = <span class=\"number\">3</span>&#125; = &#123;<span class=\"attr\">x</span>: <span class=\"number\">5</span>&#125;;</span><br><span class=\"line\">y <span class=\"comment\">// 5</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> &#123; <span class=\"attr\">message</span>: msg = <span class=\"string\">&#x27;Something went wrong&#x27;</span> &#125; = &#123;&#125;;</span><br><span class=\"line\">msg <span class=\"comment\">// &quot;Something went wrong&quot;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"将数组解构成对象\"><a href=\"#将数组解构成对象\" class=\"headerlink\" title=\"将数组解构成对象\"></a>将数组解构成对象</h3><p>上面两个例子都是将数据解构成数据，对象解构成对象，现在尝试将数组解构成对象</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> arr = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>];</span><br><span class=\"line\"><span class=\"keyword\">let</span> &#123;<span class=\"number\">0</span> : first, [arr.<span class=\"property\">length</span> - <span class=\"number\">1</span>] : last&#125; = arr;</span><br><span class=\"line\">first <span class=\"comment\">// 1</span></span><br><span class=\"line\">last <span class=\"comment\">// 3</span></span><br></pre></td></tr></table></figure>\n\n<p>相当于将数组的index键视为对象的key来进行匹配。</p>\n<h3 id=\"字符串解构\"><a href=\"#字符串解构\" class=\"headerlink\" title=\"字符串解构\"></a>字符串解构</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> [a, b, c, d, e] = <span class=\"string\">&#x27;hello&#x27;</span>;</span><br><span class=\"line\">a <span class=\"comment\">// &quot;h&quot;</span></span><br><span class=\"line\">b <span class=\"comment\">// &quot;e&quot;</span></span><br><span class=\"line\">c <span class=\"comment\">// &quot;l&quot;</span></span><br><span class=\"line\">d <span class=\"comment\">// &quot;l&quot;</span></span><br><span class=\"line\">e <span class=\"comment\">// &quot;o&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>字符串本身也有length属性。所有也可以进行解构</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> &#123;length : len&#125; = <span class=\"string\">&#x27;hello&#x27;</span>;</span><br><span class=\"line\">len <span class=\"comment\">// 5</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"函数参数解构\"><a href=\"#函数参数解构\" class=\"headerlink\" title=\"函数参数解构\"></a>函数参数解构</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">add</span>(<span class=\"params\">[x, y]</span>)&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> x + y;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">add</span>([<span class=\"number\">1</span>, <span class=\"number\">2</span>]); <span class=\"comment\">// 3</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[[<span class=\"number\">1</span>, <span class=\"number\">2</span>], [<span class=\"number\">3</span>, <span class=\"number\">4</span>]].<span class=\"title function_\">map</span>(<span class=\"function\">(<span class=\"params\">[a, b]</span>) =&gt;</span> a + b);</span><br></pre></td></tr></table></figure>\n\n<p>比较以下两个例子：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">move</span>(<span class=\"params\">&#123;x = <span class=\"number\">0</span>, y = <span class=\"number\">0</span>&#125; = &#123;&#125;</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> [x, y];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">move</span>(&#123;<span class=\"attr\">x</span>: <span class=\"number\">3</span>, <span class=\"attr\">y</span>: <span class=\"number\">8</span>&#125;); <span class=\"comment\">// [3, 8]</span></span><br><span class=\"line\"><span class=\"title function_\">move</span>(&#123;<span class=\"attr\">x</span>: <span class=\"number\">3</span>&#125;); <span class=\"comment\">// [3, 0]</span></span><br><span class=\"line\"><span class=\"title function_\">move</span>(&#123;&#125;); <span class=\"comment\">// [0, 0]</span></span><br><span class=\"line\"><span class=\"title function_\">move</span>(); <span class=\"comment\">// [0, 0]</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">move</span>(<span class=\"params\">&#123;x, y&#125; = &#123; x: <span class=\"number\">0</span>, y: <span class=\"number\">0</span> &#125;</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> [x, y];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">move</span>(&#123;<span class=\"attr\">x</span>: <span class=\"number\">3</span>, <span class=\"attr\">y</span>: <span class=\"number\">8</span>&#125;); <span class=\"comment\">// [3, 8]</span></span><br><span class=\"line\"><span class=\"title function_\">move</span>(&#123;<span class=\"attr\">x</span>: <span class=\"number\">3</span>&#125;); <span class=\"comment\">// [3, undefined]</span></span><br><span class=\"line\"><span class=\"title function_\">move</span>(&#123;&#125;); <span class=\"comment\">// [undefined, undefined]</span></span><br><span class=\"line\"><span class=\"title function_\">move</span>(); <span class=\"comment\">// [0, 0]</span></span><br></pre></td></tr></table></figure>\n\n<p>解构很相似，看起来都是设定了默认值，实际上有很大区别</p>\n<p>move({x: 3, y: 8})里的参数实际上是传入了function中的后面这个{}，在第一个例子中，即：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">move</span>(&#123;<span class=\"attr\">x</span>: <span class=\"number\">3</span>&#125;)运作如下</span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">move</span>(<span class=\"params\">&#123;x = <span class=\"number\">0</span>, y = <span class=\"number\">0</span>&#125; = &#123;x: <span class=\"number\">3</span>&#125;</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> [x, y];</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>第二个例子中：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">move</span>(&#123;<span class=\"attr\">x</span>: <span class=\"number\">3</span>&#125;)运作如下</span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">move</span>(<span class=\"params\">&#123;x , y &#125; = &#123;x: <span class=\"number\">3</span>&#125;</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> [x, y];</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>这里很明显看到第二个例子中，传参被替换掉了。y找不到对应的解构对象中的y这个key。会默认为undefined</p>\n<h3 id=\"实际使用\"><a href=\"#实际使用\" class=\"headerlink\" title=\"实际使用\"></a>实际使用</h3><p><strong>函数参数的定义</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 参数是一组有次序的值</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">f</span>(<span class=\"params\">[x, y, z]</span>) &#123; ... &#125;</span><br><span class=\"line\"><span class=\"title function_\">f</span>([<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>]);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 参数是一组无次序的值</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">f</span>(<span class=\"params\">&#123;x, y, z&#125;</span>) &#123; ... &#125;</span><br><span class=\"line\"><span class=\"title function_\">f</span>(&#123;<span class=\"attr\">z</span>: <span class=\"number\">3</span>, <span class=\"attr\">y</span>: <span class=\"number\">2</span>, <span class=\"attr\">x</span>: <span class=\"number\">1</span>&#125;);</span><br></pre></td></tr></table></figure>\n\n<p><strong>提取 JSON 数据</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> jsonData = &#123;</span><br><span class=\"line\">  <span class=\"attr\">id</span>: <span class=\"number\">42</span>,</span><br><span class=\"line\">  <span class=\"attr\">status</span>: <span class=\"string\">&quot;OK&quot;</span>,</span><br><span class=\"line\">  <span class=\"attr\">data</span>: [<span class=\"number\">867</span>, <span class=\"number\">5309</span>]</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> &#123; id, status, <span class=\"attr\">data</span>: number &#125; = jsonData;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(id, status, number);</span><br><span class=\"line\"><span class=\"comment\">// 42, &quot;OK&quot;, [867, 5309]</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>遍历 Map 结构</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> map = <span class=\"keyword\">new</span> <span class=\"title class_\">Map</span>();</span><br><span class=\"line\">map.<span class=\"title function_\">set</span>(<span class=\"string\">&#x27;first&#x27;</span>, <span class=\"string\">&#x27;hello&#x27;</span>);</span><br><span class=\"line\">map.<span class=\"title function_\">set</span>(<span class=\"string\">&#x27;second&#x27;</span>, <span class=\"string\">&#x27;world&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> [key, value] <span class=\"keyword\">of</span> map) &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(key + <span class=\"string\">&quot; is &quot;</span> + value);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// first is hello</span></span><br><span class=\"line\"><span class=\"comment\">// second is world</span></span><br></pre></td></tr></table></figure>\n\n<p>map解构类似于：[[first:hello],[second:world]]</p>\n<p>如果只想获取键名，或者只想获取键值，可以写成下面这样。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 获取键名</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> [key] <span class=\"keyword\">of</span> map) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 获取键值</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> [,value] <span class=\"keyword\">of</span> map) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<meta name=\"referrer\" content=\"no-referrer\"/>\n\n<h2 id=\"ES6的解构\"><a href=\"#ES6的解构\" class=\"headerlink\" title=\"ES6的解构\"></a>ES6的解构</h2><p>ES6 允许按照一定模式，从数组和对象中提取值，对变量进行赋值，这被称为解构（Destructuring）。</p>","more":"<blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> [a, b, c] = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>];</span><br></pre></td></tr></table></figure>\n</blockquote>\n<h3 id=\"数组的解构用法\"><a href=\"#数组的解构用法\" class=\"headerlink\" title=\"数组的解构用法\"></a>数组的解构用法</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> [foo, [[bar], baz]] = [<span class=\"number\">1</span>, [[<span class=\"number\">2</span>], <span class=\"number\">3</span>]];</span><br><span class=\"line\">foo <span class=\"comment\">// 1</span></span><br><span class=\"line\">bar <span class=\"comment\">// 2</span></span><br><span class=\"line\">baz <span class=\"comment\">// 3</span></span><br></pre></td></tr></table></figure>\n\n<p>如果解构不成功，变量的值就等于<code>undefined</code>。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> [foo] = [];</span><br><span class=\"line\"><span class=\"keyword\">let</span> [bar, foo] = [<span class=\"number\">1</span>];</span><br></pre></td></tr></table></figure>\n\n<p>以上两种情况都属于解构不成功，<code>foo</code>的值都会等于<code>undefined</code>。</p>\n<p>不完全解构</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> [x, y] = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>];</span><br><span class=\"line\">x <span class=\"comment\">// 1</span></span><br><span class=\"line\">y <span class=\"comment\">// 2</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> [a, [b], d] = [<span class=\"number\">1</span>, [<span class=\"number\">2</span>, <span class=\"number\">3</span>], <span class=\"number\">4</span>];</span><br><span class=\"line\">a <span class=\"comment\">// 1</span></span><br><span class=\"line\">b <span class=\"comment\">// 2</span></span><br><span class=\"line\">d <span class=\"comment\">// 4</span></span><br></pre></td></tr></table></figure>\n\n<p>默认值</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> [foo = <span class=\"literal\">true</span>] = [];</span><br><span class=\"line\">foo <span class=\"comment\">// true</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> [x, y = <span class=\"string\">&#x27;b&#x27;</span>] = [<span class=\"string\">&#x27;a&#x27;</span>]; <span class=\"comment\">// x=&#x27;a&#x27;, y=&#x27;b&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> [x, y = <span class=\"string\">&#x27;b&#x27;</span>] = [<span class=\"string\">&#x27;a&#x27;</span>, <span class=\"literal\">undefined</span>]; <span class=\"comment\">// x=&#x27;a&#x27;, y=&#x27;b&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<p>省去了提前定义变量及赋值的工作。</p>\n<p>原理：S6 内部使用严格相等运算符（<code>===</code>），判断一个位置是否有值。所以，只有当一个数组成员严格等于<code>undefined</code>，默认值才会生效。</p>\n<p>例子：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">f</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;aaa&#x27;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> [x = <span class=\"title function_\">f</span>()] = [<span class=\"number\">1</span>];</span><br></pre></td></tr></table></figure>\n\n<p>等价于</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> x;</span><br><span class=\"line\"><span class=\"keyword\">if</span> ([<span class=\"number\">1</span>][<span class=\"number\">0</span>] === <span class=\"literal\">undefined</span>) &#123;</span><br><span class=\"line\">  x = <span class=\"title function_\">f</span>();</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">  x = [<span class=\"number\">1</span>][<span class=\"number\">0</span>];</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>上述代码判断[1]数组的第一个值是不是undefined，不是的话，就是正常赋值，所以console不会出现</p>\n<h3 id=\"对象的解构\"><a href=\"#对象的解构\" class=\"headerlink\" title=\"对象的解构\"></a>对象的解构</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> &#123; foo, bar &#125; = &#123; <span class=\"attr\">foo</span>: <span class=\"string\">&#x27;aaa&#x27;</span>, <span class=\"attr\">bar</span>: <span class=\"string\">&#x27;bbb&#x27;</span> &#125;;</span><br><span class=\"line\">foo <span class=\"comment\">// &quot;aaa&quot;</span></span><br><span class=\"line\">bar <span class=\"comment\">// &quot;bbb&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>重命名</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> &#123; <span class=\"attr\">foo</span>: baz &#125; = &#123; <span class=\"attr\">foo</span>: <span class=\"string\">&#x27;aaa&#x27;</span>, <span class=\"attr\">bar</span>: <span class=\"string\">&#x27;bbb&#x27;</span> &#125;;</span><br><span class=\"line\">baz <span class=\"comment\">// &quot;aaa&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>嵌套解构</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> obj = &#123;</span><br><span class=\"line\">  <span class=\"attr\">p</span>: [</span><br><span class=\"line\">    <span class=\"string\">&#x27;Hello&#x27;</span>,</span><br><span class=\"line\">    &#123; <span class=\"attr\">y</span>: <span class=\"string\">&#x27;World&#x27;</span> &#125;</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> &#123; p, <span class=\"attr\">p</span>: [x, &#123; y &#125;] &#125; = obj;</span><br><span class=\"line\">x <span class=\"comment\">// &quot;Hello&quot;</span></span><br><span class=\"line\">y <span class=\"comment\">// &quot;World&quot;</span></span><br><span class=\"line\">p <span class=\"comment\">// [&quot;Hello&quot;, &#123;y: &quot;World&quot;&#125;]</span></span><br></pre></td></tr></table></figure>\n\n<p>前一个p是简写，完整模式是p：p，后一个p是用来做为对象中的匹配使用的，而不是变量。</p>\n<p>默认值</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> &#123;x = <span class=\"number\">3</span>&#125; = &#123;&#125;;</span><br><span class=\"line\">x <span class=\"comment\">// 3</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> &#123;x, y = <span class=\"number\">5</span>&#125; = &#123;<span class=\"attr\">x</span>: <span class=\"number\">1</span>&#125;;</span><br><span class=\"line\">x <span class=\"comment\">// 1</span></span><br><span class=\"line\">y <span class=\"comment\">// 5</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> &#123;<span class=\"attr\">x</span>: y = <span class=\"number\">3</span>&#125; = &#123;&#125;;</span><br><span class=\"line\">y <span class=\"comment\">// 3</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> &#123;<span class=\"attr\">x</span>: y = <span class=\"number\">3</span>&#125; = &#123;<span class=\"attr\">x</span>: <span class=\"number\">5</span>&#125;;</span><br><span class=\"line\">y <span class=\"comment\">// 5</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> &#123; <span class=\"attr\">message</span>: msg = <span class=\"string\">&#x27;Something went wrong&#x27;</span> &#125; = &#123;&#125;;</span><br><span class=\"line\">msg <span class=\"comment\">// &quot;Something went wrong&quot;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"将数组解构成对象\"><a href=\"#将数组解构成对象\" class=\"headerlink\" title=\"将数组解构成对象\"></a>将数组解构成对象</h3><p>上面两个例子都是将数据解构成数据，对象解构成对象，现在尝试将数组解构成对象</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> arr = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>];</span><br><span class=\"line\"><span class=\"keyword\">let</span> &#123;<span class=\"number\">0</span> : first, [arr.<span class=\"property\">length</span> - <span class=\"number\">1</span>] : last&#125; = arr;</span><br><span class=\"line\">first <span class=\"comment\">// 1</span></span><br><span class=\"line\">last <span class=\"comment\">// 3</span></span><br></pre></td></tr></table></figure>\n\n<p>相当于将数组的index键视为对象的key来进行匹配。</p>\n<h3 id=\"字符串解构\"><a href=\"#字符串解构\" class=\"headerlink\" title=\"字符串解构\"></a>字符串解构</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> [a, b, c, d, e] = <span class=\"string\">&#x27;hello&#x27;</span>;</span><br><span class=\"line\">a <span class=\"comment\">// &quot;h&quot;</span></span><br><span class=\"line\">b <span class=\"comment\">// &quot;e&quot;</span></span><br><span class=\"line\">c <span class=\"comment\">// &quot;l&quot;</span></span><br><span class=\"line\">d <span class=\"comment\">// &quot;l&quot;</span></span><br><span class=\"line\">e <span class=\"comment\">// &quot;o&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>字符串本身也有length属性。所有也可以进行解构</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> &#123;length : len&#125; = <span class=\"string\">&#x27;hello&#x27;</span>;</span><br><span class=\"line\">len <span class=\"comment\">// 5</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"函数参数解构\"><a href=\"#函数参数解构\" class=\"headerlink\" title=\"函数参数解构\"></a>函数参数解构</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">add</span>(<span class=\"params\">[x, y]</span>)&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> x + y;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">add</span>([<span class=\"number\">1</span>, <span class=\"number\">2</span>]); <span class=\"comment\">// 3</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[[<span class=\"number\">1</span>, <span class=\"number\">2</span>], [<span class=\"number\">3</span>, <span class=\"number\">4</span>]].<span class=\"title function_\">map</span>(<span class=\"function\">(<span class=\"params\">[a, b]</span>) =&gt;</span> a + b);</span><br></pre></td></tr></table></figure>\n\n<p>比较以下两个例子：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">move</span>(<span class=\"params\">&#123;x = <span class=\"number\">0</span>, y = <span class=\"number\">0</span>&#125; = &#123;&#125;</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> [x, y];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">move</span>(&#123;<span class=\"attr\">x</span>: <span class=\"number\">3</span>, <span class=\"attr\">y</span>: <span class=\"number\">8</span>&#125;); <span class=\"comment\">// [3, 8]</span></span><br><span class=\"line\"><span class=\"title function_\">move</span>(&#123;<span class=\"attr\">x</span>: <span class=\"number\">3</span>&#125;); <span class=\"comment\">// [3, 0]</span></span><br><span class=\"line\"><span class=\"title function_\">move</span>(&#123;&#125;); <span class=\"comment\">// [0, 0]</span></span><br><span class=\"line\"><span class=\"title function_\">move</span>(); <span class=\"comment\">// [0, 0]</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">move</span>(<span class=\"params\">&#123;x, y&#125; = &#123; x: <span class=\"number\">0</span>, y: <span class=\"number\">0</span> &#125;</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> [x, y];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">move</span>(&#123;<span class=\"attr\">x</span>: <span class=\"number\">3</span>, <span class=\"attr\">y</span>: <span class=\"number\">8</span>&#125;); <span class=\"comment\">// [3, 8]</span></span><br><span class=\"line\"><span class=\"title function_\">move</span>(&#123;<span class=\"attr\">x</span>: <span class=\"number\">3</span>&#125;); <span class=\"comment\">// [3, undefined]</span></span><br><span class=\"line\"><span class=\"title function_\">move</span>(&#123;&#125;); <span class=\"comment\">// [undefined, undefined]</span></span><br><span class=\"line\"><span class=\"title function_\">move</span>(); <span class=\"comment\">// [0, 0]</span></span><br></pre></td></tr></table></figure>\n\n<p>解构很相似，看起来都是设定了默认值，实际上有很大区别</p>\n<p>move({x: 3, y: 8})里的参数实际上是传入了function中的后面这个{}，在第一个例子中，即：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">move</span>(&#123;<span class=\"attr\">x</span>: <span class=\"number\">3</span>&#125;)运作如下</span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">move</span>(<span class=\"params\">&#123;x = <span class=\"number\">0</span>, y = <span class=\"number\">0</span>&#125; = &#123;x: <span class=\"number\">3</span>&#125;</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> [x, y];</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>第二个例子中：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">move</span>(&#123;<span class=\"attr\">x</span>: <span class=\"number\">3</span>&#125;)运作如下</span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">move</span>(<span class=\"params\">&#123;x , y &#125; = &#123;x: <span class=\"number\">3</span>&#125;</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> [x, y];</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>这里很明显看到第二个例子中，传参被替换掉了。y找不到对应的解构对象中的y这个key。会默认为undefined</p>\n<h3 id=\"实际使用\"><a href=\"#实际使用\" class=\"headerlink\" title=\"实际使用\"></a>实际使用</h3><p><strong>函数参数的定义</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 参数是一组有次序的值</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">f</span>(<span class=\"params\">[x, y, z]</span>) &#123; ... &#125;</span><br><span class=\"line\"><span class=\"title function_\">f</span>([<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>]);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 参数是一组无次序的值</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">f</span>(<span class=\"params\">&#123;x, y, z&#125;</span>) &#123; ... &#125;</span><br><span class=\"line\"><span class=\"title function_\">f</span>(&#123;<span class=\"attr\">z</span>: <span class=\"number\">3</span>, <span class=\"attr\">y</span>: <span class=\"number\">2</span>, <span class=\"attr\">x</span>: <span class=\"number\">1</span>&#125;);</span><br></pre></td></tr></table></figure>\n\n<p><strong>提取 JSON 数据</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> jsonData = &#123;</span><br><span class=\"line\">  <span class=\"attr\">id</span>: <span class=\"number\">42</span>,</span><br><span class=\"line\">  <span class=\"attr\">status</span>: <span class=\"string\">&quot;OK&quot;</span>,</span><br><span class=\"line\">  <span class=\"attr\">data</span>: [<span class=\"number\">867</span>, <span class=\"number\">5309</span>]</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> &#123; id, status, <span class=\"attr\">data</span>: number &#125; = jsonData;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(id, status, number);</span><br><span class=\"line\"><span class=\"comment\">// 42, &quot;OK&quot;, [867, 5309]</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>遍历 Map 结构</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> map = <span class=\"keyword\">new</span> <span class=\"title class_\">Map</span>();</span><br><span class=\"line\">map.<span class=\"title function_\">set</span>(<span class=\"string\">&#x27;first&#x27;</span>, <span class=\"string\">&#x27;hello&#x27;</span>);</span><br><span class=\"line\">map.<span class=\"title function_\">set</span>(<span class=\"string\">&#x27;second&#x27;</span>, <span class=\"string\">&#x27;world&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> [key, value] <span class=\"keyword\">of</span> map) &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(key + <span class=\"string\">&quot; is &quot;</span> + value);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// first is hello</span></span><br><span class=\"line\"><span class=\"comment\">// second is world</span></span><br></pre></td></tr></table></figure>\n\n<p>map解构类似于：[[first:hello],[second:world]]</p>\n<p>如果只想获取键名，或者只想获取键值，可以写成下面这样。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 获取键名</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> [key] <span class=\"keyword\">of</span> map) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 获取键值</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> [,value] <span class=\"keyword\">of</span> map) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"Echart使用记录","date":"2020-07-12T09:16:26.000Z","_content":"\n<meta name=\"referrer\" content=\"no-referrer\"/>\n\n## Echart使用记录\n\nApache ECharts (incubating)TM 是一个正在 [Apache Software Foundation](https://www.apache.org/) (ASF) 孵化中的项目。\n\n<!-- more -->\n\n### 需求\n\n实现多折线图，柱状图，饼状图等等，需要可以点击图上的点来请求对应当前具体数据。并且可以通过不同的单位进行渲染。\n\n### 安装\n\n```js\nnpm install echarts --save\n```\n\n### 公共页面\n\n新建一个公共页面echart.vue，方便后续调用\n\n``` js\n<template>\n  <div style=\"padding:10px\">\n    <div :id=\"id\" :style=\"{width: width, height: height}\"></div>\n  </div>\n</template>\n\n<script>\n// 引入基本模板\nlet echarts = require(\"echarts/lib/echarts\");\n// 引入柱状图组件\nrequire(\"echarts/lib/chart/bar\");\nrequire(\"echarts/lib/chart/line\");\nrequire(\"echarts/lib/chart/pie\");\n// 引入提示框和title组件\nrequire(\"echarts/lib/component/tooltip\");\nrequire(\"echarts/lib/component/title\");\nrequire(\"echarts/lib/component/legend\");\n// require(\"echarts/config\")\nexport default {\n  name: \"echart\",\n  mounted() {},\n  data() {\n    return {\n      option: {},\n      createdIt: false,\n    };\n  },\n  watch: {\n    //监听两个对象（1.横坐标的数据，2.纵坐标的数据）触发更新\n    seriesData: function (n, o) {\n      if (n.length > 0) {\n        this.seriesData = n;\n        this.refresh(n, 0);\n      }\n    },\n    xAxisData: function (n, o) {\n      if (n.length > 0) {\n        this.xAxisData = n;\n        this.refresh(n, 1);\n      }\n    },\n  },\n  props: {\n    interval: {\n      type: Number,\n      default: null,\n    },\n    gridLeft: {\n      type: Number,\n      default: 60,\n    },\n    showXYxis: {\n      type: Boolean,\n      default: true,\n    },\n    labelPositon: {\n      type: String,\n      default: \"top\",\n    },\n    name: {\n      type: String,\n      default: null,\n    },\n    id: {\n      type: String,\n      default: null,\n    },\n    width: {\n      type: String,\n      default: null,\n    },\n    height: {\n      type: String,\n      default: null,\n    },\n    title: {\n      type: String,\n      default: null,\n    },\n    xAxis: {\n      type: String,\n      default: null,\n    },\n    series: {\n      type: String,\n      default: null,\n    },\n    yAxis: {\n      type: String,\n      default: null,\n    },\n    tooltip: {\n      type: String,\n      default: null,\n    },\n    type: {\n      type: String,\n      default: null,\n    },\n    value: {\n      type: String,\n      default: \"value\",\n    },\n    category: {\n      type: String,\n      default: \"category\",\n    },\n    isClick: {\n      type: Boolean,\n      default: true,\n    },\n    seriesData: {\n      type: Array,\n      default: () => [],\n    },\n    legendData: {\n      type: Array,\n      default: () => [],\n    },\n    xAxisData: {\n      type: Array,\n      default: () => [],\n    },\n    yAxisData: {\n      type: Array,\n      default: () => [],\n    },\n  },\n  created() {},\n  methods: {\n    refresh(n, type) {\n      this.option = {\n        dataZoom: [\n          {\n            show: true,\n            realtime: true,\n            start: 0,\n            end: 50,\n          },\n          {\n            type: \"inside\",\n            realtime: true,\n            start: 0,\n            end: 50,\n          },\n        ],\n        legend: {\n          data: this.legendData,//底部不同折线的文字说明\n          bottom: 0,\n          left: \"center\",\n          textStyle: {\n            color: \"black\",\n          },\n        },\n        title: {\n          text: this.title, //左上角title\n          left: \"center\",\n        },\n        tooltip: {\n          trigger: \"axis\",\n        },\n        xAxis: {\n          show: this.showXYxis,//显示横坐标与否\n          type: this.category,//横着显示还是竖着显示\n          axisLabel: {\n            interval: this.interval, //使x轴横坐标全部显示\n          },\n          data: [],\n        },\n        yAxis: { \n          show: this.showXYxis,//显示纵坐标与否\n          type: this.value,//横着显示还是竖着显示\n          data: this.yAxisData,\n        },\n        grid: {\n          left: this.gridLeft,//左侧的文字占用的宽度\n        },\n\n        series: [],\n      };\n      if (type == 0) {\n        this.$set(this.option.xAxis, \"data\", this.xAxisData);\n        this.$set(this.option, \"series\", n);\n      } else {\n        this.$set(this.option.xAxis, \"data\", n);\n        this.$set(this.option, \"series\", this.seriesData);\n      }\n      this.drawLine(this.option);\n    },\n    drawLine(option) {\n      // 基于准备好的dom，初始化echarts实例\n      var myChart = echarts.init(document.getElementById(this.id));\n      // 绘制图表\n      myChart.setOption(option, true);\n      myChart.resize();\n      myChart.off(\"click\");\n      if (this.isClick) {\n        myChart.on(\"click\", (params) => {\n          this.$emit(\"getEchartData\", params);\n        });\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n</style>\n```\n\n### 页面中引入\n\n```js\n       <div class=\"flexCenter\">\n          <echart\n            v-if=\"EchartName == 'firstEchart'\"\n            @getEchartData=\"getEchartData\"\n            class=\"left\"\n            :id=\"leftid\"\n            :width=\"width\"\n            :height=\"height\"\n            :title=\"lefttitle\"\n            :type=\"lefttype\"\n            :seriesData=\"seriesData\"\n            :legendData=\"legendData\"\n            :xAxisData=\"xAxisData\"\n          ></echart>\n        </div>\n```\n\n```\n<script>\nimport echart from \"@/components/common/echarts.vue\";\n\nexport default {\n  components: { echart },\n  data() {\n    return {\n      name: \"recorder\",\n      seriesData: [],\n      labelPositon: \"right\",\n      width: \"100%\",\n      height: \"400px\",\n      legendData: [\n        \"意见总反馈量\",\n        \"页面报错\",\n        \"投诉商家\",\n        \"卡券领取使用问题\",\n        \"未找到想要的商家\",\n        \"其他\",\n      ],\n      xAxisData: [], //根据请求拿到的横坐标（时间）\n    };\n  },\n  created() {},\n  computed: {},\n  methods: {\n    getData() {\n    this.xAxisData.push(this.allxAxisData[i].x)\n    this.seriesData = [\n              {\n                label: {\n                  normal: {\n                    show: true, //显示数字\n                    position: \"right\", //这里可以自己选择位置\n                    textStyle: {\n                      color: \"black\", //顶部颜色\n                    },\n                  },\n                },\n                name: \"意见总反馈量\",\n                overAnimation: false,\n                type: \"line\", //折线还是柱状图\n                data: allObject.yDataTem,\n              },\n              {\n                label: {\n                  normal: {\n                    show: true, //显示数字\n                    position: \"right\", //这里可以自己选择位置\n                    textStyle: {\n                      color: \"black\", //顶部颜色\n                    },\n                  },\n                },\n                name: \"页面报错\",\n                overAnimation: false,\n                type: \"line\", //折线还是柱状图\n                data: allObject.pageErroDataTem,\n              },\n              {\n                label: {\n                  normal: {\n                    show: true, //显示数字\n                    position: \"right\", //这里可以自己选择位置\n                    textStyle: {\n                      color: \"black\", //顶部颜色\n                    },\n                  },\n                },\n                name: \"投诉商家\",\n                overAnimation: false,\n                type: \"line\", //折线还是柱状图\n                data: allObject.complaintBusinessDataTem,\n              },\n              {\n                label: {\n                  normal: {\n                    show: true, //显示数字\n                    position: \"right\", //这里可以自己选择位置\n                    textStyle: {\n                      color: \"black\", //顶部颜色\n                    },\n                  },\n                },\n                name: \"卡券领取使用问题\",\n                overAnimation: false,\n                type: \"line\", //折线还是柱状图\n                data: allObject.couponProblemDataTem,\n              },\n              {\n                label: {\n                  normal: {\n                    show: true, //显示数字\n                    position: \"right\", //这里可以自己选择位置\n                    textStyle: {\n                      color: \"black\", //顶部颜色\n                    },\n                  },\n                },\n                name: \"未找到想要的商家\",\n                overAnimation: false,\n                type: \"line\", //折线还是柱状图\n                data: allObject.noBusinessFoundDataTem,\n              },\n              {\n                label: {\n                  normal: {\n                    show: true, //显示数字\n                    position: \"right\", //这里可以自己选择位置\n                    textStyle: {\n                      color: \"black\", //顶部颜色\n                    },\n                  },\n                },\n                name: \"其他\",\n                overAnimation: false,\n                type: \"line\", //折线还是柱状图\n                data: allObject.otherDataTem,\n              },\n            ];\n    }\n  }\n};\n</script>\n```\n\nthis.seriesData：包含具体的显示配置option，主要核心是y周的坐标，allObject.yDataTem包含了对应每个折线的y轴坐标，这个是后端给的。\n\nthis.xAxisData：横坐标，后端提供。\n\n返回数据的格式类似如下，通过push进不同的数组进行渲染。\n\n```js\n[{complaintBusiness: 0,\ncouponProblem: 1,\nnoBusinessFound: 2,\nother: 0,\npageErro: 1,\nx: \"2020-08-03-2020-08-09\",\ny: 4},{complaintBusiness: 0,\ncouponProblem: 0,\nnoBusinessFound: 1,\nother: 0,\npageErro: 0,\nx: \"2020-08-10-2020-08-16\",\ny: 1,}]\n```\n\n### 核心\n\n1. 需要监听数据的改变，从而触发echart视图的重新渲染，触发this.drawLine(this.option)\n\n   ```js\n   drawLine(option) {\n         // 基于准备好的dom，初始化echarts实例\n         var myChart = echarts.init(document.getElementById(this.id));\n         // 绘制图表\n         myChart.setOption(option, true);\n         myChart.resize();\n         myChart.off(\"click\");\n         if (this.isClick) {\n           myChart.on(\"click\", (params) => {\n             this.$emit(\"getEchartData\", params);\n           });\n         }\n       },\n   ```\n\n   \n\n2. 触发点击事件，传递对应的图表数据出去\n\n   ```js\n          myChart.on(\"click\", (params) => {\n             this.$emit(\"getEchartData\", params);\n           });\n   ```\n\n   ","source":"_posts/Echart使用记录.md","raw":"---\ntitle: Echart使用记录\ndate: 2020-07-12 17:16:26\ntags: [echart]\n---\n\n<meta name=\"referrer\" content=\"no-referrer\"/>\n\n## Echart使用记录\n\nApache ECharts (incubating)TM 是一个正在 [Apache Software Foundation](https://www.apache.org/) (ASF) 孵化中的项目。\n\n<!-- more -->\n\n### 需求\n\n实现多折线图，柱状图，饼状图等等，需要可以点击图上的点来请求对应当前具体数据。并且可以通过不同的单位进行渲染。\n\n### 安装\n\n```js\nnpm install echarts --save\n```\n\n### 公共页面\n\n新建一个公共页面echart.vue，方便后续调用\n\n``` js\n<template>\n  <div style=\"padding:10px\">\n    <div :id=\"id\" :style=\"{width: width, height: height}\"></div>\n  </div>\n</template>\n\n<script>\n// 引入基本模板\nlet echarts = require(\"echarts/lib/echarts\");\n// 引入柱状图组件\nrequire(\"echarts/lib/chart/bar\");\nrequire(\"echarts/lib/chart/line\");\nrequire(\"echarts/lib/chart/pie\");\n// 引入提示框和title组件\nrequire(\"echarts/lib/component/tooltip\");\nrequire(\"echarts/lib/component/title\");\nrequire(\"echarts/lib/component/legend\");\n// require(\"echarts/config\")\nexport default {\n  name: \"echart\",\n  mounted() {},\n  data() {\n    return {\n      option: {},\n      createdIt: false,\n    };\n  },\n  watch: {\n    //监听两个对象（1.横坐标的数据，2.纵坐标的数据）触发更新\n    seriesData: function (n, o) {\n      if (n.length > 0) {\n        this.seriesData = n;\n        this.refresh(n, 0);\n      }\n    },\n    xAxisData: function (n, o) {\n      if (n.length > 0) {\n        this.xAxisData = n;\n        this.refresh(n, 1);\n      }\n    },\n  },\n  props: {\n    interval: {\n      type: Number,\n      default: null,\n    },\n    gridLeft: {\n      type: Number,\n      default: 60,\n    },\n    showXYxis: {\n      type: Boolean,\n      default: true,\n    },\n    labelPositon: {\n      type: String,\n      default: \"top\",\n    },\n    name: {\n      type: String,\n      default: null,\n    },\n    id: {\n      type: String,\n      default: null,\n    },\n    width: {\n      type: String,\n      default: null,\n    },\n    height: {\n      type: String,\n      default: null,\n    },\n    title: {\n      type: String,\n      default: null,\n    },\n    xAxis: {\n      type: String,\n      default: null,\n    },\n    series: {\n      type: String,\n      default: null,\n    },\n    yAxis: {\n      type: String,\n      default: null,\n    },\n    tooltip: {\n      type: String,\n      default: null,\n    },\n    type: {\n      type: String,\n      default: null,\n    },\n    value: {\n      type: String,\n      default: \"value\",\n    },\n    category: {\n      type: String,\n      default: \"category\",\n    },\n    isClick: {\n      type: Boolean,\n      default: true,\n    },\n    seriesData: {\n      type: Array,\n      default: () => [],\n    },\n    legendData: {\n      type: Array,\n      default: () => [],\n    },\n    xAxisData: {\n      type: Array,\n      default: () => [],\n    },\n    yAxisData: {\n      type: Array,\n      default: () => [],\n    },\n  },\n  created() {},\n  methods: {\n    refresh(n, type) {\n      this.option = {\n        dataZoom: [\n          {\n            show: true,\n            realtime: true,\n            start: 0,\n            end: 50,\n          },\n          {\n            type: \"inside\",\n            realtime: true,\n            start: 0,\n            end: 50,\n          },\n        ],\n        legend: {\n          data: this.legendData,//底部不同折线的文字说明\n          bottom: 0,\n          left: \"center\",\n          textStyle: {\n            color: \"black\",\n          },\n        },\n        title: {\n          text: this.title, //左上角title\n          left: \"center\",\n        },\n        tooltip: {\n          trigger: \"axis\",\n        },\n        xAxis: {\n          show: this.showXYxis,//显示横坐标与否\n          type: this.category,//横着显示还是竖着显示\n          axisLabel: {\n            interval: this.interval, //使x轴横坐标全部显示\n          },\n          data: [],\n        },\n        yAxis: { \n          show: this.showXYxis,//显示纵坐标与否\n          type: this.value,//横着显示还是竖着显示\n          data: this.yAxisData,\n        },\n        grid: {\n          left: this.gridLeft,//左侧的文字占用的宽度\n        },\n\n        series: [],\n      };\n      if (type == 0) {\n        this.$set(this.option.xAxis, \"data\", this.xAxisData);\n        this.$set(this.option, \"series\", n);\n      } else {\n        this.$set(this.option.xAxis, \"data\", n);\n        this.$set(this.option, \"series\", this.seriesData);\n      }\n      this.drawLine(this.option);\n    },\n    drawLine(option) {\n      // 基于准备好的dom，初始化echarts实例\n      var myChart = echarts.init(document.getElementById(this.id));\n      // 绘制图表\n      myChart.setOption(option, true);\n      myChart.resize();\n      myChart.off(\"click\");\n      if (this.isClick) {\n        myChart.on(\"click\", (params) => {\n          this.$emit(\"getEchartData\", params);\n        });\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n</style>\n```\n\n### 页面中引入\n\n```js\n       <div class=\"flexCenter\">\n          <echart\n            v-if=\"EchartName == 'firstEchart'\"\n            @getEchartData=\"getEchartData\"\n            class=\"left\"\n            :id=\"leftid\"\n            :width=\"width\"\n            :height=\"height\"\n            :title=\"lefttitle\"\n            :type=\"lefttype\"\n            :seriesData=\"seriesData\"\n            :legendData=\"legendData\"\n            :xAxisData=\"xAxisData\"\n          ></echart>\n        </div>\n```\n\n```\n<script>\nimport echart from \"@/components/common/echarts.vue\";\n\nexport default {\n  components: { echart },\n  data() {\n    return {\n      name: \"recorder\",\n      seriesData: [],\n      labelPositon: \"right\",\n      width: \"100%\",\n      height: \"400px\",\n      legendData: [\n        \"意见总反馈量\",\n        \"页面报错\",\n        \"投诉商家\",\n        \"卡券领取使用问题\",\n        \"未找到想要的商家\",\n        \"其他\",\n      ],\n      xAxisData: [], //根据请求拿到的横坐标（时间）\n    };\n  },\n  created() {},\n  computed: {},\n  methods: {\n    getData() {\n    this.xAxisData.push(this.allxAxisData[i].x)\n    this.seriesData = [\n              {\n                label: {\n                  normal: {\n                    show: true, //显示数字\n                    position: \"right\", //这里可以自己选择位置\n                    textStyle: {\n                      color: \"black\", //顶部颜色\n                    },\n                  },\n                },\n                name: \"意见总反馈量\",\n                overAnimation: false,\n                type: \"line\", //折线还是柱状图\n                data: allObject.yDataTem,\n              },\n              {\n                label: {\n                  normal: {\n                    show: true, //显示数字\n                    position: \"right\", //这里可以自己选择位置\n                    textStyle: {\n                      color: \"black\", //顶部颜色\n                    },\n                  },\n                },\n                name: \"页面报错\",\n                overAnimation: false,\n                type: \"line\", //折线还是柱状图\n                data: allObject.pageErroDataTem,\n              },\n              {\n                label: {\n                  normal: {\n                    show: true, //显示数字\n                    position: \"right\", //这里可以自己选择位置\n                    textStyle: {\n                      color: \"black\", //顶部颜色\n                    },\n                  },\n                },\n                name: \"投诉商家\",\n                overAnimation: false,\n                type: \"line\", //折线还是柱状图\n                data: allObject.complaintBusinessDataTem,\n              },\n              {\n                label: {\n                  normal: {\n                    show: true, //显示数字\n                    position: \"right\", //这里可以自己选择位置\n                    textStyle: {\n                      color: \"black\", //顶部颜色\n                    },\n                  },\n                },\n                name: \"卡券领取使用问题\",\n                overAnimation: false,\n                type: \"line\", //折线还是柱状图\n                data: allObject.couponProblemDataTem,\n              },\n              {\n                label: {\n                  normal: {\n                    show: true, //显示数字\n                    position: \"right\", //这里可以自己选择位置\n                    textStyle: {\n                      color: \"black\", //顶部颜色\n                    },\n                  },\n                },\n                name: \"未找到想要的商家\",\n                overAnimation: false,\n                type: \"line\", //折线还是柱状图\n                data: allObject.noBusinessFoundDataTem,\n              },\n              {\n                label: {\n                  normal: {\n                    show: true, //显示数字\n                    position: \"right\", //这里可以自己选择位置\n                    textStyle: {\n                      color: \"black\", //顶部颜色\n                    },\n                  },\n                },\n                name: \"其他\",\n                overAnimation: false,\n                type: \"line\", //折线还是柱状图\n                data: allObject.otherDataTem,\n              },\n            ];\n    }\n  }\n};\n</script>\n```\n\nthis.seriesData：包含具体的显示配置option，主要核心是y周的坐标，allObject.yDataTem包含了对应每个折线的y轴坐标，这个是后端给的。\n\nthis.xAxisData：横坐标，后端提供。\n\n返回数据的格式类似如下，通过push进不同的数组进行渲染。\n\n```js\n[{complaintBusiness: 0,\ncouponProblem: 1,\nnoBusinessFound: 2,\nother: 0,\npageErro: 1,\nx: \"2020-08-03-2020-08-09\",\ny: 4},{complaintBusiness: 0,\ncouponProblem: 0,\nnoBusinessFound: 1,\nother: 0,\npageErro: 0,\nx: \"2020-08-10-2020-08-16\",\ny: 1,}]\n```\n\n### 核心\n\n1. 需要监听数据的改变，从而触发echart视图的重新渲染，触发this.drawLine(this.option)\n\n   ```js\n   drawLine(option) {\n         // 基于准备好的dom，初始化echarts实例\n         var myChart = echarts.init(document.getElementById(this.id));\n         // 绘制图表\n         myChart.setOption(option, true);\n         myChart.resize();\n         myChart.off(\"click\");\n         if (this.isClick) {\n           myChart.on(\"click\", (params) => {\n             this.$emit(\"getEchartData\", params);\n           });\n         }\n       },\n   ```\n\n   \n\n2. 触发点击事件，传递对应的图表数据出去\n\n   ```js\n          myChart.on(\"click\", (params) => {\n             this.$emit(\"getEchartData\", params);\n           });\n   ```\n\n   ","slug":"Echart使用记录","published":1,"updated":"2020-09-04T06:31:18.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl0uux6v600017sufdgjkhfn2","content":"<meta name=\"referrer\" content=\"no-referrer\"/>\n\n<h2 id=\"Echart使用记录\"><a href=\"#Echart使用记录\" class=\"headerlink\" title=\"Echart使用记录\"></a>Echart使用记录</h2><p>Apache ECharts (incubating)TM 是一个正在 <a href=\"https://www.apache.org/\">Apache Software Foundation</a> (ASF) 孵化中的项目。</p>\n<span id=\"more\"></span>\n\n<h3 id=\"需求\"><a href=\"#需求\" class=\"headerlink\" title=\"需求\"></a>需求</h3><p>实现多折线图，柱状图，饼状图等等，需要可以点击图上的点来请求对应当前具体数据。并且可以通过不同的单位进行渲染。</p>\n<h3 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install echarts --save</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"公共页面\"><a href=\"#公共页面\" class=\"headerlink\" title=\"公共页面\"></a>公共页面</h3><p>新建一个公共页面echart.vue，方便后续调用</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;padding:10px&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">:id</span>=<span class=\"string\">&quot;id&quot;</span> <span class=\"attr\">:style</span>=<span class=\"string\">&quot;&#123;width: width, height: height&#125;&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"><span class=\"comment\">// 引入基本模板</span></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"><span class=\"keyword\">let</span> echarts = <span class=\"built_in\">require</span>(<span class=\"string\">&quot;echarts/lib/echarts&quot;</span>);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"><span class=\"comment\">// 引入柱状图组件</span></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"><span class=\"built_in\">require</span>(<span class=\"string\">&quot;echarts/lib/chart/bar&quot;</span>);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"><span class=\"built_in\">require</span>(<span class=\"string\">&quot;echarts/lib/chart/line&quot;</span>);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"><span class=\"built_in\">require</span>(<span class=\"string\">&quot;echarts/lib/chart/pie&quot;</span>);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"><span class=\"comment\">// 引入提示框和title组件</span></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"><span class=\"built_in\">require</span>(<span class=\"string\">&quot;echarts/lib/component/tooltip&quot;</span>);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"><span class=\"built_in\">require</span>(<span class=\"string\">&quot;echarts/lib/component/title&quot;</span>);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"><span class=\"built_in\">require</span>(<span class=\"string\">&quot;echarts/lib/component/legend&quot;</span>);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"><span class=\"comment\">// require(&quot;echarts/config&quot;)</span></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">  <span class=\"attr\">name</span>: <span class=\"string\">&quot;echart&quot;</span>,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">  <span class=\"title function_\">mounted</span>(<span class=\"params\"></span>) &#123;&#125;,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">  <span class=\"title function_\">data</span>(<span class=\"params\"></span>) &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    <span class=\"keyword\">return</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      <span class=\"attr\">option</span>: &#123;&#125;,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      <span class=\"attr\">createdIt</span>: <span class=\"literal\">false</span>,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    &#125;;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">  &#125;,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">  <span class=\"attr\">watch</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    <span class=\"comment\">//监听两个对象（1.横坐标的数据，2.纵坐标的数据）触发更新</span></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    <span class=\"attr\">seriesData</span>: <span class=\"keyword\">function</span> (<span class=\"params\">n, o</span>) &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      <span class=\"keyword\">if</span> (n.<span class=\"property\">length</span> &gt; <span class=\"number\">0</span>) &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">        <span class=\"variable language_\">this</span>.<span class=\"property\">seriesData</span> = n;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">        <span class=\"variable language_\">this</span>.<span class=\"title function_\">refresh</span>(n, <span class=\"number\">0</span>);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      &#125;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    <span class=\"attr\">xAxisData</span>: <span class=\"keyword\">function</span> (<span class=\"params\">n, o</span>) &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      <span class=\"keyword\">if</span> (n.<span class=\"property\">length</span> &gt; <span class=\"number\">0</span>) &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">        <span class=\"variable language_\">this</span>.<span class=\"property\">xAxisData</span> = n;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">        <span class=\"variable language_\">this</span>.<span class=\"title function_\">refresh</span>(n, <span class=\"number\">1</span>);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      &#125;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">  &#125;,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">  <span class=\"attr\">props</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    <span class=\"attr\">interval</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      <span class=\"attr\">type</span>: <span class=\"title class_\">Number</span>,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      <span class=\"attr\">default</span>: <span class=\"literal\">null</span>,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    <span class=\"attr\">gridLeft</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      <span class=\"attr\">type</span>: <span class=\"title class_\">Number</span>,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      <span class=\"attr\">default</span>: <span class=\"number\">60</span>,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    <span class=\"attr\">showXYxis</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      <span class=\"attr\">type</span>: <span class=\"title class_\">Boolean</span>,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      <span class=\"attr\">default</span>: <span class=\"literal\">true</span>,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    <span class=\"attr\">labelPositon</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      <span class=\"attr\">type</span>: <span class=\"title class_\">String</span>,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      <span class=\"attr\">default</span>: <span class=\"string\">&quot;top&quot;</span>,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    <span class=\"attr\">name</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      <span class=\"attr\">type</span>: <span class=\"title class_\">String</span>,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      <span class=\"attr\">default</span>: <span class=\"literal\">null</span>,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    <span class=\"attr\">id</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      <span class=\"attr\">type</span>: <span class=\"title class_\">String</span>,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      <span class=\"attr\">default</span>: <span class=\"literal\">null</span>,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    <span class=\"attr\">width</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      <span class=\"attr\">type</span>: <span class=\"title class_\">String</span>,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      <span class=\"attr\">default</span>: <span class=\"literal\">null</span>,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    <span class=\"attr\">height</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      <span class=\"attr\">type</span>: <span class=\"title class_\">String</span>,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      <span class=\"attr\">default</span>: <span class=\"literal\">null</span>,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    <span class=\"attr\">title</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      <span class=\"attr\">type</span>: <span class=\"title class_\">String</span>,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      <span class=\"attr\">default</span>: <span class=\"literal\">null</span>,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    <span class=\"attr\">xAxis</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      <span class=\"attr\">type</span>: <span class=\"title class_\">String</span>,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      <span class=\"attr\">default</span>: <span class=\"literal\">null</span>,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    <span class=\"attr\">series</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      <span class=\"attr\">type</span>: <span class=\"title class_\">String</span>,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      <span class=\"attr\">default</span>: <span class=\"literal\">null</span>,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    <span class=\"attr\">yAxis</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      <span class=\"attr\">type</span>: <span class=\"title class_\">String</span>,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      <span class=\"attr\">default</span>: <span class=\"literal\">null</span>,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    <span class=\"attr\">tooltip</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      <span class=\"attr\">type</span>: <span class=\"title class_\">String</span>,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      <span class=\"attr\">default</span>: <span class=\"literal\">null</span>,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    <span class=\"attr\">type</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      <span class=\"attr\">type</span>: <span class=\"title class_\">String</span>,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      <span class=\"attr\">default</span>: <span class=\"literal\">null</span>,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    <span class=\"attr\">value</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      <span class=\"attr\">type</span>: <span class=\"title class_\">String</span>,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      <span class=\"attr\">default</span>: <span class=\"string\">&quot;value&quot;</span>,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    <span class=\"attr\">category</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      <span class=\"attr\">type</span>: <span class=\"title class_\">String</span>,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      <span class=\"attr\">default</span>: <span class=\"string\">&quot;category&quot;</span>,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    <span class=\"attr\">isClick</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      <span class=\"attr\">type</span>: <span class=\"title class_\">Boolean</span>,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      <span class=\"attr\">default</span>: <span class=\"literal\">true</span>,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    <span class=\"attr\">seriesData</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      <span class=\"attr\">type</span>: <span class=\"title class_\">Array</span>,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      <span class=\"attr\">default</span>: <span class=\"function\">() =&gt;</span> [],</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    <span class=\"attr\">legendData</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      <span class=\"attr\">type</span>: <span class=\"title class_\">Array</span>,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      <span class=\"attr\">default</span>: <span class=\"function\">() =&gt;</span> [],</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    <span class=\"attr\">xAxisData</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      <span class=\"attr\">type</span>: <span class=\"title class_\">Array</span>,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      <span class=\"attr\">default</span>: <span class=\"function\">() =&gt;</span> [],</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    <span class=\"attr\">yAxisData</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      <span class=\"attr\">type</span>: <span class=\"title class_\">Array</span>,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      <span class=\"attr\">default</span>: <span class=\"function\">() =&gt;</span> [],</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">  &#125;,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">  <span class=\"title function_\">created</span>(<span class=\"params\"></span>) &#123;&#125;,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">  <span class=\"attr\">methods</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    <span class=\"title function_\">refresh</span>(<span class=\"params\">n, type</span>) &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      <span class=\"variable language_\">this</span>.<span class=\"property\">option</span> = &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">        <span class=\"attr\">dataZoom</span>: [</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">          &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">            <span class=\"attr\">show</span>: <span class=\"literal\">true</span>,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">            <span class=\"attr\">realtime</span>: <span class=\"literal\">true</span>,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">            <span class=\"attr\">start</span>: <span class=\"number\">0</span>,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">            <span class=\"attr\">end</span>: <span class=\"number\">50</span>,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">          &#125;,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">          &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">            <span class=\"attr\">type</span>: <span class=\"string\">&quot;inside&quot;</span>,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">            <span class=\"attr\">realtime</span>: <span class=\"literal\">true</span>,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">            <span class=\"attr\">start</span>: <span class=\"number\">0</span>,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">            <span class=\"attr\">end</span>: <span class=\"number\">50</span>,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">          &#125;,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">        ],</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">        <span class=\"attr\">legend</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">          <span class=\"attr\">data</span>: <span class=\"variable language_\">this</span>.<span class=\"property\">legendData</span>,<span class=\"comment\">//底部不同折线的文字说明</span></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">          <span class=\"attr\">bottom</span>: <span class=\"number\">0</span>,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">          <span class=\"attr\">left</span>: <span class=\"string\">&quot;center&quot;</span>,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">          <span class=\"attr\">textStyle</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">            <span class=\"attr\">color</span>: <span class=\"string\">&quot;black&quot;</span>,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">          &#125;,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">        &#125;,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">        <span class=\"attr\">title</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">          <span class=\"attr\">text</span>: <span class=\"variable language_\">this</span>.<span class=\"property\">title</span>, <span class=\"comment\">//左上角title</span></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">          <span class=\"attr\">left</span>: <span class=\"string\">&quot;center&quot;</span>,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">        &#125;,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">        <span class=\"attr\">tooltip</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">          <span class=\"attr\">trigger</span>: <span class=\"string\">&quot;axis&quot;</span>,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">        &#125;,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">        <span class=\"attr\">xAxis</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">          <span class=\"attr\">show</span>: <span class=\"variable language_\">this</span>.<span class=\"property\">showXYxis</span>,<span class=\"comment\">//显示横坐标与否</span></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">          <span class=\"attr\">type</span>: <span class=\"variable language_\">this</span>.<span class=\"property\">category</span>,<span class=\"comment\">//横着显示还是竖着显示</span></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">          <span class=\"attr\">axisLabel</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">            <span class=\"attr\">interval</span>: <span class=\"variable language_\">this</span>.<span class=\"property\">interval</span>, <span class=\"comment\">//使x轴横坐标全部显示</span></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">          &#125;,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">          <span class=\"attr\">data</span>: [],</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">        &#125;,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">        <span class=\"attr\">yAxis</span>: &#123; </span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">          <span class=\"attr\">show</span>: <span class=\"variable language_\">this</span>.<span class=\"property\">showXYxis</span>,<span class=\"comment\">//显示纵坐标与否</span></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">          <span class=\"attr\">type</span>: <span class=\"variable language_\">this</span>.<span class=\"property\">value</span>,<span class=\"comment\">//横着显示还是竖着显示</span></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">          <span class=\"attr\">data</span>: <span class=\"variable language_\">this</span>.<span class=\"property\">yAxisData</span>,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">        &#125;,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">        <span class=\"attr\">grid</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">          <span class=\"attr\">left</span>: <span class=\"variable language_\">this</span>.<span class=\"property\">gridLeft</span>,<span class=\"comment\">//左侧的文字占用的宽度</span></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">        &#125;,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">        <span class=\"attr\">series</span>: [],</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      &#125;;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      <span class=\"keyword\">if</span> (type == <span class=\"number\">0</span>) &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">        <span class=\"variable language_\">this</span>.$set(<span class=\"variable language_\">this</span>.<span class=\"property\">option</span>.<span class=\"property\">xAxis</span>, <span class=\"string\">&quot;data&quot;</span>, <span class=\"variable language_\">this</span>.<span class=\"property\">xAxisData</span>);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">        <span class=\"variable language_\">this</span>.$set(<span class=\"variable language_\">this</span>.<span class=\"property\">option</span>, <span class=\"string\">&quot;series&quot;</span>, n);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      &#125; <span class=\"keyword\">else</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">        <span class=\"variable language_\">this</span>.$set(<span class=\"variable language_\">this</span>.<span class=\"property\">option</span>.<span class=\"property\">xAxis</span>, <span class=\"string\">&quot;data&quot;</span>, n);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">        <span class=\"variable language_\">this</span>.$set(<span class=\"variable language_\">this</span>.<span class=\"property\">option</span>, <span class=\"string\">&quot;series&quot;</span>, <span class=\"variable language_\">this</span>.<span class=\"property\">seriesData</span>);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      &#125;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      <span class=\"variable language_\">this</span>.<span class=\"title function_\">drawLine</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">option</span>);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    <span class=\"title function_\">drawLine</span>(<span class=\"params\">option</span>) &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      <span class=\"comment\">// 基于准备好的dom，初始化echarts实例</span></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      <span class=\"keyword\">var</span> myChart = echarts.<span class=\"title function_\">init</span>(<span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">id</span>));</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      <span class=\"comment\">// 绘制图表</span></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      myChart.<span class=\"title function_\">setOption</span>(option, <span class=\"literal\">true</span>);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      myChart.<span class=\"title function_\">resize</span>();</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      myChart.<span class=\"title function_\">off</span>(<span class=\"string\">&quot;click&quot;</span>);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      <span class=\"keyword\">if</span> (<span class=\"variable language_\">this</span>.<span class=\"property\">isClick</span>) &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">        myChart.<span class=\"title function_\">on</span>(<span class=\"string\">&quot;click&quot;</span>, <span class=\"function\">(<span class=\"params\">params</span>) =&gt;</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">          <span class=\"variable language_\">this</span>.$emit(<span class=\"string\">&quot;getEchartData&quot;</span>, params);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">        &#125;);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      &#125;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">  &#125;,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">&#125;;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">scoped</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"页面中引入\"><a href=\"#页面中引入\" class=\"headerlink\" title=\"页面中引入\"></a>页面中引入</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div <span class=\"keyword\">class</span>=<span class=\"string\">&quot;flexCenter&quot;</span>&gt;</span><br><span class=\"line\">   <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">echart</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">     <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;EchartName == &#x27;firstEchart&#x27;&quot;</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">     @<span class=\"attr\">getEchartData</span>=<span class=\"string\">&quot;getEchartData&quot;</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">     <span class=\"attr\">class</span>=<span class=\"string\">&quot;left&quot;</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">     <span class=\"attr\">:id</span>=<span class=\"string\">&quot;leftid&quot;</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">     <span class=\"attr\">:width</span>=<span class=\"string\">&quot;width&quot;</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">     <span class=\"attr\">:height</span>=<span class=\"string\">&quot;height&quot;</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">     <span class=\"attr\">:title</span>=<span class=\"string\">&quot;lefttitle&quot;</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">     <span class=\"attr\">:type</span>=<span class=\"string\">&quot;lefttype&quot;</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">     <span class=\"attr\">:seriesData</span>=<span class=\"string\">&quot;seriesData&quot;</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">     <span class=\"attr\">:legendData</span>=<span class=\"string\">&quot;legendData&quot;</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">     <span class=\"attr\">:xAxisData</span>=<span class=\"string\">&quot;xAxisData&quot;</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">   &gt;</span><span class=\"tag\">&lt;/<span class=\"name\">echart</span>&gt;</span></span></span><br><span class=\"line\"> &lt;/div&gt;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">import echart from &quot;@/components/common/echarts.vue&quot;;</span><br><span class=\"line\"></span><br><span class=\"line\">export default &#123;</span><br><span class=\"line\">  components: &#123; echart &#125;,</span><br><span class=\"line\">  data() &#123;</span><br><span class=\"line\">    return &#123;</span><br><span class=\"line\">      name: &quot;recorder&quot;,</span><br><span class=\"line\">      seriesData: [],</span><br><span class=\"line\">      labelPositon: &quot;right&quot;,</span><br><span class=\"line\">      width: &quot;100%&quot;,</span><br><span class=\"line\">      height: &quot;400px&quot;,</span><br><span class=\"line\">      legendData: [</span><br><span class=\"line\">        &quot;意见总反馈量&quot;,</span><br><span class=\"line\">        &quot;页面报错&quot;,</span><br><span class=\"line\">        &quot;投诉商家&quot;,</span><br><span class=\"line\">        &quot;卡券领取使用问题&quot;,</span><br><span class=\"line\">        &quot;未找到想要的商家&quot;,</span><br><span class=\"line\">        &quot;其他&quot;,</span><br><span class=\"line\">      ],</span><br><span class=\"line\">      xAxisData: [], //根据请求拿到的横坐标（时间）</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  created() &#123;&#125;,</span><br><span class=\"line\">  computed: &#123;&#125;,</span><br><span class=\"line\">  methods: &#123;</span><br><span class=\"line\">    getData() &#123;</span><br><span class=\"line\">    this.xAxisData.push(this.allxAxisData[i].x)</span><br><span class=\"line\">    this.seriesData = [</span><br><span class=\"line\">              &#123;</span><br><span class=\"line\">                label: &#123;</span><br><span class=\"line\">                  normal: &#123;</span><br><span class=\"line\">                    show: true, //显示数字</span><br><span class=\"line\">                    position: &quot;right&quot;, //这里可以自己选择位置</span><br><span class=\"line\">                    textStyle: &#123;</span><br><span class=\"line\">                      color: &quot;black&quot;, //顶部颜色</span><br><span class=\"line\">                    &#125;,</span><br><span class=\"line\">                  &#125;,</span><br><span class=\"line\">                &#125;,</span><br><span class=\"line\">                name: &quot;意见总反馈量&quot;,</span><br><span class=\"line\">                overAnimation: false,</span><br><span class=\"line\">                type: &quot;line&quot;, //折线还是柱状图</span><br><span class=\"line\">                data: allObject.yDataTem,</span><br><span class=\"line\">              &#125;,</span><br><span class=\"line\">              &#123;</span><br><span class=\"line\">                label: &#123;</span><br><span class=\"line\">                  normal: &#123;</span><br><span class=\"line\">                    show: true, //显示数字</span><br><span class=\"line\">                    position: &quot;right&quot;, //这里可以自己选择位置</span><br><span class=\"line\">                    textStyle: &#123;</span><br><span class=\"line\">                      color: &quot;black&quot;, //顶部颜色</span><br><span class=\"line\">                    &#125;,</span><br><span class=\"line\">                  &#125;,</span><br><span class=\"line\">                &#125;,</span><br><span class=\"line\">                name: &quot;页面报错&quot;,</span><br><span class=\"line\">                overAnimation: false,</span><br><span class=\"line\">                type: &quot;line&quot;, //折线还是柱状图</span><br><span class=\"line\">                data: allObject.pageErroDataTem,</span><br><span class=\"line\">              &#125;,</span><br><span class=\"line\">              &#123;</span><br><span class=\"line\">                label: &#123;</span><br><span class=\"line\">                  normal: &#123;</span><br><span class=\"line\">                    show: true, //显示数字</span><br><span class=\"line\">                    position: &quot;right&quot;, //这里可以自己选择位置</span><br><span class=\"line\">                    textStyle: &#123;</span><br><span class=\"line\">                      color: &quot;black&quot;, //顶部颜色</span><br><span class=\"line\">                    &#125;,</span><br><span class=\"line\">                  &#125;,</span><br><span class=\"line\">                &#125;,</span><br><span class=\"line\">                name: &quot;投诉商家&quot;,</span><br><span class=\"line\">                overAnimation: false,</span><br><span class=\"line\">                type: &quot;line&quot;, //折线还是柱状图</span><br><span class=\"line\">                data: allObject.complaintBusinessDataTem,</span><br><span class=\"line\">              &#125;,</span><br><span class=\"line\">              &#123;</span><br><span class=\"line\">                label: &#123;</span><br><span class=\"line\">                  normal: &#123;</span><br><span class=\"line\">                    show: true, //显示数字</span><br><span class=\"line\">                    position: &quot;right&quot;, //这里可以自己选择位置</span><br><span class=\"line\">                    textStyle: &#123;</span><br><span class=\"line\">                      color: &quot;black&quot;, //顶部颜色</span><br><span class=\"line\">                    &#125;,</span><br><span class=\"line\">                  &#125;,</span><br><span class=\"line\">                &#125;,</span><br><span class=\"line\">                name: &quot;卡券领取使用问题&quot;,</span><br><span class=\"line\">                overAnimation: false,</span><br><span class=\"line\">                type: &quot;line&quot;, //折线还是柱状图</span><br><span class=\"line\">                data: allObject.couponProblemDataTem,</span><br><span class=\"line\">              &#125;,</span><br><span class=\"line\">              &#123;</span><br><span class=\"line\">                label: &#123;</span><br><span class=\"line\">                  normal: &#123;</span><br><span class=\"line\">                    show: true, //显示数字</span><br><span class=\"line\">                    position: &quot;right&quot;, //这里可以自己选择位置</span><br><span class=\"line\">                    textStyle: &#123;</span><br><span class=\"line\">                      color: &quot;black&quot;, //顶部颜色</span><br><span class=\"line\">                    &#125;,</span><br><span class=\"line\">                  &#125;,</span><br><span class=\"line\">                &#125;,</span><br><span class=\"line\">                name: &quot;未找到想要的商家&quot;,</span><br><span class=\"line\">                overAnimation: false,</span><br><span class=\"line\">                type: &quot;line&quot;, //折线还是柱状图</span><br><span class=\"line\">                data: allObject.noBusinessFoundDataTem,</span><br><span class=\"line\">              &#125;,</span><br><span class=\"line\">              &#123;</span><br><span class=\"line\">                label: &#123;</span><br><span class=\"line\">                  normal: &#123;</span><br><span class=\"line\">                    show: true, //显示数字</span><br><span class=\"line\">                    position: &quot;right&quot;, //这里可以自己选择位置</span><br><span class=\"line\">                    textStyle: &#123;</span><br><span class=\"line\">                      color: &quot;black&quot;, //顶部颜色</span><br><span class=\"line\">                    &#125;,</span><br><span class=\"line\">                  &#125;,</span><br><span class=\"line\">                &#125;,</span><br><span class=\"line\">                name: &quot;其他&quot;,</span><br><span class=\"line\">                overAnimation: false,</span><br><span class=\"line\">                type: &quot;line&quot;, //折线还是柱状图</span><br><span class=\"line\">                data: allObject.otherDataTem,</span><br><span class=\"line\">              &#125;,</span><br><span class=\"line\">            ];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n\n<p>this.seriesData：包含具体的显示配置option，主要核心是y周的坐标，allObject.yDataTem包含了对应每个折线的y轴坐标，这个是后端给的。</p>\n<p>this.xAxisData：横坐标，后端提供。</p>\n<p>返回数据的格式类似如下，通过push进不同的数组进行渲染。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[&#123;<span class=\"attr\">complaintBusiness</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\"><span class=\"attr\">couponProblem</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\"><span class=\"attr\">noBusinessFound</span>: <span class=\"number\">2</span>,</span><br><span class=\"line\"><span class=\"attr\">other</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\"><span class=\"attr\">pageErro</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\"><span class=\"attr\">x</span>: <span class=\"string\">&quot;2020-08-03-2020-08-09&quot;</span>,</span><br><span class=\"line\"><span class=\"attr\">y</span>: <span class=\"number\">4</span>&#125;,&#123;<span class=\"attr\">complaintBusiness</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\"><span class=\"attr\">couponProblem</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\"><span class=\"attr\">noBusinessFound</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\"><span class=\"attr\">other</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\"><span class=\"attr\">pageErro</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\"><span class=\"attr\">x</span>: <span class=\"string\">&quot;2020-08-10-2020-08-16&quot;</span>,</span><br><span class=\"line\"><span class=\"attr\">y</span>: <span class=\"number\">1</span>,&#125;]</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"核心\"><a href=\"#核心\" class=\"headerlink\" title=\"核心\"></a>核心</h3><ol>\n<li><p>需要监听数据的改变，从而触发echart视图的重新渲染，触发this.drawLine(this.option)</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">drawLine</span>(<span class=\"params\">option</span>) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 基于准备好的dom，初始化echarts实例</span></span><br><span class=\"line\">      <span class=\"keyword\">var</span> myChart = echarts.<span class=\"title function_\">init</span>(<span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">id</span>));</span><br><span class=\"line\">      <span class=\"comment\">// 绘制图表</span></span><br><span class=\"line\">      myChart.<span class=\"title function_\">setOption</span>(option, <span class=\"literal\">true</span>);</span><br><span class=\"line\">      myChart.<span class=\"title function_\">resize</span>();</span><br><span class=\"line\">      myChart.<span class=\"title function_\">off</span>(<span class=\"string\">&quot;click&quot;</span>);</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (<span class=\"variable language_\">this</span>.<span class=\"property\">isClick</span>) &#123;</span><br><span class=\"line\">        myChart.<span class=\"title function_\">on</span>(<span class=\"string\">&quot;click&quot;</span>, <span class=\"function\">(<span class=\"params\">params</span>) =&gt;</span> &#123;</span><br><span class=\"line\">          <span class=\"variable language_\">this</span>.$emit(<span class=\"string\">&quot;getEchartData&quot;</span>, params);</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;,</span><br></pre></td></tr></table></figure></li>\n<li><p>触发点击事件，传递对应的图表数据出去</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">myChart.<span class=\"title function_\">on</span>(<span class=\"string\">&quot;click&quot;</span>, <span class=\"function\">(<span class=\"params\">params</span>) =&gt;</span> &#123;</span><br><span class=\"line\">   <span class=\"variable language_\">this</span>.$emit(<span class=\"string\">&quot;getEchartData&quot;</span>, params);</span><br><span class=\"line\"> &#125;);</span><br></pre></td></tr></table></figure></li>\n</ol>\n","site":{"data":{}},"excerpt":"<meta name=\"referrer\" content=\"no-referrer\"/>\n\n<h2 id=\"Echart使用记录\"><a href=\"#Echart使用记录\" class=\"headerlink\" title=\"Echart使用记录\"></a>Echart使用记录</h2><p>Apache ECharts (incubating)TM 是一个正在 <a href=\"https://www.apache.org/\">Apache Software Foundation</a> (ASF) 孵化中的项目。</p>","more":"<h3 id=\"需求\"><a href=\"#需求\" class=\"headerlink\" title=\"需求\"></a>需求</h3><p>实现多折线图，柱状图，饼状图等等，需要可以点击图上的点来请求对应当前具体数据。并且可以通过不同的单位进行渲染。</p>\n<h3 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install echarts --save</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"公共页面\"><a href=\"#公共页面\" class=\"headerlink\" title=\"公共页面\"></a>公共页面</h3><p>新建一个公共页面echart.vue，方便后续调用</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;padding:10px&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">:id</span>=<span class=\"string\">&quot;id&quot;</span> <span class=\"attr\">:style</span>=<span class=\"string\">&quot;&#123;width: width, height: height&#125;&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"><span class=\"comment\">// 引入基本模板</span></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"><span class=\"keyword\">let</span> echarts = <span class=\"built_in\">require</span>(<span class=\"string\">&quot;echarts/lib/echarts&quot;</span>);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"><span class=\"comment\">// 引入柱状图组件</span></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"><span class=\"built_in\">require</span>(<span class=\"string\">&quot;echarts/lib/chart/bar&quot;</span>);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"><span class=\"built_in\">require</span>(<span class=\"string\">&quot;echarts/lib/chart/line&quot;</span>);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"><span class=\"built_in\">require</span>(<span class=\"string\">&quot;echarts/lib/chart/pie&quot;</span>);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"><span class=\"comment\">// 引入提示框和title组件</span></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"><span class=\"built_in\">require</span>(<span class=\"string\">&quot;echarts/lib/component/tooltip&quot;</span>);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"><span class=\"built_in\">require</span>(<span class=\"string\">&quot;echarts/lib/component/title&quot;</span>);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"><span class=\"built_in\">require</span>(<span class=\"string\">&quot;echarts/lib/component/legend&quot;</span>);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"><span class=\"comment\">// require(&quot;echarts/config&quot;)</span></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">  <span class=\"attr\">name</span>: <span class=\"string\">&quot;echart&quot;</span>,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">  <span class=\"title function_\">mounted</span>(<span class=\"params\"></span>) &#123;&#125;,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">  <span class=\"title function_\">data</span>(<span class=\"params\"></span>) &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    <span class=\"keyword\">return</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      <span class=\"attr\">option</span>: &#123;&#125;,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      <span class=\"attr\">createdIt</span>: <span class=\"literal\">false</span>,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    &#125;;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">  &#125;,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">  <span class=\"attr\">watch</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    <span class=\"comment\">//监听两个对象（1.横坐标的数据，2.纵坐标的数据）触发更新</span></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    <span class=\"attr\">seriesData</span>: <span class=\"keyword\">function</span> (<span class=\"params\">n, o</span>) &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      <span class=\"keyword\">if</span> (n.<span class=\"property\">length</span> &gt; <span class=\"number\">0</span>) &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">        <span class=\"variable language_\">this</span>.<span class=\"property\">seriesData</span> = n;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">        <span class=\"variable language_\">this</span>.<span class=\"title function_\">refresh</span>(n, <span class=\"number\">0</span>);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      &#125;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    <span class=\"attr\">xAxisData</span>: <span class=\"keyword\">function</span> (<span class=\"params\">n, o</span>) &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      <span class=\"keyword\">if</span> (n.<span class=\"property\">length</span> &gt; <span class=\"number\">0</span>) &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">        <span class=\"variable language_\">this</span>.<span class=\"property\">xAxisData</span> = n;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">        <span class=\"variable language_\">this</span>.<span class=\"title function_\">refresh</span>(n, <span class=\"number\">1</span>);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      &#125;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">  &#125;,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">  <span class=\"attr\">props</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    <span class=\"attr\">interval</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      <span class=\"attr\">type</span>: <span class=\"title class_\">Number</span>,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      <span class=\"attr\">default</span>: <span class=\"literal\">null</span>,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    <span class=\"attr\">gridLeft</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      <span class=\"attr\">type</span>: <span class=\"title class_\">Number</span>,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      <span class=\"attr\">default</span>: <span class=\"number\">60</span>,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    <span class=\"attr\">showXYxis</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      <span class=\"attr\">type</span>: <span class=\"title class_\">Boolean</span>,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      <span class=\"attr\">default</span>: <span class=\"literal\">true</span>,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    <span class=\"attr\">labelPositon</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      <span class=\"attr\">type</span>: <span class=\"title class_\">String</span>,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      <span class=\"attr\">default</span>: <span class=\"string\">&quot;top&quot;</span>,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    <span class=\"attr\">name</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      <span class=\"attr\">type</span>: <span class=\"title class_\">String</span>,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      <span class=\"attr\">default</span>: <span class=\"literal\">null</span>,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    <span class=\"attr\">id</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      <span class=\"attr\">type</span>: <span class=\"title class_\">String</span>,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      <span class=\"attr\">default</span>: <span class=\"literal\">null</span>,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    <span class=\"attr\">width</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      <span class=\"attr\">type</span>: <span class=\"title class_\">String</span>,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      <span class=\"attr\">default</span>: <span class=\"literal\">null</span>,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    <span class=\"attr\">height</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      <span class=\"attr\">type</span>: <span class=\"title class_\">String</span>,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      <span class=\"attr\">default</span>: <span class=\"literal\">null</span>,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    <span class=\"attr\">title</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      <span class=\"attr\">type</span>: <span class=\"title class_\">String</span>,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      <span class=\"attr\">default</span>: <span class=\"literal\">null</span>,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    <span class=\"attr\">xAxis</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      <span class=\"attr\">type</span>: <span class=\"title class_\">String</span>,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      <span class=\"attr\">default</span>: <span class=\"literal\">null</span>,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    <span class=\"attr\">series</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      <span class=\"attr\">type</span>: <span class=\"title class_\">String</span>,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      <span class=\"attr\">default</span>: <span class=\"literal\">null</span>,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    <span class=\"attr\">yAxis</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      <span class=\"attr\">type</span>: <span class=\"title class_\">String</span>,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      <span class=\"attr\">default</span>: <span class=\"literal\">null</span>,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    <span class=\"attr\">tooltip</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      <span class=\"attr\">type</span>: <span class=\"title class_\">String</span>,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      <span class=\"attr\">default</span>: <span class=\"literal\">null</span>,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    <span class=\"attr\">type</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      <span class=\"attr\">type</span>: <span class=\"title class_\">String</span>,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      <span class=\"attr\">default</span>: <span class=\"literal\">null</span>,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    <span class=\"attr\">value</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      <span class=\"attr\">type</span>: <span class=\"title class_\">String</span>,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      <span class=\"attr\">default</span>: <span class=\"string\">&quot;value&quot;</span>,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    <span class=\"attr\">category</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      <span class=\"attr\">type</span>: <span class=\"title class_\">String</span>,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      <span class=\"attr\">default</span>: <span class=\"string\">&quot;category&quot;</span>,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    <span class=\"attr\">isClick</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      <span class=\"attr\">type</span>: <span class=\"title class_\">Boolean</span>,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      <span class=\"attr\">default</span>: <span class=\"literal\">true</span>,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    <span class=\"attr\">seriesData</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      <span class=\"attr\">type</span>: <span class=\"title class_\">Array</span>,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      <span class=\"attr\">default</span>: <span class=\"function\">() =&gt;</span> [],</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    <span class=\"attr\">legendData</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      <span class=\"attr\">type</span>: <span class=\"title class_\">Array</span>,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      <span class=\"attr\">default</span>: <span class=\"function\">() =&gt;</span> [],</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    <span class=\"attr\">xAxisData</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      <span class=\"attr\">type</span>: <span class=\"title class_\">Array</span>,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      <span class=\"attr\">default</span>: <span class=\"function\">() =&gt;</span> [],</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    <span class=\"attr\">yAxisData</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      <span class=\"attr\">type</span>: <span class=\"title class_\">Array</span>,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      <span class=\"attr\">default</span>: <span class=\"function\">() =&gt;</span> [],</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">  &#125;,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">  <span class=\"title function_\">created</span>(<span class=\"params\"></span>) &#123;&#125;,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">  <span class=\"attr\">methods</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    <span class=\"title function_\">refresh</span>(<span class=\"params\">n, type</span>) &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      <span class=\"variable language_\">this</span>.<span class=\"property\">option</span> = &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">        <span class=\"attr\">dataZoom</span>: [</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">          &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">            <span class=\"attr\">show</span>: <span class=\"literal\">true</span>,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">            <span class=\"attr\">realtime</span>: <span class=\"literal\">true</span>,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">            <span class=\"attr\">start</span>: <span class=\"number\">0</span>,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">            <span class=\"attr\">end</span>: <span class=\"number\">50</span>,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">          &#125;,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">          &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">            <span class=\"attr\">type</span>: <span class=\"string\">&quot;inside&quot;</span>,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">            <span class=\"attr\">realtime</span>: <span class=\"literal\">true</span>,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">            <span class=\"attr\">start</span>: <span class=\"number\">0</span>,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">            <span class=\"attr\">end</span>: <span class=\"number\">50</span>,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">          &#125;,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">        ],</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">        <span class=\"attr\">legend</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">          <span class=\"attr\">data</span>: <span class=\"variable language_\">this</span>.<span class=\"property\">legendData</span>,<span class=\"comment\">//底部不同折线的文字说明</span></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">          <span class=\"attr\">bottom</span>: <span class=\"number\">0</span>,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">          <span class=\"attr\">left</span>: <span class=\"string\">&quot;center&quot;</span>,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">          <span class=\"attr\">textStyle</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">            <span class=\"attr\">color</span>: <span class=\"string\">&quot;black&quot;</span>,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">          &#125;,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">        &#125;,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">        <span class=\"attr\">title</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">          <span class=\"attr\">text</span>: <span class=\"variable language_\">this</span>.<span class=\"property\">title</span>, <span class=\"comment\">//左上角title</span></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">          <span class=\"attr\">left</span>: <span class=\"string\">&quot;center&quot;</span>,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">        &#125;,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">        <span class=\"attr\">tooltip</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">          <span class=\"attr\">trigger</span>: <span class=\"string\">&quot;axis&quot;</span>,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">        &#125;,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">        <span class=\"attr\">xAxis</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">          <span class=\"attr\">show</span>: <span class=\"variable language_\">this</span>.<span class=\"property\">showXYxis</span>,<span class=\"comment\">//显示横坐标与否</span></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">          <span class=\"attr\">type</span>: <span class=\"variable language_\">this</span>.<span class=\"property\">category</span>,<span class=\"comment\">//横着显示还是竖着显示</span></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">          <span class=\"attr\">axisLabel</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">            <span class=\"attr\">interval</span>: <span class=\"variable language_\">this</span>.<span class=\"property\">interval</span>, <span class=\"comment\">//使x轴横坐标全部显示</span></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">          &#125;,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">          <span class=\"attr\">data</span>: [],</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">        &#125;,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">        <span class=\"attr\">yAxis</span>: &#123; </span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">          <span class=\"attr\">show</span>: <span class=\"variable language_\">this</span>.<span class=\"property\">showXYxis</span>,<span class=\"comment\">//显示纵坐标与否</span></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">          <span class=\"attr\">type</span>: <span class=\"variable language_\">this</span>.<span class=\"property\">value</span>,<span class=\"comment\">//横着显示还是竖着显示</span></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">          <span class=\"attr\">data</span>: <span class=\"variable language_\">this</span>.<span class=\"property\">yAxisData</span>,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">        &#125;,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">        <span class=\"attr\">grid</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">          <span class=\"attr\">left</span>: <span class=\"variable language_\">this</span>.<span class=\"property\">gridLeft</span>,<span class=\"comment\">//左侧的文字占用的宽度</span></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">        &#125;,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">        <span class=\"attr\">series</span>: [],</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      &#125;;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      <span class=\"keyword\">if</span> (type == <span class=\"number\">0</span>) &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">        <span class=\"variable language_\">this</span>.$set(<span class=\"variable language_\">this</span>.<span class=\"property\">option</span>.<span class=\"property\">xAxis</span>, <span class=\"string\">&quot;data&quot;</span>, <span class=\"variable language_\">this</span>.<span class=\"property\">xAxisData</span>);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">        <span class=\"variable language_\">this</span>.$set(<span class=\"variable language_\">this</span>.<span class=\"property\">option</span>, <span class=\"string\">&quot;series&quot;</span>, n);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      &#125; <span class=\"keyword\">else</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">        <span class=\"variable language_\">this</span>.$set(<span class=\"variable language_\">this</span>.<span class=\"property\">option</span>.<span class=\"property\">xAxis</span>, <span class=\"string\">&quot;data&quot;</span>, n);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">        <span class=\"variable language_\">this</span>.$set(<span class=\"variable language_\">this</span>.<span class=\"property\">option</span>, <span class=\"string\">&quot;series&quot;</span>, <span class=\"variable language_\">this</span>.<span class=\"property\">seriesData</span>);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      &#125;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      <span class=\"variable language_\">this</span>.<span class=\"title function_\">drawLine</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">option</span>);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    <span class=\"title function_\">drawLine</span>(<span class=\"params\">option</span>) &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      <span class=\"comment\">// 基于准备好的dom，初始化echarts实例</span></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      <span class=\"keyword\">var</span> myChart = echarts.<span class=\"title function_\">init</span>(<span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">id</span>));</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      <span class=\"comment\">// 绘制图表</span></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      myChart.<span class=\"title function_\">setOption</span>(option, <span class=\"literal\">true</span>);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      myChart.<span class=\"title function_\">resize</span>();</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      myChart.<span class=\"title function_\">off</span>(<span class=\"string\">&quot;click&quot;</span>);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      <span class=\"keyword\">if</span> (<span class=\"variable language_\">this</span>.<span class=\"property\">isClick</span>) &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">        myChart.<span class=\"title function_\">on</span>(<span class=\"string\">&quot;click&quot;</span>, <span class=\"function\">(<span class=\"params\">params</span>) =&gt;</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">          <span class=\"variable language_\">this</span>.$emit(<span class=\"string\">&quot;getEchartData&quot;</span>, params);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">        &#125;);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      &#125;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">  &#125;,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">&#125;;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">scoped</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"页面中引入\"><a href=\"#页面中引入\" class=\"headerlink\" title=\"页面中引入\"></a>页面中引入</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div <span class=\"keyword\">class</span>=<span class=\"string\">&quot;flexCenter&quot;</span>&gt;</span><br><span class=\"line\">   <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">echart</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">     <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;EchartName == &#x27;firstEchart&#x27;&quot;</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">     @<span class=\"attr\">getEchartData</span>=<span class=\"string\">&quot;getEchartData&quot;</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">     <span class=\"attr\">class</span>=<span class=\"string\">&quot;left&quot;</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">     <span class=\"attr\">:id</span>=<span class=\"string\">&quot;leftid&quot;</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">     <span class=\"attr\">:width</span>=<span class=\"string\">&quot;width&quot;</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">     <span class=\"attr\">:height</span>=<span class=\"string\">&quot;height&quot;</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">     <span class=\"attr\">:title</span>=<span class=\"string\">&quot;lefttitle&quot;</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">     <span class=\"attr\">:type</span>=<span class=\"string\">&quot;lefttype&quot;</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">     <span class=\"attr\">:seriesData</span>=<span class=\"string\">&quot;seriesData&quot;</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">     <span class=\"attr\">:legendData</span>=<span class=\"string\">&quot;legendData&quot;</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">     <span class=\"attr\">:xAxisData</span>=<span class=\"string\">&quot;xAxisData&quot;</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">   &gt;</span><span class=\"tag\">&lt;/<span class=\"name\">echart</span>&gt;</span></span></span><br><span class=\"line\"> &lt;/div&gt;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">import echart from &quot;@/components/common/echarts.vue&quot;;</span><br><span class=\"line\"></span><br><span class=\"line\">export default &#123;</span><br><span class=\"line\">  components: &#123; echart &#125;,</span><br><span class=\"line\">  data() &#123;</span><br><span class=\"line\">    return &#123;</span><br><span class=\"line\">      name: &quot;recorder&quot;,</span><br><span class=\"line\">      seriesData: [],</span><br><span class=\"line\">      labelPositon: &quot;right&quot;,</span><br><span class=\"line\">      width: &quot;100%&quot;,</span><br><span class=\"line\">      height: &quot;400px&quot;,</span><br><span class=\"line\">      legendData: [</span><br><span class=\"line\">        &quot;意见总反馈量&quot;,</span><br><span class=\"line\">        &quot;页面报错&quot;,</span><br><span class=\"line\">        &quot;投诉商家&quot;,</span><br><span class=\"line\">        &quot;卡券领取使用问题&quot;,</span><br><span class=\"line\">        &quot;未找到想要的商家&quot;,</span><br><span class=\"line\">        &quot;其他&quot;,</span><br><span class=\"line\">      ],</span><br><span class=\"line\">      xAxisData: [], //根据请求拿到的横坐标（时间）</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  created() &#123;&#125;,</span><br><span class=\"line\">  computed: &#123;&#125;,</span><br><span class=\"line\">  methods: &#123;</span><br><span class=\"line\">    getData() &#123;</span><br><span class=\"line\">    this.xAxisData.push(this.allxAxisData[i].x)</span><br><span class=\"line\">    this.seriesData = [</span><br><span class=\"line\">              &#123;</span><br><span class=\"line\">                label: &#123;</span><br><span class=\"line\">                  normal: &#123;</span><br><span class=\"line\">                    show: true, //显示数字</span><br><span class=\"line\">                    position: &quot;right&quot;, //这里可以自己选择位置</span><br><span class=\"line\">                    textStyle: &#123;</span><br><span class=\"line\">                      color: &quot;black&quot;, //顶部颜色</span><br><span class=\"line\">                    &#125;,</span><br><span class=\"line\">                  &#125;,</span><br><span class=\"line\">                &#125;,</span><br><span class=\"line\">                name: &quot;意见总反馈量&quot;,</span><br><span class=\"line\">                overAnimation: false,</span><br><span class=\"line\">                type: &quot;line&quot;, //折线还是柱状图</span><br><span class=\"line\">                data: allObject.yDataTem,</span><br><span class=\"line\">              &#125;,</span><br><span class=\"line\">              &#123;</span><br><span class=\"line\">                label: &#123;</span><br><span class=\"line\">                  normal: &#123;</span><br><span class=\"line\">                    show: true, //显示数字</span><br><span class=\"line\">                    position: &quot;right&quot;, //这里可以自己选择位置</span><br><span class=\"line\">                    textStyle: &#123;</span><br><span class=\"line\">                      color: &quot;black&quot;, //顶部颜色</span><br><span class=\"line\">                    &#125;,</span><br><span class=\"line\">                  &#125;,</span><br><span class=\"line\">                &#125;,</span><br><span class=\"line\">                name: &quot;页面报错&quot;,</span><br><span class=\"line\">                overAnimation: false,</span><br><span class=\"line\">                type: &quot;line&quot;, //折线还是柱状图</span><br><span class=\"line\">                data: allObject.pageErroDataTem,</span><br><span class=\"line\">              &#125;,</span><br><span class=\"line\">              &#123;</span><br><span class=\"line\">                label: &#123;</span><br><span class=\"line\">                  normal: &#123;</span><br><span class=\"line\">                    show: true, //显示数字</span><br><span class=\"line\">                    position: &quot;right&quot;, //这里可以自己选择位置</span><br><span class=\"line\">                    textStyle: &#123;</span><br><span class=\"line\">                      color: &quot;black&quot;, //顶部颜色</span><br><span class=\"line\">                    &#125;,</span><br><span class=\"line\">                  &#125;,</span><br><span class=\"line\">                &#125;,</span><br><span class=\"line\">                name: &quot;投诉商家&quot;,</span><br><span class=\"line\">                overAnimation: false,</span><br><span class=\"line\">                type: &quot;line&quot;, //折线还是柱状图</span><br><span class=\"line\">                data: allObject.complaintBusinessDataTem,</span><br><span class=\"line\">              &#125;,</span><br><span class=\"line\">              &#123;</span><br><span class=\"line\">                label: &#123;</span><br><span class=\"line\">                  normal: &#123;</span><br><span class=\"line\">                    show: true, //显示数字</span><br><span class=\"line\">                    position: &quot;right&quot;, //这里可以自己选择位置</span><br><span class=\"line\">                    textStyle: &#123;</span><br><span class=\"line\">                      color: &quot;black&quot;, //顶部颜色</span><br><span class=\"line\">                    &#125;,</span><br><span class=\"line\">                  &#125;,</span><br><span class=\"line\">                &#125;,</span><br><span class=\"line\">                name: &quot;卡券领取使用问题&quot;,</span><br><span class=\"line\">                overAnimation: false,</span><br><span class=\"line\">                type: &quot;line&quot;, //折线还是柱状图</span><br><span class=\"line\">                data: allObject.couponProblemDataTem,</span><br><span class=\"line\">              &#125;,</span><br><span class=\"line\">              &#123;</span><br><span class=\"line\">                label: &#123;</span><br><span class=\"line\">                  normal: &#123;</span><br><span class=\"line\">                    show: true, //显示数字</span><br><span class=\"line\">                    position: &quot;right&quot;, //这里可以自己选择位置</span><br><span class=\"line\">                    textStyle: &#123;</span><br><span class=\"line\">                      color: &quot;black&quot;, //顶部颜色</span><br><span class=\"line\">                    &#125;,</span><br><span class=\"line\">                  &#125;,</span><br><span class=\"line\">                &#125;,</span><br><span class=\"line\">                name: &quot;未找到想要的商家&quot;,</span><br><span class=\"line\">                overAnimation: false,</span><br><span class=\"line\">                type: &quot;line&quot;, //折线还是柱状图</span><br><span class=\"line\">                data: allObject.noBusinessFoundDataTem,</span><br><span class=\"line\">              &#125;,</span><br><span class=\"line\">              &#123;</span><br><span class=\"line\">                label: &#123;</span><br><span class=\"line\">                  normal: &#123;</span><br><span class=\"line\">                    show: true, //显示数字</span><br><span class=\"line\">                    position: &quot;right&quot;, //这里可以自己选择位置</span><br><span class=\"line\">                    textStyle: &#123;</span><br><span class=\"line\">                      color: &quot;black&quot;, //顶部颜色</span><br><span class=\"line\">                    &#125;,</span><br><span class=\"line\">                  &#125;,</span><br><span class=\"line\">                &#125;,</span><br><span class=\"line\">                name: &quot;其他&quot;,</span><br><span class=\"line\">                overAnimation: false,</span><br><span class=\"line\">                type: &quot;line&quot;, //折线还是柱状图</span><br><span class=\"line\">                data: allObject.otherDataTem,</span><br><span class=\"line\">              &#125;,</span><br><span class=\"line\">            ];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n\n<p>this.seriesData：包含具体的显示配置option，主要核心是y周的坐标，allObject.yDataTem包含了对应每个折线的y轴坐标，这个是后端给的。</p>\n<p>this.xAxisData：横坐标，后端提供。</p>\n<p>返回数据的格式类似如下，通过push进不同的数组进行渲染。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[&#123;<span class=\"attr\">complaintBusiness</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\"><span class=\"attr\">couponProblem</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\"><span class=\"attr\">noBusinessFound</span>: <span class=\"number\">2</span>,</span><br><span class=\"line\"><span class=\"attr\">other</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\"><span class=\"attr\">pageErro</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\"><span class=\"attr\">x</span>: <span class=\"string\">&quot;2020-08-03-2020-08-09&quot;</span>,</span><br><span class=\"line\"><span class=\"attr\">y</span>: <span class=\"number\">4</span>&#125;,&#123;<span class=\"attr\">complaintBusiness</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\"><span class=\"attr\">couponProblem</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\"><span class=\"attr\">noBusinessFound</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\"><span class=\"attr\">other</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\"><span class=\"attr\">pageErro</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\"><span class=\"attr\">x</span>: <span class=\"string\">&quot;2020-08-10-2020-08-16&quot;</span>,</span><br><span class=\"line\"><span class=\"attr\">y</span>: <span class=\"number\">1</span>,&#125;]</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"核心\"><a href=\"#核心\" class=\"headerlink\" title=\"核心\"></a>核心</h3><ol>\n<li><p>需要监听数据的改变，从而触发echart视图的重新渲染，触发this.drawLine(this.option)</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">drawLine</span>(<span class=\"params\">option</span>) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 基于准备好的dom，初始化echarts实例</span></span><br><span class=\"line\">      <span class=\"keyword\">var</span> myChart = echarts.<span class=\"title function_\">init</span>(<span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">id</span>));</span><br><span class=\"line\">      <span class=\"comment\">// 绘制图表</span></span><br><span class=\"line\">      myChart.<span class=\"title function_\">setOption</span>(option, <span class=\"literal\">true</span>);</span><br><span class=\"line\">      myChart.<span class=\"title function_\">resize</span>();</span><br><span class=\"line\">      myChart.<span class=\"title function_\">off</span>(<span class=\"string\">&quot;click&quot;</span>);</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (<span class=\"variable language_\">this</span>.<span class=\"property\">isClick</span>) &#123;</span><br><span class=\"line\">        myChart.<span class=\"title function_\">on</span>(<span class=\"string\">&quot;click&quot;</span>, <span class=\"function\">(<span class=\"params\">params</span>) =&gt;</span> &#123;</span><br><span class=\"line\">          <span class=\"variable language_\">this</span>.$emit(<span class=\"string\">&quot;getEchartData&quot;</span>, params);</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;,</span><br></pre></td></tr></table></figure></li>\n<li><p>触发点击事件，传递对应的图表数据出去</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">myChart.<span class=\"title function_\">on</span>(<span class=\"string\">&quot;click&quot;</span>, <span class=\"function\">(<span class=\"params\">params</span>) =&gt;</span> &#123;</span><br><span class=\"line\">   <span class=\"variable language_\">this</span>.$emit(<span class=\"string\">&quot;getEchartData&quot;</span>, params);</span><br><span class=\"line\"> &#125;);</span><br></pre></td></tr></table></figure></li>\n</ol>"},{"title":"ElementUI的使用","date":"2020-01-02T09:16:26.000Z","_content":"\n<meta name=\"referrer\" content=\"no-referrer\"/>\n\n## ElementUI的使用记录\n\n### ElementUI的入门-组件的使用\n\n记录常用的组件，如Form，Tabs，Table等使用，还有一些常用的使用情况也会记录\n\n<!-- more -->\n\n## elementUI的下拉框返回对象\n\n### 一般下拉框返回都是一个值，比如id，value之类的，某些情况下，需要返回对象{id：25，name：lee}之类，则需要额外参数value-key\n\n```js\ndata(){\n　　return{\n　　　　test:'',\n　　　　arr:[{id:1,name:'张三'},{id:2,name:'李四'},{id:3,name:'王五'}]\n　　}\n\n}\n\n<el-select v-model=\"test\" value-key=\"id\">\n　　<el-option v-for=\"item in arr\" :label=\"item.name\" :key=\"item.id\" :value=\"item\"></el-option>\n</el-select>\n```\n\n## elementUI的级联器懒加载三级联动\n\n### 典型的级联器\n\n代码：\n\n```html\n             <div class=\"block\">\n                <el-cascader\n                  v-model=\"editMallInfo.addressCode\"\n                  :props=\"props\"\n                  :options=\"options\"\n                  @change=\"handleChange\"\n                  :placeholder=\"addressCodePlaceholder\"\n                ></el-cascader>\n              </div>\n```\n\n\n\n```js\ndata() {\n    return {\n       props: {\n        lazy: true,\n        lazyLoad(node, resolve) {\n          let nodes = [];\n          const { level, root, value } = node;\n          if (node.level == 1) {\n            api.citysByProvinceCode({ provinceCode: node.value }).then(res => {\n              const nodes = Array.from(res.data).map(item => {\n                return {\n                  value: item.areaCode,\n                  label: item.areaName,\n                  leaf: level >= 2\n                };\n              });\n              // 通过调用resolve将子节点数据返回，通知组件数据加载完成\n              resolve(nodes);\n            }, 1000);\n          } else if (node.level == 2) {\n            api.districtByCityCode({ cityCode: node.value }).then(res => {\n              const nodes = Array.from(res.data).map(item => {\n                return {\n                  value: item.areaCode,\n                  label: item.areaName,\n                  leaf: level >= 2\n                };\n              });\n              resolve(nodes);\n            }, 1000);\n          }\n        }\n      },\n      options: []\n    }\n}\n```\n\n```js\n    getCityAndProvice() {\n      api\n        .allProvince()\n        .then(res => {\n          for (let i = 0; i < res.data.length; i++) {\n            res.data[i].label = res.data[i].areaName;\n            res.data[i].value = res.data[i].areaCode;\n            this.options.push(res.data[i]);\n          }\n        })\n        .catch();\n    },\n```\n\n通过控制prop中的leaf: level >= 2，来判断是否需要加载下一级。\n\n## 关于el-form的清除表单数据的坑\n\n代码：\n\n```html\n        this.$nextTick(() => {\n          this.$refs[\"SecondLevelform\"].resetFields();\n        });\n```\n\n清空表单有时候会在页面报错，因为找不到对应的dom，所以需要再dom下一次更新后，再清除。\n\n## Form的使用\n\n### 典型的表单\n\n```html\n        <el-form\n          :inline=\"true\"\n          ref=\"searchForm\"\n          :model=\"searchForm\"\n          :rules=\"rules\"\n          @keyup.enter.native=\"loadTableData\"\n        >\n          <el-form-item label=\"日期筛选\">\n            <el-date-picker\n              v-model=\"dateRange\"\n              type=\"daterange\"\n              range-separator=\"至\"\n              clearable\n              unlink-panels\n              start-placeholder=\"开始日期\"\n              end-placeholder=\"结束日期\"\n              value-format=\"yyyy-MM-dd\"\n            ></el-date-picker>\n          </el-form-item>\n          <el-form-item label=\"商品ID\" prop=\"goodsId\">\n            <el-input v-model=\"searchForm.goodsId\" clearable placeholder=\"请输入\"></el-input>\n          </el-form-item>\n          <el-form-item label=\"sku编号\" prop=\"specsId\">\n            <el-input v-model=\"searchForm.specsId\" clearable placeholder=\"请输入\"></el-input>\n          </el-form-item>\n          <el-form-item label=\"商品类型\" prop=\"goodsTypeId\">\n            <el-select v-model=\"searchForm.goodsTypeId\" clearable placeholder=\"请输入\" class=\"m_r_10\">\n              <el-option label=\"电子券商品\" value=\"0\"></el-option>\n              <el-option label=\"虚拟商品\" value=\"2\"></el-option>\n              <el-option label=\"实物商品\" value=\"1\"></el-option>\n            </el-select>\n          </el-form-item>\n          <el-form-item label=\"订单号\" prop=\"orderId\">\n            <el-input clearable v-model=\"searchForm.orderId\" placeholder=\"请输入\">\n              <i slot=\"prefix\" class=\"el-input__icon el-icon-search\"></i>\n            </el-input>\n          </el-form-item>\n          <el-form-item>\n            <el-button @click=\"handleClickResetSearch\">重置</el-button>\n            <el-button type=\"primary\" @click=\"handleClickSarch\">查询</el-button>\n          </el-form-item>\n        </el-form>\n<script>\n  export default {\n  data() {\n    return {\n      dateRange: \"\",\n      searchForm: {\n        orderId: null,\n        brandId: null,\n        goodsTypeId: null,\n        specsId: null,\n        goodsId: null\n      },\n      rules: {\n        goodsId: [\n            { required: true, message: '请输入商品ID', trigger: 'blur' },\n            { min: 3, max: 5, message: '长度在 3 到 5 个字符', trigger: 'blur' }\n          ],\n        specsId: [{ required: true, validator: this.validateNumber, trigger: \"change\" }]\n      },\n      activeName: \"first\"\n    };\n  },\n    methods: {\n      onSubmit() {\n        console.log('submit!');\n      }\n    }\n  }\n</script>\n```\n\n### 基本构成\n\n> 外层：<el-from>\n>\n> 内部：<el-form-item>\n\n### Form上的关键值\n\n1. ref：用在获取这个form的元素后做一些操作，比如resetFields（清空）\n\n   > this.$refs[\"searchForm\"].resetFields();\n\n2. :model:\"表单数据对象\"，这个实际上是表单内的各种选项的数据集合，比如你的item内选择了name，region等等。主要是为了rules去验证其内容。\n\n3. :rules:校验规则，\n\n   1. 提供普通校验规则：\n\n              goodsId: [\n                  { required: true, message: '请输入商品ID', trigger: 'blur' },\n                  { min: 3, max: 5, message: '长度在 3 到 5 个字符', trigger: 'blur' }\n                ],\n\n   2. 提供自定义校验规则：\n\n      ```js\n         data() {\n             return {\n                 rules: {\n              goodsId: [\n                  { required: true, message: '请输入商品ID', trigger: 'blur' },\n                  { min: 3, max: 5, message: '长度在 3 到 5 个字符', trigger: 'blur' }\n                ],\n               }\n             }\n         }\n      ```\n\n      ```js\n      methods: {\n              validateNumber(event,data,callback){\n            if(data > 2){\n              callback(new Error(\"数字大于2\"))\n            }else{\n              callback(new Error(\"数字小于等于2\"))\n            }\n          }\n      }\n      ```\n\n      \n\n4. inline:表单域变为行内的表单域，就是将表单内的item变为一行显示，通过inline-block的形式。\n\n### Form上的方法\n\n1. validate：对整个表单进行检验,valid为true则校验成功\n\n   ```js\n   this.$refs[\"searchForm\"].validate(valid => {\n       conso.log(valid)\n   })\n   ```\n\n   \n\n1. validateField:对表单的一部分进行校验\n\n   一般使用场景为：比如填写了密码后，需要填写二次密码，那么填写二次密码之后，可以直接通过validateField校验第一次的密码\n\n   ```js\n   this.$refs[\"searchForm\"].validateField('goodsId');\n   ```\n\n   \n\n2. resetFields:清空。\n\n3. clearValidate：移除表单项的校验结果。\n\n### Form-item上的常用关键值\n\n1. prop：表单域 model 字段，类似于item的名字，可以用来区分不同的item\n2. label：显示文本\n3. required:该item是否是必须填写的\n\n### Form-item上的方法\n\n1. resetField:同上\n2. clearValidata:同上\n\n## Tabs的使用\n\n### 典型使用\n\n```js\n<template>\n  <el-tabs v-model=\"activeName\" @tab-click=\"handleClick\">\n    <el-tab-pane label=\"用户管理\" name=\"first\">用户管理</el-tab-pane>\n    <el-tab-pane label=\"配置管理\" name=\"second\">配置管理</el-tab-pane>\n    <el-tab-pane label=\"角色管理\" name=\"third\">角色管理</el-tab-pane>\n    <el-tab-pane label=\"定时任务补偿\" name=\"fourth\">定时任务补偿</el-tab-pane>\n  </el-tabs>\n</template>\n<script>\n  export default {\n    data() {\n      return {\n        activeName: 'second'\n      };\n    },\n    methods: {\n      handleClick(tab, event) {\n        console.log(tab, event);\n      }\n    }\n  };\n</script>\n```\n\n### 典型结构\n\n```htm\n  <el-tabs v-model=\"activeName\" @tab-click=\"handleClick\">\n  <el-tab-pane label=\"用户管理\" name=\"first\">用户管理</el-tab-pane>\n  </el-tabs>\n```\n\n\n\n### Tabs上的关键值\n\n1. value / v-model：选中选项卡的 name\n\n2. type\n\n3. closable\n\n4. addable\n\n5. tab-position\n\n6. stretch\n\n## table的使用\n\n### 典型使用\n\n```html\n  <el-table\n    :data=\"tableData\"\n    border\n    style=\"width: 100%\">\n    <el-table-column\n      prop=\"date\"\n      label=\"日期\"\n      width=\"180\">\n    </el-table-column>\n    <el-table-column\n      prop=\"name\"\n      label=\"姓名\"\n      width=\"180\">\n    </el-table-column>\n    <el-table-column\n      prop=\"address\"\n      label=\"地址\">\n    </el-table-column>\n  </el-table>\n```\n\n### 特征值 \n\n1. border\n2. fit\n\n## Slot !important\n\n### 典型使用\n\n```html\n <template slot-scope=\"scope\">\n          <div v-for=\"item in scope.row.goodsInfo\"> \n            <span v-if=\"item.goodsTypeId === 0\">电子券</span>\n            <span v-if=\"item.goodsTypeId === 1\">实物商品</span>\n            <span v-if=\"item.goodsTypeId === 2\">虚拟商品</span>\n          </div>\n  </template>\n```\n\n### 使用场景\n\n1. 广泛的适用于各类form，tables中，其用法实现根据父级对象传值来显示不同的子集元素内容\n2. template中使用  slot-scope， 模板内部通过 scope.row 去调用父级对象传过来的值\n\n\n\n## 动态循环el-table\n\n### 需求\n\ntable的第一行渲染，要根据接口的返回值，来动态的生成，并且要匹配到对应的位置。\n\n![image-20200813144655982](C:\\Users\\李蒙\\AppData\\Roaming\\Typora\\typora-user-images\\image-20200813144655982.png)\n\n### 实现\n\n需要两个接口返回数据：\n\n1.需要返回第一行的数据\n\n2.返回table中的具体数据\n\n返回格式如下：\n\n``` js\n[{name: \"中餐\", id: 9}, {name: \"西餐\", id: 11}, {name: \"小吃快餐\", id: 263}, {name: \"火锅\", id: 264},…]\n```\n\n```js\n[{11: 1, 263: 1, 264: 3, 471: 3, 472: 1, orderBySign: 1597161600000, x: \"2020-08-12\"},…]\n```\n\n对象的name用来渲染到table上，id则使用来匹配具体的数据。id对应的value即是table数据的key\n\nel-table的渲染如下：\n\n```html\n            <el-table\n              v-loading=\"tableLoading\"\n              :data=\"finaListSigle\"\n              border\n              class=\"table\"\n              ref=\"multipleTable\"\n            >\n              <el-table-column label=\"日期\">\n                <template slot-scope=\"scope\">\n                  <div>{{scope.row.x}}</div>\n                </template>\n              </el-table-column>\n              <el-table-column\n                v-for=\"(info,index) in twoTableTitle\"\n                :key=\"index\"\n                :property=\"info.id\"\n                :label=\"info.name\"\n              >\n                <template slot-scope=\"scope\">\n                  <div>{{scope.row[scope.column.property]}}</div>\n                </template>\n              </el-table-column>\n            </el-table>\n```\n\n\n\n### 核心\n\n主要实现的逻辑是，如何将对应的key放到slot的插槽中去。具体代码如下：\n\n```html\n :property=\"info.id\"\n<div>{{scope.row[scope.column.property]}}</div>\n```\n\n## 日期选择器的限制\n\n### elementUI提供了日期选择器并提供了对应的限制选择方法\n\n```js\n一个下拉框，可以选择每月的天数   \n<div>\n      <el-select\n        placeholder=\"每月开始时间（1-28）\"\n        v-model=\"submitInfo.matchStartDay\"\n        @change=\"pickDate\"\n      >\n        <el-option\n          v-for=\"item in matchStartDayArr\"\n          :label=\"item.label\"\n          :key=\"item.value\"\n          :value=\"item.value\"\n        ></el-option>\n      </el-select>\n    </div>\n一个日期选择框，可以选择月份范围\n<div class=\"block\">\n    <span class=\"demonstration\">默认</span>\n    <el-date-picker\n      v-model=\"value1\"\n      type=\"monthrange\"\n      :picker-options=\"pickerOptions\"\n      range-separator=\"至\"\n      start-placeholder=\"开始月份\"\n      end-placeholder=\"结束月份\">\n    </el-date-picker>\n  </div>\n```\n\n现在需要让日期选择和月份范围选择联动起来，即：选择日期如果超过今天的日期，则当月不能选择，如果未超过今天的日期，则当月范围可以选择\n\n```js\n:picker-options=\"pickerOptions\"\nlet currentDate = ''\ndata(){\n  return{\n    pickerOptions: {\n        disabledDate(time) {\n          return time.getTime() < currentDate\n        },\n      },\n  }\n}\n\n\n```\n\n核心在于这个函数：\n\n>         disabledDate(time) {\n>           return time.getTime() < currentDate\n>         },\n\n当 time.getTime() < currentDate 为真，则当前的time会被渲染成不可选择，如果为假，则会被渲染成可以选择\n\ncurrentDate的判断生成如下：\n\n```js\n pickDate() {\n      this.value1 = []\n      let nowTime = Date.now()\n      let nowTimeString = commonTools.timestampToString(\n        JSON.parse(JSON.stringify(nowTime))\n      )\n      let yearTem = nowTimeString.split('-')[0]\n      let mouthTem = nowTimeString.split('-')[1]\n      console.log(nowTimeString.split('-'), '1111')\n      let dayTem =\n        this.submitInfo.matchStartDay +\n        nowTimeString\n          .split('-')[2]\n          .substr(2, nowTimeString.split('-')[2]['length'])\n      let selectTime = commonTools.stringToTimestamp(\n        yearTem + '-' + mouthTem + '-' + dayTem\n      )\n      if (nowTime - selectTime > 0) {\n        if (mouthTem + 1 > 12) {\n          yearTem = parseInt(yearTem) + 1\n          mouthTem = '01'\n        } else {\n          let mt1 = parseInt(mouthTem) + 1\n          mouthTem = mt1 > 9 ? mt1 : '0' + mt1\n        }\n        currentDate = commonTools.stringToTimestamp(\n          yearTem + '-' + mouthTem + '-01 00:00:00'\n        )\n      } else {\n        currentDate = commonTools.stringToTimestamp(\n          yearTem + '-' + mouthTem + '-01 00:00:00'\n        )\n      }\n    },\n```\n\nTips: 1. commonTools.timestampToString、commonTools.stringToTimestamp这些函数都是做一个转换，将时间戳转化成对应字符串或者将字符串转化成时间戳\n\n```js\n stringToTimestamp: function stringMake(string) {\n    //   字符串转化为时间戳\n    // let date = '2015-03-05 17:59:00.0';\n    let date = string.substring(0, 19)\n    date = date.replace(/-/g, '/')\n    let timestamp = new Date(date).getTime()\n    return timestamp\n  },\n  timestampToString: function timestampMake(timestamp) {\n    // 将时间戳转化为xxxx-xx-xx xx:xx:xx\n    let d = new Date(timestamp * 1) //根据时间戳生成的时间对象\n    let date =\n      d.getFullYear() +\n      '-' +\n      (d.getMonth() + 1) +\n      '-' +\n      d.getDate() +\n      ' ' +\n      d.getHours() +\n      ':' +\n      d.getMinutes() +\n      ':' +\n      d.getSeconds()\n    return date\n  },\n```\n\n","source":"_posts/ElementUI的使用.md","raw":"---\ntitle: ElementUI的使用\ndate: 2020-01-02 17:16:26\ntags: [ElementUI,form，tabs,table]\n---\n\n<meta name=\"referrer\" content=\"no-referrer\"/>\n\n## ElementUI的使用记录\n\n### ElementUI的入门-组件的使用\n\n记录常用的组件，如Form，Tabs，Table等使用，还有一些常用的使用情况也会记录\n\n<!-- more -->\n\n## elementUI的下拉框返回对象\n\n### 一般下拉框返回都是一个值，比如id，value之类的，某些情况下，需要返回对象{id：25，name：lee}之类，则需要额外参数value-key\n\n```js\ndata(){\n　　return{\n　　　　test:'',\n　　　　arr:[{id:1,name:'张三'},{id:2,name:'李四'},{id:3,name:'王五'}]\n　　}\n\n}\n\n<el-select v-model=\"test\" value-key=\"id\">\n　　<el-option v-for=\"item in arr\" :label=\"item.name\" :key=\"item.id\" :value=\"item\"></el-option>\n</el-select>\n```\n\n## elementUI的级联器懒加载三级联动\n\n### 典型的级联器\n\n代码：\n\n```html\n             <div class=\"block\">\n                <el-cascader\n                  v-model=\"editMallInfo.addressCode\"\n                  :props=\"props\"\n                  :options=\"options\"\n                  @change=\"handleChange\"\n                  :placeholder=\"addressCodePlaceholder\"\n                ></el-cascader>\n              </div>\n```\n\n\n\n```js\ndata() {\n    return {\n       props: {\n        lazy: true,\n        lazyLoad(node, resolve) {\n          let nodes = [];\n          const { level, root, value } = node;\n          if (node.level == 1) {\n            api.citysByProvinceCode({ provinceCode: node.value }).then(res => {\n              const nodes = Array.from(res.data).map(item => {\n                return {\n                  value: item.areaCode,\n                  label: item.areaName,\n                  leaf: level >= 2\n                };\n              });\n              // 通过调用resolve将子节点数据返回，通知组件数据加载完成\n              resolve(nodes);\n            }, 1000);\n          } else if (node.level == 2) {\n            api.districtByCityCode({ cityCode: node.value }).then(res => {\n              const nodes = Array.from(res.data).map(item => {\n                return {\n                  value: item.areaCode,\n                  label: item.areaName,\n                  leaf: level >= 2\n                };\n              });\n              resolve(nodes);\n            }, 1000);\n          }\n        }\n      },\n      options: []\n    }\n}\n```\n\n```js\n    getCityAndProvice() {\n      api\n        .allProvince()\n        .then(res => {\n          for (let i = 0; i < res.data.length; i++) {\n            res.data[i].label = res.data[i].areaName;\n            res.data[i].value = res.data[i].areaCode;\n            this.options.push(res.data[i]);\n          }\n        })\n        .catch();\n    },\n```\n\n通过控制prop中的leaf: level >= 2，来判断是否需要加载下一级。\n\n## 关于el-form的清除表单数据的坑\n\n代码：\n\n```html\n        this.$nextTick(() => {\n          this.$refs[\"SecondLevelform\"].resetFields();\n        });\n```\n\n清空表单有时候会在页面报错，因为找不到对应的dom，所以需要再dom下一次更新后，再清除。\n\n## Form的使用\n\n### 典型的表单\n\n```html\n        <el-form\n          :inline=\"true\"\n          ref=\"searchForm\"\n          :model=\"searchForm\"\n          :rules=\"rules\"\n          @keyup.enter.native=\"loadTableData\"\n        >\n          <el-form-item label=\"日期筛选\">\n            <el-date-picker\n              v-model=\"dateRange\"\n              type=\"daterange\"\n              range-separator=\"至\"\n              clearable\n              unlink-panels\n              start-placeholder=\"开始日期\"\n              end-placeholder=\"结束日期\"\n              value-format=\"yyyy-MM-dd\"\n            ></el-date-picker>\n          </el-form-item>\n          <el-form-item label=\"商品ID\" prop=\"goodsId\">\n            <el-input v-model=\"searchForm.goodsId\" clearable placeholder=\"请输入\"></el-input>\n          </el-form-item>\n          <el-form-item label=\"sku编号\" prop=\"specsId\">\n            <el-input v-model=\"searchForm.specsId\" clearable placeholder=\"请输入\"></el-input>\n          </el-form-item>\n          <el-form-item label=\"商品类型\" prop=\"goodsTypeId\">\n            <el-select v-model=\"searchForm.goodsTypeId\" clearable placeholder=\"请输入\" class=\"m_r_10\">\n              <el-option label=\"电子券商品\" value=\"0\"></el-option>\n              <el-option label=\"虚拟商品\" value=\"2\"></el-option>\n              <el-option label=\"实物商品\" value=\"1\"></el-option>\n            </el-select>\n          </el-form-item>\n          <el-form-item label=\"订单号\" prop=\"orderId\">\n            <el-input clearable v-model=\"searchForm.orderId\" placeholder=\"请输入\">\n              <i slot=\"prefix\" class=\"el-input__icon el-icon-search\"></i>\n            </el-input>\n          </el-form-item>\n          <el-form-item>\n            <el-button @click=\"handleClickResetSearch\">重置</el-button>\n            <el-button type=\"primary\" @click=\"handleClickSarch\">查询</el-button>\n          </el-form-item>\n        </el-form>\n<script>\n  export default {\n  data() {\n    return {\n      dateRange: \"\",\n      searchForm: {\n        orderId: null,\n        brandId: null,\n        goodsTypeId: null,\n        specsId: null,\n        goodsId: null\n      },\n      rules: {\n        goodsId: [\n            { required: true, message: '请输入商品ID', trigger: 'blur' },\n            { min: 3, max: 5, message: '长度在 3 到 5 个字符', trigger: 'blur' }\n          ],\n        specsId: [{ required: true, validator: this.validateNumber, trigger: \"change\" }]\n      },\n      activeName: \"first\"\n    };\n  },\n    methods: {\n      onSubmit() {\n        console.log('submit!');\n      }\n    }\n  }\n</script>\n```\n\n### 基本构成\n\n> 外层：<el-from>\n>\n> 内部：<el-form-item>\n\n### Form上的关键值\n\n1. ref：用在获取这个form的元素后做一些操作，比如resetFields（清空）\n\n   > this.$refs[\"searchForm\"].resetFields();\n\n2. :model:\"表单数据对象\"，这个实际上是表单内的各种选项的数据集合，比如你的item内选择了name，region等等。主要是为了rules去验证其内容。\n\n3. :rules:校验规则，\n\n   1. 提供普通校验规则：\n\n              goodsId: [\n                  { required: true, message: '请输入商品ID', trigger: 'blur' },\n                  { min: 3, max: 5, message: '长度在 3 到 5 个字符', trigger: 'blur' }\n                ],\n\n   2. 提供自定义校验规则：\n\n      ```js\n         data() {\n             return {\n                 rules: {\n              goodsId: [\n                  { required: true, message: '请输入商品ID', trigger: 'blur' },\n                  { min: 3, max: 5, message: '长度在 3 到 5 个字符', trigger: 'blur' }\n                ],\n               }\n             }\n         }\n      ```\n\n      ```js\n      methods: {\n              validateNumber(event,data,callback){\n            if(data > 2){\n              callback(new Error(\"数字大于2\"))\n            }else{\n              callback(new Error(\"数字小于等于2\"))\n            }\n          }\n      }\n      ```\n\n      \n\n4. inline:表单域变为行内的表单域，就是将表单内的item变为一行显示，通过inline-block的形式。\n\n### Form上的方法\n\n1. validate：对整个表单进行检验,valid为true则校验成功\n\n   ```js\n   this.$refs[\"searchForm\"].validate(valid => {\n       conso.log(valid)\n   })\n   ```\n\n   \n\n1. validateField:对表单的一部分进行校验\n\n   一般使用场景为：比如填写了密码后，需要填写二次密码，那么填写二次密码之后，可以直接通过validateField校验第一次的密码\n\n   ```js\n   this.$refs[\"searchForm\"].validateField('goodsId');\n   ```\n\n   \n\n2. resetFields:清空。\n\n3. clearValidate：移除表单项的校验结果。\n\n### Form-item上的常用关键值\n\n1. prop：表单域 model 字段，类似于item的名字，可以用来区分不同的item\n2. label：显示文本\n3. required:该item是否是必须填写的\n\n### Form-item上的方法\n\n1. resetField:同上\n2. clearValidata:同上\n\n## Tabs的使用\n\n### 典型使用\n\n```js\n<template>\n  <el-tabs v-model=\"activeName\" @tab-click=\"handleClick\">\n    <el-tab-pane label=\"用户管理\" name=\"first\">用户管理</el-tab-pane>\n    <el-tab-pane label=\"配置管理\" name=\"second\">配置管理</el-tab-pane>\n    <el-tab-pane label=\"角色管理\" name=\"third\">角色管理</el-tab-pane>\n    <el-tab-pane label=\"定时任务补偿\" name=\"fourth\">定时任务补偿</el-tab-pane>\n  </el-tabs>\n</template>\n<script>\n  export default {\n    data() {\n      return {\n        activeName: 'second'\n      };\n    },\n    methods: {\n      handleClick(tab, event) {\n        console.log(tab, event);\n      }\n    }\n  };\n</script>\n```\n\n### 典型结构\n\n```htm\n  <el-tabs v-model=\"activeName\" @tab-click=\"handleClick\">\n  <el-tab-pane label=\"用户管理\" name=\"first\">用户管理</el-tab-pane>\n  </el-tabs>\n```\n\n\n\n### Tabs上的关键值\n\n1. value / v-model：选中选项卡的 name\n\n2. type\n\n3. closable\n\n4. addable\n\n5. tab-position\n\n6. stretch\n\n## table的使用\n\n### 典型使用\n\n```html\n  <el-table\n    :data=\"tableData\"\n    border\n    style=\"width: 100%\">\n    <el-table-column\n      prop=\"date\"\n      label=\"日期\"\n      width=\"180\">\n    </el-table-column>\n    <el-table-column\n      prop=\"name\"\n      label=\"姓名\"\n      width=\"180\">\n    </el-table-column>\n    <el-table-column\n      prop=\"address\"\n      label=\"地址\">\n    </el-table-column>\n  </el-table>\n```\n\n### 特征值 \n\n1. border\n2. fit\n\n## Slot !important\n\n### 典型使用\n\n```html\n <template slot-scope=\"scope\">\n          <div v-for=\"item in scope.row.goodsInfo\"> \n            <span v-if=\"item.goodsTypeId === 0\">电子券</span>\n            <span v-if=\"item.goodsTypeId === 1\">实物商品</span>\n            <span v-if=\"item.goodsTypeId === 2\">虚拟商品</span>\n          </div>\n  </template>\n```\n\n### 使用场景\n\n1. 广泛的适用于各类form，tables中，其用法实现根据父级对象传值来显示不同的子集元素内容\n2. template中使用  slot-scope， 模板内部通过 scope.row 去调用父级对象传过来的值\n\n\n\n## 动态循环el-table\n\n### 需求\n\ntable的第一行渲染，要根据接口的返回值，来动态的生成，并且要匹配到对应的位置。\n\n![image-20200813144655982](C:\\Users\\李蒙\\AppData\\Roaming\\Typora\\typora-user-images\\image-20200813144655982.png)\n\n### 实现\n\n需要两个接口返回数据：\n\n1.需要返回第一行的数据\n\n2.返回table中的具体数据\n\n返回格式如下：\n\n``` js\n[{name: \"中餐\", id: 9}, {name: \"西餐\", id: 11}, {name: \"小吃快餐\", id: 263}, {name: \"火锅\", id: 264},…]\n```\n\n```js\n[{11: 1, 263: 1, 264: 3, 471: 3, 472: 1, orderBySign: 1597161600000, x: \"2020-08-12\"},…]\n```\n\n对象的name用来渲染到table上，id则使用来匹配具体的数据。id对应的value即是table数据的key\n\nel-table的渲染如下：\n\n```html\n            <el-table\n              v-loading=\"tableLoading\"\n              :data=\"finaListSigle\"\n              border\n              class=\"table\"\n              ref=\"multipleTable\"\n            >\n              <el-table-column label=\"日期\">\n                <template slot-scope=\"scope\">\n                  <div>{{scope.row.x}}</div>\n                </template>\n              </el-table-column>\n              <el-table-column\n                v-for=\"(info,index) in twoTableTitle\"\n                :key=\"index\"\n                :property=\"info.id\"\n                :label=\"info.name\"\n              >\n                <template slot-scope=\"scope\">\n                  <div>{{scope.row[scope.column.property]}}</div>\n                </template>\n              </el-table-column>\n            </el-table>\n```\n\n\n\n### 核心\n\n主要实现的逻辑是，如何将对应的key放到slot的插槽中去。具体代码如下：\n\n```html\n :property=\"info.id\"\n<div>{{scope.row[scope.column.property]}}</div>\n```\n\n## 日期选择器的限制\n\n### elementUI提供了日期选择器并提供了对应的限制选择方法\n\n```js\n一个下拉框，可以选择每月的天数   \n<div>\n      <el-select\n        placeholder=\"每月开始时间（1-28）\"\n        v-model=\"submitInfo.matchStartDay\"\n        @change=\"pickDate\"\n      >\n        <el-option\n          v-for=\"item in matchStartDayArr\"\n          :label=\"item.label\"\n          :key=\"item.value\"\n          :value=\"item.value\"\n        ></el-option>\n      </el-select>\n    </div>\n一个日期选择框，可以选择月份范围\n<div class=\"block\">\n    <span class=\"demonstration\">默认</span>\n    <el-date-picker\n      v-model=\"value1\"\n      type=\"monthrange\"\n      :picker-options=\"pickerOptions\"\n      range-separator=\"至\"\n      start-placeholder=\"开始月份\"\n      end-placeholder=\"结束月份\">\n    </el-date-picker>\n  </div>\n```\n\n现在需要让日期选择和月份范围选择联动起来，即：选择日期如果超过今天的日期，则当月不能选择，如果未超过今天的日期，则当月范围可以选择\n\n```js\n:picker-options=\"pickerOptions\"\nlet currentDate = ''\ndata(){\n  return{\n    pickerOptions: {\n        disabledDate(time) {\n          return time.getTime() < currentDate\n        },\n      },\n  }\n}\n\n\n```\n\n核心在于这个函数：\n\n>         disabledDate(time) {\n>           return time.getTime() < currentDate\n>         },\n\n当 time.getTime() < currentDate 为真，则当前的time会被渲染成不可选择，如果为假，则会被渲染成可以选择\n\ncurrentDate的判断生成如下：\n\n```js\n pickDate() {\n      this.value1 = []\n      let nowTime = Date.now()\n      let nowTimeString = commonTools.timestampToString(\n        JSON.parse(JSON.stringify(nowTime))\n      )\n      let yearTem = nowTimeString.split('-')[0]\n      let mouthTem = nowTimeString.split('-')[1]\n      console.log(nowTimeString.split('-'), '1111')\n      let dayTem =\n        this.submitInfo.matchStartDay +\n        nowTimeString\n          .split('-')[2]\n          .substr(2, nowTimeString.split('-')[2]['length'])\n      let selectTime = commonTools.stringToTimestamp(\n        yearTem + '-' + mouthTem + '-' + dayTem\n      )\n      if (nowTime - selectTime > 0) {\n        if (mouthTem + 1 > 12) {\n          yearTem = parseInt(yearTem) + 1\n          mouthTem = '01'\n        } else {\n          let mt1 = parseInt(mouthTem) + 1\n          mouthTem = mt1 > 9 ? mt1 : '0' + mt1\n        }\n        currentDate = commonTools.stringToTimestamp(\n          yearTem + '-' + mouthTem + '-01 00:00:00'\n        )\n      } else {\n        currentDate = commonTools.stringToTimestamp(\n          yearTem + '-' + mouthTem + '-01 00:00:00'\n        )\n      }\n    },\n```\n\nTips: 1. commonTools.timestampToString、commonTools.stringToTimestamp这些函数都是做一个转换，将时间戳转化成对应字符串或者将字符串转化成时间戳\n\n```js\n stringToTimestamp: function stringMake(string) {\n    //   字符串转化为时间戳\n    // let date = '2015-03-05 17:59:00.0';\n    let date = string.substring(0, 19)\n    date = date.replace(/-/g, '/')\n    let timestamp = new Date(date).getTime()\n    return timestamp\n  },\n  timestampToString: function timestampMake(timestamp) {\n    // 将时间戳转化为xxxx-xx-xx xx:xx:xx\n    let d = new Date(timestamp * 1) //根据时间戳生成的时间对象\n    let date =\n      d.getFullYear() +\n      '-' +\n      (d.getMonth() + 1) +\n      '-' +\n      d.getDate() +\n      ' ' +\n      d.getHours() +\n      ':' +\n      d.getMinutes() +\n      ':' +\n      d.getSeconds()\n    return date\n  },\n```\n\n","slug":"ElementUI的使用","published":1,"updated":"2021-03-19T03:26:06.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl0uux6va00037sufdemeba8n","content":"<meta name=\"referrer\" content=\"no-referrer\"/>\n\n<h2 id=\"ElementUI的使用记录\"><a href=\"#ElementUI的使用记录\" class=\"headerlink\" title=\"ElementUI的使用记录\"></a>ElementUI的使用记录</h2><h3 id=\"ElementUI的入门-组件的使用\"><a href=\"#ElementUI的入门-组件的使用\" class=\"headerlink\" title=\"ElementUI的入门-组件的使用\"></a>ElementUI的入门-组件的使用</h3><p>记录常用的组件，如Form，Tabs，Table等使用，还有一些常用的使用情况也会记录</p>\n<span id=\"more\"></span>\n\n<h2 id=\"elementUI的下拉框返回对象\"><a href=\"#elementUI的下拉框返回对象\" class=\"headerlink\" title=\"elementUI的下拉框返回对象\"></a>elementUI的下拉框返回对象</h2><h3 id=\"一般下拉框返回都是一个值，比如id，value之类的，某些情况下，需要返回对象-id：25，name：lee-之类，则需要额外参数value-key\"><a href=\"#一般下拉框返回都是一个值，比如id，value之类的，某些情况下，需要返回对象-id：25，name：lee-之类，则需要额外参数value-key\" class=\"headerlink\" title=\"一般下拉框返回都是一个值，比如id，value之类的，某些情况下，需要返回对象{id：25，name：lee}之类，则需要额外参数value-key\"></a>一般下拉框返回都是一个值，比如id，value之类的，某些情况下，需要返回对象{id：25，name：lee}之类，则需要额外参数value-key</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">data</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">　　<span class=\"keyword\">return</span>&#123;</span><br><span class=\"line\">　　　　<span class=\"attr\">test</span>:<span class=\"string\">&#x27;&#x27;</span>,</span><br><span class=\"line\">　　　　<span class=\"attr\">arr</span>:[&#123;<span class=\"attr\">id</span>:<span class=\"number\">1</span>,<span class=\"attr\">name</span>:<span class=\"string\">&#x27;张三&#x27;</span>&#125;,&#123;<span class=\"attr\">id</span>:<span class=\"number\">2</span>,<span class=\"attr\">name</span>:<span class=\"string\">&#x27;李四&#x27;</span>&#125;,&#123;<span class=\"attr\">id</span>:<span class=\"number\">3</span>,<span class=\"attr\">name</span>:<span class=\"string\">&#x27;王五&#x27;</span>&#125;]</span><br><span class=\"line\">　　&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;el-select v-model=<span class=\"string\">&quot;test&quot;</span> value-key=<span class=\"string\">&quot;id&quot;</span>&gt;</span><br><span class=\"line\">　　<span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">el-option</span> <span class=\"attr\">v-for</span>=<span class=\"string\">&quot;item in arr&quot;</span> <span class=\"attr\">:label</span>=<span class=\"string\">&quot;item.name&quot;</span> <span class=\"attr\">:key</span>=<span class=\"string\">&quot;item.id&quot;</span> <span class=\"attr\">:value</span>=<span class=\"string\">&quot;item&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">el-option</span>&gt;</span></span></span><br><span class=\"line\">&lt;/el-select&gt;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"elementUI的级联器懒加载三级联动\"><a href=\"#elementUI的级联器懒加载三级联动\" class=\"headerlink\" title=\"elementUI的级联器懒加载三级联动\"></a>elementUI的级联器懒加载三级联动</h2><h3 id=\"典型的级联器\"><a href=\"#典型的级联器\" class=\"headerlink\" title=\"典型的级联器\"></a>典型的级联器</h3><p>代码：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;block&quot;</span>&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">el-cascader</span></span></span><br><span class=\"line\"><span class=\"tag\">     <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;editMallInfo.addressCode&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">     <span class=\"attr\">:props</span>=<span class=\"string\">&quot;props&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">     <span class=\"attr\">:options</span>=<span class=\"string\">&quot;options&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">     @<span class=\"attr\">change</span>=<span class=\"string\">&quot;handleChange&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">     <span class=\"attr\">:placeholder</span>=<span class=\"string\">&quot;addressCodePlaceholder&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">   &gt;</span><span class=\"tag\">&lt;/<span class=\"name\">el-cascader</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">data</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">       <span class=\"attr\">props</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">lazy</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">        <span class=\"title function_\">lazyLoad</span>(<span class=\"params\">node, resolve</span>) &#123;</span><br><span class=\"line\">          <span class=\"keyword\">let</span> nodes = [];</span><br><span class=\"line\">          <span class=\"keyword\">const</span> &#123; level, root, value &#125; = node;</span><br><span class=\"line\">          <span class=\"keyword\">if</span> (node.<span class=\"property\">level</span> == <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">            api.<span class=\"title function_\">citysByProvinceCode</span>(&#123; <span class=\"attr\">provinceCode</span>: node.<span class=\"property\">value</span> &#125;).<span class=\"title function_\">then</span>(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> &#123;</span><br><span class=\"line\">              <span class=\"keyword\">const</span> nodes = <span class=\"title class_\">Array</span>.<span class=\"title function_\">from</span>(res.<span class=\"property\">data</span>).<span class=\"title function_\">map</span>(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">                  <span class=\"attr\">value</span>: item.<span class=\"property\">areaCode</span>,</span><br><span class=\"line\">                  <span class=\"attr\">label</span>: item.<span class=\"property\">areaName</span>,</span><br><span class=\"line\">                  <span class=\"attr\">leaf</span>: level &gt;= <span class=\"number\">2</span></span><br><span class=\"line\">                &#125;;</span><br><span class=\"line\">              &#125;);</span><br><span class=\"line\">              <span class=\"comment\">// 通过调用resolve将子节点数据返回，通知组件数据加载完成</span></span><br><span class=\"line\">              <span class=\"title function_\">resolve</span>(nodes);</span><br><span class=\"line\">            &#125;, <span class=\"number\">1000</span>);</span><br><span class=\"line\">          &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (node.<span class=\"property\">level</span> == <span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">            api.<span class=\"title function_\">districtByCityCode</span>(&#123; <span class=\"attr\">cityCode</span>: node.<span class=\"property\">value</span> &#125;).<span class=\"title function_\">then</span>(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> &#123;</span><br><span class=\"line\">              <span class=\"keyword\">const</span> nodes = <span class=\"title class_\">Array</span>.<span class=\"title function_\">from</span>(res.<span class=\"property\">data</span>).<span class=\"title function_\">map</span>(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">                  <span class=\"attr\">value</span>: item.<span class=\"property\">areaCode</span>,</span><br><span class=\"line\">                  <span class=\"attr\">label</span>: item.<span class=\"property\">areaName</span>,</span><br><span class=\"line\">                  <span class=\"attr\">leaf</span>: level &gt;= <span class=\"number\">2</span></span><br><span class=\"line\">                &#125;;</span><br><span class=\"line\">              &#125;);</span><br><span class=\"line\">              <span class=\"title function_\">resolve</span>(nodes);</span><br><span class=\"line\">            &#125;, <span class=\"number\">1000</span>);</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      <span class=\"attr\">options</span>: []</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">getCityAndProvice</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  api</span><br><span class=\"line\">    .<span class=\"title function_\">allProvince</span>()</span><br><span class=\"line\">    .<span class=\"title function_\">then</span>(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; res.<span class=\"property\">data</span>.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">        res.<span class=\"property\">data</span>[i].<span class=\"property\">label</span> = res.<span class=\"property\">data</span>[i].<span class=\"property\">areaName</span>;</span><br><span class=\"line\">        res.<span class=\"property\">data</span>[i].<span class=\"property\">value</span> = res.<span class=\"property\">data</span>[i].<span class=\"property\">areaCode</span>;</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">options</span>.<span class=\"title function_\">push</span>(res.<span class=\"property\">data</span>[i]);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    .<span class=\"title function_\">catch</span>();</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n\n<p>通过控制prop中的leaf: level &gt;= 2，来判断是否需要加载下一级。</p>\n<h2 id=\"关于el-form的清除表单数据的坑\"><a href=\"#关于el-form的清除表单数据的坑\" class=\"headerlink\" title=\"关于el-form的清除表单数据的坑\"></a>关于el-form的清除表单数据的坑</h2><p>代码：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">this.$nextTick(() =&gt; &#123;</span><br><span class=\"line\">  this.$refs[&quot;SecondLevelform&quot;].resetFields();</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>清空表单有时候会在页面报错，因为找不到对应的dom，所以需要再dom下一次更新后，再清除。</p>\n<h2 id=\"Form的使用\"><a href=\"#Form的使用\" class=\"headerlink\" title=\"Form的使用\"></a>Form的使用</h2><h3 id=\"典型的表单\"><a href=\"#典型的表单\" class=\"headerlink\" title=\"典型的表单\"></a>典型的表单</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">el-form</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">:inline</span>=<span class=\"string\">&quot;true&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">ref</span>=<span class=\"string\">&quot;searchForm&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">:model</span>=<span class=\"string\">&quot;searchForm&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">:rules</span>=<span class=\"string\">&quot;rules&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">          @<span class=\"attr\">keyup.enter.native</span>=<span class=\"string\">&quot;loadTableData&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">        &gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">el-form-item</span> <span class=\"attr\">label</span>=<span class=\"string\">&quot;日期筛选&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">el-date-picker</span></span></span><br><span class=\"line\"><span class=\"tag\">              <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;dateRange&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">              <span class=\"attr\">type</span>=<span class=\"string\">&quot;daterange&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">              <span class=\"attr\">range-separator</span>=<span class=\"string\">&quot;至&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">              <span class=\"attr\">clearable</span></span></span><br><span class=\"line\"><span class=\"tag\">              <span class=\"attr\">unlink-panels</span></span></span><br><span class=\"line\"><span class=\"tag\">              <span class=\"attr\">start-placeholder</span>=<span class=\"string\">&quot;开始日期&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">              <span class=\"attr\">end-placeholder</span>=<span class=\"string\">&quot;结束日期&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">              <span class=\"attr\">value-format</span>=<span class=\"string\">&quot;yyyy-MM-dd&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">            &gt;</span><span class=\"tag\">&lt;/<span class=\"name\">el-date-picker</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">el-form-item</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">el-form-item</span> <span class=\"attr\">label</span>=<span class=\"string\">&quot;商品ID&quot;</span> <span class=\"attr\">prop</span>=<span class=\"string\">&quot;goodsId&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">el-input</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;searchForm.goodsId&quot;</span> <span class=\"attr\">clearable</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;请输入&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">el-input</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">el-form-item</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">el-form-item</span> <span class=\"attr\">label</span>=<span class=\"string\">&quot;sku编号&quot;</span> <span class=\"attr\">prop</span>=<span class=\"string\">&quot;specsId&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">el-input</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;searchForm.specsId&quot;</span> <span class=\"attr\">clearable</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;请输入&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">el-input</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">el-form-item</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">el-form-item</span> <span class=\"attr\">label</span>=<span class=\"string\">&quot;商品类型&quot;</span> <span class=\"attr\">prop</span>=<span class=\"string\">&quot;goodsTypeId&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">el-select</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;searchForm.goodsTypeId&quot;</span> <span class=\"attr\">clearable</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;请输入&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;m_r_10&quot;</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">el-option</span> <span class=\"attr\">label</span>=<span class=\"string\">&quot;电子券商品&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;0&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">el-option</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">el-option</span> <span class=\"attr\">label</span>=<span class=\"string\">&quot;虚拟商品&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;2&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">el-option</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">el-option</span> <span class=\"attr\">label</span>=<span class=\"string\">&quot;实物商品&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;1&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">el-option</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">el-select</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">el-form-item</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">el-form-item</span> <span class=\"attr\">label</span>=<span class=\"string\">&quot;订单号&quot;</span> <span class=\"attr\">prop</span>=<span class=\"string\">&quot;orderId&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">el-input</span> <span class=\"attr\">clearable</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;searchForm.orderId&quot;</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;请输入&quot;</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">slot</span>=<span class=\"string\">&quot;prefix&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;el-input__icon el-icon-search&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">el-input</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">el-form-item</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">el-form-item</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">el-button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;handleClickResetSearch&quot;</span>&gt;</span>重置<span class=\"tag\">&lt;/<span class=\"name\">el-button</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">el-button</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;primary&quot;</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;handleClickSarch&quot;</span>&gt;</span>查询<span class=\"tag\">&lt;/<span class=\"name\">el-button</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">el-form-item</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">el-form</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"title function_\">data</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">return</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"attr\">dateRange</span>: <span class=\"string\">&quot;&quot;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"attr\">searchForm</span>: &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"attr\">orderId</span>: <span class=\"literal\">null</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"attr\">brandId</span>: <span class=\"literal\">null</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"attr\">goodsTypeId</span>: <span class=\"literal\">null</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"attr\">specsId</span>: <span class=\"literal\">null</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"attr\">goodsId</span>: <span class=\"literal\">null</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">      &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"attr\">rules</span>: &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"attr\">goodsId</span>: [</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#123; <span class=\"attr\">required</span>: <span class=\"literal\">true</span>, <span class=\"attr\">message</span>: <span class=\"string\">&#x27;请输入商品ID&#x27;</span>, <span class=\"attr\">trigger</span>: <span class=\"string\">&#x27;blur&#x27;</span> &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#123; <span class=\"attr\">min</span>: <span class=\"number\">3</span>, <span class=\"attr\">max</span>: <span class=\"number\">5</span>, <span class=\"attr\">message</span>: <span class=\"string\">&#x27;长度在 3 到 5 个字符&#x27;</span>, <span class=\"attr\">trigger</span>: <span class=\"string\">&#x27;blur&#x27;</span> &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">          ],</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"attr\">specsId</span>: [&#123; <span class=\"attr\">required</span>: <span class=\"literal\">true</span>, <span class=\"attr\">validator</span>: <span class=\"variable language_\">this</span>.<span class=\"property\">validateNumber</span>, <span class=\"attr\">trigger</span>: <span class=\"string\">&quot;change&quot;</span> &#125;]</span></span><br><span class=\"line\"><span class=\"language-javascript\">      &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"attr\">activeName</span>: <span class=\"string\">&quot;first&quot;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"attr\">methods</span>: &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"title function_\">onSubmit</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;submit!&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">      &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"基本构成\"><a href=\"#基本构成\" class=\"headerlink\" title=\"基本构成\"></a>基本构成</h3><blockquote>\n<p>外层：<el-from></p>\n<p>内部：<el-form-item></p>\n</blockquote>\n<h3 id=\"Form上的关键值\"><a href=\"#Form上的关键值\" class=\"headerlink\" title=\"Form上的关键值\"></a>Form上的关键值</h3><ol>\n<li><p>ref：用在获取这个form的元素后做一些操作，比如resetFields（清空）</p>\n<blockquote>\n<p>this.$refs[“searchForm”].resetFields();</p>\n</blockquote>\n</li>\n<li><p>:model:”表单数据对象”，这个实际上是表单内的各种选项的数据集合，比如你的item内选择了name，region等等。主要是为了rules去验证其内容。</p>\n</li>\n<li><p>:rules:校验规则，</p>\n<ol>\n<li><p>提供普通校验规则：</p>\n<pre><code>    goodsId: [\n        &#123; required: true, message: &#39;请输入商品ID&#39;, trigger: &#39;blur&#39; &#125;,\n        &#123; min: 3, max: 5, message: &#39;长度在 3 到 5 个字符&#39;, trigger: &#39;blur&#39; &#125;\n      ],\n</code></pre>\n</li>\n<li><p>提供自定义校验规则：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">data</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">        <span class=\"attr\">rules</span>: &#123;</span><br><span class=\"line\">     <span class=\"attr\">goodsId</span>: [</span><br><span class=\"line\">         &#123; <span class=\"attr\">required</span>: <span class=\"literal\">true</span>, <span class=\"attr\">message</span>: <span class=\"string\">&#x27;请输入商品ID&#x27;</span>, <span class=\"attr\">trigger</span>: <span class=\"string\">&#x27;blur&#x27;</span> &#125;,</span><br><span class=\"line\">         &#123; <span class=\"attr\">min</span>: <span class=\"number\">3</span>, <span class=\"attr\">max</span>: <span class=\"number\">5</span>, <span class=\"attr\">message</span>: <span class=\"string\">&#x27;长度在 3 到 5 个字符&#x27;</span>, <span class=\"attr\">trigger</span>: <span class=\"string\">&#x27;blur&#x27;</span> &#125;</span><br><span class=\"line\">       ],</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">methods</span>: &#123;</span><br><span class=\"line\">        <span class=\"title function_\">validateNumber</span>(<span class=\"params\">event,data,callback</span>)&#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span>(data &gt; <span class=\"number\">2</span>)&#123;</span><br><span class=\"line\">        <span class=\"title function_\">callback</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">Error</span>(<span class=\"string\">&quot;数字大于2&quot;</span>))</span><br><span class=\"line\">      &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"title function_\">callback</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">Error</span>(<span class=\"string\">&quot;数字小于等于2&quot;</span>))</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ol>\n</li>\n<li><p>inline:表单域变为行内的表单域，就是将表单内的item变为一行显示，通过inline-block的形式。</p>\n</li>\n</ol>\n<h3 id=\"Form上的方法\"><a href=\"#Form上的方法\" class=\"headerlink\" title=\"Form上的方法\"></a>Form上的方法</h3><ol>\n<li><p>validate：对整个表单进行检验,valid为true则校验成功</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">this</span>.<span class=\"property\">$refs</span>[<span class=\"string\">&quot;searchForm&quot;</span>].<span class=\"title function_\">validate</span>(<span class=\"function\"><span class=\"params\">valid</span> =&gt;</span> &#123;</span><br><span class=\"line\">    conso.<span class=\"title function_\">log</span>(valid)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure></li>\n<li><p>validateField:对表单的一部分进行校验</p>\n<p>一般使用场景为：比如填写了密码后，需要填写二次密码，那么填写二次密码之后，可以直接通过validateField校验第一次的密码</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">this</span>.<span class=\"property\">$refs</span>[<span class=\"string\">&quot;searchForm&quot;</span>].<span class=\"title function_\">validateField</span>(<span class=\"string\">&#x27;goodsId&#x27;</span>);</span><br></pre></td></tr></table></figure></li>\n<li><p>resetFields:清空。</p>\n</li>\n<li><p>clearValidate：移除表单项的校验结果。</p>\n</li>\n</ol>\n<h3 id=\"Form-item上的常用关键值\"><a href=\"#Form-item上的常用关键值\" class=\"headerlink\" title=\"Form-item上的常用关键值\"></a>Form-item上的常用关键值</h3><ol>\n<li>prop：表单域 model 字段，类似于item的名字，可以用来区分不同的item</li>\n<li>label：显示文本</li>\n<li>required:该item是否是必须填写的</li>\n</ol>\n<h3 id=\"Form-item上的方法\"><a href=\"#Form-item上的方法\" class=\"headerlink\" title=\"Form-item上的方法\"></a>Form-item上的方法</h3><ol>\n<li>resetField:同上</li>\n<li>clearValidata:同上</li>\n</ol>\n<h2 id=\"Tabs的使用\"><a href=\"#Tabs的使用\" class=\"headerlink\" title=\"Tabs的使用\"></a>Tabs的使用</h2><h3 id=\"典型使用\"><a href=\"#典型使用\" class=\"headerlink\" title=\"典型使用\"></a>典型使用</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">el-tabs</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;activeName&quot;</span> @<span class=\"attr\">tab-click</span>=<span class=\"string\">&quot;handleClick&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;<span class=\"name\">el-tab-pane</span> <span class=\"attr\">label</span>=<span class=\"string\">&quot;用户管理&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;first&quot;</span>&gt;</span>用户管理<span class=\"tag\">&lt;/<span class=\"name\">el-tab-pane</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;<span class=\"name\">el-tab-pane</span> <span class=\"attr\">label</span>=<span class=\"string\">&quot;配置管理&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;second&quot;</span>&gt;</span>配置管理<span class=\"tag\">&lt;/<span class=\"name\">el-tab-pane</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;<span class=\"name\">el-tab-pane</span> <span class=\"attr\">label</span>=<span class=\"string\">&quot;角色管理&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;third&quot;</span>&gt;</span>角色管理<span class=\"tag\">&lt;/<span class=\"name\">el-tab-pane</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;<span class=\"name\">el-tab-pane</span> <span class=\"attr\">label</span>=<span class=\"string\">&quot;定时任务补偿&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;fourth&quot;</span>&gt;</span>定时任务补偿<span class=\"tag\">&lt;/<span class=\"name\">el-tab-pane</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">  <span class=\"tag\">&lt;/<span class=\"name\">el-tabs</span>&gt;</span></span></span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">  <span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    <span class=\"title function_\">data</span>(<span class=\"params\"></span>) &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      <span class=\"keyword\">return</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">        <span class=\"attr\">activeName</span>: <span class=\"string\">&#x27;second&#x27;</span></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      &#125;;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    <span class=\"attr\">methods</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      <span class=\"title function_\">handleClick</span>(<span class=\"params\">tab, event</span>) &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(tab, event);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      &#125;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    &#125;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">  &#125;;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"典型结构\"><a href=\"#典型结构\" class=\"headerlink\" title=\"典型结构\"></a>典型结构</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;el-tabs v-model=&quot;activeName&quot; @tab-click=&quot;handleClick&quot;&gt;</span><br><span class=\"line\">&lt;el-tab-pane label=&quot;用户管理&quot; name=&quot;first&quot;&gt;用户管理&lt;/el-tab-pane&gt;</span><br><span class=\"line\">&lt;/el-tabs&gt;</span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"Tabs上的关键值\"><a href=\"#Tabs上的关键值\" class=\"headerlink\" title=\"Tabs上的关键值\"></a>Tabs上的关键值</h3><ol>\n<li><p>value / v-model：选中选项卡的 name</p>\n</li>\n<li><p>type</p>\n</li>\n<li><p>closable</p>\n</li>\n<li><p>addable</p>\n</li>\n<li><p>tab-position</p>\n</li>\n<li><p>stretch</p>\n</li>\n</ol>\n<h2 id=\"table的使用\"><a href=\"#table的使用\" class=\"headerlink\" title=\"table的使用\"></a>table的使用</h2><h3 id=\"典型使用-1\"><a href=\"#典型使用-1\" class=\"headerlink\" title=\"典型使用\"></a>典型使用</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">el-table</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">:data</span>=<span class=\"string\">&quot;tableData&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">border</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">style</span>=<span class=\"string\">&quot;width: 100%&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">el-table-column</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">prop</span>=<span class=\"string\">&quot;date&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">label</span>=<span class=\"string\">&quot;日期&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">width</span>=<span class=\"string\">&quot;180&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">el-table-column</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">el-table-column</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">prop</span>=<span class=\"string\">&quot;name&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">label</span>=<span class=\"string\">&quot;姓名&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">width</span>=<span class=\"string\">&quot;180&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">el-table-column</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">el-table-column</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">prop</span>=<span class=\"string\">&quot;address&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">label</span>=<span class=\"string\">&quot;地址&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">el-table-column</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">el-table</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"特征值\"><a href=\"#特征值\" class=\"headerlink\" title=\"特征值\"></a>特征值</h3><ol>\n<li>border</li>\n<li>fit</li>\n</ol>\n<h2 id=\"Slot-important\"><a href=\"#Slot-important\" class=\"headerlink\" title=\"Slot !important\"></a>Slot !important</h2><h3 id=\"典型使用-2\"><a href=\"#典型使用-2\" class=\"headerlink\" title=\"典型使用\"></a>典型使用</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span> <span class=\"attr\">slot-scope</span>=<span class=\"string\">&quot;scope&quot;</span>&gt;</span></span><br><span class=\"line\">         <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">v-for</span>=<span class=\"string\">&quot;item in scope.row.goodsInfo&quot;</span>&gt;</span> </span><br><span class=\"line\">           <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;item.goodsTypeId === 0&quot;</span>&gt;</span>电子券<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">           <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;item.goodsTypeId === 1&quot;</span>&gt;</span>实物商品<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">           <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;item.goodsTypeId === 2&quot;</span>&gt;</span>虚拟商品<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">         <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"使用场景\"><a href=\"#使用场景\" class=\"headerlink\" title=\"使用场景\"></a>使用场景</h3><ol>\n<li>广泛的适用于各类form，tables中，其用法实现根据父级对象传值来显示不同的子集元素内容</li>\n<li>template中使用  slot-scope， 模板内部通过 scope.row 去调用父级对象传过来的值</li>\n</ol>\n<h2 id=\"动态循环el-table\"><a href=\"#动态循环el-table\" class=\"headerlink\" title=\"动态循环el-table\"></a>动态循环el-table</h2><h3 id=\"需求\"><a href=\"#需求\" class=\"headerlink\" title=\"需求\"></a>需求</h3><p>table的第一行渲染，要根据接口的返回值，来动态的生成，并且要匹配到对应的位置。</p>\n<p><img src=\"C:\\Users\\李蒙\\AppData\\Roaming\\Typora\\typora-user-images\\image-20200813144655982.png\" alt=\"image-20200813144655982\"></p>\n<h3 id=\"实现\"><a href=\"#实现\" class=\"headerlink\" title=\"实现\"></a>实现</h3><p>需要两个接口返回数据：</p>\n<p>1.需要返回第一行的数据</p>\n<p>2.返回table中的具体数据</p>\n<p>返回格式如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[&#123;<span class=\"attr\">name</span>: <span class=\"string\">&quot;中餐&quot;</span>, <span class=\"attr\">id</span>: <span class=\"number\">9</span>&#125;, &#123;<span class=\"attr\">name</span>: <span class=\"string\">&quot;西餐&quot;</span>, <span class=\"attr\">id</span>: <span class=\"number\">11</span>&#125;, &#123;<span class=\"attr\">name</span>: <span class=\"string\">&quot;小吃快餐&quot;</span>, <span class=\"attr\">id</span>: <span class=\"number\">263</span>&#125;, &#123;<span class=\"attr\">name</span>: <span class=\"string\">&quot;火锅&quot;</span>, <span class=\"attr\">id</span>: <span class=\"number\">264</span>&#125;,…]</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[&#123;<span class=\"number\">11</span>: <span class=\"number\">1</span>, <span class=\"number\">263</span>: <span class=\"number\">1</span>, <span class=\"number\">264</span>: <span class=\"number\">3</span>, <span class=\"number\">471</span>: <span class=\"number\">3</span>, <span class=\"number\">472</span>: <span class=\"number\">1</span>, <span class=\"attr\">orderBySign</span>: <span class=\"number\">1597161600000</span>, <span class=\"attr\">x</span>: <span class=\"string\">&quot;2020-08-12&quot;</span>&#125;,…]</span><br></pre></td></tr></table></figure>\n\n<p>对象的name用来渲染到table上，id则使用来匹配具体的数据。id对应的value即是table数据的key</p>\n<p>el-table的渲染如下：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">el-table</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">v-loading</span>=<span class=\"string\">&quot;tableLoading&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">:data</span>=<span class=\"string\">&quot;finaListSigle&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">border</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">class</span>=<span class=\"string\">&quot;table&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">ref</span>=<span class=\"string\">&quot;multipleTable&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">el-table-column</span> <span class=\"attr\">label</span>=<span class=\"string\">&quot;日期&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">template</span> <span class=\"attr\">slot-scope</span>=<span class=\"string\">&quot;scope&quot;</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>&#123;&#123;scope.row.x&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">el-table-column</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">el-table-column</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">v-for</span>=<span class=\"string\">&quot;(info,index) in twoTableTitle&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">:key</span>=<span class=\"string\">&quot;index&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">:property</span>=<span class=\"string\">&quot;info.id&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">:label</span>=<span class=\"string\">&quot;info.name&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">  &gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">template</span> <span class=\"attr\">slot-scope</span>=<span class=\"string\">&quot;scope&quot;</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>&#123;&#123;scope.row[scope.column.property]&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">el-table-column</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">el-table</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"核心\"><a href=\"#核心\" class=\"headerlink\" title=\"核心\"></a>核心</h3><p>主要实现的逻辑是，如何将对应的key放到slot的插槽中去。具体代码如下：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> :property=&quot;info.id&quot;</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>&#123;&#123;scope.row[scope.column.property]&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"日期选择器的限制\"><a href=\"#日期选择器的限制\" class=\"headerlink\" title=\"日期选择器的限制\"></a>日期选择器的限制</h2><h3 id=\"elementUI提供了日期选择器并提供了对应的限制选择方法\"><a href=\"#elementUI提供了日期选择器并提供了对应的限制选择方法\" class=\"headerlink\" title=\"elementUI提供了日期选择器并提供了对应的限制选择方法\"></a>elementUI提供了日期选择器并提供了对应的限制选择方法</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">一个下拉框，可以选择每月的天数   </span><br><span class=\"line\">&lt;div&gt;</span><br><span class=\"line\">      <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">el-select</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">        <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;每月开始时间（1-28）&quot;</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">        <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;submitInfo.matchStartDay&quot;</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">        @<span class=\"attr\">change</span>=<span class=\"string\">&quot;pickDate&quot;</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">      &gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">el-option</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">          <span class=\"attr\">v-for</span>=<span class=\"string\">&quot;item in matchStartDayArr&quot;</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">          <span class=\"attr\">:label</span>=<span class=\"string\">&quot;item.label&quot;</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">          <span class=\"attr\">:key</span>=<span class=\"string\">&quot;item.value&quot;</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">          <span class=\"attr\">:value</span>=<span class=\"string\">&quot;item.value&quot;</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">        &gt;</span><span class=\"tag\">&lt;/<span class=\"name\">el-option</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;/<span class=\"name\">el-select</span>&gt;</span></span></span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">一个日期选择框，可以选择月份范围</span><br><span class=\"line\">&lt;div <span class=\"keyword\">class</span>=<span class=\"string\">&quot;block&quot;</span>&gt;</span><br><span class=\"line\">    <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;demonstration&quot;</span>&gt;</span>默认<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span></span><br><span class=\"line\">    <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">el-date-picker</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">      <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;value1&quot;</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">      <span class=\"attr\">type</span>=<span class=\"string\">&quot;monthrange&quot;</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">      <span class=\"attr\">:picker-options</span>=<span class=\"string\">&quot;pickerOptions&quot;</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">      <span class=\"attr\">range-separator</span>=<span class=\"string\">&quot;至&quot;</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">      <span class=\"attr\">start-placeholder</span>=<span class=\"string\">&quot;开始月份&quot;</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">      <span class=\"attr\">end-placeholder</span>=<span class=\"string\">&quot;结束月份&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;/<span class=\"name\">el-date-picker</span>&gt;</span></span></span><br><span class=\"line\">  &lt;/div&gt;</span><br></pre></td></tr></table></figure>\n\n<p>现在需要让日期选择和月份范围选择联动起来，即：选择日期如果超过今天的日期，则当月不能选择，如果未超过今天的日期，则当月范围可以选择</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">:picker-options=<span class=\"string\">&quot;pickerOptions&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> currentDate = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"title function_\">data</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span>&#123;</span><br><span class=\"line\">    <span class=\"attr\">pickerOptions</span>: &#123;</span><br><span class=\"line\">        <span class=\"title function_\">disabledDate</span>(<span class=\"params\">time</span>) &#123;</span><br><span class=\"line\">          <span class=\"keyword\">return</span> time.<span class=\"title function_\">getTime</span>() &lt; currentDate</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>核心在于这个函数：</p>\n<blockquote>\n<pre><code>    disabledDate(time) &#123;\n      return time.getTime() &lt; currentDate\n    &#125;,\n</code></pre>\n</blockquote>\n<p>当 time.getTime() &lt; currentDate 为真，则当前的time会被渲染成不可选择，如果为假，则会被渲染成可以选择</p>\n<p>currentDate的判断生成如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">pickDate</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">     <span class=\"variable language_\">this</span>.<span class=\"property\">value1</span> = []</span><br><span class=\"line\">     <span class=\"keyword\">let</span> nowTime = <span class=\"title class_\">Date</span>.<span class=\"title function_\">now</span>()</span><br><span class=\"line\">     <span class=\"keyword\">let</span> nowTimeString = commonTools.<span class=\"title function_\">timestampToString</span>(</span><br><span class=\"line\">       <span class=\"title class_\">JSON</span>.<span class=\"title function_\">parse</span>(<span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(nowTime))</span><br><span class=\"line\">     )</span><br><span class=\"line\">     <span class=\"keyword\">let</span> yearTem = nowTimeString.<span class=\"title function_\">split</span>(<span class=\"string\">&#x27;-&#x27;</span>)[<span class=\"number\">0</span>]</span><br><span class=\"line\">     <span class=\"keyword\">let</span> mouthTem = nowTimeString.<span class=\"title function_\">split</span>(<span class=\"string\">&#x27;-&#x27;</span>)[<span class=\"number\">1</span>]</span><br><span class=\"line\">     <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(nowTimeString.<span class=\"title function_\">split</span>(<span class=\"string\">&#x27;-&#x27;</span>), <span class=\"string\">&#x27;1111&#x27;</span>)</span><br><span class=\"line\">     <span class=\"keyword\">let</span> dayTem =</span><br><span class=\"line\">       <span class=\"variable language_\">this</span>.<span class=\"property\">submitInfo</span>.<span class=\"property\">matchStartDay</span> +</span><br><span class=\"line\">       nowTimeString</span><br><span class=\"line\">         .<span class=\"title function_\">split</span>(<span class=\"string\">&#x27;-&#x27;</span>)[<span class=\"number\">2</span>]</span><br><span class=\"line\">         .<span class=\"title function_\">substr</span>(<span class=\"number\">2</span>, nowTimeString.<span class=\"title function_\">split</span>(<span class=\"string\">&#x27;-&#x27;</span>)[<span class=\"number\">2</span>][<span class=\"string\">&#x27;length&#x27;</span>])</span><br><span class=\"line\">     <span class=\"keyword\">let</span> selectTime = commonTools.<span class=\"title function_\">stringToTimestamp</span>(</span><br><span class=\"line\">       yearTem + <span class=\"string\">&#x27;-&#x27;</span> + mouthTem + <span class=\"string\">&#x27;-&#x27;</span> + dayTem</span><br><span class=\"line\">     )</span><br><span class=\"line\">     <span class=\"keyword\">if</span> (nowTime - selectTime &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">       <span class=\"keyword\">if</span> (mouthTem + <span class=\"number\">1</span> &gt; <span class=\"number\">12</span>) &#123;</span><br><span class=\"line\">         yearTem = <span class=\"built_in\">parseInt</span>(yearTem) + <span class=\"number\">1</span></span><br><span class=\"line\">         mouthTem = <span class=\"string\">&#x27;01&#x27;</span></span><br><span class=\"line\">       &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">         <span class=\"keyword\">let</span> mt1 = <span class=\"built_in\">parseInt</span>(mouthTem) + <span class=\"number\">1</span></span><br><span class=\"line\">         mouthTem = mt1 &gt; <span class=\"number\">9</span> ? mt1 : <span class=\"string\">&#x27;0&#x27;</span> + mt1</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">       currentDate = commonTools.<span class=\"title function_\">stringToTimestamp</span>(</span><br><span class=\"line\">         yearTem + <span class=\"string\">&#x27;-&#x27;</span> + mouthTem + <span class=\"string\">&#x27;-01 00:00:00&#x27;</span></span><br><span class=\"line\">       )</span><br><span class=\"line\">     &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">       currentDate = commonTools.<span class=\"title function_\">stringToTimestamp</span>(</span><br><span class=\"line\">         yearTem + <span class=\"string\">&#x27;-&#x27;</span> + mouthTem + <span class=\"string\">&#x27;-01 00:00:00&#x27;</span></span><br><span class=\"line\">       )</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">   &#125;,</span><br></pre></td></tr></table></figure>\n\n<p>Tips: 1. commonTools.timestampToString、commonTools.stringToTimestamp这些函数都是做一个转换，将时间戳转化成对应字符串或者将字符串转化成时间戳</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">stringToTimestamp</span>: <span class=\"keyword\">function</span> <span class=\"title function_\">stringMake</span>(<span class=\"params\">string</span>) &#123;</span><br><span class=\"line\">   <span class=\"comment\">//   字符串转化为时间戳</span></span><br><span class=\"line\">   <span class=\"comment\">// let date = &#x27;2015-03-05 17:59:00.0&#x27;;</span></span><br><span class=\"line\">   <span class=\"keyword\">let</span> date = string.<span class=\"title function_\">substring</span>(<span class=\"number\">0</span>, <span class=\"number\">19</span>)</span><br><span class=\"line\">   date = date.<span class=\"title function_\">replace</span>(<span class=\"regexp\">/-/g</span>, <span class=\"string\">&#x27;/&#x27;</span>)</span><br><span class=\"line\">   <span class=\"keyword\">let</span> timestamp = <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>(date).<span class=\"title function_\">getTime</span>()</span><br><span class=\"line\">   <span class=\"keyword\">return</span> timestamp</span><br><span class=\"line\"> &#125;,</span><br><span class=\"line\"> <span class=\"attr\">timestampToString</span>: <span class=\"keyword\">function</span> <span class=\"title function_\">timestampMake</span>(<span class=\"params\">timestamp</span>) &#123;</span><br><span class=\"line\">   <span class=\"comment\">// 将时间戳转化为xxxx-xx-xx xx:xx:xx</span></span><br><span class=\"line\">   <span class=\"keyword\">let</span> d = <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>(timestamp * <span class=\"number\">1</span>) <span class=\"comment\">//根据时间戳生成的时间对象</span></span><br><span class=\"line\">   <span class=\"keyword\">let</span> date =</span><br><span class=\"line\">     d.<span class=\"title function_\">getFullYear</span>() +</span><br><span class=\"line\">     <span class=\"string\">&#x27;-&#x27;</span> +</span><br><span class=\"line\">     (d.<span class=\"title function_\">getMonth</span>() + <span class=\"number\">1</span>) +</span><br><span class=\"line\">     <span class=\"string\">&#x27;-&#x27;</span> +</span><br><span class=\"line\">     d.<span class=\"title function_\">getDate</span>() +</span><br><span class=\"line\">     <span class=\"string\">&#x27; &#x27;</span> +</span><br><span class=\"line\">     d.<span class=\"title function_\">getHours</span>() +</span><br><span class=\"line\">     <span class=\"string\">&#x27;:&#x27;</span> +</span><br><span class=\"line\">     d.<span class=\"title function_\">getMinutes</span>() +</span><br><span class=\"line\">     <span class=\"string\">&#x27;:&#x27;</span> +</span><br><span class=\"line\">     d.<span class=\"title function_\">getSeconds</span>()</span><br><span class=\"line\">   <span class=\"keyword\">return</span> date</span><br><span class=\"line\"> &#125;,</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"<meta name=\"referrer\" content=\"no-referrer\"/>\n\n<h2 id=\"ElementUI的使用记录\"><a href=\"#ElementUI的使用记录\" class=\"headerlink\" title=\"ElementUI的使用记录\"></a>ElementUI的使用记录</h2><h3 id=\"ElementUI的入门-组件的使用\"><a href=\"#ElementUI的入门-组件的使用\" class=\"headerlink\" title=\"ElementUI的入门-组件的使用\"></a>ElementUI的入门-组件的使用</h3><p>记录常用的组件，如Form，Tabs，Table等使用，还有一些常用的使用情况也会记录</p>","more":"<h2 id=\"elementUI的下拉框返回对象\"><a href=\"#elementUI的下拉框返回对象\" class=\"headerlink\" title=\"elementUI的下拉框返回对象\"></a>elementUI的下拉框返回对象</h2><h3 id=\"一般下拉框返回都是一个值，比如id，value之类的，某些情况下，需要返回对象-id：25，name：lee-之类，则需要额外参数value-key\"><a href=\"#一般下拉框返回都是一个值，比如id，value之类的，某些情况下，需要返回对象-id：25，name：lee-之类，则需要额外参数value-key\" class=\"headerlink\" title=\"一般下拉框返回都是一个值，比如id，value之类的，某些情况下，需要返回对象{id：25，name：lee}之类，则需要额外参数value-key\"></a>一般下拉框返回都是一个值，比如id，value之类的，某些情况下，需要返回对象{id：25，name：lee}之类，则需要额外参数value-key</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">data</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">　　<span class=\"keyword\">return</span>&#123;</span><br><span class=\"line\">　　　　<span class=\"attr\">test</span>:<span class=\"string\">&#x27;&#x27;</span>,</span><br><span class=\"line\">　　　　<span class=\"attr\">arr</span>:[&#123;<span class=\"attr\">id</span>:<span class=\"number\">1</span>,<span class=\"attr\">name</span>:<span class=\"string\">&#x27;张三&#x27;</span>&#125;,&#123;<span class=\"attr\">id</span>:<span class=\"number\">2</span>,<span class=\"attr\">name</span>:<span class=\"string\">&#x27;李四&#x27;</span>&#125;,&#123;<span class=\"attr\">id</span>:<span class=\"number\">3</span>,<span class=\"attr\">name</span>:<span class=\"string\">&#x27;王五&#x27;</span>&#125;]</span><br><span class=\"line\">　　&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;el-select v-model=<span class=\"string\">&quot;test&quot;</span> value-key=<span class=\"string\">&quot;id&quot;</span>&gt;</span><br><span class=\"line\">　　<span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">el-option</span> <span class=\"attr\">v-for</span>=<span class=\"string\">&quot;item in arr&quot;</span> <span class=\"attr\">:label</span>=<span class=\"string\">&quot;item.name&quot;</span> <span class=\"attr\">:key</span>=<span class=\"string\">&quot;item.id&quot;</span> <span class=\"attr\">:value</span>=<span class=\"string\">&quot;item&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">el-option</span>&gt;</span></span></span><br><span class=\"line\">&lt;/el-select&gt;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"elementUI的级联器懒加载三级联动\"><a href=\"#elementUI的级联器懒加载三级联动\" class=\"headerlink\" title=\"elementUI的级联器懒加载三级联动\"></a>elementUI的级联器懒加载三级联动</h2><h3 id=\"典型的级联器\"><a href=\"#典型的级联器\" class=\"headerlink\" title=\"典型的级联器\"></a>典型的级联器</h3><p>代码：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;block&quot;</span>&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">el-cascader</span></span></span><br><span class=\"line\"><span class=\"tag\">     <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;editMallInfo.addressCode&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">     <span class=\"attr\">:props</span>=<span class=\"string\">&quot;props&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">     <span class=\"attr\">:options</span>=<span class=\"string\">&quot;options&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">     @<span class=\"attr\">change</span>=<span class=\"string\">&quot;handleChange&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">     <span class=\"attr\">:placeholder</span>=<span class=\"string\">&quot;addressCodePlaceholder&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">   &gt;</span><span class=\"tag\">&lt;/<span class=\"name\">el-cascader</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">data</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">       <span class=\"attr\">props</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">lazy</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">        <span class=\"title function_\">lazyLoad</span>(<span class=\"params\">node, resolve</span>) &#123;</span><br><span class=\"line\">          <span class=\"keyword\">let</span> nodes = [];</span><br><span class=\"line\">          <span class=\"keyword\">const</span> &#123; level, root, value &#125; = node;</span><br><span class=\"line\">          <span class=\"keyword\">if</span> (node.<span class=\"property\">level</span> == <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">            api.<span class=\"title function_\">citysByProvinceCode</span>(&#123; <span class=\"attr\">provinceCode</span>: node.<span class=\"property\">value</span> &#125;).<span class=\"title function_\">then</span>(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> &#123;</span><br><span class=\"line\">              <span class=\"keyword\">const</span> nodes = <span class=\"title class_\">Array</span>.<span class=\"title function_\">from</span>(res.<span class=\"property\">data</span>).<span class=\"title function_\">map</span>(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">                  <span class=\"attr\">value</span>: item.<span class=\"property\">areaCode</span>,</span><br><span class=\"line\">                  <span class=\"attr\">label</span>: item.<span class=\"property\">areaName</span>,</span><br><span class=\"line\">                  <span class=\"attr\">leaf</span>: level &gt;= <span class=\"number\">2</span></span><br><span class=\"line\">                &#125;;</span><br><span class=\"line\">              &#125;);</span><br><span class=\"line\">              <span class=\"comment\">// 通过调用resolve将子节点数据返回，通知组件数据加载完成</span></span><br><span class=\"line\">              <span class=\"title function_\">resolve</span>(nodes);</span><br><span class=\"line\">            &#125;, <span class=\"number\">1000</span>);</span><br><span class=\"line\">          &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (node.<span class=\"property\">level</span> == <span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">            api.<span class=\"title function_\">districtByCityCode</span>(&#123; <span class=\"attr\">cityCode</span>: node.<span class=\"property\">value</span> &#125;).<span class=\"title function_\">then</span>(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> &#123;</span><br><span class=\"line\">              <span class=\"keyword\">const</span> nodes = <span class=\"title class_\">Array</span>.<span class=\"title function_\">from</span>(res.<span class=\"property\">data</span>).<span class=\"title function_\">map</span>(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">                  <span class=\"attr\">value</span>: item.<span class=\"property\">areaCode</span>,</span><br><span class=\"line\">                  <span class=\"attr\">label</span>: item.<span class=\"property\">areaName</span>,</span><br><span class=\"line\">                  <span class=\"attr\">leaf</span>: level &gt;= <span class=\"number\">2</span></span><br><span class=\"line\">                &#125;;</span><br><span class=\"line\">              &#125;);</span><br><span class=\"line\">              <span class=\"title function_\">resolve</span>(nodes);</span><br><span class=\"line\">            &#125;, <span class=\"number\">1000</span>);</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      <span class=\"attr\">options</span>: []</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">getCityAndProvice</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  api</span><br><span class=\"line\">    .<span class=\"title function_\">allProvince</span>()</span><br><span class=\"line\">    .<span class=\"title function_\">then</span>(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; res.<span class=\"property\">data</span>.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">        res.<span class=\"property\">data</span>[i].<span class=\"property\">label</span> = res.<span class=\"property\">data</span>[i].<span class=\"property\">areaName</span>;</span><br><span class=\"line\">        res.<span class=\"property\">data</span>[i].<span class=\"property\">value</span> = res.<span class=\"property\">data</span>[i].<span class=\"property\">areaCode</span>;</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">options</span>.<span class=\"title function_\">push</span>(res.<span class=\"property\">data</span>[i]);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    .<span class=\"title function_\">catch</span>();</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n\n<p>通过控制prop中的leaf: level &gt;= 2，来判断是否需要加载下一级。</p>\n<h2 id=\"关于el-form的清除表单数据的坑\"><a href=\"#关于el-form的清除表单数据的坑\" class=\"headerlink\" title=\"关于el-form的清除表单数据的坑\"></a>关于el-form的清除表单数据的坑</h2><p>代码：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">this.$nextTick(() =&gt; &#123;</span><br><span class=\"line\">  this.$refs[&quot;SecondLevelform&quot;].resetFields();</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>清空表单有时候会在页面报错，因为找不到对应的dom，所以需要再dom下一次更新后，再清除。</p>\n<h2 id=\"Form的使用\"><a href=\"#Form的使用\" class=\"headerlink\" title=\"Form的使用\"></a>Form的使用</h2><h3 id=\"典型的表单\"><a href=\"#典型的表单\" class=\"headerlink\" title=\"典型的表单\"></a>典型的表单</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">el-form</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">:inline</span>=<span class=\"string\">&quot;true&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">ref</span>=<span class=\"string\">&quot;searchForm&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">:model</span>=<span class=\"string\">&quot;searchForm&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">:rules</span>=<span class=\"string\">&quot;rules&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">          @<span class=\"attr\">keyup.enter.native</span>=<span class=\"string\">&quot;loadTableData&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">        &gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">el-form-item</span> <span class=\"attr\">label</span>=<span class=\"string\">&quot;日期筛选&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">el-date-picker</span></span></span><br><span class=\"line\"><span class=\"tag\">              <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;dateRange&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">              <span class=\"attr\">type</span>=<span class=\"string\">&quot;daterange&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">              <span class=\"attr\">range-separator</span>=<span class=\"string\">&quot;至&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">              <span class=\"attr\">clearable</span></span></span><br><span class=\"line\"><span class=\"tag\">              <span class=\"attr\">unlink-panels</span></span></span><br><span class=\"line\"><span class=\"tag\">              <span class=\"attr\">start-placeholder</span>=<span class=\"string\">&quot;开始日期&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">              <span class=\"attr\">end-placeholder</span>=<span class=\"string\">&quot;结束日期&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">              <span class=\"attr\">value-format</span>=<span class=\"string\">&quot;yyyy-MM-dd&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">            &gt;</span><span class=\"tag\">&lt;/<span class=\"name\">el-date-picker</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">el-form-item</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">el-form-item</span> <span class=\"attr\">label</span>=<span class=\"string\">&quot;商品ID&quot;</span> <span class=\"attr\">prop</span>=<span class=\"string\">&quot;goodsId&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">el-input</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;searchForm.goodsId&quot;</span> <span class=\"attr\">clearable</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;请输入&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">el-input</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">el-form-item</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">el-form-item</span> <span class=\"attr\">label</span>=<span class=\"string\">&quot;sku编号&quot;</span> <span class=\"attr\">prop</span>=<span class=\"string\">&quot;specsId&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">el-input</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;searchForm.specsId&quot;</span> <span class=\"attr\">clearable</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;请输入&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">el-input</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">el-form-item</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">el-form-item</span> <span class=\"attr\">label</span>=<span class=\"string\">&quot;商品类型&quot;</span> <span class=\"attr\">prop</span>=<span class=\"string\">&quot;goodsTypeId&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">el-select</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;searchForm.goodsTypeId&quot;</span> <span class=\"attr\">clearable</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;请输入&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;m_r_10&quot;</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">el-option</span> <span class=\"attr\">label</span>=<span class=\"string\">&quot;电子券商品&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;0&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">el-option</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">el-option</span> <span class=\"attr\">label</span>=<span class=\"string\">&quot;虚拟商品&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;2&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">el-option</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">el-option</span> <span class=\"attr\">label</span>=<span class=\"string\">&quot;实物商品&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;1&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">el-option</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">el-select</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">el-form-item</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">el-form-item</span> <span class=\"attr\">label</span>=<span class=\"string\">&quot;订单号&quot;</span> <span class=\"attr\">prop</span>=<span class=\"string\">&quot;orderId&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">el-input</span> <span class=\"attr\">clearable</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;searchForm.orderId&quot;</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;请输入&quot;</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">slot</span>=<span class=\"string\">&quot;prefix&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;el-input__icon el-icon-search&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">el-input</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">el-form-item</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">el-form-item</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">el-button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;handleClickResetSearch&quot;</span>&gt;</span>重置<span class=\"tag\">&lt;/<span class=\"name\">el-button</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">el-button</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;primary&quot;</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;handleClickSarch&quot;</span>&gt;</span>查询<span class=\"tag\">&lt;/<span class=\"name\">el-button</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">el-form-item</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">el-form</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"title function_\">data</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">return</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"attr\">dateRange</span>: <span class=\"string\">&quot;&quot;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"attr\">searchForm</span>: &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"attr\">orderId</span>: <span class=\"literal\">null</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"attr\">brandId</span>: <span class=\"literal\">null</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"attr\">goodsTypeId</span>: <span class=\"literal\">null</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"attr\">specsId</span>: <span class=\"literal\">null</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"attr\">goodsId</span>: <span class=\"literal\">null</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">      &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"attr\">rules</span>: &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"attr\">goodsId</span>: [</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#123; <span class=\"attr\">required</span>: <span class=\"literal\">true</span>, <span class=\"attr\">message</span>: <span class=\"string\">&#x27;请输入商品ID&#x27;</span>, <span class=\"attr\">trigger</span>: <span class=\"string\">&#x27;blur&#x27;</span> &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#123; <span class=\"attr\">min</span>: <span class=\"number\">3</span>, <span class=\"attr\">max</span>: <span class=\"number\">5</span>, <span class=\"attr\">message</span>: <span class=\"string\">&#x27;长度在 3 到 5 个字符&#x27;</span>, <span class=\"attr\">trigger</span>: <span class=\"string\">&#x27;blur&#x27;</span> &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">          ],</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"attr\">specsId</span>: [&#123; <span class=\"attr\">required</span>: <span class=\"literal\">true</span>, <span class=\"attr\">validator</span>: <span class=\"variable language_\">this</span>.<span class=\"property\">validateNumber</span>, <span class=\"attr\">trigger</span>: <span class=\"string\">&quot;change&quot;</span> &#125;]</span></span><br><span class=\"line\"><span class=\"language-javascript\">      &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"attr\">activeName</span>: <span class=\"string\">&quot;first&quot;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"attr\">methods</span>: &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"title function_\">onSubmit</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;submit!&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">      &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"基本构成\"><a href=\"#基本构成\" class=\"headerlink\" title=\"基本构成\"></a>基本构成</h3><blockquote>\n<p>外层：<el-from></p>\n<p>内部：<el-form-item></p>\n</blockquote>\n<h3 id=\"Form上的关键值\"><a href=\"#Form上的关键值\" class=\"headerlink\" title=\"Form上的关键值\"></a>Form上的关键值</h3><ol>\n<li><p>ref：用在获取这个form的元素后做一些操作，比如resetFields（清空）</p>\n<blockquote>\n<p>this.$refs[“searchForm”].resetFields();</p>\n</blockquote>\n</li>\n<li><p>:model:”表单数据对象”，这个实际上是表单内的各种选项的数据集合，比如你的item内选择了name，region等等。主要是为了rules去验证其内容。</p>\n</li>\n<li><p>:rules:校验规则，</p>\n<ol>\n<li><p>提供普通校验规则：</p>\n<pre><code>    goodsId: [\n        &#123; required: true, message: &#39;请输入商品ID&#39;, trigger: &#39;blur&#39; &#125;,\n        &#123; min: 3, max: 5, message: &#39;长度在 3 到 5 个字符&#39;, trigger: &#39;blur&#39; &#125;\n      ],\n</code></pre>\n</li>\n<li><p>提供自定义校验规则：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">data</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">        <span class=\"attr\">rules</span>: &#123;</span><br><span class=\"line\">     <span class=\"attr\">goodsId</span>: [</span><br><span class=\"line\">         &#123; <span class=\"attr\">required</span>: <span class=\"literal\">true</span>, <span class=\"attr\">message</span>: <span class=\"string\">&#x27;请输入商品ID&#x27;</span>, <span class=\"attr\">trigger</span>: <span class=\"string\">&#x27;blur&#x27;</span> &#125;,</span><br><span class=\"line\">         &#123; <span class=\"attr\">min</span>: <span class=\"number\">3</span>, <span class=\"attr\">max</span>: <span class=\"number\">5</span>, <span class=\"attr\">message</span>: <span class=\"string\">&#x27;长度在 3 到 5 个字符&#x27;</span>, <span class=\"attr\">trigger</span>: <span class=\"string\">&#x27;blur&#x27;</span> &#125;</span><br><span class=\"line\">       ],</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">methods</span>: &#123;</span><br><span class=\"line\">        <span class=\"title function_\">validateNumber</span>(<span class=\"params\">event,data,callback</span>)&#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span>(data &gt; <span class=\"number\">2</span>)&#123;</span><br><span class=\"line\">        <span class=\"title function_\">callback</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">Error</span>(<span class=\"string\">&quot;数字大于2&quot;</span>))</span><br><span class=\"line\">      &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"title function_\">callback</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">Error</span>(<span class=\"string\">&quot;数字小于等于2&quot;</span>))</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ol>\n</li>\n<li><p>inline:表单域变为行内的表单域，就是将表单内的item变为一行显示，通过inline-block的形式。</p>\n</li>\n</ol>\n<h3 id=\"Form上的方法\"><a href=\"#Form上的方法\" class=\"headerlink\" title=\"Form上的方法\"></a>Form上的方法</h3><ol>\n<li><p>validate：对整个表单进行检验,valid为true则校验成功</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">this</span>.<span class=\"property\">$refs</span>[<span class=\"string\">&quot;searchForm&quot;</span>].<span class=\"title function_\">validate</span>(<span class=\"function\"><span class=\"params\">valid</span> =&gt;</span> &#123;</span><br><span class=\"line\">    conso.<span class=\"title function_\">log</span>(valid)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure></li>\n<li><p>validateField:对表单的一部分进行校验</p>\n<p>一般使用场景为：比如填写了密码后，需要填写二次密码，那么填写二次密码之后，可以直接通过validateField校验第一次的密码</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">this</span>.<span class=\"property\">$refs</span>[<span class=\"string\">&quot;searchForm&quot;</span>].<span class=\"title function_\">validateField</span>(<span class=\"string\">&#x27;goodsId&#x27;</span>);</span><br></pre></td></tr></table></figure></li>\n<li><p>resetFields:清空。</p>\n</li>\n<li><p>clearValidate：移除表单项的校验结果。</p>\n</li>\n</ol>\n<h3 id=\"Form-item上的常用关键值\"><a href=\"#Form-item上的常用关键值\" class=\"headerlink\" title=\"Form-item上的常用关键值\"></a>Form-item上的常用关键值</h3><ol>\n<li>prop：表单域 model 字段，类似于item的名字，可以用来区分不同的item</li>\n<li>label：显示文本</li>\n<li>required:该item是否是必须填写的</li>\n</ol>\n<h3 id=\"Form-item上的方法\"><a href=\"#Form-item上的方法\" class=\"headerlink\" title=\"Form-item上的方法\"></a>Form-item上的方法</h3><ol>\n<li>resetField:同上</li>\n<li>clearValidata:同上</li>\n</ol>\n<h2 id=\"Tabs的使用\"><a href=\"#Tabs的使用\" class=\"headerlink\" title=\"Tabs的使用\"></a>Tabs的使用</h2><h3 id=\"典型使用\"><a href=\"#典型使用\" class=\"headerlink\" title=\"典型使用\"></a>典型使用</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">el-tabs</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;activeName&quot;</span> @<span class=\"attr\">tab-click</span>=<span class=\"string\">&quot;handleClick&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;<span class=\"name\">el-tab-pane</span> <span class=\"attr\">label</span>=<span class=\"string\">&quot;用户管理&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;first&quot;</span>&gt;</span>用户管理<span class=\"tag\">&lt;/<span class=\"name\">el-tab-pane</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;<span class=\"name\">el-tab-pane</span> <span class=\"attr\">label</span>=<span class=\"string\">&quot;配置管理&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;second&quot;</span>&gt;</span>配置管理<span class=\"tag\">&lt;/<span class=\"name\">el-tab-pane</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;<span class=\"name\">el-tab-pane</span> <span class=\"attr\">label</span>=<span class=\"string\">&quot;角色管理&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;third&quot;</span>&gt;</span>角色管理<span class=\"tag\">&lt;/<span class=\"name\">el-tab-pane</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;<span class=\"name\">el-tab-pane</span> <span class=\"attr\">label</span>=<span class=\"string\">&quot;定时任务补偿&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;fourth&quot;</span>&gt;</span>定时任务补偿<span class=\"tag\">&lt;/<span class=\"name\">el-tab-pane</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">  <span class=\"tag\">&lt;/<span class=\"name\">el-tabs</span>&gt;</span></span></span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">  <span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    <span class=\"title function_\">data</span>(<span class=\"params\"></span>) &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      <span class=\"keyword\">return</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">        <span class=\"attr\">activeName</span>: <span class=\"string\">&#x27;second&#x27;</span></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      &#125;;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    <span class=\"attr\">methods</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      <span class=\"title function_\">handleClick</span>(<span class=\"params\">tab, event</span>) &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(tab, event);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      &#125;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    &#125;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">  &#125;;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"典型结构\"><a href=\"#典型结构\" class=\"headerlink\" title=\"典型结构\"></a>典型结构</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;el-tabs v-model=&quot;activeName&quot; @tab-click=&quot;handleClick&quot;&gt;</span><br><span class=\"line\">&lt;el-tab-pane label=&quot;用户管理&quot; name=&quot;first&quot;&gt;用户管理&lt;/el-tab-pane&gt;</span><br><span class=\"line\">&lt;/el-tabs&gt;</span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"Tabs上的关键值\"><a href=\"#Tabs上的关键值\" class=\"headerlink\" title=\"Tabs上的关键值\"></a>Tabs上的关键值</h3><ol>\n<li><p>value / v-model：选中选项卡的 name</p>\n</li>\n<li><p>type</p>\n</li>\n<li><p>closable</p>\n</li>\n<li><p>addable</p>\n</li>\n<li><p>tab-position</p>\n</li>\n<li><p>stretch</p>\n</li>\n</ol>\n<h2 id=\"table的使用\"><a href=\"#table的使用\" class=\"headerlink\" title=\"table的使用\"></a>table的使用</h2><h3 id=\"典型使用-1\"><a href=\"#典型使用-1\" class=\"headerlink\" title=\"典型使用\"></a>典型使用</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">el-table</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">:data</span>=<span class=\"string\">&quot;tableData&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">border</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">style</span>=<span class=\"string\">&quot;width: 100%&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">el-table-column</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">prop</span>=<span class=\"string\">&quot;date&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">label</span>=<span class=\"string\">&quot;日期&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">width</span>=<span class=\"string\">&quot;180&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">el-table-column</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">el-table-column</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">prop</span>=<span class=\"string\">&quot;name&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">label</span>=<span class=\"string\">&quot;姓名&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">width</span>=<span class=\"string\">&quot;180&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">el-table-column</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">el-table-column</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">prop</span>=<span class=\"string\">&quot;address&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">label</span>=<span class=\"string\">&quot;地址&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">el-table-column</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">el-table</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"特征值\"><a href=\"#特征值\" class=\"headerlink\" title=\"特征值\"></a>特征值</h3><ol>\n<li>border</li>\n<li>fit</li>\n</ol>\n<h2 id=\"Slot-important\"><a href=\"#Slot-important\" class=\"headerlink\" title=\"Slot !important\"></a>Slot !important</h2><h3 id=\"典型使用-2\"><a href=\"#典型使用-2\" class=\"headerlink\" title=\"典型使用\"></a>典型使用</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span> <span class=\"attr\">slot-scope</span>=<span class=\"string\">&quot;scope&quot;</span>&gt;</span></span><br><span class=\"line\">         <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">v-for</span>=<span class=\"string\">&quot;item in scope.row.goodsInfo&quot;</span>&gt;</span> </span><br><span class=\"line\">           <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;item.goodsTypeId === 0&quot;</span>&gt;</span>电子券<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">           <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;item.goodsTypeId === 1&quot;</span>&gt;</span>实物商品<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">           <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;item.goodsTypeId === 2&quot;</span>&gt;</span>虚拟商品<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">         <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"使用场景\"><a href=\"#使用场景\" class=\"headerlink\" title=\"使用场景\"></a>使用场景</h3><ol>\n<li>广泛的适用于各类form，tables中，其用法实现根据父级对象传值来显示不同的子集元素内容</li>\n<li>template中使用  slot-scope， 模板内部通过 scope.row 去调用父级对象传过来的值</li>\n</ol>\n<h2 id=\"动态循环el-table\"><a href=\"#动态循环el-table\" class=\"headerlink\" title=\"动态循环el-table\"></a>动态循环el-table</h2><h3 id=\"需求\"><a href=\"#需求\" class=\"headerlink\" title=\"需求\"></a>需求</h3><p>table的第一行渲染，要根据接口的返回值，来动态的生成，并且要匹配到对应的位置。</p>\n<p><img src=\"C:\\Users\\李蒙\\AppData\\Roaming\\Typora\\typora-user-images\\image-20200813144655982.png\" alt=\"image-20200813144655982\"></p>\n<h3 id=\"实现\"><a href=\"#实现\" class=\"headerlink\" title=\"实现\"></a>实现</h3><p>需要两个接口返回数据：</p>\n<p>1.需要返回第一行的数据</p>\n<p>2.返回table中的具体数据</p>\n<p>返回格式如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[&#123;<span class=\"attr\">name</span>: <span class=\"string\">&quot;中餐&quot;</span>, <span class=\"attr\">id</span>: <span class=\"number\">9</span>&#125;, &#123;<span class=\"attr\">name</span>: <span class=\"string\">&quot;西餐&quot;</span>, <span class=\"attr\">id</span>: <span class=\"number\">11</span>&#125;, &#123;<span class=\"attr\">name</span>: <span class=\"string\">&quot;小吃快餐&quot;</span>, <span class=\"attr\">id</span>: <span class=\"number\">263</span>&#125;, &#123;<span class=\"attr\">name</span>: <span class=\"string\">&quot;火锅&quot;</span>, <span class=\"attr\">id</span>: <span class=\"number\">264</span>&#125;,…]</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[&#123;<span class=\"number\">11</span>: <span class=\"number\">1</span>, <span class=\"number\">263</span>: <span class=\"number\">1</span>, <span class=\"number\">264</span>: <span class=\"number\">3</span>, <span class=\"number\">471</span>: <span class=\"number\">3</span>, <span class=\"number\">472</span>: <span class=\"number\">1</span>, <span class=\"attr\">orderBySign</span>: <span class=\"number\">1597161600000</span>, <span class=\"attr\">x</span>: <span class=\"string\">&quot;2020-08-12&quot;</span>&#125;,…]</span><br></pre></td></tr></table></figure>\n\n<p>对象的name用来渲染到table上，id则使用来匹配具体的数据。id对应的value即是table数据的key</p>\n<p>el-table的渲染如下：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">el-table</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">v-loading</span>=<span class=\"string\">&quot;tableLoading&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">:data</span>=<span class=\"string\">&quot;finaListSigle&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">border</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">class</span>=<span class=\"string\">&quot;table&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">ref</span>=<span class=\"string\">&quot;multipleTable&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">el-table-column</span> <span class=\"attr\">label</span>=<span class=\"string\">&quot;日期&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">template</span> <span class=\"attr\">slot-scope</span>=<span class=\"string\">&quot;scope&quot;</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>&#123;&#123;scope.row.x&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">el-table-column</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">el-table-column</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">v-for</span>=<span class=\"string\">&quot;(info,index) in twoTableTitle&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">:key</span>=<span class=\"string\">&quot;index&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">:property</span>=<span class=\"string\">&quot;info.id&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">:label</span>=<span class=\"string\">&quot;info.name&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">  &gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">template</span> <span class=\"attr\">slot-scope</span>=<span class=\"string\">&quot;scope&quot;</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>&#123;&#123;scope.row[scope.column.property]&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">el-table-column</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">el-table</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"核心\"><a href=\"#核心\" class=\"headerlink\" title=\"核心\"></a>核心</h3><p>主要实现的逻辑是，如何将对应的key放到slot的插槽中去。具体代码如下：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> :property=&quot;info.id&quot;</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>&#123;&#123;scope.row[scope.column.property]&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"日期选择器的限制\"><a href=\"#日期选择器的限制\" class=\"headerlink\" title=\"日期选择器的限制\"></a>日期选择器的限制</h2><h3 id=\"elementUI提供了日期选择器并提供了对应的限制选择方法\"><a href=\"#elementUI提供了日期选择器并提供了对应的限制选择方法\" class=\"headerlink\" title=\"elementUI提供了日期选择器并提供了对应的限制选择方法\"></a>elementUI提供了日期选择器并提供了对应的限制选择方法</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">一个下拉框，可以选择每月的天数   </span><br><span class=\"line\">&lt;div&gt;</span><br><span class=\"line\">      <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">el-select</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">        <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;每月开始时间（1-28）&quot;</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">        <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;submitInfo.matchStartDay&quot;</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">        @<span class=\"attr\">change</span>=<span class=\"string\">&quot;pickDate&quot;</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">      &gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">el-option</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">          <span class=\"attr\">v-for</span>=<span class=\"string\">&quot;item in matchStartDayArr&quot;</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">          <span class=\"attr\">:label</span>=<span class=\"string\">&quot;item.label&quot;</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">          <span class=\"attr\">:key</span>=<span class=\"string\">&quot;item.value&quot;</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">          <span class=\"attr\">:value</span>=<span class=\"string\">&quot;item.value&quot;</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">        &gt;</span><span class=\"tag\">&lt;/<span class=\"name\">el-option</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;/<span class=\"name\">el-select</span>&gt;</span></span></span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">一个日期选择框，可以选择月份范围</span><br><span class=\"line\">&lt;div <span class=\"keyword\">class</span>=<span class=\"string\">&quot;block&quot;</span>&gt;</span><br><span class=\"line\">    <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;demonstration&quot;</span>&gt;</span>默认<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span></span><br><span class=\"line\">    <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">el-date-picker</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">      <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;value1&quot;</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">      <span class=\"attr\">type</span>=<span class=\"string\">&quot;monthrange&quot;</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">      <span class=\"attr\">:picker-options</span>=<span class=\"string\">&quot;pickerOptions&quot;</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">      <span class=\"attr\">range-separator</span>=<span class=\"string\">&quot;至&quot;</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">      <span class=\"attr\">start-placeholder</span>=<span class=\"string\">&quot;开始月份&quot;</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">      <span class=\"attr\">end-placeholder</span>=<span class=\"string\">&quot;结束月份&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;/<span class=\"name\">el-date-picker</span>&gt;</span></span></span><br><span class=\"line\">  &lt;/div&gt;</span><br></pre></td></tr></table></figure>\n\n<p>现在需要让日期选择和月份范围选择联动起来，即：选择日期如果超过今天的日期，则当月不能选择，如果未超过今天的日期，则当月范围可以选择</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">:picker-options=<span class=\"string\">&quot;pickerOptions&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> currentDate = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"title function_\">data</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span>&#123;</span><br><span class=\"line\">    <span class=\"attr\">pickerOptions</span>: &#123;</span><br><span class=\"line\">        <span class=\"title function_\">disabledDate</span>(<span class=\"params\">time</span>) &#123;</span><br><span class=\"line\">          <span class=\"keyword\">return</span> time.<span class=\"title function_\">getTime</span>() &lt; currentDate</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>核心在于这个函数：</p>\n<blockquote>\n<pre><code>    disabledDate(time) &#123;\n      return time.getTime() &lt; currentDate\n    &#125;,\n</code></pre>\n</blockquote>\n<p>当 time.getTime() &lt; currentDate 为真，则当前的time会被渲染成不可选择，如果为假，则会被渲染成可以选择</p>\n<p>currentDate的判断生成如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">pickDate</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">     <span class=\"variable language_\">this</span>.<span class=\"property\">value1</span> = []</span><br><span class=\"line\">     <span class=\"keyword\">let</span> nowTime = <span class=\"title class_\">Date</span>.<span class=\"title function_\">now</span>()</span><br><span class=\"line\">     <span class=\"keyword\">let</span> nowTimeString = commonTools.<span class=\"title function_\">timestampToString</span>(</span><br><span class=\"line\">       <span class=\"title class_\">JSON</span>.<span class=\"title function_\">parse</span>(<span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(nowTime))</span><br><span class=\"line\">     )</span><br><span class=\"line\">     <span class=\"keyword\">let</span> yearTem = nowTimeString.<span class=\"title function_\">split</span>(<span class=\"string\">&#x27;-&#x27;</span>)[<span class=\"number\">0</span>]</span><br><span class=\"line\">     <span class=\"keyword\">let</span> mouthTem = nowTimeString.<span class=\"title function_\">split</span>(<span class=\"string\">&#x27;-&#x27;</span>)[<span class=\"number\">1</span>]</span><br><span class=\"line\">     <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(nowTimeString.<span class=\"title function_\">split</span>(<span class=\"string\">&#x27;-&#x27;</span>), <span class=\"string\">&#x27;1111&#x27;</span>)</span><br><span class=\"line\">     <span class=\"keyword\">let</span> dayTem =</span><br><span class=\"line\">       <span class=\"variable language_\">this</span>.<span class=\"property\">submitInfo</span>.<span class=\"property\">matchStartDay</span> +</span><br><span class=\"line\">       nowTimeString</span><br><span class=\"line\">         .<span class=\"title function_\">split</span>(<span class=\"string\">&#x27;-&#x27;</span>)[<span class=\"number\">2</span>]</span><br><span class=\"line\">         .<span class=\"title function_\">substr</span>(<span class=\"number\">2</span>, nowTimeString.<span class=\"title function_\">split</span>(<span class=\"string\">&#x27;-&#x27;</span>)[<span class=\"number\">2</span>][<span class=\"string\">&#x27;length&#x27;</span>])</span><br><span class=\"line\">     <span class=\"keyword\">let</span> selectTime = commonTools.<span class=\"title function_\">stringToTimestamp</span>(</span><br><span class=\"line\">       yearTem + <span class=\"string\">&#x27;-&#x27;</span> + mouthTem + <span class=\"string\">&#x27;-&#x27;</span> + dayTem</span><br><span class=\"line\">     )</span><br><span class=\"line\">     <span class=\"keyword\">if</span> (nowTime - selectTime &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">       <span class=\"keyword\">if</span> (mouthTem + <span class=\"number\">1</span> &gt; <span class=\"number\">12</span>) &#123;</span><br><span class=\"line\">         yearTem = <span class=\"built_in\">parseInt</span>(yearTem) + <span class=\"number\">1</span></span><br><span class=\"line\">         mouthTem = <span class=\"string\">&#x27;01&#x27;</span></span><br><span class=\"line\">       &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">         <span class=\"keyword\">let</span> mt1 = <span class=\"built_in\">parseInt</span>(mouthTem) + <span class=\"number\">1</span></span><br><span class=\"line\">         mouthTem = mt1 &gt; <span class=\"number\">9</span> ? mt1 : <span class=\"string\">&#x27;0&#x27;</span> + mt1</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">       currentDate = commonTools.<span class=\"title function_\">stringToTimestamp</span>(</span><br><span class=\"line\">         yearTem + <span class=\"string\">&#x27;-&#x27;</span> + mouthTem + <span class=\"string\">&#x27;-01 00:00:00&#x27;</span></span><br><span class=\"line\">       )</span><br><span class=\"line\">     &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">       currentDate = commonTools.<span class=\"title function_\">stringToTimestamp</span>(</span><br><span class=\"line\">         yearTem + <span class=\"string\">&#x27;-&#x27;</span> + mouthTem + <span class=\"string\">&#x27;-01 00:00:00&#x27;</span></span><br><span class=\"line\">       )</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">   &#125;,</span><br></pre></td></tr></table></figure>\n\n<p>Tips: 1. commonTools.timestampToString、commonTools.stringToTimestamp这些函数都是做一个转换，将时间戳转化成对应字符串或者将字符串转化成时间戳</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">stringToTimestamp</span>: <span class=\"keyword\">function</span> <span class=\"title function_\">stringMake</span>(<span class=\"params\">string</span>) &#123;</span><br><span class=\"line\">   <span class=\"comment\">//   字符串转化为时间戳</span></span><br><span class=\"line\">   <span class=\"comment\">// let date = &#x27;2015-03-05 17:59:00.0&#x27;;</span></span><br><span class=\"line\">   <span class=\"keyword\">let</span> date = string.<span class=\"title function_\">substring</span>(<span class=\"number\">0</span>, <span class=\"number\">19</span>)</span><br><span class=\"line\">   date = date.<span class=\"title function_\">replace</span>(<span class=\"regexp\">/-/g</span>, <span class=\"string\">&#x27;/&#x27;</span>)</span><br><span class=\"line\">   <span class=\"keyword\">let</span> timestamp = <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>(date).<span class=\"title function_\">getTime</span>()</span><br><span class=\"line\">   <span class=\"keyword\">return</span> timestamp</span><br><span class=\"line\"> &#125;,</span><br><span class=\"line\"> <span class=\"attr\">timestampToString</span>: <span class=\"keyword\">function</span> <span class=\"title function_\">timestampMake</span>(<span class=\"params\">timestamp</span>) &#123;</span><br><span class=\"line\">   <span class=\"comment\">// 将时间戳转化为xxxx-xx-xx xx:xx:xx</span></span><br><span class=\"line\">   <span class=\"keyword\">let</span> d = <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>(timestamp * <span class=\"number\">1</span>) <span class=\"comment\">//根据时间戳生成的时间对象</span></span><br><span class=\"line\">   <span class=\"keyword\">let</span> date =</span><br><span class=\"line\">     d.<span class=\"title function_\">getFullYear</span>() +</span><br><span class=\"line\">     <span class=\"string\">&#x27;-&#x27;</span> +</span><br><span class=\"line\">     (d.<span class=\"title function_\">getMonth</span>() + <span class=\"number\">1</span>) +</span><br><span class=\"line\">     <span class=\"string\">&#x27;-&#x27;</span> +</span><br><span class=\"line\">     d.<span class=\"title function_\">getDate</span>() +</span><br><span class=\"line\">     <span class=\"string\">&#x27; &#x27;</span> +</span><br><span class=\"line\">     d.<span class=\"title function_\">getHours</span>() +</span><br><span class=\"line\">     <span class=\"string\">&#x27;:&#x27;</span> +</span><br><span class=\"line\">     d.<span class=\"title function_\">getMinutes</span>() +</span><br><span class=\"line\">     <span class=\"string\">&#x27;:&#x27;</span> +</span><br><span class=\"line\">     d.<span class=\"title function_\">getSeconds</span>()</span><br><span class=\"line\">   <span class=\"keyword\">return</span> date</span><br><span class=\"line\"> &#125;,</span><br></pre></td></tr></table></figure>"},{"title":"VUE高级技巧记录","date":"2020-07-12T09:16:26.000Z","_content":"\n<meta name=\"referrer\" content=\"no-referrer\"/>\n\n## 真实项目中应用VUE的进阶功能\n\n自定义指令，混入，持续更新中\n\n### 自定义指令\n\n> 当你需要对普通 DOM 元素**进行底层操作**，这时候就会用到自定义指令\n\n1. 全局注册和局部注册\n\n   ```js\n   // 注册一个全局自定义指令 `v-focus`\n   Vue.directive('focus', {\n     // 当被绑定的元素插入到 DOM 中时……\n     inserted: function (el) {\n       // 聚焦元素\n       el.focus()\n     }\n   })\n   \n   //注册一个局部组件指令\n   directive:{\n     focus:{\n        // 指令的定义\n       inserted:function(el){\n         el.focus()\n       }\n     }\n   }\n   ```\n\n2. 示例（改造后台系统的权限功能）\n\n   根据后台返回的权限数据来判断是否显示按钮\n\n   - HTML结构\n\n   ```js\n   <div id=\"app\">\n     <span class=\"mr_15\">\n             <el-button\n               :loading=\"isLoading\"\n               type=\"primary\"\n               @click=\"addNewItem\"\n               v-has:merchantsMatchActivity_add\n               >新增</el-button\n             >\n           </span>\n   </div>\n   ```\n   - JS\n\n   ```js\n   Vue.directive('has', {\n     inserted: (el, binding, vnode) => {\n       console.log(vnode, el.parentNode)\n       let path = vnode.context.$route.path.split('/')[1]\n       if (!checkHasPass(path, binding.arg)) {\n         el.parentNode.removeChild(el)\n       }\n     },\n   })\n   \n   function checkHasPass(path, name) {\n     let operator = openFun(path)\n     let pass = false\n     for (const key in operator) {\n       if (key == name) {\n         pass = true\n       }\n     }\n     return pass\n   }\n   ```\n\n   ```js\n   openFun是一个筛选数据的函数，如果有对应的权限字段，会返回一个对象\n   let op = {};\n   let oneLevelArr = [];\n   function getPer(arr) {\n     for (let i = 0; i < arr.length; i++) {\n       //只要商客 sys:10\n       if (arr[i].sys == 10) {\n         if (arr[i][\"children\"] && arr[i][\"children\"].length) {\n           getPer(arr[i][\"children\"]);\n         }\n         oneLevelArr.push(arr[i]);\n       }\n     }\n   }\n   const openFun = function(name) {\n     console.log(name);\n     op = {};\n     oneLevelArr = [];\n     getPer(JSON.parse(sessionStorage.getItem(\"resources\")));\n     for (let i = 0; i < oneLevelArr.length; i++) {\n       if (String(oneLevelArr[i][\"icon\"]) === name) {\n         op[oneLevelArr[i][\"resourceMark\"]] =\n           Number(oneLevelArr[i][\"resourceType\"]) === 1;\n       }\n     }\n     return op;\n   };\n   export default openFun;\n   ```\n\n   ```js\n   resources形如:通过循环router中的children.resourceMark去判断是否有权限\n   [\n     {\n       router: 'merchantsMatchActivity',\n       resourceName: '比赛激励管理',\n       sys: 10,\n       children: [\n         resourceMark: 'merchantsMatchActivity_add',\n         icon: 'merchantsMatchActivity',\n       ]\n     }\n   ]\n   ```\n\n   Tips:\n\n   1. el.parentNode.removeChild(el)方法需要配合inserted周期，配置bind周期会报错，父节点为null\n   2. v-has:merchantsMatchActivity_add，冒号后面的字段会通过arg来拿到，并和resource去循环判断\n\n\n3. 详细说明\n\n   1. 钩子函数\n\n      - **bind**：只调用一次，指令第一次绑定到元素时调用。在这里可以进行一次性的初始化设置。\n      - **inserted**：被绑定元素插入父节点时调用 (仅保证父节点存在，但不一定已被插入文档中)。\n      - **update**：所在组件的 VNode 更新时调用，但是可能发生在其子 VNode 更新之前。指令的值可能发生了改变，也可能没有。但是你可以通过比较更新前后的值来忽略不必要的模板更新。\n      - **componentUpdated**：指令所在组件的 VNode 及其子 VNode 全部更新后调用。\n      - **unbind**：只调用一次，指令与元素解绑时调用。\n\n   2. 钩子函数参数\n\n      > 除了 `el` 之外，其它参数都应该是只读的\n\n      指令钩子函数会被传入以下参数：\n\n      - `el`：指令所绑定的元素，可以用来直接操作 DOM 。\n      - `binding`：一个对象，包含以下属性：\n        - `name`：指令名，不包括 v- 前缀。\n        - `value`：指令的绑定值，例如：v-my-directive=\"1 + 1\" 中，绑定值为 2。\n        - `oldValue`：指令绑定的前一个值，仅在 update 和 componentUpdated 钩子中可用。无论值是否改变都可用。\n        - `expression`：字符串形式的指令表达式。例如 v-my-directive=\"1 + 1\" 中，表达式为 \"1 + 1\"。\n        - `arg`：传给指令的参数，可选。例如 v-my-directive:foo 中，参数为 \"foo\"。\n        - `modifiers`：一个包含修饰符的对象。例如：v-my-directive.foo.bar 中，修饰符对象为 { foo: true, bar: true }。\n      - `vnode`：Vue 编译生成的虚拟节点。\n      - `oldVnode`：上一个虚拟节点，仅在 update 和 componentUpdated 钩子中可用。\n\n   \n\n   ### 动态路由\n   \n   #### 官网动态路由解释\n   \n   当多个router-link对应一个组件的时候，可以去使用动态路由，而不用设置多个组件一一对应\n   \n   ```js\n   const User = {\n     template: '<div>User</div>'\n   }\n   \n   const router = new VueRouter({\n     routes: [\n       // 动态路径参数 以冒号开头\n       { path: '/user/:id', component: User }\n     ]\n   })\n   ```\n   \n   组件内部:可以通过$route.params的形式拿到数据，从而可以渲染不同的数据出来\n   \n   ```js\n   const User = {\n     template: '<div>User {{ $route.params.id }}</div>'\n   }\n   ```\n   \n   > 当使用动态路由的时候，mounted周期会失效，因为为了节省开销，VUE在你使用动态路由功能的时候会复用之前已经生成的组件，导致根本就不会进入初始化周期。为此，添加一个新的周期：beforeRouteUpdate\n\n```js\nconst User = {\n  template: '...',\n  beforeRouteUpdate (to, from, next) {\n    // react to route changes...\n    // don't forget to call next()\n  }\n}\n```\n\n#### 实际上的动态路由应用\n\n实际上，我们谈论动态路由的时候，更多的是说获取后端的数据、动态添加路由、从而实现权限等渲染控制。类似动态生成菜单功能\n\n1. 后端返回的数组数据\n\n   后端返回路由数据如下：\n\n   ```js\n   routerList = [\n     {\n           \"path\": \"/other\",\n           \"component\": \"Layout\",\n           \"redirect\": \"noRedirect\",\n           \"name\": \"otherPage\",\n           \"meta\": {\n               \"title\": \"测试\",\n           },\n           \"children\": [\n               {\n                   \"path\": \"a\",\n                   \"component\": \"file/a\",\n                   \"name\": \"a\",\n                   \"meta\": { \"title\": \"a页面\", \"noCache\": \"true\" }\n               },\n               {\n                   \"path\": \"b\",\n                   \"component\": \"file/b\",\n                   \"name\": \"b\",\n                   \"meta\": { \"title\": \"b页面\", \"noCache\": \"true\" }\n               },\n           ]\n       }\n   ]\t\n   ```\n\n2. 前端静态路由\n\n   ```js\n   import Vue from 'vue'\n   import Router from 'vue-router'\n   import Layout from '@/layout';\n   Vue.use(Router)\n   // 配置项目中没有涉及权限的公共路由\n   export const constantRoutes = [\n       {\n           path: '/login',\n           component: () => import('@/views/login'),\n           hidden: true\n       },\n       {\n           path: '/404',\n           component: () => import('@/views/404'),\n           hidden: true\n       },\n   ]\n   \n   const createRouter = () => new Router({\n       mode: 'history',\n       scrollBehavior: () => ({ y: 0 }),\n       routes: constantRoutes\n   })\n   const router = createRouter()\n   \n   export function resetRouter() {\n       const newRouter = createRouter()\n       router.matcher = newRouter.matcher\n   }\n   \n   export default router\n   ```\n\n   静态路由就直接按照正常的写法来处理\n\n3. 处理后台返回的路由格式\n\n   新建一个公共的`asyncRouter.js`文件\n\n   ```js\n   // 引入路由文件这种的公共路由\n   import { constantRoutes } from '../router';\n   // Layout 组件是项目中的主页面，切换路由时，仅切换Layout中的组件\n   import Layout from '@/layout';\n   export function getAsyncRoutes(routes) {\n       const res = []\n       // 定义路由中需要的自定名\n       const keys = ['path', 'name', 'children', 'redirect', 'meta', 'hidden']\n       // 遍历路由数组去重组可用的路由\n       routes.forEach(item => {\n           const newItem = {};\n           if (item.component) {\n               // 判断 item.component 是否等于 'Layout',若是则直接替换成引入的 Layout 组件\n               if (item.component === 'Layout') {\n                   newItem.component = Layout\n               } else {\n               //  item.component 不等于 'Layout',则说明它是组件路径地址，因此直接替换成路由引入的方法\n                   newItem.component = resolve => require([`@/views/${item.component}`],resolve)\n                   \n                   // 此处用reqiure比较好，import引入变量会有各种莫名的错误\n                   // newItem.component = (() => import(`@/views/${item.component}`));\n               }\n           }\n           for (const key in item) {\n               if (keys.includes(key)) {\n                   newItem[key] = item[key]\n               }\n           }\n           // 若遍历的当前路由存在子路由，需要对子路由进行递归遍历\n           if (newItem.children && newItem.children.length) {\n               newItem.children = getAsyncRoutes(item.children)\n           }\n           res.push(newItem)\n       })\n       // 返回处理好且可用的路由数组\n       return res\n   }\n   \n   ```\n\n   其中，newItem这个变量会被改造成类似如下结构：\n\n   ```js\n    {\n           path: '/file',\n           component: () => import('@/views/file'),\n           hidden: true,\n           name: \"a\",\n           meta: { \"title\": \"a页面\", \"noCache\": \"true\" }\n       },\n   ```\n\n4. 添加到router上去\n\n   创建路由守卫：创建公共的permission.js文件，设置路由守卫\n\n   ```js\n   //  进度条引入设置如上面第一种描述一样\n   import router from './router'\n   import store from './store'\n   import NProgress from 'nprogress' // progress bar\n   import 'nprogress/nprogress.css' // progress bar style\n   import { getToken } from '@/utils/auth' // get token from cookie\n   import { getAsyncRoutes } from '@/utils/asyncRouter'\n   \n   const whiteList = ['/login'];\n   router.beforeEach( async (to, from, next) => {\n       NProgress.start()\n       document.title = to.meta.title;\n       // 获取用户token，用来判断当前用户是否登录\n       const hasToken = getToken()\n       if (hasToken) {\n           if (to.path === '/login') {\n               next({ path: '/' })\n               NProgress.done()\n           } else {\n               //异步获取store中的路由\n               let route = await store.state.addRoutes;\n               const hasRouters = route && route.length>0;\n               //判断store中是否有路由，若有，进行下一步\n               if ( hasRouters ) {\n                   next()\n               } else {\n                   //store中没有路由，则需要获取获取异步路由，并进行格式化处理\n                   try {\n                       const accessRoutes = getAsyncRoutes(await store.state.addRoutes );\n                       // 动态添加格式化过的路由\n                       router.addRoutes(accessRoutes);\n                       next({ ...to, replace: true })\n                   } catch (error) {\n                       // Message.error('出错了')\n                       next(`/login?redirect=${to.path}`)\n                       NProgress.done()\n                   }\n               }\n           }\n       } else {\n           if (whiteList.indexOf(to.path) !== -1) {\n               next()\n           } else {\n               next(`/login?redirect=${to.path}`)\n               NProgress.done()\n           }\n       }\n   })\n   \n   router.afterEach(() => {\n       NProgress.done()\n   })\n   ```\n\n5. 在main.js中引入permission.js文件\n\n6. 在login登录的时候将路由信息存储到store中\n\n   ```js\n   //  登录接口调用后，调用路由接口，后端返回相应用户的路由res.router，我们需要存储到store中，方便其他地方拿取\n   this.$store.dispatch(\"addRoutes\", res.router);\n   ```\n\n   到这里，整个动态路由就可以走通了，但是页面跳转、路由守卫处理是异步的，会存在动态路由添加后跳转的是空白页面，这是因为路由在执行next()时，router里面的数据还不存在，此时，你可以通过window.location.reload()来刷新路由\n\n### 混入（mixin）\n\n","source":"_posts/VUE高级技巧记录.md","raw":"---\ntitle: VUE高级技巧记录\ndate: 2020-07-12 17:16:26\ntags: [js,hexo]\n---\n\n<meta name=\"referrer\" content=\"no-referrer\"/>\n\n## 真实项目中应用VUE的进阶功能\n\n自定义指令，混入，持续更新中\n\n### 自定义指令\n\n> 当你需要对普通 DOM 元素**进行底层操作**，这时候就会用到自定义指令\n\n1. 全局注册和局部注册\n\n   ```js\n   // 注册一个全局自定义指令 `v-focus`\n   Vue.directive('focus', {\n     // 当被绑定的元素插入到 DOM 中时……\n     inserted: function (el) {\n       // 聚焦元素\n       el.focus()\n     }\n   })\n   \n   //注册一个局部组件指令\n   directive:{\n     focus:{\n        // 指令的定义\n       inserted:function(el){\n         el.focus()\n       }\n     }\n   }\n   ```\n\n2. 示例（改造后台系统的权限功能）\n\n   根据后台返回的权限数据来判断是否显示按钮\n\n   - HTML结构\n\n   ```js\n   <div id=\"app\">\n     <span class=\"mr_15\">\n             <el-button\n               :loading=\"isLoading\"\n               type=\"primary\"\n               @click=\"addNewItem\"\n               v-has:merchantsMatchActivity_add\n               >新增</el-button\n             >\n           </span>\n   </div>\n   ```\n   - JS\n\n   ```js\n   Vue.directive('has', {\n     inserted: (el, binding, vnode) => {\n       console.log(vnode, el.parentNode)\n       let path = vnode.context.$route.path.split('/')[1]\n       if (!checkHasPass(path, binding.arg)) {\n         el.parentNode.removeChild(el)\n       }\n     },\n   })\n   \n   function checkHasPass(path, name) {\n     let operator = openFun(path)\n     let pass = false\n     for (const key in operator) {\n       if (key == name) {\n         pass = true\n       }\n     }\n     return pass\n   }\n   ```\n\n   ```js\n   openFun是一个筛选数据的函数，如果有对应的权限字段，会返回一个对象\n   let op = {};\n   let oneLevelArr = [];\n   function getPer(arr) {\n     for (let i = 0; i < arr.length; i++) {\n       //只要商客 sys:10\n       if (arr[i].sys == 10) {\n         if (arr[i][\"children\"] && arr[i][\"children\"].length) {\n           getPer(arr[i][\"children\"]);\n         }\n         oneLevelArr.push(arr[i]);\n       }\n     }\n   }\n   const openFun = function(name) {\n     console.log(name);\n     op = {};\n     oneLevelArr = [];\n     getPer(JSON.parse(sessionStorage.getItem(\"resources\")));\n     for (let i = 0; i < oneLevelArr.length; i++) {\n       if (String(oneLevelArr[i][\"icon\"]) === name) {\n         op[oneLevelArr[i][\"resourceMark\"]] =\n           Number(oneLevelArr[i][\"resourceType\"]) === 1;\n       }\n     }\n     return op;\n   };\n   export default openFun;\n   ```\n\n   ```js\n   resources形如:通过循环router中的children.resourceMark去判断是否有权限\n   [\n     {\n       router: 'merchantsMatchActivity',\n       resourceName: '比赛激励管理',\n       sys: 10,\n       children: [\n         resourceMark: 'merchantsMatchActivity_add',\n         icon: 'merchantsMatchActivity',\n       ]\n     }\n   ]\n   ```\n\n   Tips:\n\n   1. el.parentNode.removeChild(el)方法需要配合inserted周期，配置bind周期会报错，父节点为null\n   2. v-has:merchantsMatchActivity_add，冒号后面的字段会通过arg来拿到，并和resource去循环判断\n\n\n3. 详细说明\n\n   1. 钩子函数\n\n      - **bind**：只调用一次，指令第一次绑定到元素时调用。在这里可以进行一次性的初始化设置。\n      - **inserted**：被绑定元素插入父节点时调用 (仅保证父节点存在，但不一定已被插入文档中)。\n      - **update**：所在组件的 VNode 更新时调用，但是可能发生在其子 VNode 更新之前。指令的值可能发生了改变，也可能没有。但是你可以通过比较更新前后的值来忽略不必要的模板更新。\n      - **componentUpdated**：指令所在组件的 VNode 及其子 VNode 全部更新后调用。\n      - **unbind**：只调用一次，指令与元素解绑时调用。\n\n   2. 钩子函数参数\n\n      > 除了 `el` 之外，其它参数都应该是只读的\n\n      指令钩子函数会被传入以下参数：\n\n      - `el`：指令所绑定的元素，可以用来直接操作 DOM 。\n      - `binding`：一个对象，包含以下属性：\n        - `name`：指令名，不包括 v- 前缀。\n        - `value`：指令的绑定值，例如：v-my-directive=\"1 + 1\" 中，绑定值为 2。\n        - `oldValue`：指令绑定的前一个值，仅在 update 和 componentUpdated 钩子中可用。无论值是否改变都可用。\n        - `expression`：字符串形式的指令表达式。例如 v-my-directive=\"1 + 1\" 中，表达式为 \"1 + 1\"。\n        - `arg`：传给指令的参数，可选。例如 v-my-directive:foo 中，参数为 \"foo\"。\n        - `modifiers`：一个包含修饰符的对象。例如：v-my-directive.foo.bar 中，修饰符对象为 { foo: true, bar: true }。\n      - `vnode`：Vue 编译生成的虚拟节点。\n      - `oldVnode`：上一个虚拟节点，仅在 update 和 componentUpdated 钩子中可用。\n\n   \n\n   ### 动态路由\n   \n   #### 官网动态路由解释\n   \n   当多个router-link对应一个组件的时候，可以去使用动态路由，而不用设置多个组件一一对应\n   \n   ```js\n   const User = {\n     template: '<div>User</div>'\n   }\n   \n   const router = new VueRouter({\n     routes: [\n       // 动态路径参数 以冒号开头\n       { path: '/user/:id', component: User }\n     ]\n   })\n   ```\n   \n   组件内部:可以通过$route.params的形式拿到数据，从而可以渲染不同的数据出来\n   \n   ```js\n   const User = {\n     template: '<div>User {{ $route.params.id }}</div>'\n   }\n   ```\n   \n   > 当使用动态路由的时候，mounted周期会失效，因为为了节省开销，VUE在你使用动态路由功能的时候会复用之前已经生成的组件，导致根本就不会进入初始化周期。为此，添加一个新的周期：beforeRouteUpdate\n\n```js\nconst User = {\n  template: '...',\n  beforeRouteUpdate (to, from, next) {\n    // react to route changes...\n    // don't forget to call next()\n  }\n}\n```\n\n#### 实际上的动态路由应用\n\n实际上，我们谈论动态路由的时候，更多的是说获取后端的数据、动态添加路由、从而实现权限等渲染控制。类似动态生成菜单功能\n\n1. 后端返回的数组数据\n\n   后端返回路由数据如下：\n\n   ```js\n   routerList = [\n     {\n           \"path\": \"/other\",\n           \"component\": \"Layout\",\n           \"redirect\": \"noRedirect\",\n           \"name\": \"otherPage\",\n           \"meta\": {\n               \"title\": \"测试\",\n           },\n           \"children\": [\n               {\n                   \"path\": \"a\",\n                   \"component\": \"file/a\",\n                   \"name\": \"a\",\n                   \"meta\": { \"title\": \"a页面\", \"noCache\": \"true\" }\n               },\n               {\n                   \"path\": \"b\",\n                   \"component\": \"file/b\",\n                   \"name\": \"b\",\n                   \"meta\": { \"title\": \"b页面\", \"noCache\": \"true\" }\n               },\n           ]\n       }\n   ]\t\n   ```\n\n2. 前端静态路由\n\n   ```js\n   import Vue from 'vue'\n   import Router from 'vue-router'\n   import Layout from '@/layout';\n   Vue.use(Router)\n   // 配置项目中没有涉及权限的公共路由\n   export const constantRoutes = [\n       {\n           path: '/login',\n           component: () => import('@/views/login'),\n           hidden: true\n       },\n       {\n           path: '/404',\n           component: () => import('@/views/404'),\n           hidden: true\n       },\n   ]\n   \n   const createRouter = () => new Router({\n       mode: 'history',\n       scrollBehavior: () => ({ y: 0 }),\n       routes: constantRoutes\n   })\n   const router = createRouter()\n   \n   export function resetRouter() {\n       const newRouter = createRouter()\n       router.matcher = newRouter.matcher\n   }\n   \n   export default router\n   ```\n\n   静态路由就直接按照正常的写法来处理\n\n3. 处理后台返回的路由格式\n\n   新建一个公共的`asyncRouter.js`文件\n\n   ```js\n   // 引入路由文件这种的公共路由\n   import { constantRoutes } from '../router';\n   // Layout 组件是项目中的主页面，切换路由时，仅切换Layout中的组件\n   import Layout from '@/layout';\n   export function getAsyncRoutes(routes) {\n       const res = []\n       // 定义路由中需要的自定名\n       const keys = ['path', 'name', 'children', 'redirect', 'meta', 'hidden']\n       // 遍历路由数组去重组可用的路由\n       routes.forEach(item => {\n           const newItem = {};\n           if (item.component) {\n               // 判断 item.component 是否等于 'Layout',若是则直接替换成引入的 Layout 组件\n               if (item.component === 'Layout') {\n                   newItem.component = Layout\n               } else {\n               //  item.component 不等于 'Layout',则说明它是组件路径地址，因此直接替换成路由引入的方法\n                   newItem.component = resolve => require([`@/views/${item.component}`],resolve)\n                   \n                   // 此处用reqiure比较好，import引入变量会有各种莫名的错误\n                   // newItem.component = (() => import(`@/views/${item.component}`));\n               }\n           }\n           for (const key in item) {\n               if (keys.includes(key)) {\n                   newItem[key] = item[key]\n               }\n           }\n           // 若遍历的当前路由存在子路由，需要对子路由进行递归遍历\n           if (newItem.children && newItem.children.length) {\n               newItem.children = getAsyncRoutes(item.children)\n           }\n           res.push(newItem)\n       })\n       // 返回处理好且可用的路由数组\n       return res\n   }\n   \n   ```\n\n   其中，newItem这个变量会被改造成类似如下结构：\n\n   ```js\n    {\n           path: '/file',\n           component: () => import('@/views/file'),\n           hidden: true,\n           name: \"a\",\n           meta: { \"title\": \"a页面\", \"noCache\": \"true\" }\n       },\n   ```\n\n4. 添加到router上去\n\n   创建路由守卫：创建公共的permission.js文件，设置路由守卫\n\n   ```js\n   //  进度条引入设置如上面第一种描述一样\n   import router from './router'\n   import store from './store'\n   import NProgress from 'nprogress' // progress bar\n   import 'nprogress/nprogress.css' // progress bar style\n   import { getToken } from '@/utils/auth' // get token from cookie\n   import { getAsyncRoutes } from '@/utils/asyncRouter'\n   \n   const whiteList = ['/login'];\n   router.beforeEach( async (to, from, next) => {\n       NProgress.start()\n       document.title = to.meta.title;\n       // 获取用户token，用来判断当前用户是否登录\n       const hasToken = getToken()\n       if (hasToken) {\n           if (to.path === '/login') {\n               next({ path: '/' })\n               NProgress.done()\n           } else {\n               //异步获取store中的路由\n               let route = await store.state.addRoutes;\n               const hasRouters = route && route.length>0;\n               //判断store中是否有路由，若有，进行下一步\n               if ( hasRouters ) {\n                   next()\n               } else {\n                   //store中没有路由，则需要获取获取异步路由，并进行格式化处理\n                   try {\n                       const accessRoutes = getAsyncRoutes(await store.state.addRoutes );\n                       // 动态添加格式化过的路由\n                       router.addRoutes(accessRoutes);\n                       next({ ...to, replace: true })\n                   } catch (error) {\n                       // Message.error('出错了')\n                       next(`/login?redirect=${to.path}`)\n                       NProgress.done()\n                   }\n               }\n           }\n       } else {\n           if (whiteList.indexOf(to.path) !== -1) {\n               next()\n           } else {\n               next(`/login?redirect=${to.path}`)\n               NProgress.done()\n           }\n       }\n   })\n   \n   router.afterEach(() => {\n       NProgress.done()\n   })\n   ```\n\n5. 在main.js中引入permission.js文件\n\n6. 在login登录的时候将路由信息存储到store中\n\n   ```js\n   //  登录接口调用后，调用路由接口，后端返回相应用户的路由res.router，我们需要存储到store中，方便其他地方拿取\n   this.$store.dispatch(\"addRoutes\", res.router);\n   ```\n\n   到这里，整个动态路由就可以走通了，但是页面跳转、路由守卫处理是异步的，会存在动态路由添加后跳转的是空白页面，这是因为路由在执行next()时，router里面的数据还不存在，此时，你可以通过window.location.reload()来刷新路由\n\n### 混入（mixin）\n\n","slug":"VUE高级技巧记录","published":1,"updated":"2021-02-22T12:19:56.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl0uux6vb00047sufhzjgdk2b","content":"<meta name=\"referrer\" content=\"no-referrer\"/>\n\n<h2 id=\"真实项目中应用VUE的进阶功能\"><a href=\"#真实项目中应用VUE的进阶功能\" class=\"headerlink\" title=\"真实项目中应用VUE的进阶功能\"></a>真实项目中应用VUE的进阶功能</h2><p>自定义指令，混入，持续更新中</p>\n<h3 id=\"自定义指令\"><a href=\"#自定义指令\" class=\"headerlink\" title=\"自定义指令\"></a>自定义指令</h3><blockquote>\n<p>当你需要对普通 DOM 元素<strong>进行底层操作</strong>，这时候就会用到自定义指令</p>\n</blockquote>\n<ol>\n<li><p>全局注册和局部注册</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 注册一个全局自定义指令 `v-focus`</span></span><br><span class=\"line\"><span class=\"title class_\">Vue</span>.<span class=\"title function_\">directive</span>(<span class=\"string\">&#x27;focus&#x27;</span>, &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 当被绑定的元素插入到 DOM 中时……</span></span><br><span class=\"line\">  <span class=\"attr\">inserted</span>: <span class=\"keyword\">function</span> (<span class=\"params\">el</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 聚焦元素</span></span><br><span class=\"line\">    el.<span class=\"title function_\">focus</span>()</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//注册一个局部组件指令</span></span><br><span class=\"line\"><span class=\"attr\">directive</span>:&#123;</span><br><span class=\"line\">  <span class=\"attr\">focus</span>:&#123;</span><br><span class=\"line\">     <span class=\"comment\">// 指令的定义</span></span><br><span class=\"line\">    <span class=\"attr\">inserted</span>:<span class=\"keyword\">function</span>(<span class=\"params\">el</span>)&#123;</span><br><span class=\"line\">      el.<span class=\"title function_\">focus</span>()</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li><p>示例（改造后台系统的权限功能）</p>\n<p>根据后台返回的权限数据来判断是否显示按钮</p>\n<ul>\n<li>HTML结构</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div id=<span class=\"string\">&quot;app&quot;</span>&gt;</span><br><span class=\"line\">  <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;mr_15&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">          <span class=\"tag\">&lt;<span class=\"name\">el-button</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">            <span class=\"attr\">:loading</span>=<span class=\"string\">&quot;isLoading&quot;</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">            <span class=\"attr\">type</span>=<span class=\"string\">&quot;primary&quot;</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">            @<span class=\"attr\">click</span>=<span class=\"string\">&quot;addNewItem&quot;</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">            <span class=\"attr\">v-has:merchantsMatchActivity_add</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">            &gt;</span>新增&lt;/el-button</span></span><br><span class=\"line\"><span class=\"language-xml\">          &gt;</span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>JS</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">Vue</span>.<span class=\"title function_\">directive</span>(<span class=\"string\">&#x27;has&#x27;</span>, &#123;</span><br><span class=\"line\">  <span class=\"attr\">inserted</span>: <span class=\"function\">(<span class=\"params\">el, binding, vnode</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(vnode, el.<span class=\"property\">parentNode</span>)</span><br><span class=\"line\">    <span class=\"keyword\">let</span> path = vnode.<span class=\"property\">context</span>.<span class=\"property\">$route</span>.<span class=\"property\">path</span>.<span class=\"title function_\">split</span>(<span class=\"string\">&#x27;/&#x27;</span>)[<span class=\"number\">1</span>]</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!<span class=\"title function_\">checkHasPass</span>(path, binding.<span class=\"property\">arg</span>)) &#123;</span><br><span class=\"line\">      el.<span class=\"property\">parentNode</span>.<span class=\"title function_\">removeChild</span>(el)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">checkHasPass</span>(<span class=\"params\">path, name</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> operator = <span class=\"title function_\">openFun</span>(path)</span><br><span class=\"line\">  <span class=\"keyword\">let</span> pass = <span class=\"literal\">false</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">const</span> key <span class=\"keyword\">in</span> operator) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (key == name) &#123;</span><br><span class=\"line\">      pass = <span class=\"literal\">true</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> pass</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">openFun是一个筛选数据的函数，如果有对应的权限字段，会返回一个对象</span><br><span class=\"line\"><span class=\"keyword\">let</span> op = &#123;&#125;;</span><br><span class=\"line\"><span class=\"keyword\">let</span> oneLevelArr = [];</span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">getPer</span>(<span class=\"params\">arr</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; arr.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">    <span class=\"comment\">//只要商客 sys:10</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (arr[i].<span class=\"property\">sys</span> == <span class=\"number\">10</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (arr[i][<span class=\"string\">&quot;children&quot;</span>] &amp;&amp; arr[i][<span class=\"string\">&quot;children&quot;</span>].<span class=\"property\">length</span>) &#123;</span><br><span class=\"line\">        <span class=\"title function_\">getPer</span>(arr[i][<span class=\"string\">&quot;children&quot;</span>]);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      oneLevelArr.<span class=\"title function_\">push</span>(arr[i]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">const</span> openFun = <span class=\"keyword\">function</span>(<span class=\"params\">name</span>) &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(name);</span><br><span class=\"line\">  op = &#123;&#125;;</span><br><span class=\"line\">  oneLevelArr = [];</span><br><span class=\"line\">  <span class=\"title function_\">getPer</span>(<span class=\"title class_\">JSON</span>.<span class=\"title function_\">parse</span>(sessionStorage.<span class=\"title function_\">getItem</span>(<span class=\"string\">&quot;resources&quot;</span>)));</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; oneLevelArr.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"title class_\">String</span>(oneLevelArr[i][<span class=\"string\">&quot;icon&quot;</span>]) === name) &#123;</span><br><span class=\"line\">      op[oneLevelArr[i][<span class=\"string\">&quot;resourceMark&quot;</span>]] =</span><br><span class=\"line\">        <span class=\"title class_\">Number</span>(oneLevelArr[i][<span class=\"string\">&quot;resourceType&quot;</span>]) === <span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> op;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> openFun;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">resources形如:通过循环router中的children.<span class=\"property\">resourceMark</span>去判断是否有权限</span><br><span class=\"line\">[</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">router</span>: <span class=\"string\">&#x27;merchantsMatchActivity&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">resourceName</span>: <span class=\"string\">&#x27;比赛激励管理&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">sys</span>: <span class=\"number\">10</span>,</span><br><span class=\"line\">    <span class=\"attr\">children</span>: [</span><br><span class=\"line\">      <span class=\"attr\">resourceMark</span>: <span class=\"string\">&#x27;merchantsMatchActivity_add&#x27;</span>,</span><br><span class=\"line\">      <span class=\"attr\">icon</span>: <span class=\"string\">&#x27;merchantsMatchActivity&#x27;</span>,</span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n\n<p>Tips:</p>\n<ol>\n<li>el.parentNode.removeChild(el)方法需要配合inserted周期，配置bind周期会报错，父节点为null</li>\n<li>v-has:merchantsMatchActivity_add，冒号后面的字段会通过arg来拿到，并和resource去循环判断</li>\n</ol>\n</li>\n</ol>\n<ol start=\"3\">\n<li><p>详细说明</p>\n<ol>\n<li><p>钩子函数</p>\n<ul>\n<li><strong>bind</strong>：只调用一次，指令第一次绑定到元素时调用。在这里可以进行一次性的初始化设置。</li>\n<li><strong>inserted</strong>：被绑定元素插入父节点时调用 (仅保证父节点存在，但不一定已被插入文档中)。</li>\n<li><strong>update</strong>：所在组件的 VNode 更新时调用，但是可能发生在其子 VNode 更新之前。指令的值可能发生了改变，也可能没有。但是你可以通过比较更新前后的值来忽略不必要的模板更新。</li>\n<li><strong>componentUpdated</strong>：指令所在组件的 VNode 及其子 VNode 全部更新后调用。</li>\n<li><strong>unbind</strong>：只调用一次，指令与元素解绑时调用。</li>\n</ul>\n</li>\n<li><p>钩子函数参数</p>\n<blockquote>\n<p>除了 <code>el</code> 之外，其它参数都应该是只读的</p>\n</blockquote>\n<p>指令钩子函数会被传入以下参数：</p>\n<ul>\n<li><code>el</code>：指令所绑定的元素，可以用来直接操作 DOM 。</li>\n<li><code>binding</code>：一个对象，包含以下属性：<ul>\n<li><code>name</code>：指令名，不包括 v- 前缀。</li>\n<li><code>value</code>：指令的绑定值，例如：v-my-directive=”1 + 1” 中，绑定值为 2。</li>\n<li><code>oldValue</code>：指令绑定的前一个值，仅在 update 和 componentUpdated 钩子中可用。无论值是否改变都可用。</li>\n<li><code>expression</code>：字符串形式的指令表达式。例如 v-my-directive=”1 + 1” 中，表达式为 “1 + 1”。</li>\n<li><code>arg</code>：传给指令的参数，可选。例如 v-my-directive:foo 中，参数为 “foo”。</li>\n<li><code>modifiers</code>：一个包含修饰符的对象。例如：v-my-directive.foo.bar 中，修饰符对象为 { foo: true, bar: true }。</li>\n</ul>\n</li>\n<li><code>vnode</code>：Vue 编译生成的虚拟节点。</li>\n<li><code>oldVnode</code>：上一个虚拟节点，仅在 update 和 componentUpdated 钩子中可用。</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"动态路由\"><a href=\"#动态路由\" class=\"headerlink\" title=\"动态路由\"></a>动态路由</h3><h4 id=\"官网动态路由解释\"><a href=\"#官网动态路由解释\" class=\"headerlink\" title=\"官网动态路由解释\"></a>官网动态路由解释</h4><p>当多个router-link对应一个组件的时候，可以去使用动态路由，而不用设置多个组件一一对应</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title class_\">User</span> = &#123;</span><br><span class=\"line\">  <span class=\"attr\">template</span>: <span class=\"string\">&#x27;&lt;div&gt;User&lt;/div&gt;&#x27;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> router = <span class=\"keyword\">new</span> <span class=\"title class_\">VueRouter</span>(&#123;</span><br><span class=\"line\">  <span class=\"attr\">routes</span>: [</span><br><span class=\"line\">    <span class=\"comment\">// 动态路径参数 以冒号开头</span></span><br><span class=\"line\">    &#123; <span class=\"attr\">path</span>: <span class=\"string\">&#x27;/user/:id&#x27;</span>, <span class=\"attr\">component</span>: <span class=\"title class_\">User</span> &#125;</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<p>组件内部:可以通过$route.params的形式拿到数据，从而可以渲染不同的数据出来</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title class_\">User</span> = &#123;</span><br><span class=\"line\">  <span class=\"attr\">template</span>: <span class=\"string\">&#x27;&lt;div&gt;User &#123;&#123; $route.params.id &#125;&#125;&lt;/div&gt;&#x27;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>当使用动态路由的时候，mounted周期会失效，因为为了节省开销，VUE在你使用动态路由功能的时候会复用之前已经生成的组件，导致根本就不会进入初始化周期。为此，添加一个新的周期：beforeRouteUpdate</p>\n</blockquote>\n</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title class_\">User</span> = &#123;</span><br><span class=\"line\">  <span class=\"attr\">template</span>: <span class=\"string\">&#x27;...&#x27;</span>,</span><br><span class=\"line\">  beforeRouteUpdate (to, <span class=\"keyword\">from</span>, next) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// react to route changes...</span></span><br><span class=\"line\">    <span class=\"comment\">// don&#x27;t forget to call next()</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"实际上的动态路由应用\"><a href=\"#实际上的动态路由应用\" class=\"headerlink\" title=\"实际上的动态路由应用\"></a>实际上的动态路由应用</h4><p>实际上，我们谈论动态路由的时候，更多的是说获取后端的数据、动态添加路由、从而实现权限等渲染控制。类似动态生成菜单功能</p>\n<ol>\n<li><p>后端返回的数组数据</p>\n<p>后端返回路由数据如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">routerList = [</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;path&quot;</span>: <span class=\"string\">&quot;/other&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;component&quot;</span>: <span class=\"string\">&quot;Layout&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;redirect&quot;</span>: <span class=\"string\">&quot;noRedirect&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;name&quot;</span>: <span class=\"string\">&quot;otherPage&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;meta&quot;</span>: &#123;</span><br><span class=\"line\">            <span class=\"string\">&quot;title&quot;</span>: <span class=\"string\">&quot;测试&quot;</span>,</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        <span class=\"string\">&quot;children&quot;</span>: [</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"string\">&quot;path&quot;</span>: <span class=\"string\">&quot;a&quot;</span>,</span><br><span class=\"line\">                <span class=\"string\">&quot;component&quot;</span>: <span class=\"string\">&quot;file/a&quot;</span>,</span><br><span class=\"line\">                <span class=\"string\">&quot;name&quot;</span>: <span class=\"string\">&quot;a&quot;</span>,</span><br><span class=\"line\">                <span class=\"string\">&quot;meta&quot;</span>: &#123; <span class=\"string\">&quot;title&quot;</span>: <span class=\"string\">&quot;a页面&quot;</span>, <span class=\"string\">&quot;noCache&quot;</span>: <span class=\"string\">&quot;true&quot;</span> &#125;</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"string\">&quot;path&quot;</span>: <span class=\"string\">&quot;b&quot;</span>,</span><br><span class=\"line\">                <span class=\"string\">&quot;component&quot;</span>: <span class=\"string\">&quot;file/b&quot;</span>,</span><br><span class=\"line\">                <span class=\"string\">&quot;name&quot;</span>: <span class=\"string\">&quot;b&quot;</span>,</span><br><span class=\"line\">                <span class=\"string\">&quot;meta&quot;</span>: &#123; <span class=\"string\">&quot;title&quot;</span>: <span class=\"string\">&quot;b页面&quot;</span>, <span class=\"string\">&quot;noCache&quot;</span>: <span class=\"string\">&quot;true&quot;</span> &#125;</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">        ]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">]\t</span><br></pre></td></tr></table></figure></li>\n<li><p>前端静态路由</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">Vue</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">Router</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue-router&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">Layout</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;@/layout&#x27;</span>;</span><br><span class=\"line\"><span class=\"title class_\">Vue</span>.<span class=\"title function_\">use</span>(<span class=\"title class_\">Router</span>)</span><br><span class=\"line\"><span class=\"comment\">// 配置项目中没有涉及权限的公共路由</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> constantRoutes = [</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"attr\">path</span>: <span class=\"string\">&#x27;/login&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">component</span>: <span class=\"function\">() =&gt;</span> <span class=\"title function_\">import</span>(<span class=\"string\">&#x27;@/views/login&#x27;</span>),</span><br><span class=\"line\">        <span class=\"attr\">hidden</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"attr\">path</span>: <span class=\"string\">&#x27;/404&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">component</span>: <span class=\"function\">() =&gt;</span> <span class=\"title function_\">import</span>(<span class=\"string\">&#x27;@/views/404&#x27;</span>),</span><br><span class=\"line\">        <span class=\"attr\">hidden</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">createRouter</span> = (<span class=\"params\"></span>) =&gt; <span class=\"keyword\">new</span> <span class=\"title class_\">Router</span>(&#123;</span><br><span class=\"line\">    <span class=\"attr\">mode</span>: <span class=\"string\">&#x27;history&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">scrollBehavior</span>: <span class=\"function\">() =&gt;</span> (&#123; <span class=\"attr\">y</span>: <span class=\"number\">0</span> &#125;),</span><br><span class=\"line\">    <span class=\"attr\">routes</span>: constantRoutes</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"keyword\">const</span> router = <span class=\"title function_\">createRouter</span>()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">function</span> <span class=\"title function_\">resetRouter</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> newRouter = <span class=\"title function_\">createRouter</span>()</span><br><span class=\"line\">    router.<span class=\"property\">matcher</span> = newRouter.<span class=\"property\">matcher</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> router</span><br></pre></td></tr></table></figure>\n\n<p>静态路由就直接按照正常的写法来处理</p>\n</li>\n<li><p>处理后台返回的路由格式</p>\n<p>新建一个公共的<code>asyncRouter.js</code>文件</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 引入路由文件这种的公共路由</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; constantRoutes &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;../router&#x27;</span>;</span><br><span class=\"line\"><span class=\"comment\">// Layout 组件是项目中的主页面，切换路由时，仅切换Layout中的组件</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">Layout</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;@/layout&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">function</span> <span class=\"title function_\">getAsyncRoutes</span>(<span class=\"params\">routes</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> res = []</span><br><span class=\"line\">    <span class=\"comment\">// 定义路由中需要的自定名</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> keys = [<span class=\"string\">&#x27;path&#x27;</span>, <span class=\"string\">&#x27;name&#x27;</span>, <span class=\"string\">&#x27;children&#x27;</span>, <span class=\"string\">&#x27;redirect&#x27;</span>, <span class=\"string\">&#x27;meta&#x27;</span>, <span class=\"string\">&#x27;hidden&#x27;</span>]</span><br><span class=\"line\">    <span class=\"comment\">// 遍历路由数组去重组可用的路由</span></span><br><span class=\"line\">    routes.<span class=\"title function_\">forEach</span>(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> newItem = &#123;&#125;;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (item.<span class=\"property\">component</span>) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 判断 item.component 是否等于 &#x27;Layout&#x27;,若是则直接替换成引入的 Layout 组件</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (item.<span class=\"property\">component</span> === <span class=\"string\">&#x27;Layout&#x27;</span>) &#123;</span><br><span class=\"line\">                newItem.<span class=\"property\">component</span> = <span class=\"title class_\">Layout</span></span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"comment\">//  item.component 不等于 &#x27;Layout&#x27;,则说明它是组件路径地址，因此直接替换成路由引入的方法</span></span><br><span class=\"line\">                newItem.<span class=\"property\">component</span> = <span class=\"function\"><span class=\"params\">resolve</span> =&gt;</span> <span class=\"built_in\">require</span>([<span class=\"string\">`@/views/<span class=\"subst\">$&#123;item.component&#125;</span>`</span>],resolve)</span><br><span class=\"line\">                </span><br><span class=\"line\">                <span class=\"comment\">// 此处用reqiure比较好，import引入变量会有各种莫名的错误</span></span><br><span class=\"line\">                <span class=\"comment\">// newItem.component = (() =&gt; import(`@/views/$&#123;item.component&#125;`));</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">const</span> key <span class=\"keyword\">in</span> item) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (keys.<span class=\"title function_\">includes</span>(key)) &#123;</span><br><span class=\"line\">                newItem[key] = item[key]</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">// 若遍历的当前路由存在子路由，需要对子路由进行递归遍历</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (newItem.<span class=\"property\">children</span> &amp;&amp; newItem.<span class=\"property\">children</span>.<span class=\"property\">length</span>) &#123;</span><br><span class=\"line\">            newItem.<span class=\"property\">children</span> = <span class=\"title function_\">getAsyncRoutes</span>(item.<span class=\"property\">children</span>)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        res.<span class=\"title function_\">push</span>(newItem)</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    <span class=\"comment\">// 返回处理好且可用的路由数组</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> res</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>其中，newItem这个变量会被改造成类似如下结构：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">       <span class=\"attr\">path</span>: <span class=\"string\">&#x27;/file&#x27;</span>,</span><br><span class=\"line\">       <span class=\"attr\">component</span>: <span class=\"function\">() =&gt;</span> <span class=\"title function_\">import</span>(<span class=\"string\">&#x27;@/views/file&#x27;</span>),</span><br><span class=\"line\">       <span class=\"attr\">hidden</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">       <span class=\"attr\">name</span>: <span class=\"string\">&quot;a&quot;</span>,</span><br><span class=\"line\">       <span class=\"attr\">meta</span>: &#123; <span class=\"string\">&quot;title&quot;</span>: <span class=\"string\">&quot;a页面&quot;</span>, <span class=\"string\">&quot;noCache&quot;</span>: <span class=\"string\">&quot;true&quot;</span> &#125;</span><br><span class=\"line\">   &#125;,</span><br></pre></td></tr></table></figure></li>\n<li><p>添加到router上去</p>\n<p>创建路由守卫：创建公共的permission.js文件，设置路由守卫</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//  进度条引入设置如上面第一种描述一样</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> router <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./router&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> store <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./store&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">NProgress</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;nprogress&#x27;</span> <span class=\"comment\">// progress bar</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;nprogress/nprogress.css&#x27;</span> <span class=\"comment\">// progress bar style</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; getToken &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;@/utils/auth&#x27;</span> <span class=\"comment\">// get token from cookie</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; getAsyncRoutes &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;@/utils/asyncRouter&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> whiteList = [<span class=\"string\">&#x27;/login&#x27;</span>];</span><br><span class=\"line\">router.<span class=\"title function_\">beforeEach</span>( <span class=\"keyword\">async</span> (to, <span class=\"keyword\">from</span>, next) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"title class_\">NProgress</span>.<span class=\"title function_\">start</span>()</span><br><span class=\"line\">    <span class=\"variable language_\">document</span>.<span class=\"property\">title</span> = to.<span class=\"property\">meta</span>.<span class=\"property\">title</span>;</span><br><span class=\"line\">    <span class=\"comment\">// 获取用户token，用来判断当前用户是否登录</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> hasToken = <span class=\"title function_\">getToken</span>()</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (hasToken) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (to.<span class=\"property\">path</span> === <span class=\"string\">&#x27;/login&#x27;</span>) &#123;</span><br><span class=\"line\">            <span class=\"title function_\">next</span>(&#123; <span class=\"attr\">path</span>: <span class=\"string\">&#x27;/&#x27;</span> &#125;)</span><br><span class=\"line\">            <span class=\"title class_\">NProgress</span>.<span class=\"title function_\">done</span>()</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"comment\">//异步获取store中的路由</span></span><br><span class=\"line\">            <span class=\"keyword\">let</span> route = <span class=\"keyword\">await</span> store.<span class=\"property\">state</span>.<span class=\"property\">addRoutes</span>;</span><br><span class=\"line\">            <span class=\"keyword\">const</span> hasRouters = route &amp;&amp; route.<span class=\"property\">length</span>&gt;<span class=\"number\">0</span>;</span><br><span class=\"line\">            <span class=\"comment\">//判断store中是否有路由，若有，进行下一步</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> ( hasRouters ) &#123;</span><br><span class=\"line\">                <span class=\"title function_\">next</span>()</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                <span class=\"comment\">//store中没有路由，则需要获取获取异步路由，并进行格式化处理</span></span><br><span class=\"line\">                <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">const</span> accessRoutes = <span class=\"title function_\">getAsyncRoutes</span>(<span class=\"keyword\">await</span> store.<span class=\"property\">state</span>.<span class=\"property\">addRoutes</span> );</span><br><span class=\"line\">                    <span class=\"comment\">// 动态添加格式化过的路由</span></span><br><span class=\"line\">                    router.<span class=\"title function_\">addRoutes</span>(accessRoutes);</span><br><span class=\"line\">                    <span class=\"title function_\">next</span>(&#123; ...to, <span class=\"attr\">replace</span>: <span class=\"literal\">true</span> &#125;)</span><br><span class=\"line\">                &#125; <span class=\"keyword\">catch</span> (error) &#123;</span><br><span class=\"line\">                    <span class=\"comment\">// Message.error(&#x27;出错了&#x27;)</span></span><br><span class=\"line\">                    <span class=\"title function_\">next</span>(<span class=\"string\">`/login?redirect=<span class=\"subst\">$&#123;to.path&#125;</span>`</span>)</span><br><span class=\"line\">                    <span class=\"title class_\">NProgress</span>.<span class=\"title function_\">done</span>()</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (whiteList.<span class=\"title function_\">indexOf</span>(to.<span class=\"property\">path</span>) !== -<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">            <span class=\"title function_\">next</span>()</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"title function_\">next</span>(<span class=\"string\">`/login?redirect=<span class=\"subst\">$&#123;to.path&#125;</span>`</span>)</span><br><span class=\"line\">            <span class=\"title class_\">NProgress</span>.<span class=\"title function_\">done</span>()</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">router.<span class=\"title function_\">afterEach</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"title class_\">NProgress</span>.<span class=\"title function_\">done</span>()</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure></li>\n<li><p>在main.js中引入permission.js文件</p>\n</li>\n<li><p>在login登录的时候将路由信息存储到store中</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//  登录接口调用后，调用路由接口，后端返回相应用户的路由res.router，我们需要存储到store中，方便其他地方拿取</span></span><br><span class=\"line\"><span class=\"variable language_\">this</span>.<span class=\"property\">$store</span>.<span class=\"title function_\">dispatch</span>(<span class=\"string\">&quot;addRoutes&quot;</span>, res.<span class=\"property\">router</span>);</span><br></pre></td></tr></table></figure>\n\n<p>到这里，整个动态路由就可以走通了，但是页面跳转、路由守卫处理是异步的，会存在动态路由添加后跳转的是空白页面，这是因为路由在执行next()时，router里面的数据还不存在，此时，你可以通过window.location.reload()来刷新路由</p>\n</li>\n</ol>\n<h3 id=\"混入（mixin）\"><a href=\"#混入（mixin）\" class=\"headerlink\" title=\"混入（mixin）\"></a>混入（mixin）</h3>","site":{"data":{}},"excerpt":"","more":"<meta name=\"referrer\" content=\"no-referrer\"/>\n\n<h2 id=\"真实项目中应用VUE的进阶功能\"><a href=\"#真实项目中应用VUE的进阶功能\" class=\"headerlink\" title=\"真实项目中应用VUE的进阶功能\"></a>真实项目中应用VUE的进阶功能</h2><p>自定义指令，混入，持续更新中</p>\n<h3 id=\"自定义指令\"><a href=\"#自定义指令\" class=\"headerlink\" title=\"自定义指令\"></a>自定义指令</h3><blockquote>\n<p>当你需要对普通 DOM 元素<strong>进行底层操作</strong>，这时候就会用到自定义指令</p>\n</blockquote>\n<ol>\n<li><p>全局注册和局部注册</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 注册一个全局自定义指令 `v-focus`</span></span><br><span class=\"line\"><span class=\"title class_\">Vue</span>.<span class=\"title function_\">directive</span>(<span class=\"string\">&#x27;focus&#x27;</span>, &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 当被绑定的元素插入到 DOM 中时……</span></span><br><span class=\"line\">  <span class=\"attr\">inserted</span>: <span class=\"keyword\">function</span> (<span class=\"params\">el</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 聚焦元素</span></span><br><span class=\"line\">    el.<span class=\"title function_\">focus</span>()</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//注册一个局部组件指令</span></span><br><span class=\"line\"><span class=\"attr\">directive</span>:&#123;</span><br><span class=\"line\">  <span class=\"attr\">focus</span>:&#123;</span><br><span class=\"line\">     <span class=\"comment\">// 指令的定义</span></span><br><span class=\"line\">    <span class=\"attr\">inserted</span>:<span class=\"keyword\">function</span>(<span class=\"params\">el</span>)&#123;</span><br><span class=\"line\">      el.<span class=\"title function_\">focus</span>()</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li><p>示例（改造后台系统的权限功能）</p>\n<p>根据后台返回的权限数据来判断是否显示按钮</p>\n<ul>\n<li>HTML结构</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div id=<span class=\"string\">&quot;app&quot;</span>&gt;</span><br><span class=\"line\">  <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;mr_15&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">          <span class=\"tag\">&lt;<span class=\"name\">el-button</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">            <span class=\"attr\">:loading</span>=<span class=\"string\">&quot;isLoading&quot;</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">            <span class=\"attr\">type</span>=<span class=\"string\">&quot;primary&quot;</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">            @<span class=\"attr\">click</span>=<span class=\"string\">&quot;addNewItem&quot;</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">            <span class=\"attr\">v-has:merchantsMatchActivity_add</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">            &gt;</span>新增&lt;/el-button</span></span><br><span class=\"line\"><span class=\"language-xml\">          &gt;</span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>JS</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">Vue</span>.<span class=\"title function_\">directive</span>(<span class=\"string\">&#x27;has&#x27;</span>, &#123;</span><br><span class=\"line\">  <span class=\"attr\">inserted</span>: <span class=\"function\">(<span class=\"params\">el, binding, vnode</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(vnode, el.<span class=\"property\">parentNode</span>)</span><br><span class=\"line\">    <span class=\"keyword\">let</span> path = vnode.<span class=\"property\">context</span>.<span class=\"property\">$route</span>.<span class=\"property\">path</span>.<span class=\"title function_\">split</span>(<span class=\"string\">&#x27;/&#x27;</span>)[<span class=\"number\">1</span>]</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!<span class=\"title function_\">checkHasPass</span>(path, binding.<span class=\"property\">arg</span>)) &#123;</span><br><span class=\"line\">      el.<span class=\"property\">parentNode</span>.<span class=\"title function_\">removeChild</span>(el)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">checkHasPass</span>(<span class=\"params\">path, name</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> operator = <span class=\"title function_\">openFun</span>(path)</span><br><span class=\"line\">  <span class=\"keyword\">let</span> pass = <span class=\"literal\">false</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">const</span> key <span class=\"keyword\">in</span> operator) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (key == name) &#123;</span><br><span class=\"line\">      pass = <span class=\"literal\">true</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> pass</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">openFun是一个筛选数据的函数，如果有对应的权限字段，会返回一个对象</span><br><span class=\"line\"><span class=\"keyword\">let</span> op = &#123;&#125;;</span><br><span class=\"line\"><span class=\"keyword\">let</span> oneLevelArr = [];</span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">getPer</span>(<span class=\"params\">arr</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; arr.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">    <span class=\"comment\">//只要商客 sys:10</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (arr[i].<span class=\"property\">sys</span> == <span class=\"number\">10</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (arr[i][<span class=\"string\">&quot;children&quot;</span>] &amp;&amp; arr[i][<span class=\"string\">&quot;children&quot;</span>].<span class=\"property\">length</span>) &#123;</span><br><span class=\"line\">        <span class=\"title function_\">getPer</span>(arr[i][<span class=\"string\">&quot;children&quot;</span>]);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      oneLevelArr.<span class=\"title function_\">push</span>(arr[i]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">const</span> openFun = <span class=\"keyword\">function</span>(<span class=\"params\">name</span>) &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(name);</span><br><span class=\"line\">  op = &#123;&#125;;</span><br><span class=\"line\">  oneLevelArr = [];</span><br><span class=\"line\">  <span class=\"title function_\">getPer</span>(<span class=\"title class_\">JSON</span>.<span class=\"title function_\">parse</span>(sessionStorage.<span class=\"title function_\">getItem</span>(<span class=\"string\">&quot;resources&quot;</span>)));</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; oneLevelArr.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"title class_\">String</span>(oneLevelArr[i][<span class=\"string\">&quot;icon&quot;</span>]) === name) &#123;</span><br><span class=\"line\">      op[oneLevelArr[i][<span class=\"string\">&quot;resourceMark&quot;</span>]] =</span><br><span class=\"line\">        <span class=\"title class_\">Number</span>(oneLevelArr[i][<span class=\"string\">&quot;resourceType&quot;</span>]) === <span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> op;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> openFun;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">resources形如:通过循环router中的children.<span class=\"property\">resourceMark</span>去判断是否有权限</span><br><span class=\"line\">[</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">router</span>: <span class=\"string\">&#x27;merchantsMatchActivity&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">resourceName</span>: <span class=\"string\">&#x27;比赛激励管理&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">sys</span>: <span class=\"number\">10</span>,</span><br><span class=\"line\">    <span class=\"attr\">children</span>: [</span><br><span class=\"line\">      <span class=\"attr\">resourceMark</span>: <span class=\"string\">&#x27;merchantsMatchActivity_add&#x27;</span>,</span><br><span class=\"line\">      <span class=\"attr\">icon</span>: <span class=\"string\">&#x27;merchantsMatchActivity&#x27;</span>,</span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n\n<p>Tips:</p>\n<ol>\n<li>el.parentNode.removeChild(el)方法需要配合inserted周期，配置bind周期会报错，父节点为null</li>\n<li>v-has:merchantsMatchActivity_add，冒号后面的字段会通过arg来拿到，并和resource去循环判断</li>\n</ol>\n</li>\n</ol>\n<ol start=\"3\">\n<li><p>详细说明</p>\n<ol>\n<li><p>钩子函数</p>\n<ul>\n<li><strong>bind</strong>：只调用一次，指令第一次绑定到元素时调用。在这里可以进行一次性的初始化设置。</li>\n<li><strong>inserted</strong>：被绑定元素插入父节点时调用 (仅保证父节点存在，但不一定已被插入文档中)。</li>\n<li><strong>update</strong>：所在组件的 VNode 更新时调用，但是可能发生在其子 VNode 更新之前。指令的值可能发生了改变，也可能没有。但是你可以通过比较更新前后的值来忽略不必要的模板更新。</li>\n<li><strong>componentUpdated</strong>：指令所在组件的 VNode 及其子 VNode 全部更新后调用。</li>\n<li><strong>unbind</strong>：只调用一次，指令与元素解绑时调用。</li>\n</ul>\n</li>\n<li><p>钩子函数参数</p>\n<blockquote>\n<p>除了 <code>el</code> 之外，其它参数都应该是只读的</p>\n</blockquote>\n<p>指令钩子函数会被传入以下参数：</p>\n<ul>\n<li><code>el</code>：指令所绑定的元素，可以用来直接操作 DOM 。</li>\n<li><code>binding</code>：一个对象，包含以下属性：<ul>\n<li><code>name</code>：指令名，不包括 v- 前缀。</li>\n<li><code>value</code>：指令的绑定值，例如：v-my-directive=”1 + 1” 中，绑定值为 2。</li>\n<li><code>oldValue</code>：指令绑定的前一个值，仅在 update 和 componentUpdated 钩子中可用。无论值是否改变都可用。</li>\n<li><code>expression</code>：字符串形式的指令表达式。例如 v-my-directive=”1 + 1” 中，表达式为 “1 + 1”。</li>\n<li><code>arg</code>：传给指令的参数，可选。例如 v-my-directive:foo 中，参数为 “foo”。</li>\n<li><code>modifiers</code>：一个包含修饰符的对象。例如：v-my-directive.foo.bar 中，修饰符对象为 { foo: true, bar: true }。</li>\n</ul>\n</li>\n<li><code>vnode</code>：Vue 编译生成的虚拟节点。</li>\n<li><code>oldVnode</code>：上一个虚拟节点，仅在 update 和 componentUpdated 钩子中可用。</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"动态路由\"><a href=\"#动态路由\" class=\"headerlink\" title=\"动态路由\"></a>动态路由</h3><h4 id=\"官网动态路由解释\"><a href=\"#官网动态路由解释\" class=\"headerlink\" title=\"官网动态路由解释\"></a>官网动态路由解释</h4><p>当多个router-link对应一个组件的时候，可以去使用动态路由，而不用设置多个组件一一对应</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title class_\">User</span> = &#123;</span><br><span class=\"line\">  <span class=\"attr\">template</span>: <span class=\"string\">&#x27;&lt;div&gt;User&lt;/div&gt;&#x27;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> router = <span class=\"keyword\">new</span> <span class=\"title class_\">VueRouter</span>(&#123;</span><br><span class=\"line\">  <span class=\"attr\">routes</span>: [</span><br><span class=\"line\">    <span class=\"comment\">// 动态路径参数 以冒号开头</span></span><br><span class=\"line\">    &#123; <span class=\"attr\">path</span>: <span class=\"string\">&#x27;/user/:id&#x27;</span>, <span class=\"attr\">component</span>: <span class=\"title class_\">User</span> &#125;</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<p>组件内部:可以通过$route.params的形式拿到数据，从而可以渲染不同的数据出来</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title class_\">User</span> = &#123;</span><br><span class=\"line\">  <span class=\"attr\">template</span>: <span class=\"string\">&#x27;&lt;div&gt;User &#123;&#123; $route.params.id &#125;&#125;&lt;/div&gt;&#x27;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>当使用动态路由的时候，mounted周期会失效，因为为了节省开销，VUE在你使用动态路由功能的时候会复用之前已经生成的组件，导致根本就不会进入初始化周期。为此，添加一个新的周期：beforeRouteUpdate</p>\n</blockquote>\n</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title class_\">User</span> = &#123;</span><br><span class=\"line\">  <span class=\"attr\">template</span>: <span class=\"string\">&#x27;...&#x27;</span>,</span><br><span class=\"line\">  beforeRouteUpdate (to, <span class=\"keyword\">from</span>, next) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// react to route changes...</span></span><br><span class=\"line\">    <span class=\"comment\">// don&#x27;t forget to call next()</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"实际上的动态路由应用\"><a href=\"#实际上的动态路由应用\" class=\"headerlink\" title=\"实际上的动态路由应用\"></a>实际上的动态路由应用</h4><p>实际上，我们谈论动态路由的时候，更多的是说获取后端的数据、动态添加路由、从而实现权限等渲染控制。类似动态生成菜单功能</p>\n<ol>\n<li><p>后端返回的数组数据</p>\n<p>后端返回路由数据如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">routerList = [</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;path&quot;</span>: <span class=\"string\">&quot;/other&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;component&quot;</span>: <span class=\"string\">&quot;Layout&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;redirect&quot;</span>: <span class=\"string\">&quot;noRedirect&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;name&quot;</span>: <span class=\"string\">&quot;otherPage&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;meta&quot;</span>: &#123;</span><br><span class=\"line\">            <span class=\"string\">&quot;title&quot;</span>: <span class=\"string\">&quot;测试&quot;</span>,</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        <span class=\"string\">&quot;children&quot;</span>: [</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"string\">&quot;path&quot;</span>: <span class=\"string\">&quot;a&quot;</span>,</span><br><span class=\"line\">                <span class=\"string\">&quot;component&quot;</span>: <span class=\"string\">&quot;file/a&quot;</span>,</span><br><span class=\"line\">                <span class=\"string\">&quot;name&quot;</span>: <span class=\"string\">&quot;a&quot;</span>,</span><br><span class=\"line\">                <span class=\"string\">&quot;meta&quot;</span>: &#123; <span class=\"string\">&quot;title&quot;</span>: <span class=\"string\">&quot;a页面&quot;</span>, <span class=\"string\">&quot;noCache&quot;</span>: <span class=\"string\">&quot;true&quot;</span> &#125;</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"string\">&quot;path&quot;</span>: <span class=\"string\">&quot;b&quot;</span>,</span><br><span class=\"line\">                <span class=\"string\">&quot;component&quot;</span>: <span class=\"string\">&quot;file/b&quot;</span>,</span><br><span class=\"line\">                <span class=\"string\">&quot;name&quot;</span>: <span class=\"string\">&quot;b&quot;</span>,</span><br><span class=\"line\">                <span class=\"string\">&quot;meta&quot;</span>: &#123; <span class=\"string\">&quot;title&quot;</span>: <span class=\"string\">&quot;b页面&quot;</span>, <span class=\"string\">&quot;noCache&quot;</span>: <span class=\"string\">&quot;true&quot;</span> &#125;</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">        ]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">]\t</span><br></pre></td></tr></table></figure></li>\n<li><p>前端静态路由</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">Vue</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">Router</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue-router&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">Layout</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;@/layout&#x27;</span>;</span><br><span class=\"line\"><span class=\"title class_\">Vue</span>.<span class=\"title function_\">use</span>(<span class=\"title class_\">Router</span>)</span><br><span class=\"line\"><span class=\"comment\">// 配置项目中没有涉及权限的公共路由</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> constantRoutes = [</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"attr\">path</span>: <span class=\"string\">&#x27;/login&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">component</span>: <span class=\"function\">() =&gt;</span> <span class=\"title function_\">import</span>(<span class=\"string\">&#x27;@/views/login&#x27;</span>),</span><br><span class=\"line\">        <span class=\"attr\">hidden</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"attr\">path</span>: <span class=\"string\">&#x27;/404&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">component</span>: <span class=\"function\">() =&gt;</span> <span class=\"title function_\">import</span>(<span class=\"string\">&#x27;@/views/404&#x27;</span>),</span><br><span class=\"line\">        <span class=\"attr\">hidden</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">createRouter</span> = (<span class=\"params\"></span>) =&gt; <span class=\"keyword\">new</span> <span class=\"title class_\">Router</span>(&#123;</span><br><span class=\"line\">    <span class=\"attr\">mode</span>: <span class=\"string\">&#x27;history&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">scrollBehavior</span>: <span class=\"function\">() =&gt;</span> (&#123; <span class=\"attr\">y</span>: <span class=\"number\">0</span> &#125;),</span><br><span class=\"line\">    <span class=\"attr\">routes</span>: constantRoutes</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"keyword\">const</span> router = <span class=\"title function_\">createRouter</span>()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">function</span> <span class=\"title function_\">resetRouter</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> newRouter = <span class=\"title function_\">createRouter</span>()</span><br><span class=\"line\">    router.<span class=\"property\">matcher</span> = newRouter.<span class=\"property\">matcher</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> router</span><br></pre></td></tr></table></figure>\n\n<p>静态路由就直接按照正常的写法来处理</p>\n</li>\n<li><p>处理后台返回的路由格式</p>\n<p>新建一个公共的<code>asyncRouter.js</code>文件</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 引入路由文件这种的公共路由</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; constantRoutes &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;../router&#x27;</span>;</span><br><span class=\"line\"><span class=\"comment\">// Layout 组件是项目中的主页面，切换路由时，仅切换Layout中的组件</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">Layout</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;@/layout&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">function</span> <span class=\"title function_\">getAsyncRoutes</span>(<span class=\"params\">routes</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> res = []</span><br><span class=\"line\">    <span class=\"comment\">// 定义路由中需要的自定名</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> keys = [<span class=\"string\">&#x27;path&#x27;</span>, <span class=\"string\">&#x27;name&#x27;</span>, <span class=\"string\">&#x27;children&#x27;</span>, <span class=\"string\">&#x27;redirect&#x27;</span>, <span class=\"string\">&#x27;meta&#x27;</span>, <span class=\"string\">&#x27;hidden&#x27;</span>]</span><br><span class=\"line\">    <span class=\"comment\">// 遍历路由数组去重组可用的路由</span></span><br><span class=\"line\">    routes.<span class=\"title function_\">forEach</span>(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> newItem = &#123;&#125;;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (item.<span class=\"property\">component</span>) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 判断 item.component 是否等于 &#x27;Layout&#x27;,若是则直接替换成引入的 Layout 组件</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (item.<span class=\"property\">component</span> === <span class=\"string\">&#x27;Layout&#x27;</span>) &#123;</span><br><span class=\"line\">                newItem.<span class=\"property\">component</span> = <span class=\"title class_\">Layout</span></span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"comment\">//  item.component 不等于 &#x27;Layout&#x27;,则说明它是组件路径地址，因此直接替换成路由引入的方法</span></span><br><span class=\"line\">                newItem.<span class=\"property\">component</span> = <span class=\"function\"><span class=\"params\">resolve</span> =&gt;</span> <span class=\"built_in\">require</span>([<span class=\"string\">`@/views/<span class=\"subst\">$&#123;item.component&#125;</span>`</span>],resolve)</span><br><span class=\"line\">                </span><br><span class=\"line\">                <span class=\"comment\">// 此处用reqiure比较好，import引入变量会有各种莫名的错误</span></span><br><span class=\"line\">                <span class=\"comment\">// newItem.component = (() =&gt; import(`@/views/$&#123;item.component&#125;`));</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">const</span> key <span class=\"keyword\">in</span> item) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (keys.<span class=\"title function_\">includes</span>(key)) &#123;</span><br><span class=\"line\">                newItem[key] = item[key]</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">// 若遍历的当前路由存在子路由，需要对子路由进行递归遍历</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (newItem.<span class=\"property\">children</span> &amp;&amp; newItem.<span class=\"property\">children</span>.<span class=\"property\">length</span>) &#123;</span><br><span class=\"line\">            newItem.<span class=\"property\">children</span> = <span class=\"title function_\">getAsyncRoutes</span>(item.<span class=\"property\">children</span>)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        res.<span class=\"title function_\">push</span>(newItem)</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    <span class=\"comment\">// 返回处理好且可用的路由数组</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> res</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>其中，newItem这个变量会被改造成类似如下结构：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">       <span class=\"attr\">path</span>: <span class=\"string\">&#x27;/file&#x27;</span>,</span><br><span class=\"line\">       <span class=\"attr\">component</span>: <span class=\"function\">() =&gt;</span> <span class=\"title function_\">import</span>(<span class=\"string\">&#x27;@/views/file&#x27;</span>),</span><br><span class=\"line\">       <span class=\"attr\">hidden</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">       <span class=\"attr\">name</span>: <span class=\"string\">&quot;a&quot;</span>,</span><br><span class=\"line\">       <span class=\"attr\">meta</span>: &#123; <span class=\"string\">&quot;title&quot;</span>: <span class=\"string\">&quot;a页面&quot;</span>, <span class=\"string\">&quot;noCache&quot;</span>: <span class=\"string\">&quot;true&quot;</span> &#125;</span><br><span class=\"line\">   &#125;,</span><br></pre></td></tr></table></figure></li>\n<li><p>添加到router上去</p>\n<p>创建路由守卫：创建公共的permission.js文件，设置路由守卫</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//  进度条引入设置如上面第一种描述一样</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> router <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./router&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> store <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./store&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">NProgress</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;nprogress&#x27;</span> <span class=\"comment\">// progress bar</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;nprogress/nprogress.css&#x27;</span> <span class=\"comment\">// progress bar style</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; getToken &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;@/utils/auth&#x27;</span> <span class=\"comment\">// get token from cookie</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; getAsyncRoutes &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;@/utils/asyncRouter&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> whiteList = [<span class=\"string\">&#x27;/login&#x27;</span>];</span><br><span class=\"line\">router.<span class=\"title function_\">beforeEach</span>( <span class=\"keyword\">async</span> (to, <span class=\"keyword\">from</span>, next) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"title class_\">NProgress</span>.<span class=\"title function_\">start</span>()</span><br><span class=\"line\">    <span class=\"variable language_\">document</span>.<span class=\"property\">title</span> = to.<span class=\"property\">meta</span>.<span class=\"property\">title</span>;</span><br><span class=\"line\">    <span class=\"comment\">// 获取用户token，用来判断当前用户是否登录</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> hasToken = <span class=\"title function_\">getToken</span>()</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (hasToken) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (to.<span class=\"property\">path</span> === <span class=\"string\">&#x27;/login&#x27;</span>) &#123;</span><br><span class=\"line\">            <span class=\"title function_\">next</span>(&#123; <span class=\"attr\">path</span>: <span class=\"string\">&#x27;/&#x27;</span> &#125;)</span><br><span class=\"line\">            <span class=\"title class_\">NProgress</span>.<span class=\"title function_\">done</span>()</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"comment\">//异步获取store中的路由</span></span><br><span class=\"line\">            <span class=\"keyword\">let</span> route = <span class=\"keyword\">await</span> store.<span class=\"property\">state</span>.<span class=\"property\">addRoutes</span>;</span><br><span class=\"line\">            <span class=\"keyword\">const</span> hasRouters = route &amp;&amp; route.<span class=\"property\">length</span>&gt;<span class=\"number\">0</span>;</span><br><span class=\"line\">            <span class=\"comment\">//判断store中是否有路由，若有，进行下一步</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> ( hasRouters ) &#123;</span><br><span class=\"line\">                <span class=\"title function_\">next</span>()</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                <span class=\"comment\">//store中没有路由，则需要获取获取异步路由，并进行格式化处理</span></span><br><span class=\"line\">                <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">const</span> accessRoutes = <span class=\"title function_\">getAsyncRoutes</span>(<span class=\"keyword\">await</span> store.<span class=\"property\">state</span>.<span class=\"property\">addRoutes</span> );</span><br><span class=\"line\">                    <span class=\"comment\">// 动态添加格式化过的路由</span></span><br><span class=\"line\">                    router.<span class=\"title function_\">addRoutes</span>(accessRoutes);</span><br><span class=\"line\">                    <span class=\"title function_\">next</span>(&#123; ...to, <span class=\"attr\">replace</span>: <span class=\"literal\">true</span> &#125;)</span><br><span class=\"line\">                &#125; <span class=\"keyword\">catch</span> (error) &#123;</span><br><span class=\"line\">                    <span class=\"comment\">// Message.error(&#x27;出错了&#x27;)</span></span><br><span class=\"line\">                    <span class=\"title function_\">next</span>(<span class=\"string\">`/login?redirect=<span class=\"subst\">$&#123;to.path&#125;</span>`</span>)</span><br><span class=\"line\">                    <span class=\"title class_\">NProgress</span>.<span class=\"title function_\">done</span>()</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (whiteList.<span class=\"title function_\">indexOf</span>(to.<span class=\"property\">path</span>) !== -<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">            <span class=\"title function_\">next</span>()</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"title function_\">next</span>(<span class=\"string\">`/login?redirect=<span class=\"subst\">$&#123;to.path&#125;</span>`</span>)</span><br><span class=\"line\">            <span class=\"title class_\">NProgress</span>.<span class=\"title function_\">done</span>()</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">router.<span class=\"title function_\">afterEach</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"title class_\">NProgress</span>.<span class=\"title function_\">done</span>()</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure></li>\n<li><p>在main.js中引入permission.js文件</p>\n</li>\n<li><p>在login登录的时候将路由信息存储到store中</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//  登录接口调用后，调用路由接口，后端返回相应用户的路由res.router，我们需要存储到store中，方便其他地方拿取</span></span><br><span class=\"line\"><span class=\"variable language_\">this</span>.<span class=\"property\">$store</span>.<span class=\"title function_\">dispatch</span>(<span class=\"string\">&quot;addRoutes&quot;</span>, res.<span class=\"property\">router</span>);</span><br></pre></td></tr></table></figure>\n\n<p>到这里，整个动态路由就可以走通了，但是页面跳转、路由守卫处理是异步的，会存在动态路由添加后跳转的是空白页面，这是因为路由在执行next()时，router里面的数据还不存在，此时，你可以通过window.location.reload()来刷新路由</p>\n</li>\n</ol>\n<h3 id=\"混入（mixin）\"><a href=\"#混入（mixin）\" class=\"headerlink\" title=\"混入（mixin）\"></a>混入（mixin）</h3>"},{"title":"Hexo链接网络图片不显示","date":"2019-12-02T09:16:26.000Z","_content":"\n<meta name=\"referrer\" content=\"no-referrer\"/>\n\n## Hexo图片不显示\n\n### 问题\n\n博客内需要引用一些图片，使用的是阿里云Oss，图片设置的公共读，图片地址从浏览器打开可以直接访问，但是博客内引用不能显示。\n\n**在chrome浏览器中检查会发现有403的错误**\n\n![403](https://limengtupian.oss-cn-beijing.aliyuncs.com/403%E5%9B%BE%E7%89%87.png)\n\n<!-- more -->\n\n### 解决方法\n\n方法其实很简单，只需要文章的头部如下图所示位置添加<meta name=\"referrer\" content=\"no-referrer\"/>这一句话就可以完美解决问题\n\n![referrer](https://img-blog.csdnimg.cn/20190721223929809.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21xZHhpYW94aWFv,size_16,color_FFFFFF,t_70)\n\n### referrer是什么\n\n`<meta name=\"referrer\" content=\"no-referrer\">`\n\n\nreferrer是用于追踪用户是从哪个页面跳转过来，js中使用document.referrer来得到值，一般用户做移动端back按钮，如用户通过别人发送时候链接进入页面时，可以隐藏back按钮。\n\nreferrer有五种属性:\n\n* No Referrer （永远不做记录）\n\n* No Referrer When Downgrade（浏览器默认，当降级时候不记录，从https跳转到http）\n\n* Origin Only（只记录 协议+ host）\n\n* Origin When Cross-origin（仅在发生跨域访问时记录 协议+host）\n\n* Unsafe URL（永远记录）\n\n*参考链接* ：[[Referrer Policy 介绍](https://imququ.com/post/referrer-policy.html)]、[document.referrer的用法详解](http://www.jb51.net/article/117739.htm)\n\n<meta name=\"referrer\" content=\"no-referrer\"/>\n\n## 豆瓣api调用图片403提示\n\n### 豆瓣api\n\n需要搭建一个电影类的分类网站，所以会调用到豆瓣的api，现在官方没有给公共的api使用，于是网上找了下有提供备份的api使用，地址如下：[豆瓣api](https://douban.uieee.com/)\n\n使用这个地址，可以直接访问到豆瓣的内容，但是使用过程中，发现关于电影的名字，类型，上映年份都可以直接访问，只有图片没有办法访问，有提示403错误。\n\n### 原因\n\n豆瓣使用了防盗链：\n\n很多时候别人直接把我们的网站的资源拿去在他们网站展示，但是消费的是我们的流量，为了解决这种问题，才会有防盗链这个思路\n\n这里说的只是一个简单的概念，既使用host和reffer请求头做对比，简单的做一个处理，主要是用来熟悉http头\n\n<!-- more -->\n\n### 解决方法\n\n在页面中加上 <meta name=\"referrer\" content=\"never\">\n\n![fangdao](https://limengtupian.oss-cn-beijing.aliyuncs.com/%E9%98%B2%E7%9B%97%E9%93%BE.png)\n\n实现了正常的访问！","source":"_posts/hexo图片不显示.md","raw":"---\ntitle: Hexo链接网络图片不显示\ndate: 2019-12-02 17:16:26\ntags: [图片地址,hexo,refer]\n---\n\n<meta name=\"referrer\" content=\"no-referrer\"/>\n\n## Hexo图片不显示\n\n### 问题\n\n博客内需要引用一些图片，使用的是阿里云Oss，图片设置的公共读，图片地址从浏览器打开可以直接访问，但是博客内引用不能显示。\n\n**在chrome浏览器中检查会发现有403的错误**\n\n![403](https://limengtupian.oss-cn-beijing.aliyuncs.com/403%E5%9B%BE%E7%89%87.png)\n\n<!-- more -->\n\n### 解决方法\n\n方法其实很简单，只需要文章的头部如下图所示位置添加<meta name=\"referrer\" content=\"no-referrer\"/>这一句话就可以完美解决问题\n\n![referrer](https://img-blog.csdnimg.cn/20190721223929809.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21xZHhpYW94aWFv,size_16,color_FFFFFF,t_70)\n\n### referrer是什么\n\n`<meta name=\"referrer\" content=\"no-referrer\">`\n\n\nreferrer是用于追踪用户是从哪个页面跳转过来，js中使用document.referrer来得到值，一般用户做移动端back按钮，如用户通过别人发送时候链接进入页面时，可以隐藏back按钮。\n\nreferrer有五种属性:\n\n* No Referrer （永远不做记录）\n\n* No Referrer When Downgrade（浏览器默认，当降级时候不记录，从https跳转到http）\n\n* Origin Only（只记录 协议+ host）\n\n* Origin When Cross-origin（仅在发生跨域访问时记录 协议+host）\n\n* Unsafe URL（永远记录）\n\n*参考链接* ：[[Referrer Policy 介绍](https://imququ.com/post/referrer-policy.html)]、[document.referrer的用法详解](http://www.jb51.net/article/117739.htm)\n\n<meta name=\"referrer\" content=\"no-referrer\"/>\n\n## 豆瓣api调用图片403提示\n\n### 豆瓣api\n\n需要搭建一个电影类的分类网站，所以会调用到豆瓣的api，现在官方没有给公共的api使用，于是网上找了下有提供备份的api使用，地址如下：[豆瓣api](https://douban.uieee.com/)\n\n使用这个地址，可以直接访问到豆瓣的内容，但是使用过程中，发现关于电影的名字，类型，上映年份都可以直接访问，只有图片没有办法访问，有提示403错误。\n\n### 原因\n\n豆瓣使用了防盗链：\n\n很多时候别人直接把我们的网站的资源拿去在他们网站展示，但是消费的是我们的流量，为了解决这种问题，才会有防盗链这个思路\n\n这里说的只是一个简单的概念，既使用host和reffer请求头做对比，简单的做一个处理，主要是用来熟悉http头\n\n<!-- more -->\n\n### 解决方法\n\n在页面中加上 <meta name=\"referrer\" content=\"never\">\n\n![fangdao](https://limengtupian.oss-cn-beijing.aliyuncs.com/%E9%98%B2%E7%9B%97%E9%93%BE.png)\n\n实现了正常的访问！","slug":"hexo图片不显示","published":1,"updated":"2020-07-03T08:03:08.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl0uux6vc00057suf9evkhos7","content":"<meta name=\"referrer\" content=\"no-referrer\"/>\n\n<h2 id=\"Hexo图片不显示\"><a href=\"#Hexo图片不显示\" class=\"headerlink\" title=\"Hexo图片不显示\"></a>Hexo图片不显示</h2><h3 id=\"问题\"><a href=\"#问题\" class=\"headerlink\" title=\"问题\"></a>问题</h3><p>博客内需要引用一些图片，使用的是阿里云Oss，图片设置的公共读，图片地址从浏览器打开可以直接访问，但是博客内引用不能显示。</p>\n<p><strong>在chrome浏览器中检查会发现有403的错误</strong></p>\n<p><img src=\"https://limengtupian.oss-cn-beijing.aliyuncs.com/403%E5%9B%BE%E7%89%87.png\" alt=\"403\"></p>\n<span id=\"more\"></span>\n\n<h3 id=\"解决方法\"><a href=\"#解决方法\" class=\"headerlink\" title=\"解决方法\"></a>解决方法</h3><p>方法其实很简单，只需要文章的头部如下图所示位置添加<meta name=\"referrer\" content=\"no-referrer\"/>这一句话就可以完美解决问题</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20190721223929809.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21xZHhpYW94aWFv,size_16,color_FFFFFF,t_70\" alt=\"referrer\"></p>\n<h3 id=\"referrer是什么\"><a href=\"#referrer是什么\" class=\"headerlink\" title=\"referrer是什么\"></a>referrer是什么</h3><p><code>&lt;meta name=&quot;referrer&quot; content=&quot;no-referrer&quot;&gt;</code></p>\n<p>referrer是用于追踪用户是从哪个页面跳转过来，js中使用document.referrer来得到值，一般用户做移动端back按钮，如用户通过别人发送时候链接进入页面时，可以隐藏back按钮。</p>\n<p>referrer有五种属性:</p>\n<ul>\n<li><p>No Referrer （永远不做记录）</p>\n</li>\n<li><p>No Referrer When Downgrade（浏览器默认，当降级时候不记录，从https跳转到http）</p>\n</li>\n<li><p>Origin Only（只记录 协议+ host）</p>\n</li>\n<li><p>Origin When Cross-origin（仅在发生跨域访问时记录 协议+host）</p>\n</li>\n<li><p>Unsafe URL（永远记录）</p>\n</li>\n</ul>\n<p><em>参考链接</em> ：[<a href=\"https://imququ.com/post/referrer-policy.html\">Referrer Policy 介绍</a>]、<a href=\"http://www.jb51.net/article/117739.htm\">document.referrer的用法详解</a></p>\n<meta name=\"referrer\" content=\"no-referrer\"/>\n\n<h2 id=\"豆瓣api调用图片403提示\"><a href=\"#豆瓣api调用图片403提示\" class=\"headerlink\" title=\"豆瓣api调用图片403提示\"></a>豆瓣api调用图片403提示</h2><h3 id=\"豆瓣api\"><a href=\"#豆瓣api\" class=\"headerlink\" title=\"豆瓣api\"></a>豆瓣api</h3><p>需要搭建一个电影类的分类网站，所以会调用到豆瓣的api，现在官方没有给公共的api使用，于是网上找了下有提供备份的api使用，地址如下：<a href=\"https://douban.uieee.com/\">豆瓣api</a></p>\n<p>使用这个地址，可以直接访问到豆瓣的内容，但是使用过程中，发现关于电影的名字，类型，上映年份都可以直接访问，只有图片没有办法访问，有提示403错误。</p>\n<h3 id=\"原因\"><a href=\"#原因\" class=\"headerlink\" title=\"原因\"></a>原因</h3><p>豆瓣使用了防盗链：</p>\n<p>很多时候别人直接把我们的网站的资源拿去在他们网站展示，但是消费的是我们的流量，为了解决这种问题，才会有防盗链这个思路</p>\n<p>这里说的只是一个简单的概念，既使用host和reffer请求头做对比，简单的做一个处理，主要是用来熟悉http头</p>\n<!-- more -->\n\n<h3 id=\"解决方法-1\"><a href=\"#解决方法-1\" class=\"headerlink\" title=\"解决方法\"></a>解决方法</h3><p>在页面中加上 <meta name=\"referrer\" content=\"never\"></p>\n<p><img src=\"https://limengtupian.oss-cn-beijing.aliyuncs.com/%E9%98%B2%E7%9B%97%E9%93%BE.png\" alt=\"fangdao\"></p>\n<p>实现了正常的访问！</p>\n","site":{"data":{}},"excerpt":"<meta name=\"referrer\" content=\"no-referrer\"/>\n\n<h2 id=\"Hexo图片不显示\"><a href=\"#Hexo图片不显示\" class=\"headerlink\" title=\"Hexo图片不显示\"></a>Hexo图片不显示</h2><h3 id=\"问题\"><a href=\"#问题\" class=\"headerlink\" title=\"问题\"></a>问题</h3><p>博客内需要引用一些图片，使用的是阿里云Oss，图片设置的公共读，图片地址从浏览器打开可以直接访问，但是博客内引用不能显示。</p>\n<p><strong>在chrome浏览器中检查会发现有403的错误</strong></p>\n<p><img src=\"https://limengtupian.oss-cn-beijing.aliyuncs.com/403%E5%9B%BE%E7%89%87.png\" alt=\"403\"></p>","more":"<h3 id=\"解决方法\"><a href=\"#解决方法\" class=\"headerlink\" title=\"解决方法\"></a>解决方法</h3><p>方法其实很简单，只需要文章的头部如下图所示位置添加<meta name=\"referrer\" content=\"no-referrer\"/>这一句话就可以完美解决问题</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20190721223929809.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21xZHhpYW94aWFv,size_16,color_FFFFFF,t_70\" alt=\"referrer\"></p>\n<h3 id=\"referrer是什么\"><a href=\"#referrer是什么\" class=\"headerlink\" title=\"referrer是什么\"></a>referrer是什么</h3><p><code>&lt;meta name=&quot;referrer&quot; content=&quot;no-referrer&quot;&gt;</code></p>\n<p>referrer是用于追踪用户是从哪个页面跳转过来，js中使用document.referrer来得到值，一般用户做移动端back按钮，如用户通过别人发送时候链接进入页面时，可以隐藏back按钮。</p>\n<p>referrer有五种属性:</p>\n<ul>\n<li><p>No Referrer （永远不做记录）</p>\n</li>\n<li><p>No Referrer When Downgrade（浏览器默认，当降级时候不记录，从https跳转到http）</p>\n</li>\n<li><p>Origin Only（只记录 协议+ host）</p>\n</li>\n<li><p>Origin When Cross-origin（仅在发生跨域访问时记录 协议+host）</p>\n</li>\n<li><p>Unsafe URL（永远记录）</p>\n</li>\n</ul>\n<p><em>参考链接</em> ：[<a href=\"https://imququ.com/post/referrer-policy.html\">Referrer Policy 介绍</a>]、<a href=\"http://www.jb51.net/article/117739.htm\">document.referrer的用法详解</a></p>\n<meta name=\"referrer\" content=\"no-referrer\"/>\n\n<h2 id=\"豆瓣api调用图片403提示\"><a href=\"#豆瓣api调用图片403提示\" class=\"headerlink\" title=\"豆瓣api调用图片403提示\"></a>豆瓣api调用图片403提示</h2><h3 id=\"豆瓣api\"><a href=\"#豆瓣api\" class=\"headerlink\" title=\"豆瓣api\"></a>豆瓣api</h3><p>需要搭建一个电影类的分类网站，所以会调用到豆瓣的api，现在官方没有给公共的api使用，于是网上找了下有提供备份的api使用，地址如下：<a href=\"https://douban.uieee.com/\">豆瓣api</a></p>\n<p>使用这个地址，可以直接访问到豆瓣的内容，但是使用过程中，发现关于电影的名字，类型，上映年份都可以直接访问，只有图片没有办法访问，有提示403错误。</p>\n<h3 id=\"原因\"><a href=\"#原因\" class=\"headerlink\" title=\"原因\"></a>原因</h3><p>豆瓣使用了防盗链：</p>\n<p>很多时候别人直接把我们的网站的资源拿去在他们网站展示，但是消费的是我们的流量，为了解决这种问题，才会有防盗链这个思路</p>\n<p>这里说的只是一个简单的概念，既使用host和reffer请求头做对比，简单的做一个处理，主要是用来熟悉http头</p>\n<!-- more -->\n\n<h3 id=\"解决方法-1\"><a href=\"#解决方法-1\" class=\"headerlink\" title=\"解决方法\"></a>解决方法</h3><p>在页面中加上 <meta name=\"referrer\" content=\"never\"></p>\n<p><img src=\"https://limengtupian.oss-cn-beijing.aliyuncs.com/%E9%98%B2%E7%9B%97%E9%93%BE.png\" alt=\"fangdao\"></p>\n<p>实现了正常的访问！</p>"},{"title":"PostMessage跨域","date":"2020-07-12T09:16:26.000Z","_content":"\n<meta name=\"referrer\" content=\"no-referrer\"/>\n\n## PostMessage跨域\n\n***\\*window.postMessage()\\**** 方法可以安全地实现跨源通信。通常，对于两个不同页面的脚本，只有当执行它们的页面位于具有相同的协议（通常为https），端口号（443为https的默认值），以及主机 (两个页面的模数 [`Document.domain`](https://developer.mozilla.org/zh-CN/docs/Web/API/Document/domain)设置为相同的值) 时，这两个脚本才能相互通信。***\\*window.postMessage()\\**** 方法提供了一种受控机制来规避此限制，只要正确的使用，这种方法就很安全。\n\n<!-- more -->\n\n### 需求\n\n多个后台，同一个账号密码系统，需要在某一个后台登录后，直接点击切换，到另一个后台，并且免登录\n\n### 实现\n\n不同的后台有不同的地址，解决接口的跨域问题。\n\n通过H5提供的新方法postMessage来传递数据.\n\n```js\n         let popup = window.open(\"http://localhost:8081\", \"_blank\");\n          if (popup) {\n            setTimeout(function() {\n              let data = sessionStorage;\n              popup.postMessage(JSON.stringify(data), \"http://localhost:8081\");\n            }, 500);\n          }\n```\n\n\n\n```js\n created() {\n    //测试环境监听\n    window.addEventListener(\"message\", this.receiveMessage, false);\n  },\n  methods: {\n    receiveMessage(event) {\n      if (event && event.origin && event.data) {\n        // 我们能信任信息来源吗？\n        if (\n          event.origin !== \"http://localhost:8080\" ||\n          event.origin !== \"http://localhost:8082\"\n        )\n          return;\n        let tem = JSON.parse(event.data);\n        if (tem.token) {\n          sessionStorage.setItem(\"resources\", tem.resources);\n          sessionStorage.setItem(\"token\", tem.token);\n          sessionStorage.setItem(\"adminUserInfo\", tem.adminUserInfo);\n          if (process.env.VUE_APP_DEBUG == \"debug\") {\n            window.location.href =\n              \"http://localhost:8081\";\n          } \n        }\n      }\n    }\n  }\n```\n\n### 核心\n\n发送消息的页面: \n\n1. 打开页面的同时，如果直接进行发送信息。会导致新打开的页面接收不到数据。所以给一个500ms延迟\n2. popup.postMessage，需要定义一个发送地址，并且指定接收地址\n\n接收页面：\n\n1. 需要初始化时，监听一个事件。\n2. 判断发送信息的来源，保证信息的安全性。\n\n","source":"_posts/PostMessage跨域.md","raw":"---\ntitle: PostMessage跨域\ndate: 2020-07-12 17:16:26\ntags: [PostMessage,跨域]\n---\n\n<meta name=\"referrer\" content=\"no-referrer\"/>\n\n## PostMessage跨域\n\n***\\*window.postMessage()\\**** 方法可以安全地实现跨源通信。通常，对于两个不同页面的脚本，只有当执行它们的页面位于具有相同的协议（通常为https），端口号（443为https的默认值），以及主机 (两个页面的模数 [`Document.domain`](https://developer.mozilla.org/zh-CN/docs/Web/API/Document/domain)设置为相同的值) 时，这两个脚本才能相互通信。***\\*window.postMessage()\\**** 方法提供了一种受控机制来规避此限制，只要正确的使用，这种方法就很安全。\n\n<!-- more -->\n\n### 需求\n\n多个后台，同一个账号密码系统，需要在某一个后台登录后，直接点击切换，到另一个后台，并且免登录\n\n### 实现\n\n不同的后台有不同的地址，解决接口的跨域问题。\n\n通过H5提供的新方法postMessage来传递数据.\n\n```js\n         let popup = window.open(\"http://localhost:8081\", \"_blank\");\n          if (popup) {\n            setTimeout(function() {\n              let data = sessionStorage;\n              popup.postMessage(JSON.stringify(data), \"http://localhost:8081\");\n            }, 500);\n          }\n```\n\n\n\n```js\n created() {\n    //测试环境监听\n    window.addEventListener(\"message\", this.receiveMessage, false);\n  },\n  methods: {\n    receiveMessage(event) {\n      if (event && event.origin && event.data) {\n        // 我们能信任信息来源吗？\n        if (\n          event.origin !== \"http://localhost:8080\" ||\n          event.origin !== \"http://localhost:8082\"\n        )\n          return;\n        let tem = JSON.parse(event.data);\n        if (tem.token) {\n          sessionStorage.setItem(\"resources\", tem.resources);\n          sessionStorage.setItem(\"token\", tem.token);\n          sessionStorage.setItem(\"adminUserInfo\", tem.adminUserInfo);\n          if (process.env.VUE_APP_DEBUG == \"debug\") {\n            window.location.href =\n              \"http://localhost:8081\";\n          } \n        }\n      }\n    }\n  }\n```\n\n### 核心\n\n发送消息的页面: \n\n1. 打开页面的同时，如果直接进行发送信息。会导致新打开的页面接收不到数据。所以给一个500ms延迟\n2. popup.postMessage，需要定义一个发送地址，并且指定接收地址\n\n接收页面：\n\n1. 需要初始化时，监听一个事件。\n2. 判断发送信息的来源，保证信息的安全性。\n\n","slug":"PostMessage跨域","published":1,"updated":"2020-08-17T07:22:04.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl0uux6vd00077suf0xxtdnp7","content":"<meta name=\"referrer\" content=\"no-referrer\"/>\n\n<h2 id=\"PostMessage跨域\"><a href=\"#PostMessage跨域\" class=\"headerlink\" title=\"PostMessage跨域\"></a>PostMessage跨域</h2><p><em><strong>*window.postMessage()*</strong></em> 方法可以安全地实现跨源通信。通常，对于两个不同页面的脚本，只有当执行它们的页面位于具有相同的协议（通常为https），端口号（443为https的默认值），以及主机 (两个页面的模数 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Document/domain\"><code>Document.domain</code></a>设置为相同的值) 时，这两个脚本才能相互通信。<em><strong>*window.postMessage()*</strong></em> 方法提供了一种受控机制来规避此限制，只要正确的使用，这种方法就很安全。</p>\n<span id=\"more\"></span>\n\n<h3 id=\"需求\"><a href=\"#需求\" class=\"headerlink\" title=\"需求\"></a>需求</h3><p>多个后台，同一个账号密码系统，需要在某一个后台登录后，直接点击切换，到另一个后台，并且免登录</p>\n<h3 id=\"实现\"><a href=\"#实现\" class=\"headerlink\" title=\"实现\"></a>实现</h3><p>不同的后台有不同的地址，解决接口的跨域问题。</p>\n<p>通过H5提供的新方法postMessage来传递数据.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> popup = <span class=\"variable language_\">window</span>.<span class=\"title function_\">open</span>(<span class=\"string\">&quot;http://localhost:8081&quot;</span>, <span class=\"string\">&quot;_blank&quot;</span>);</span><br><span class=\"line\"> <span class=\"keyword\">if</span> (popup) &#123;</span><br><span class=\"line\">   <span class=\"built_in\">setTimeout</span>(<span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">     <span class=\"keyword\">let</span> data = sessionStorage;</span><br><span class=\"line\">     popup.<span class=\"title function_\">postMessage</span>(<span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(data), <span class=\"string\">&quot;http://localhost:8081&quot;</span>);</span><br><span class=\"line\">   &#125;, <span class=\"number\">500</span>);</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">created</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">   <span class=\"comment\">//测试环境监听</span></span><br><span class=\"line\">   <span class=\"variable language_\">window</span>.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&quot;message&quot;</span>, <span class=\"variable language_\">this</span>.<span class=\"property\">receiveMessage</span>, <span class=\"literal\">false</span>);</span><br><span class=\"line\"> &#125;,</span><br><span class=\"line\"> <span class=\"attr\">methods</span>: &#123;</span><br><span class=\"line\">   <span class=\"title function_\">receiveMessage</span>(<span class=\"params\">event</span>) &#123;</span><br><span class=\"line\">     <span class=\"keyword\">if</span> (event &amp;&amp; event.<span class=\"property\">origin</span> &amp;&amp; event.<span class=\"property\">data</span>) &#123;</span><br><span class=\"line\">       <span class=\"comment\">// 我们能信任信息来源吗？</span></span><br><span class=\"line\">       <span class=\"keyword\">if</span> (</span><br><span class=\"line\">         event.<span class=\"property\">origin</span> !== <span class=\"string\">&quot;http://localhost:8080&quot;</span> ||</span><br><span class=\"line\">         event.<span class=\"property\">origin</span> !== <span class=\"string\">&quot;http://localhost:8082&quot;</span></span><br><span class=\"line\">       )</span><br><span class=\"line\">         <span class=\"keyword\">return</span>;</span><br><span class=\"line\">       <span class=\"keyword\">let</span> tem = <span class=\"title class_\">JSON</span>.<span class=\"title function_\">parse</span>(event.<span class=\"property\">data</span>);</span><br><span class=\"line\">       <span class=\"keyword\">if</span> (tem.<span class=\"property\">token</span>) &#123;</span><br><span class=\"line\">         sessionStorage.<span class=\"title function_\">setItem</span>(<span class=\"string\">&quot;resources&quot;</span>, tem.<span class=\"property\">resources</span>);</span><br><span class=\"line\">         sessionStorage.<span class=\"title function_\">setItem</span>(<span class=\"string\">&quot;token&quot;</span>, tem.<span class=\"property\">token</span>);</span><br><span class=\"line\">         sessionStorage.<span class=\"title function_\">setItem</span>(<span class=\"string\">&quot;adminUserInfo&quot;</span>, tem.<span class=\"property\">adminUserInfo</span>);</span><br><span class=\"line\">         <span class=\"keyword\">if</span> (process.<span class=\"property\">env</span>.<span class=\"property\">VUE_APP_DEBUG</span> == <span class=\"string\">&quot;debug&quot;</span>) &#123;</span><br><span class=\"line\">           <span class=\"variable language_\">window</span>.<span class=\"property\">location</span>.<span class=\"property\">href</span> =</span><br><span class=\"line\">             <span class=\"string\">&quot;http://localhost:8081&quot;</span>;</span><br><span class=\"line\">         &#125; </span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"核心\"><a href=\"#核心\" class=\"headerlink\" title=\"核心\"></a>核心</h3><p>发送消息的页面: </p>\n<ol>\n<li>打开页面的同时，如果直接进行发送信息。会导致新打开的页面接收不到数据。所以给一个500ms延迟</li>\n<li>popup.postMessage，需要定义一个发送地址，并且指定接收地址</li>\n</ol>\n<p>接收页面：</p>\n<ol>\n<li>需要初始化时，监听一个事件。</li>\n<li>判断发送信息的来源，保证信息的安全性。</li>\n</ol>\n","site":{"data":{}},"excerpt":"<meta name=\"referrer\" content=\"no-referrer\"/>\n\n<h2 id=\"PostMessage跨域\"><a href=\"#PostMessage跨域\" class=\"headerlink\" title=\"PostMessage跨域\"></a>PostMessage跨域</h2><p><em><strong>*window.postMessage()*</strong></em> 方法可以安全地实现跨源通信。通常，对于两个不同页面的脚本，只有当执行它们的页面位于具有相同的协议（通常为https），端口号（443为https的默认值），以及主机 (两个页面的模数 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Document/domain\"><code>Document.domain</code></a>设置为相同的值) 时，这两个脚本才能相互通信。<em><strong>*window.postMessage()*</strong></em> 方法提供了一种受控机制来规避此限制，只要正确的使用，这种方法就很安全。</p>","more":"<h3 id=\"需求\"><a href=\"#需求\" class=\"headerlink\" title=\"需求\"></a>需求</h3><p>多个后台，同一个账号密码系统，需要在某一个后台登录后，直接点击切换，到另一个后台，并且免登录</p>\n<h3 id=\"实现\"><a href=\"#实现\" class=\"headerlink\" title=\"实现\"></a>实现</h3><p>不同的后台有不同的地址，解决接口的跨域问题。</p>\n<p>通过H5提供的新方法postMessage来传递数据.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> popup = <span class=\"variable language_\">window</span>.<span class=\"title function_\">open</span>(<span class=\"string\">&quot;http://localhost:8081&quot;</span>, <span class=\"string\">&quot;_blank&quot;</span>);</span><br><span class=\"line\"> <span class=\"keyword\">if</span> (popup) &#123;</span><br><span class=\"line\">   <span class=\"built_in\">setTimeout</span>(<span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">     <span class=\"keyword\">let</span> data = sessionStorage;</span><br><span class=\"line\">     popup.<span class=\"title function_\">postMessage</span>(<span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(data), <span class=\"string\">&quot;http://localhost:8081&quot;</span>);</span><br><span class=\"line\">   &#125;, <span class=\"number\">500</span>);</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">created</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">   <span class=\"comment\">//测试环境监听</span></span><br><span class=\"line\">   <span class=\"variable language_\">window</span>.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&quot;message&quot;</span>, <span class=\"variable language_\">this</span>.<span class=\"property\">receiveMessage</span>, <span class=\"literal\">false</span>);</span><br><span class=\"line\"> &#125;,</span><br><span class=\"line\"> <span class=\"attr\">methods</span>: &#123;</span><br><span class=\"line\">   <span class=\"title function_\">receiveMessage</span>(<span class=\"params\">event</span>) &#123;</span><br><span class=\"line\">     <span class=\"keyword\">if</span> (event &amp;&amp; event.<span class=\"property\">origin</span> &amp;&amp; event.<span class=\"property\">data</span>) &#123;</span><br><span class=\"line\">       <span class=\"comment\">// 我们能信任信息来源吗？</span></span><br><span class=\"line\">       <span class=\"keyword\">if</span> (</span><br><span class=\"line\">         event.<span class=\"property\">origin</span> !== <span class=\"string\">&quot;http://localhost:8080&quot;</span> ||</span><br><span class=\"line\">         event.<span class=\"property\">origin</span> !== <span class=\"string\">&quot;http://localhost:8082&quot;</span></span><br><span class=\"line\">       )</span><br><span class=\"line\">         <span class=\"keyword\">return</span>;</span><br><span class=\"line\">       <span class=\"keyword\">let</span> tem = <span class=\"title class_\">JSON</span>.<span class=\"title function_\">parse</span>(event.<span class=\"property\">data</span>);</span><br><span class=\"line\">       <span class=\"keyword\">if</span> (tem.<span class=\"property\">token</span>) &#123;</span><br><span class=\"line\">         sessionStorage.<span class=\"title function_\">setItem</span>(<span class=\"string\">&quot;resources&quot;</span>, tem.<span class=\"property\">resources</span>);</span><br><span class=\"line\">         sessionStorage.<span class=\"title function_\">setItem</span>(<span class=\"string\">&quot;token&quot;</span>, tem.<span class=\"property\">token</span>);</span><br><span class=\"line\">         sessionStorage.<span class=\"title function_\">setItem</span>(<span class=\"string\">&quot;adminUserInfo&quot;</span>, tem.<span class=\"property\">adminUserInfo</span>);</span><br><span class=\"line\">         <span class=\"keyword\">if</span> (process.<span class=\"property\">env</span>.<span class=\"property\">VUE_APP_DEBUG</span> == <span class=\"string\">&quot;debug&quot;</span>) &#123;</span><br><span class=\"line\">           <span class=\"variable language_\">window</span>.<span class=\"property\">location</span>.<span class=\"property\">href</span> =</span><br><span class=\"line\">             <span class=\"string\">&quot;http://localhost:8081&quot;</span>;</span><br><span class=\"line\">         &#125; </span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"核心\"><a href=\"#核心\" class=\"headerlink\" title=\"核心\"></a>核心</h3><p>发送消息的页面: </p>\n<ol>\n<li>打开页面的同时，如果直接进行发送信息。会导致新打开的页面接收不到数据。所以给一个500ms延迟</li>\n<li>popup.postMessage，需要定义一个发送地址，并且指定接收地址</li>\n</ol>\n<p>接收页面：</p>\n<ol>\n<li>需要初始化时，监听一个事件。</li>\n<li>判断发送信息的来源，保证信息的安全性。</li>\n</ol>"},{"layout":"post","title":"markdown语法","date":"2019-12-01T14:22:50.000Z","_content":"<meta name=\"referrer\" content=\"no-referrer\"/>\n\n\n\n## markdown语法\n\nMarkdown 是一种轻量级的「标记语言」，优点在于:\n>* 专注你的文字内容而不是排版样式。\n>* 轻松的导出 HTML、PDF 和本身的 .md 文件。\n>* 纯文本内容，兼容所有的文本编辑器与字处理软件。\n>* 可读，直观。适合所有人的写作语言。\n***********\n## hexo中使用\n![hexo](https://limengtupian.oss-cn-beijing.aliyuncs.com/hexo.png)\nhexo中生成的文章，全部支持md语法，所以有必要学习一下语法规则，常用的规则有:\n<!-- more -->\n\n### 概述\n比较常用的规则如下，包括标题，内容，引用，表格等等，基本包含绝大多数文章的表达规则:\n```\n 分段: 两个回车;\n 换行: 两个空格 + 回车;\n 标题: # ~ ######，#号的个数表示几级标题，即表示一级标题到六级标题;\n 强调: **文字** ， __文字__ ， _文字_ ， *文字* ， 文字;\n 引用: > 注意后面紧跟个空格;\n 表格: - 和 | 分割行和列 ， : 控制对其方式;\n 代码块: 四个空格 开头或， 使用``` 代码内容 ```;;\n 链接: [文字](链接地址);\n 图片: ![图片说明](图片地址) ，地址可以是本地路劲，也可以是网络地址;\n 列表: * ， + ， - ， 1. ，选其中之一，注意后面紧跟个空格;\n```\n### 标题\n* 示例:\n```\n# 欢迎使用Markdown编辑器写博客    一级标题 对应 <h1> </h1>\n## 标题输入                       二级标题 对应 <h2> </h2>\n### 三级标题                      三级标题 对应 <h3> </h3>\n#### 四级标题                     四级标题 对应 <h4> </h4>\n##### 五级标题                    五级标题 对应 <h5> </h5>\n###### 六级标题                   六级标题 对应 <h6> </h6>\n```\n\n### 内容\n* 示例:\n```\n字体: **加粗** \n字体: *斜体* \n字体: ***加粗并斜体*** \n删除线: ~~删除一段文本~~\n```\n* 效果:\n>**加粗** \n>*斜体*\n>***加粗并斜体***\n>~~删除一段文本~~\n\n\n### 引用\n* 示例:\n```\n>这是引用的内容\n>>这是引用的内容\n>>>>>>>>>>这是引用的内容\n```\n* 效果:\n>这是引用的内容\n>>这是引用的内容\n>>\n>>>>>>>>>>这是引用的内容\n\n### 分割线\n* 示例:\n```\n---\n----\n***\n*****\n```\n* 效果:\n\n- - -\n\n### 图片\n* 示例:\n```\n![图片alt](图片地址 ''图片title'')\n```\n\n\n### 超链接\n* 示例: \n```\n[超链接名](超链接地址 \"超链接title\")\ntitle可加可不加\n[简书](http://jianshu.com)\n[百度](http://baidu.com)\n```\n* 效果:\n>[简书](http://jianshu.com)\n>[百度](http://baidu.com)\n### 列表\n* 示例:\n   * 无序列表:\n      ```\n      - 列表内容\n      + 列表内容\n      * 列表内容\n      ```\n   * 有序列表:\n      ```\n      1.列表内容\n      2.列表内容\n      3.列表内容\n      ```\n* 效果:\n   * 无序列表:\n      >- 列表内容\n      >+ 列表内容\n      >* 列表内容\n   * 有序列表:\n      >1.列表内容\n      >2.列表内容\n      >3.列表内容\n### 表格\n* 示例:\n```\n姓名|技能|排行\n--|:--:|--:\n刘备|哭|大哥\n关羽|打|二哥\n张飞|骂|三弟\n```\n* 效果:\n>姓名|技能|排行\n>--|:--:|--:\n>刘备|哭|大哥\n>关羽|打|二哥\n>张飞|骂|三弟  \n### 代码\n* 示例:\n```js\n`printf()` 函数;\n​```javascript\n$(document).ready(function () {\n    alert('RUNOOB');\n});\n​```\n```\n* 效果:\n>```javascript\n>$(document).ready(function () {\n>    alert('RUNOOB');\n>})\n>```\n\n## 转义\nMarkdown 使用了很多特殊符号来表示特定的意义，如果需要显示特定的符号则需要使用转义字符，Markdown 使用反斜杠转义特殊字符：\n```\n\\   反斜线\n`   反引号\n*   星号\n_   下划线\n{}  花括号\n[]  方括号\n()  小括号\n#   井字号\n+   加号\n-   减号\n.   英文句点\n!   感叹号\n```\n## ASCII 代码\nHTML 和 XHTML 用标准的 7 比特 ASCII 代码在网络上传输数据。\n7 比特 ASCII 代码可提供 128 个不同的字符值。\n点击此处跳转至[ASCII](http://www.w3chtml.com/html/ref/ascii.html)","source":"_posts/markdown语法.md","raw":"---\nlayout: \ntitle: markdown语法\ndate: 2019-12-01 22:22:50\ntags:\n---\n<meta name=\"referrer\" content=\"no-referrer\"/>\n\n\n\n## markdown语法\n\nMarkdown 是一种轻量级的「标记语言」，优点在于:\n>* 专注你的文字内容而不是排版样式。\n>* 轻松的导出 HTML、PDF 和本身的 .md 文件。\n>* 纯文本内容，兼容所有的文本编辑器与字处理软件。\n>* 可读，直观。适合所有人的写作语言。\n***********\n## hexo中使用\n![hexo](https://limengtupian.oss-cn-beijing.aliyuncs.com/hexo.png)\nhexo中生成的文章，全部支持md语法，所以有必要学习一下语法规则，常用的规则有:\n<!-- more -->\n\n### 概述\n比较常用的规则如下，包括标题，内容，引用，表格等等，基本包含绝大多数文章的表达规则:\n```\n 分段: 两个回车;\n 换行: 两个空格 + 回车;\n 标题: # ~ ######，#号的个数表示几级标题，即表示一级标题到六级标题;\n 强调: **文字** ， __文字__ ， _文字_ ， *文字* ， 文字;\n 引用: > 注意后面紧跟个空格;\n 表格: - 和 | 分割行和列 ， : 控制对其方式;\n 代码块: 四个空格 开头或， 使用``` 代码内容 ```;;\n 链接: [文字](链接地址);\n 图片: ![图片说明](图片地址) ，地址可以是本地路劲，也可以是网络地址;\n 列表: * ， + ， - ， 1. ，选其中之一，注意后面紧跟个空格;\n```\n### 标题\n* 示例:\n```\n# 欢迎使用Markdown编辑器写博客    一级标题 对应 <h1> </h1>\n## 标题输入                       二级标题 对应 <h2> </h2>\n### 三级标题                      三级标题 对应 <h3> </h3>\n#### 四级标题                     四级标题 对应 <h4> </h4>\n##### 五级标题                    五级标题 对应 <h5> </h5>\n###### 六级标题                   六级标题 对应 <h6> </h6>\n```\n\n### 内容\n* 示例:\n```\n字体: **加粗** \n字体: *斜体* \n字体: ***加粗并斜体*** \n删除线: ~~删除一段文本~~\n```\n* 效果:\n>**加粗** \n>*斜体*\n>***加粗并斜体***\n>~~删除一段文本~~\n\n\n### 引用\n* 示例:\n```\n>这是引用的内容\n>>这是引用的内容\n>>>>>>>>>>这是引用的内容\n```\n* 效果:\n>这是引用的内容\n>>这是引用的内容\n>>\n>>>>>>>>>>这是引用的内容\n\n### 分割线\n* 示例:\n```\n---\n----\n***\n*****\n```\n* 效果:\n\n- - -\n\n### 图片\n* 示例:\n```\n![图片alt](图片地址 ''图片title'')\n```\n\n\n### 超链接\n* 示例: \n```\n[超链接名](超链接地址 \"超链接title\")\ntitle可加可不加\n[简书](http://jianshu.com)\n[百度](http://baidu.com)\n```\n* 效果:\n>[简书](http://jianshu.com)\n>[百度](http://baidu.com)\n### 列表\n* 示例:\n   * 无序列表:\n      ```\n      - 列表内容\n      + 列表内容\n      * 列表内容\n      ```\n   * 有序列表:\n      ```\n      1.列表内容\n      2.列表内容\n      3.列表内容\n      ```\n* 效果:\n   * 无序列表:\n      >- 列表内容\n      >+ 列表内容\n      >* 列表内容\n   * 有序列表:\n      >1.列表内容\n      >2.列表内容\n      >3.列表内容\n### 表格\n* 示例:\n```\n姓名|技能|排行\n--|:--:|--:\n刘备|哭|大哥\n关羽|打|二哥\n张飞|骂|三弟\n```\n* 效果:\n>姓名|技能|排行\n>--|:--:|--:\n>刘备|哭|大哥\n>关羽|打|二哥\n>张飞|骂|三弟  \n### 代码\n* 示例:\n```js\n`printf()` 函数;\n​```javascript\n$(document).ready(function () {\n    alert('RUNOOB');\n});\n​```\n```\n* 效果:\n>```javascript\n>$(document).ready(function () {\n>    alert('RUNOOB');\n>})\n>```\n\n## 转义\nMarkdown 使用了很多特殊符号来表示特定的意义，如果需要显示特定的符号则需要使用转义字符，Markdown 使用反斜杠转义特殊字符：\n```\n\\   反斜线\n`   反引号\n*   星号\n_   下划线\n{}  花括号\n[]  方括号\n()  小括号\n#   井字号\n+   加号\n-   减号\n.   英文句点\n!   感叹号\n```\n## ASCII 代码\nHTML 和 XHTML 用标准的 7 比特 ASCII 代码在网络上传输数据。\n7 比特 ASCII 代码可提供 128 个不同的字符值。\n点击此处跳转至[ASCII](http://www.w3chtml.com/html/ref/ascii.html)","slug":"markdown语法","published":1,"updated":"2019-12-03T10:04:58.000Z","comments":1,"photos":[],"link":"","_id":"cl0uux6ve00087sufhr2o9mht","content":"<meta name=\"referrer\" content=\"no-referrer\"/>\n\n\n\n<h2 id=\"markdown语法\"><a href=\"#markdown语法\" class=\"headerlink\" title=\"markdown语法\"></a>markdown语法</h2><p>Markdown 是一种轻量级的「标记语言」，优点在于:</p>\n<blockquote>\n<ul>\n<li>专注你的文字内容而不是排版样式。</li>\n<li>轻松的导出 HTML、PDF 和本身的 .md 文件。</li>\n<li>纯文本内容，兼容所有的文本编辑器与字处理软件。</li>\n<li>可读，直观。适合所有人的写作语言。</li>\n</ul>\n</blockquote>\n<hr>\n<h2 id=\"hexo中使用\"><a href=\"#hexo中使用\" class=\"headerlink\" title=\"hexo中使用\"></a>hexo中使用</h2><p><img src=\"https://limengtupian.oss-cn-beijing.aliyuncs.com/hexo.png\" alt=\"hexo\"><br>hexo中生成的文章，全部支持md语法，所以有必要学习一下语法规则，常用的规则有:</p>\n<span id=\"more\"></span>\n\n<h3 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h3><p>比较常用的规则如下，包括标题，内容，引用，表格等等，基本包含绝大多数文章的表达规则:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">分段: 两个回车;</span><br><span class=\"line\">换行: 两个空格 + 回车;</span><br><span class=\"line\">标题: # ~ ######，#号的个数表示几级标题，即表示一级标题到六级标题;</span><br><span class=\"line\">强调: **文字** ， __文字__ ， _文字_ ， *文字* ， 文字;</span><br><span class=\"line\">引用: &gt; 注意后面紧跟个空格;</span><br><span class=\"line\">表格: - 和 | 分割行和列 ， : 控制对其方式;</span><br><span class=\"line\">代码块: 四个空格 开头或， 使用``` 代码内容 ```;;</span><br><span class=\"line\">链接: [文字](链接地址);</span><br><span class=\"line\">图片: ![图片说明](图片地址) ，地址可以是本地路劲，也可以是网络地址;</span><br><span class=\"line\">列表: * ， + ， - ， 1. ，选其中之一，注意后面紧跟个空格;</span><br></pre></td></tr></table></figure>\n<h3 id=\"标题\"><a href=\"#标题\" class=\"headerlink\" title=\"标题\"></a>标题</h3><ul>\n<li>示例:<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 欢迎使用Markdown编辑器写博客    一级标题 对应 &lt;h1&gt; &lt;/h1&gt;</span><br><span class=\"line\">## 标题输入                       二级标题 对应 &lt;h2&gt; &lt;/h2&gt;</span><br><span class=\"line\">### 三级标题                      三级标题 对应 &lt;h3&gt; &lt;/h3&gt;</span><br><span class=\"line\">#### 四级标题                     四级标题 对应 &lt;h4&gt; &lt;/h4&gt;</span><br><span class=\"line\">##### 五级标题                    五级标题 对应 &lt;h5&gt; &lt;/h5&gt;</span><br><span class=\"line\">###### 六级标题                   六级标题 对应 &lt;h6&gt; &lt;/h6&gt;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"内容\"><a href=\"#内容\" class=\"headerlink\" title=\"内容\"></a>内容</h3><ul>\n<li>示例:<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">字体: **加粗** </span><br><span class=\"line\">字体: *斜体* </span><br><span class=\"line\">字体: ***加粗并斜体*** </span><br><span class=\"line\">删除线: ~~删除一段文本~~</span><br></pre></td></tr></table></figure></li>\n<li>效果:<blockquote>\n<p><strong>加粗</strong><br><em>斜体</em><br><em><strong>加粗并斜体</strong></em><br><del>删除一段文本</del></p>\n</blockquote>\n</li>\n</ul>\n<h3 id=\"引用\"><a href=\"#引用\" class=\"headerlink\" title=\"引用\"></a>引用</h3><ul>\n<li>示例:<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;这是引用的内容</span><br><span class=\"line\">&gt;&gt;这是引用的内容</span><br><span class=\"line\">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;这是引用的内容</span><br></pre></td></tr></table></figure></li>\n<li>效果:<blockquote>\n<p>这是引用的内容</p>\n<blockquote>\n<p>这是引用的内容</p>\n<blockquote>\n<blockquote>\n<blockquote>\n<blockquote>\n<blockquote>\n<blockquote>\n<blockquote>\n<blockquote>\n<p>这是引用的内容</p>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n</li>\n</ul>\n<h3 id=\"分割线\"><a href=\"#分割线\" class=\"headerlink\" title=\"分割线\"></a>分割线</h3><ul>\n<li>示例:<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">----</span><br><span class=\"line\">***</span><br><span class=\"line\">*****</span><br></pre></td></tr></table></figure></li>\n<li>效果:</li>\n</ul>\n<hr>\n<h3 id=\"图片\"><a href=\"#图片\" class=\"headerlink\" title=\"图片\"></a>图片</h3><ul>\n<li>示例:<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">![图片alt](图片地址 &#x27;&#x27;图片title&#x27;&#x27;)</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"超链接\"><a href=\"#超链接\" class=\"headerlink\" title=\"超链接\"></a>超链接</h3><ul>\n<li>示例: <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[超链接名](超链接地址 &quot;超链接title&quot;)</span><br><span class=\"line\">title可加可不加</span><br><span class=\"line\">[简书](http://jianshu.com)</span><br><span class=\"line\">[百度](http://baidu.com)</span><br></pre></td></tr></table></figure></li>\n<li>效果:<blockquote>\n<p><a href=\"http://jianshu.com/\">简书</a><br><a href=\"http://baidu.com/\">百度</a></p>\n</blockquote>\n<h3 id=\"列表\"><a href=\"#列表\" class=\"headerlink\" title=\"列表\"></a>列表</h3></li>\n<li>示例:<ul>\n<li>无序列表: <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- 列表内容</span><br><span class=\"line\">+ 列表内容</span><br><span class=\"line\">* 列表内容</span><br></pre></td></tr></table></figure></li>\n<li>有序列表: <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1.列表内容</span><br><span class=\"line\">2.列表内容</span><br><span class=\"line\">3.列表内容</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li>效果:<ul>\n<li>无序列表:<blockquote>\n<ul>\n<li>列表内容</li>\n</ul>\n<ul>\n<li>列表内容</li>\n</ul>\n<ul>\n<li>列表内容</li>\n</ul>\n</blockquote>\n</li>\n<li>有序列表:<blockquote>\n<p>1.列表内容<br>2.列表内容<br>3.列表内容</p>\n</blockquote>\n<h3 id=\"表格\"><a href=\"#表格\" class=\"headerlink\" title=\"表格\"></a>表格</h3></li>\n</ul>\n</li>\n<li>示例:<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">姓名|技能|排行</span><br><span class=\"line\">--|:--:|--:</span><br><span class=\"line\">刘备|哭|大哥</span><br><span class=\"line\">关羽|打|二哥</span><br><span class=\"line\">张飞|骂|三弟</span><br></pre></td></tr></table></figure></li>\n<li>效果:<blockquote>\n<table>\n<thead>\n<tr>\n<th>姓名</th>\n<th align=\"center\">技能</th>\n<th align=\"right\">排行</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>刘备</td>\n<td align=\"center\">哭</td>\n<td align=\"right\">大哥</td>\n</tr>\n<tr>\n<td>关羽</td>\n<td align=\"center\">打</td>\n<td align=\"right\">二哥</td>\n</tr>\n<tr>\n<td>张飞</td>\n<td align=\"center\">骂</td>\n<td align=\"right\">三弟</td>\n</tr>\n</tbody></table>\n</blockquote>\n<h3 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h3></li>\n<li>示例:<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">`printf()`</span> 函数;</span><br><span class=\"line\">​<span class=\"string\">``</span><span class=\"string\">`javascript</span></span><br><span class=\"line\"><span class=\"string\">$(document).ready(function () &#123;</span></span><br><span class=\"line\"><span class=\"string\">    alert(&#x27;RUNOOB&#x27;);</span></span><br><span class=\"line\"><span class=\"string\">&#125;);</span></span><br><span class=\"line\"><span class=\"string\">​`</span><span class=\"string\">``</span></span><br></pre></td></tr></table></figure></li>\n<li>效果:<blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;$(<span class=\"variable language_\">document</span>).<span class=\"title function_\">ready</span>(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">   <span class=\"title function_\">alert</span>(<span class=\"string\">&#x27;RUNOOB&#x27;</span>);</span><br><span class=\"line\">&gt;&#125;)</span><br></pre></td></tr></table></figure></blockquote>\n</li>\n</ul>\n<h2 id=\"转义\"><a href=\"#转义\" class=\"headerlink\" title=\"转义\"></a>转义</h2><p>Markdown 使用了很多特殊符号来表示特定的意义，如果需要显示特定的符号则需要使用转义字符，Markdown 使用反斜杠转义特殊字符：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\   反斜线</span><br><span class=\"line\">`   反引号</span><br><span class=\"line\">*   星号</span><br><span class=\"line\">_   下划线</span><br><span class=\"line\">&#123;&#125;  花括号</span><br><span class=\"line\">[]  方括号</span><br><span class=\"line\">()  小括号</span><br><span class=\"line\">#   井字号</span><br><span class=\"line\">+   加号</span><br><span class=\"line\">-   减号</span><br><span class=\"line\">.   英文句点</span><br><span class=\"line\">!   感叹号</span><br></pre></td></tr></table></figure>\n<h2 id=\"ASCII-代码\"><a href=\"#ASCII-代码\" class=\"headerlink\" title=\"ASCII 代码\"></a>ASCII 代码</h2><p>HTML 和 XHTML 用标准的 7 比特 ASCII 代码在网络上传输数据。<br>7 比特 ASCII 代码可提供 128 个不同的字符值。<br>点击此处跳转至<a href=\"http://www.w3chtml.com/html/ref/ascii.html\">ASCII</a></p>\n","site":{"data":{}},"excerpt":"<meta name=\"referrer\" content=\"no-referrer\"/>\n\n\n\n<h2 id=\"markdown语法\"><a href=\"#markdown语法\" class=\"headerlink\" title=\"markdown语法\"></a>markdown语法</h2><p>Markdown 是一种轻量级的「标记语言」，优点在于:</p>\n<blockquote>\n<ul>\n<li>专注你的文字内容而不是排版样式。</li>\n<li>轻松的导出 HTML、PDF 和本身的 .md 文件。</li>\n<li>纯文本内容，兼容所有的文本编辑器与字处理软件。</li>\n<li>可读，直观。适合所有人的写作语言。</li>\n</ul>\n</blockquote>\n<hr>\n<h2 id=\"hexo中使用\"><a href=\"#hexo中使用\" class=\"headerlink\" title=\"hexo中使用\"></a>hexo中使用</h2><p><img src=\"https://limengtupian.oss-cn-beijing.aliyuncs.com/hexo.png\" alt=\"hexo\"><br>hexo中生成的文章，全部支持md语法，所以有必要学习一下语法规则，常用的规则有:</p>","more":"<h3 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h3><p>比较常用的规则如下，包括标题，内容，引用，表格等等，基本包含绝大多数文章的表达规则:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">分段: 两个回车;</span><br><span class=\"line\">换行: 两个空格 + 回车;</span><br><span class=\"line\">标题: # ~ ######，#号的个数表示几级标题，即表示一级标题到六级标题;</span><br><span class=\"line\">强调: **文字** ， __文字__ ， _文字_ ， *文字* ， 文字;</span><br><span class=\"line\">引用: &gt; 注意后面紧跟个空格;</span><br><span class=\"line\">表格: - 和 | 分割行和列 ， : 控制对其方式;</span><br><span class=\"line\">代码块: 四个空格 开头或， 使用``` 代码内容 ```;;</span><br><span class=\"line\">链接: [文字](链接地址);</span><br><span class=\"line\">图片: ![图片说明](图片地址) ，地址可以是本地路劲，也可以是网络地址;</span><br><span class=\"line\">列表: * ， + ， - ， 1. ，选其中之一，注意后面紧跟个空格;</span><br></pre></td></tr></table></figure>\n<h3 id=\"标题\"><a href=\"#标题\" class=\"headerlink\" title=\"标题\"></a>标题</h3><ul>\n<li>示例:<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 欢迎使用Markdown编辑器写博客    一级标题 对应 &lt;h1&gt; &lt;/h1&gt;</span><br><span class=\"line\">## 标题输入                       二级标题 对应 &lt;h2&gt; &lt;/h2&gt;</span><br><span class=\"line\">### 三级标题                      三级标题 对应 &lt;h3&gt; &lt;/h3&gt;</span><br><span class=\"line\">#### 四级标题                     四级标题 对应 &lt;h4&gt; &lt;/h4&gt;</span><br><span class=\"line\">##### 五级标题                    五级标题 对应 &lt;h5&gt; &lt;/h5&gt;</span><br><span class=\"line\">###### 六级标题                   六级标题 对应 &lt;h6&gt; &lt;/h6&gt;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"内容\"><a href=\"#内容\" class=\"headerlink\" title=\"内容\"></a>内容</h3><ul>\n<li>示例:<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">字体: **加粗** </span><br><span class=\"line\">字体: *斜体* </span><br><span class=\"line\">字体: ***加粗并斜体*** </span><br><span class=\"line\">删除线: ~~删除一段文本~~</span><br></pre></td></tr></table></figure></li>\n<li>效果:<blockquote>\n<p><strong>加粗</strong><br><em>斜体</em><br><em><strong>加粗并斜体</strong></em><br><del>删除一段文本</del></p>\n</blockquote>\n</li>\n</ul>\n<h3 id=\"引用\"><a href=\"#引用\" class=\"headerlink\" title=\"引用\"></a>引用</h3><ul>\n<li>示例:<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;这是引用的内容</span><br><span class=\"line\">&gt;&gt;这是引用的内容</span><br><span class=\"line\">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;这是引用的内容</span><br></pre></td></tr></table></figure></li>\n<li>效果:<blockquote>\n<p>这是引用的内容</p>\n<blockquote>\n<p>这是引用的内容</p>\n<blockquote>\n<blockquote>\n<blockquote>\n<blockquote>\n<blockquote>\n<blockquote>\n<blockquote>\n<blockquote>\n<p>这是引用的内容</p>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n</li>\n</ul>\n<h3 id=\"分割线\"><a href=\"#分割线\" class=\"headerlink\" title=\"分割线\"></a>分割线</h3><ul>\n<li>示例:<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">----</span><br><span class=\"line\">***</span><br><span class=\"line\">*****</span><br></pre></td></tr></table></figure></li>\n<li>效果:</li>\n</ul>\n<hr>\n<h3 id=\"图片\"><a href=\"#图片\" class=\"headerlink\" title=\"图片\"></a>图片</h3><ul>\n<li>示例:<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">![图片alt](图片地址 &#x27;&#x27;图片title&#x27;&#x27;)</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"超链接\"><a href=\"#超链接\" class=\"headerlink\" title=\"超链接\"></a>超链接</h3><ul>\n<li>示例: <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[超链接名](超链接地址 &quot;超链接title&quot;)</span><br><span class=\"line\">title可加可不加</span><br><span class=\"line\">[简书](http://jianshu.com)</span><br><span class=\"line\">[百度](http://baidu.com)</span><br></pre></td></tr></table></figure></li>\n<li>效果:<blockquote>\n<p><a href=\"http://jianshu.com/\">简书</a><br><a href=\"http://baidu.com/\">百度</a></p>\n</blockquote>\n<h3 id=\"列表\"><a href=\"#列表\" class=\"headerlink\" title=\"列表\"></a>列表</h3></li>\n<li>示例:<ul>\n<li>无序列表: <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- 列表内容</span><br><span class=\"line\">+ 列表内容</span><br><span class=\"line\">* 列表内容</span><br></pre></td></tr></table></figure></li>\n<li>有序列表: <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1.列表内容</span><br><span class=\"line\">2.列表内容</span><br><span class=\"line\">3.列表内容</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li>效果:<ul>\n<li>无序列表:<blockquote>\n<ul>\n<li>列表内容</li>\n</ul>\n<ul>\n<li>列表内容</li>\n</ul>\n<ul>\n<li>列表内容</li>\n</ul>\n</blockquote>\n</li>\n<li>有序列表:<blockquote>\n<p>1.列表内容<br>2.列表内容<br>3.列表内容</p>\n</blockquote>\n<h3 id=\"表格\"><a href=\"#表格\" class=\"headerlink\" title=\"表格\"></a>表格</h3></li>\n</ul>\n</li>\n<li>示例:<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">姓名|技能|排行</span><br><span class=\"line\">--|:--:|--:</span><br><span class=\"line\">刘备|哭|大哥</span><br><span class=\"line\">关羽|打|二哥</span><br><span class=\"line\">张飞|骂|三弟</span><br></pre></td></tr></table></figure></li>\n<li>效果:<blockquote>\n<table>\n<thead>\n<tr>\n<th>姓名</th>\n<th align=\"center\">技能</th>\n<th align=\"right\">排行</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>刘备</td>\n<td align=\"center\">哭</td>\n<td align=\"right\">大哥</td>\n</tr>\n<tr>\n<td>关羽</td>\n<td align=\"center\">打</td>\n<td align=\"right\">二哥</td>\n</tr>\n<tr>\n<td>张飞</td>\n<td align=\"center\">骂</td>\n<td align=\"right\">三弟</td>\n</tr>\n</tbody></table>\n</blockquote>\n<h3 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h3></li>\n<li>示例:<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">`printf()`</span> 函数;</span><br><span class=\"line\">​<span class=\"string\">``</span><span class=\"string\">`javascript</span></span><br><span class=\"line\"><span class=\"string\">$(document).ready(function () &#123;</span></span><br><span class=\"line\"><span class=\"string\">    alert(&#x27;RUNOOB&#x27;);</span></span><br><span class=\"line\"><span class=\"string\">&#125;);</span></span><br><span class=\"line\"><span class=\"string\">​`</span><span class=\"string\">``</span></span><br></pre></td></tr></table></figure></li>\n<li>效果:<blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;$(<span class=\"variable language_\">document</span>).<span class=\"title function_\">ready</span>(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">   <span class=\"title function_\">alert</span>(<span class=\"string\">&#x27;RUNOOB&#x27;</span>);</span><br><span class=\"line\">&gt;&#125;)</span><br></pre></td></tr></table></figure></blockquote>\n</li>\n</ul>\n<h2 id=\"转义\"><a href=\"#转义\" class=\"headerlink\" title=\"转义\"></a>转义</h2><p>Markdown 使用了很多特殊符号来表示特定的意义，如果需要显示特定的符号则需要使用转义字符，Markdown 使用反斜杠转义特殊字符：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\   反斜线</span><br><span class=\"line\">`   反引号</span><br><span class=\"line\">*   星号</span><br><span class=\"line\">_   下划线</span><br><span class=\"line\">&#123;&#125;  花括号</span><br><span class=\"line\">[]  方括号</span><br><span class=\"line\">()  小括号</span><br><span class=\"line\">#   井字号</span><br><span class=\"line\">+   加号</span><br><span class=\"line\">-   减号</span><br><span class=\"line\">.   英文句点</span><br><span class=\"line\">!   感叹号</span><br></pre></td></tr></table></figure>\n<h2 id=\"ASCII-代码\"><a href=\"#ASCII-代码\" class=\"headerlink\" title=\"ASCII 代码\"></a>ASCII 代码</h2><p>HTML 和 XHTML 用标准的 7 比特 ASCII 代码在网络上传输数据。<br>7 比特 ASCII 代码可提供 128 个不同的字符值。<br>点击此处跳转至<a href=\"http://www.w3chtml.com/html/ref/ascii.html\">ASCII</a></p>"},{"title":"cancletoken的使用（取消上一次的请求）","date":"2020-07-01T09:16:26.000Z","_content":"\n<meta name=\"referrer\" content=\"no-referrer\"/>\n\n## cancletoken的使用（取消上一次的请求）\n\n当上一次请求没有完成时，再次发起请求，需要首先结束上一次请求。然后再发起新的请求\n\naxios有提供cancletoken的方案，记录如下\n\n<!-- more -->\n\n### 需求描述\n\n现在又个tabs切换，第一个tab请求数据较大，需要10秒获取数据，第二个tab需求请求5秒，第三个需要请求1秒。\n\n当点击第一个时，等待1秒后，再切换第二个tab，再等待1秒，切换第三个tab。\n\n> 数据的显示会首先显示第三次请求的数据，然后显示第二次请求的数据，最后显示到页面上渲染出来的时第一次请求到的数据。这个是不正确的，需要显示第三次请求的数据。\n\n![需求图片](https://limengtupian.oss-cn-beijing.aliyuncs.com/canceltoken%E7%9A%84%E4%BD%BF%E7%94%A8%E8%AE%B0%E5%BD%95/cancletoken.png)\n\n### 解决代码\n\n```js\nconst service = axios.create({\n  // process.env.NODE_ENV === 'development' 来判断是否开发环境\n  baseURL: process.env.NODE_ENV === 'development' ? '/' : host.host,\n  timeout: 60000000\n});\nlet cancel = null;\nlet url = null;\nservice.interceptors.request.use(config => {\n  // 在 cardCertificateReceive 页面中，存在tab切换发起多次请求需求，需要在本次请求时取消上次请求，故添加取消请求拦截\n  if (typeof (cancel) == 'function') {\n    if (url == config.url)\n      cancel('强制取消了请求')\n  }\n  url = config.url;\n  // 将cancel变成function\n  config['cancelToken'] = new axios.CancelToken(function (c) {\n    console.log(c, 'c')\n    cancel = c\n  })\n  return config;\n}, error => {\n  return Promise.reject();\n});\nservice.interceptors.response.use(response => {\n  if (response.status === 200) {\n    if (response.data.code === 200) {\n      //请求成功后，将cancel置为null。以通过下次请求。\n      cancel = null;\n      url = null;\n      return response.data;\n    } \n}, error => {\n});\n```\n\n### 核心\n\n```js\nconfig['cancelToken'] = new axios.CancelToken(function (c) {\n    console.log(c, 'c')\n    cancel = c\n  })\n```\n\nnew axios.CancelToken，函数内带了一个c这个参数。这个c打印出来是一个function，如下：\n\n```js\ncancel(message) {\n    if (token.reason) {\n      // Cancellation has already been requested\n      return;\n    }\n\n    token.reason = new Cancel(message);\n    resolvePromise(token.reason);\n  }\n```\n\n如若直接使用cancletoken还会导致一个结果，就是当页面初始化，需要同时发起多个请求时，会导致有些请求被‘误判’，从而被终止掉，所以又加个一个url，只判断相同的请求的情况下，才执行终止。","source":"_posts/cancletoken的使用（取消上一次的请求）.md","raw":"---\ntitle: cancletoken的使用（取消上一次的请求）\ndate: 2020-07-01 17:16:26\ntags: [cancletoken,vue]\n---\n\n<meta name=\"referrer\" content=\"no-referrer\"/>\n\n## cancletoken的使用（取消上一次的请求）\n\n当上一次请求没有完成时，再次发起请求，需要首先结束上一次请求。然后再发起新的请求\n\naxios有提供cancletoken的方案，记录如下\n\n<!-- more -->\n\n### 需求描述\n\n现在又个tabs切换，第一个tab请求数据较大，需要10秒获取数据，第二个tab需求请求5秒，第三个需要请求1秒。\n\n当点击第一个时，等待1秒后，再切换第二个tab，再等待1秒，切换第三个tab。\n\n> 数据的显示会首先显示第三次请求的数据，然后显示第二次请求的数据，最后显示到页面上渲染出来的时第一次请求到的数据。这个是不正确的，需要显示第三次请求的数据。\n\n![需求图片](https://limengtupian.oss-cn-beijing.aliyuncs.com/canceltoken%E7%9A%84%E4%BD%BF%E7%94%A8%E8%AE%B0%E5%BD%95/cancletoken.png)\n\n### 解决代码\n\n```js\nconst service = axios.create({\n  // process.env.NODE_ENV === 'development' 来判断是否开发环境\n  baseURL: process.env.NODE_ENV === 'development' ? '/' : host.host,\n  timeout: 60000000\n});\nlet cancel = null;\nlet url = null;\nservice.interceptors.request.use(config => {\n  // 在 cardCertificateReceive 页面中，存在tab切换发起多次请求需求，需要在本次请求时取消上次请求，故添加取消请求拦截\n  if (typeof (cancel) == 'function') {\n    if (url == config.url)\n      cancel('强制取消了请求')\n  }\n  url = config.url;\n  // 将cancel变成function\n  config['cancelToken'] = new axios.CancelToken(function (c) {\n    console.log(c, 'c')\n    cancel = c\n  })\n  return config;\n}, error => {\n  return Promise.reject();\n});\nservice.interceptors.response.use(response => {\n  if (response.status === 200) {\n    if (response.data.code === 200) {\n      //请求成功后，将cancel置为null。以通过下次请求。\n      cancel = null;\n      url = null;\n      return response.data;\n    } \n}, error => {\n});\n```\n\n### 核心\n\n```js\nconfig['cancelToken'] = new axios.CancelToken(function (c) {\n    console.log(c, 'c')\n    cancel = c\n  })\n```\n\nnew axios.CancelToken，函数内带了一个c这个参数。这个c打印出来是一个function，如下：\n\n```js\ncancel(message) {\n    if (token.reason) {\n      // Cancellation has already been requested\n      return;\n    }\n\n    token.reason = new Cancel(message);\n    resolvePromise(token.reason);\n  }\n```\n\n如若直接使用cancletoken还会导致一个结果，就是当页面初始化，需要同时发起多个请求时，会导致有些请求被‘误判’，从而被终止掉，所以又加个一个url，只判断相同的请求的情况下，才执行终止。","slug":"cancletoken的使用（取消上一次的请求）","published":1,"updated":"2020-07-01T08:37:08.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl0uux6vg000a7sufhzjmcdg7","content":"<meta name=\"referrer\" content=\"no-referrer\"/>\n\n<h2 id=\"cancletoken的使用（取消上一次的请求）\"><a href=\"#cancletoken的使用（取消上一次的请求）\" class=\"headerlink\" title=\"cancletoken的使用（取消上一次的请求）\"></a>cancletoken的使用（取消上一次的请求）</h2><p>当上一次请求没有完成时，再次发起请求，需要首先结束上一次请求。然后再发起新的请求</p>\n<p>axios有提供cancletoken的方案，记录如下</p>\n<span id=\"more\"></span>\n\n<h3 id=\"需求描述\"><a href=\"#需求描述\" class=\"headerlink\" title=\"需求描述\"></a>需求描述</h3><p>现在又个tabs切换，第一个tab请求数据较大，需要10秒获取数据，第二个tab需求请求5秒，第三个需要请求1秒。</p>\n<p>当点击第一个时，等待1秒后，再切换第二个tab，再等待1秒，切换第三个tab。</p>\n<blockquote>\n<p>数据的显示会首先显示第三次请求的数据，然后显示第二次请求的数据，最后显示到页面上渲染出来的时第一次请求到的数据。这个是不正确的，需要显示第三次请求的数据。</p>\n</blockquote>\n<p><img src=\"https://limengtupian.oss-cn-beijing.aliyuncs.com/canceltoken%E7%9A%84%E4%BD%BF%E7%94%A8%E8%AE%B0%E5%BD%95/cancletoken.png\" alt=\"需求图片\"></p>\n<h3 id=\"解决代码\"><a href=\"#解决代码\" class=\"headerlink\" title=\"解决代码\"></a>解决代码</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> service = axios.<span class=\"title function_\">create</span>(&#123;</span><br><span class=\"line\">  <span class=\"comment\">// process.env.NODE_ENV === &#x27;development&#x27; 来判断是否开发环境</span></span><br><span class=\"line\">  <span class=\"attr\">baseURL</span>: process.<span class=\"property\">env</span>.<span class=\"property\">NODE_ENV</span> === <span class=\"string\">&#x27;development&#x27;</span> ? <span class=\"string\">&#x27;/&#x27;</span> : host.<span class=\"property\">host</span>,</span><br><span class=\"line\">  <span class=\"attr\">timeout</span>: <span class=\"number\">60000000</span></span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"keyword\">let</span> cancel = <span class=\"literal\">null</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> url = <span class=\"literal\">null</span>;</span><br><span class=\"line\">service.<span class=\"property\">interceptors</span>.<span class=\"property\">request</span>.<span class=\"title function_\">use</span>(<span class=\"function\"><span class=\"params\">config</span> =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 在 cardCertificateReceive 页面中，存在tab切换发起多次请求需求，需要在本次请求时取消上次请求，故添加取消请求拦截</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> (cancel) == <span class=\"string\">&#x27;function&#x27;</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (url == config.<span class=\"property\">url</span>)</span><br><span class=\"line\">      <span class=\"title function_\">cancel</span>(<span class=\"string\">&#x27;强制取消了请求&#x27;</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  url = config.<span class=\"property\">url</span>;</span><br><span class=\"line\">  <span class=\"comment\">// 将cancel变成function</span></span><br><span class=\"line\">  config[<span class=\"string\">&#x27;cancelToken&#x27;</span>] = <span class=\"keyword\">new</span> axios.<span class=\"title class_\">CancelToken</span>(<span class=\"keyword\">function</span> (<span class=\"params\">c</span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(c, <span class=\"string\">&#x27;c&#x27;</span>)</span><br><span class=\"line\">    cancel = c</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  <span class=\"keyword\">return</span> config;</span><br><span class=\"line\">&#125;, <span class=\"function\"><span class=\"params\">error</span> =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"title class_\">Promise</span>.<span class=\"title function_\">reject</span>();</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">service.<span class=\"property\">interceptors</span>.<span class=\"property\">response</span>.<span class=\"title function_\">use</span>(<span class=\"function\"><span class=\"params\">response</span> =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (response.<span class=\"property\">status</span> === <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (response.<span class=\"property\">data</span>.<span class=\"property\">code</span> === <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">      <span class=\"comment\">//请求成功后，将cancel置为null。以通过下次请求。</span></span><br><span class=\"line\">      cancel = <span class=\"literal\">null</span>;</span><br><span class=\"line\">      url = <span class=\"literal\">null</span>;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> response.<span class=\"property\">data</span>;</span><br><span class=\"line\">    &#125; </span><br><span class=\"line\">&#125;, <span class=\"function\"><span class=\"params\">error</span> =&gt;</span> &#123;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"核心\"><a href=\"#核心\" class=\"headerlink\" title=\"核心\"></a>核心</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">config[<span class=\"string\">&#x27;cancelToken&#x27;</span>] = <span class=\"keyword\">new</span> axios.<span class=\"title class_\">CancelToken</span>(<span class=\"keyword\">function</span> (<span class=\"params\">c</span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(c, <span class=\"string\">&#x27;c&#x27;</span>)</span><br><span class=\"line\">    cancel = c</span><br><span class=\"line\">  &#125;)</span><br></pre></td></tr></table></figure>\n\n<p>new axios.CancelToken，函数内带了一个c这个参数。这个c打印出来是一个function，如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">cancel</span>(<span class=\"params\">message</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (token.<span class=\"property\">reason</span>) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// Cancellation has already been requested</span></span><br><span class=\"line\">      <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    token.<span class=\"property\">reason</span> = <span class=\"keyword\">new</span> <span class=\"title class_\">Cancel</span>(message);</span><br><span class=\"line\">    <span class=\"title function_\">resolvePromise</span>(token.<span class=\"property\">reason</span>);</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n\n<p>如若直接使用cancletoken还会导致一个结果，就是当页面初始化，需要同时发起多个请求时，会导致有些请求被‘误判’，从而被终止掉，所以又加个一个url，只判断相同的请求的情况下，才执行终止。</p>\n","site":{"data":{}},"excerpt":"<meta name=\"referrer\" content=\"no-referrer\"/>\n\n<h2 id=\"cancletoken的使用（取消上一次的请求）\"><a href=\"#cancletoken的使用（取消上一次的请求）\" class=\"headerlink\" title=\"cancletoken的使用（取消上一次的请求）\"></a>cancletoken的使用（取消上一次的请求）</h2><p>当上一次请求没有完成时，再次发起请求，需要首先结束上一次请求。然后再发起新的请求</p>\n<p>axios有提供cancletoken的方案，记录如下</p>","more":"<h3 id=\"需求描述\"><a href=\"#需求描述\" class=\"headerlink\" title=\"需求描述\"></a>需求描述</h3><p>现在又个tabs切换，第一个tab请求数据较大，需要10秒获取数据，第二个tab需求请求5秒，第三个需要请求1秒。</p>\n<p>当点击第一个时，等待1秒后，再切换第二个tab，再等待1秒，切换第三个tab。</p>\n<blockquote>\n<p>数据的显示会首先显示第三次请求的数据，然后显示第二次请求的数据，最后显示到页面上渲染出来的时第一次请求到的数据。这个是不正确的，需要显示第三次请求的数据。</p>\n</blockquote>\n<p><img src=\"https://limengtupian.oss-cn-beijing.aliyuncs.com/canceltoken%E7%9A%84%E4%BD%BF%E7%94%A8%E8%AE%B0%E5%BD%95/cancletoken.png\" alt=\"需求图片\"></p>\n<h3 id=\"解决代码\"><a href=\"#解决代码\" class=\"headerlink\" title=\"解决代码\"></a>解决代码</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> service = axios.<span class=\"title function_\">create</span>(&#123;</span><br><span class=\"line\">  <span class=\"comment\">// process.env.NODE_ENV === &#x27;development&#x27; 来判断是否开发环境</span></span><br><span class=\"line\">  <span class=\"attr\">baseURL</span>: process.<span class=\"property\">env</span>.<span class=\"property\">NODE_ENV</span> === <span class=\"string\">&#x27;development&#x27;</span> ? <span class=\"string\">&#x27;/&#x27;</span> : host.<span class=\"property\">host</span>,</span><br><span class=\"line\">  <span class=\"attr\">timeout</span>: <span class=\"number\">60000000</span></span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"keyword\">let</span> cancel = <span class=\"literal\">null</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> url = <span class=\"literal\">null</span>;</span><br><span class=\"line\">service.<span class=\"property\">interceptors</span>.<span class=\"property\">request</span>.<span class=\"title function_\">use</span>(<span class=\"function\"><span class=\"params\">config</span> =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 在 cardCertificateReceive 页面中，存在tab切换发起多次请求需求，需要在本次请求时取消上次请求，故添加取消请求拦截</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> (cancel) == <span class=\"string\">&#x27;function&#x27;</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (url == config.<span class=\"property\">url</span>)</span><br><span class=\"line\">      <span class=\"title function_\">cancel</span>(<span class=\"string\">&#x27;强制取消了请求&#x27;</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  url = config.<span class=\"property\">url</span>;</span><br><span class=\"line\">  <span class=\"comment\">// 将cancel变成function</span></span><br><span class=\"line\">  config[<span class=\"string\">&#x27;cancelToken&#x27;</span>] = <span class=\"keyword\">new</span> axios.<span class=\"title class_\">CancelToken</span>(<span class=\"keyword\">function</span> (<span class=\"params\">c</span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(c, <span class=\"string\">&#x27;c&#x27;</span>)</span><br><span class=\"line\">    cancel = c</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  <span class=\"keyword\">return</span> config;</span><br><span class=\"line\">&#125;, <span class=\"function\"><span class=\"params\">error</span> =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"title class_\">Promise</span>.<span class=\"title function_\">reject</span>();</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">service.<span class=\"property\">interceptors</span>.<span class=\"property\">response</span>.<span class=\"title function_\">use</span>(<span class=\"function\"><span class=\"params\">response</span> =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (response.<span class=\"property\">status</span> === <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (response.<span class=\"property\">data</span>.<span class=\"property\">code</span> === <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">      <span class=\"comment\">//请求成功后，将cancel置为null。以通过下次请求。</span></span><br><span class=\"line\">      cancel = <span class=\"literal\">null</span>;</span><br><span class=\"line\">      url = <span class=\"literal\">null</span>;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> response.<span class=\"property\">data</span>;</span><br><span class=\"line\">    &#125; </span><br><span class=\"line\">&#125;, <span class=\"function\"><span class=\"params\">error</span> =&gt;</span> &#123;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"核心\"><a href=\"#核心\" class=\"headerlink\" title=\"核心\"></a>核心</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">config[<span class=\"string\">&#x27;cancelToken&#x27;</span>] = <span class=\"keyword\">new</span> axios.<span class=\"title class_\">CancelToken</span>(<span class=\"keyword\">function</span> (<span class=\"params\">c</span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(c, <span class=\"string\">&#x27;c&#x27;</span>)</span><br><span class=\"line\">    cancel = c</span><br><span class=\"line\">  &#125;)</span><br></pre></td></tr></table></figure>\n\n<p>new axios.CancelToken，函数内带了一个c这个参数。这个c打印出来是一个function，如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">cancel</span>(<span class=\"params\">message</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (token.<span class=\"property\">reason</span>) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// Cancellation has already been requested</span></span><br><span class=\"line\">      <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    token.<span class=\"property\">reason</span> = <span class=\"keyword\">new</span> <span class=\"title class_\">Cancel</span>(message);</span><br><span class=\"line\">    <span class=\"title function_\">resolvePromise</span>(token.<span class=\"property\">reason</span>);</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n\n<p>如若直接使用cancletoken还会导致一个结果，就是当页面初始化，需要同时发起多个请求时，会导致有些请求被‘误判’，从而被终止掉，所以又加个一个url，只判断相同的请求的情况下，才执行终止。</p>"},{"title":"git合并两个本地库","date":"2020-07-12T09:16:26.000Z","_content":"\n<meta name=\"referrer\" content=\"no-referrer\"/>\n\n## git合并两个本地库\n\n当你本地复制了一套代码作为初始备份时候，并且没有将.git文件一起复制的话，当你做完你的新功能，需要push上去的时候，就需要做一些额外的操作\n\n<!-- more -->\n\n> ```js\n> 关键词：git pull origin master --allow-unrelated-histories\n> ```\n\n\n\n### 本地已经初始化仓库\n\n先将本地的项目初始化为一个git仓库，然后再强行合并本地仓库和远程仓库，由于这两个仓库是完全不同的两个仓库，所以直接pull都会报错，需要在pull的时候假加上–allow-unrelated-histories才可以pull成功。**此方法适用于本地项目已经是一个git仓库的情况。**\n\n1. git init\n2.  git add .\n3.  git commit -m 'fix'\n4.  git remote add origin git@github.com:yuanmingchen/tensorflow_study.git\n5.  git pull origin master --allow-unrelated-histories\n6.  git push -u origin master\n\n当然，这样你push上去，实际上会有很多冲突，解决冲突然后提交就欧克了。\n\n参考如下：[将本地已有的一个项目上传到新建的git仓库的方法](https://www.cnblogs.com/presleyren/p/11715218.html)","source":"_posts/git合并两个本地库.md","raw":"---\ntitle: git合并两个本地库\ndate: 2020-07-12 17:16:26\ntags: [github,git]\n---\n\n<meta name=\"referrer\" content=\"no-referrer\"/>\n\n## git合并两个本地库\n\n当你本地复制了一套代码作为初始备份时候，并且没有将.git文件一起复制的话，当你做完你的新功能，需要push上去的时候，就需要做一些额外的操作\n\n<!-- more -->\n\n> ```js\n> 关键词：git pull origin master --allow-unrelated-histories\n> ```\n\n\n\n### 本地已经初始化仓库\n\n先将本地的项目初始化为一个git仓库，然后再强行合并本地仓库和远程仓库，由于这两个仓库是完全不同的两个仓库，所以直接pull都会报错，需要在pull的时候假加上–allow-unrelated-histories才可以pull成功。**此方法适用于本地项目已经是一个git仓库的情况。**\n\n1. git init\n2.  git add .\n3.  git commit -m 'fix'\n4.  git remote add origin git@github.com:yuanmingchen/tensorflow_study.git\n5.  git pull origin master --allow-unrelated-histories\n6.  git push -u origin master\n\n当然，这样你push上去，实际上会有很多冲突，解决冲突然后提交就欧克了。\n\n参考如下：[将本地已有的一个项目上传到新建的git仓库的方法](https://www.cnblogs.com/presleyren/p/11715218.html)","slug":"git合并两个本地库","published":1,"updated":"2020-09-01T02:15:18.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl0uux6vh000c7suf3twhg5o1","content":"<meta name=\"referrer\" content=\"no-referrer\"/>\n\n<h2 id=\"git合并两个本地库\"><a href=\"#git合并两个本地库\" class=\"headerlink\" title=\"git合并两个本地库\"></a>git合并两个本地库</h2><p>当你本地复制了一套代码作为初始备份时候，并且没有将.git文件一起复制的话，当你做完你的新功能，需要push上去的时候，就需要做一些额外的操作</p>\n<span id=\"more\"></span>\n\n<blockquote>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">关键词：git pull origin master --allow-unrelated-histories</span><br></pre></td></tr></table></figure>\n</blockquote>\n<h3 id=\"本地已经初始化仓库\"><a href=\"#本地已经初始化仓库\" class=\"headerlink\" title=\"本地已经初始化仓库\"></a>本地已经初始化仓库</h3><p>先将本地的项目初始化为一个git仓库，然后再强行合并本地仓库和远程仓库，由于这两个仓库是完全不同的两个仓库，所以直接pull都会报错，需要在pull的时候假加上–allow-unrelated-histories才可以pull成功。<strong>此方法适用于本地项目已经是一个git仓库的情况。</strong></p>\n<ol>\n<li>git init</li>\n<li> git add .</li>\n<li> git commit -m ‘fix’</li>\n<li> git remote add origin <a href=\"mailto:&#103;&#105;&#116;&#64;&#103;&#105;&#116;&#104;&#x75;&#98;&#x2e;&#99;&#111;&#109;\">&#103;&#105;&#116;&#64;&#103;&#105;&#116;&#104;&#x75;&#98;&#x2e;&#99;&#111;&#109;</a>:yuanmingchen/tensorflow_study.git</li>\n<li> git pull origin master –allow-unrelated-histories</li>\n<li> git push -u origin master</li>\n</ol>\n<p>当然，这样你push上去，实际上会有很多冲突，解决冲突然后提交就欧克了。</p>\n<p>参考如下：<a href=\"https://www.cnblogs.com/presleyren/p/11715218.html\">将本地已有的一个项目上传到新建的git仓库的方法</a></p>\n","site":{"data":{}},"excerpt":"<meta name=\"referrer\" content=\"no-referrer\"/>\n\n<h2 id=\"git合并两个本地库\"><a href=\"#git合并两个本地库\" class=\"headerlink\" title=\"git合并两个本地库\"></a>git合并两个本地库</h2><p>当你本地复制了一套代码作为初始备份时候，并且没有将.git文件一起复制的话，当你做完你的新功能，需要push上去的时候，就需要做一些额外的操作</p>","more":"<blockquote>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">关键词：git pull origin master --allow-unrelated-histories</span><br></pre></td></tr></table></figure>\n</blockquote>\n<h3 id=\"本地已经初始化仓库\"><a href=\"#本地已经初始化仓库\" class=\"headerlink\" title=\"本地已经初始化仓库\"></a>本地已经初始化仓库</h3><p>先将本地的项目初始化为一个git仓库，然后再强行合并本地仓库和远程仓库，由于这两个仓库是完全不同的两个仓库，所以直接pull都会报错，需要在pull的时候假加上–allow-unrelated-histories才可以pull成功。<strong>此方法适用于本地项目已经是一个git仓库的情况。</strong></p>\n<ol>\n<li>git init</li>\n<li> git add .</li>\n<li> git commit -m ‘fix’</li>\n<li> git remote add origin <a href=\"mailto:&#103;&#105;&#116;&#64;&#103;&#105;&#116;&#104;&#x75;&#98;&#x2e;&#99;&#111;&#109;\">&#103;&#105;&#116;&#64;&#103;&#105;&#116;&#104;&#x75;&#98;&#x2e;&#99;&#111;&#109;</a>:yuanmingchen/tensorflow_study.git</li>\n<li> git pull origin master –allow-unrelated-histories</li>\n<li> git push -u origin master</li>\n</ol>\n<p>当然，这样你push上去，实际上会有很多冲突，解决冲突然后提交就欧克了。</p>\n<p>参考如下：<a href=\"https://www.cnblogs.com/presleyren/p/11715218.html\">将本地已有的一个项目上传到新建的git仓库的方法</a></p>"},{"title":"node实现自动备份数据库","date":"2020-07-12T09:16:26.000Z","_content":"\n<meta name=\"referrer\" content=\"no-referrer\"/>\n\n## node实现自动备份数据库\n\n在Mongodb中我们使用mongodump命令来备份MongoDB数据。该命令可以导出所有数据到指定目录中。\n\nmongodump命令可以通过参数指定导出的数据量级转存的服务器\n\n<!-- more -->\n\n> 手动备份比较麻烦并且没有必要。所以找了下自动备份的实现代码\n\n### 备份命令\n\nmongodump命令脚本语法如下：\n\n```\n>mongodump -h dbhost -d dbname -o dbdirectory\n```\n\n在mongodb/bin目录下，直接备份到当前目录可以简写：\n\n```\n>mongodump\n```\n\n### 数据恢复\n\nmongodb使用 mongorestore 命令来恢复备份的数据。\n\n```\n>mongorestore -h <hostname><:port> -d dbname <path>\n```\n\n```\n>mongorestore\n```\n\n ### 自动备份\n\n1. 创建一个定时任务\n2. 调用cmd\n3. 执行命令后打包\n\n```js\nnpm install node-schedule -S\nnpm install child_process -S\nnpm i fs -S\nnpm i compressing -S\n```\n\n代码如下：\n\n```js\nconst schedule = require('node-schedule');//引入定时任务模块\nconst process = require('child_process');//引入cmd模块\nconst fs = require('fs');//引入fs模块\nconst compressing = require('compressing');\n//cmd执行内容\n//数据库地址及端口 如:127.0.0.1:27017\n//要备份的数据库名称 如:test\n//备份路径如:C:\\\\backup\n// const cmd = 'mongodump -h [数据库地址:端口] -d [要备份的数据库名称] -o [备份路径]';\nconst cdIn = 'cd /www/server/mongodb/bin'\nconst cmd = 'mongodump';\n\nfunction scheduleCronstyle() {\n  console.log('start....')\n  schedule.scheduleJob('0 30 5 * * *', function () {  //每周日的23时整\n    console.log('scheduleJob....')\n    process.exec(cdIn, function (error, stdout, stderr) {  //在cmd中执行上方定义的命令\n      console.log('exec....', cdIn)\n      console.log('exec....', cmd)\n      process.exec(cmd, function (error, stdout, stderr) {  //在cmd中执行上方定义的命令\n        if (error) {\n          console.log('Error:' + error); //错误\n        } else if (stderr.lenght > 0) {\n          console.log('Stderr:' + stderr.toString())  //标准性错误\n        } else {\n          //成功之后写入时间\n          let year = (new Date()).getFullYear();//获取年\n          let month = ((new Date()).getMonth() + 1) > 9 ? ((new Date()).getMonth() + 1) : '0' + ((new Date()).getMonth() + 1);//获取月\n          let date = (new Date()).getDate() > 9 ? (new Date()).getDate() : '0' + (new Date()).getDate();//获取日\n          let hour = (new Date()).getHours() > 9 ? (new Date()).getHours() : '0' + (new Date()).getHours();//获取时\n          let minute = (new Date()).getMinutes() > 9 ? (new Date()).getMinutes() : '0' + (new Date()).getMinutes();//获取分\n          let seconds = (new Date()).getSeconds() > 9 ? (new Date()).getSeconds() : '0' + (new Date()).getSeconds();//获取秒\n          let str = `${year}-${month}-${date} ${hour}:${minute}:${seconds} 备份`\n          console.log(str, 'srt')\n          compressing.zip.compressDir('./dump', './' + str + '.zip')\n            .then(() => {\n              console.log('success');\n            })\n            .catch(err => {\n              console.error(err);\n            });\n        }\n      });\n\n    });\n\n  });\n}\n\nscheduleCronstyle();\n```\n\n将文件放入node环境下，执行node index.js,在规定时间会在当前目录下生成数据库zip压缩包\n\n### 定时任务scheduleCronstyle\n\n传入参数的意思:\n\n每分钟的第30秒触发： '30 * * * * *'\n\n每小时的1分30秒触发 ：'30 1 * * * *'\n\n每天的凌晨1点1分30秒触发 ：'30 1 1 * * *'\n\n每月的1日1点1分30秒触发 ：'30 1 1 1 * *'\n\n2016年的1月1日1点1分30秒触发 ：'30 1 1 1 2016 *'\n\n每周1的1点1分30秒触发 ：'30 1 1 * * 1'","source":"_posts/node实现自动备份数据库.md","raw":"---\ntitle: node实现自动备份数据库\ndate: 2020-07-12 17:16:26\ntags: [node,mongodb]\n---\n\n<meta name=\"referrer\" content=\"no-referrer\"/>\n\n## node实现自动备份数据库\n\n在Mongodb中我们使用mongodump命令来备份MongoDB数据。该命令可以导出所有数据到指定目录中。\n\nmongodump命令可以通过参数指定导出的数据量级转存的服务器\n\n<!-- more -->\n\n> 手动备份比较麻烦并且没有必要。所以找了下自动备份的实现代码\n\n### 备份命令\n\nmongodump命令脚本语法如下：\n\n```\n>mongodump -h dbhost -d dbname -o dbdirectory\n```\n\n在mongodb/bin目录下，直接备份到当前目录可以简写：\n\n```\n>mongodump\n```\n\n### 数据恢复\n\nmongodb使用 mongorestore 命令来恢复备份的数据。\n\n```\n>mongorestore -h <hostname><:port> -d dbname <path>\n```\n\n```\n>mongorestore\n```\n\n ### 自动备份\n\n1. 创建一个定时任务\n2. 调用cmd\n3. 执行命令后打包\n\n```js\nnpm install node-schedule -S\nnpm install child_process -S\nnpm i fs -S\nnpm i compressing -S\n```\n\n代码如下：\n\n```js\nconst schedule = require('node-schedule');//引入定时任务模块\nconst process = require('child_process');//引入cmd模块\nconst fs = require('fs');//引入fs模块\nconst compressing = require('compressing');\n//cmd执行内容\n//数据库地址及端口 如:127.0.0.1:27017\n//要备份的数据库名称 如:test\n//备份路径如:C:\\\\backup\n// const cmd = 'mongodump -h [数据库地址:端口] -d [要备份的数据库名称] -o [备份路径]';\nconst cdIn = 'cd /www/server/mongodb/bin'\nconst cmd = 'mongodump';\n\nfunction scheduleCronstyle() {\n  console.log('start....')\n  schedule.scheduleJob('0 30 5 * * *', function () {  //每周日的23时整\n    console.log('scheduleJob....')\n    process.exec(cdIn, function (error, stdout, stderr) {  //在cmd中执行上方定义的命令\n      console.log('exec....', cdIn)\n      console.log('exec....', cmd)\n      process.exec(cmd, function (error, stdout, stderr) {  //在cmd中执行上方定义的命令\n        if (error) {\n          console.log('Error:' + error); //错误\n        } else if (stderr.lenght > 0) {\n          console.log('Stderr:' + stderr.toString())  //标准性错误\n        } else {\n          //成功之后写入时间\n          let year = (new Date()).getFullYear();//获取年\n          let month = ((new Date()).getMonth() + 1) > 9 ? ((new Date()).getMonth() + 1) : '0' + ((new Date()).getMonth() + 1);//获取月\n          let date = (new Date()).getDate() > 9 ? (new Date()).getDate() : '0' + (new Date()).getDate();//获取日\n          let hour = (new Date()).getHours() > 9 ? (new Date()).getHours() : '0' + (new Date()).getHours();//获取时\n          let minute = (new Date()).getMinutes() > 9 ? (new Date()).getMinutes() : '0' + (new Date()).getMinutes();//获取分\n          let seconds = (new Date()).getSeconds() > 9 ? (new Date()).getSeconds() : '0' + (new Date()).getSeconds();//获取秒\n          let str = `${year}-${month}-${date} ${hour}:${minute}:${seconds} 备份`\n          console.log(str, 'srt')\n          compressing.zip.compressDir('./dump', './' + str + '.zip')\n            .then(() => {\n              console.log('success');\n            })\n            .catch(err => {\n              console.error(err);\n            });\n        }\n      });\n\n    });\n\n  });\n}\n\nscheduleCronstyle();\n```\n\n将文件放入node环境下，执行node index.js,在规定时间会在当前目录下生成数据库zip压缩包\n\n### 定时任务scheduleCronstyle\n\n传入参数的意思:\n\n每分钟的第30秒触发： '30 * * * * *'\n\n每小时的1分30秒触发 ：'30 1 * * * *'\n\n每天的凌晨1点1分30秒触发 ：'30 1 1 * * *'\n\n每月的1日1点1分30秒触发 ：'30 1 1 1 * *'\n\n2016年的1月1日1点1分30秒触发 ：'30 1 1 1 2016 *'\n\n每周1的1点1分30秒触发 ：'30 1 1 * * 1'","slug":"node实现自动备份数据库","published":1,"updated":"2020-09-02T07:35:56.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl0uux6vj000f7suf5q6dawmq","content":"<meta name=\"referrer\" content=\"no-referrer\"/>\n\n<h2 id=\"node实现自动备份数据库\"><a href=\"#node实现自动备份数据库\" class=\"headerlink\" title=\"node实现自动备份数据库\"></a>node实现自动备份数据库</h2><p>在Mongodb中我们使用mongodump命令来备份MongoDB数据。该命令可以导出所有数据到指定目录中。</p>\n<p>mongodump命令可以通过参数指定导出的数据量级转存的服务器</p>\n<span id=\"more\"></span>\n\n<blockquote>\n<p>手动备份比较麻烦并且没有必要。所以找了下自动备份的实现代码</p>\n</blockquote>\n<h3 id=\"备份命令\"><a href=\"#备份命令\" class=\"headerlink\" title=\"备份命令\"></a>备份命令</h3><p>mongodump命令脚本语法如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;mongodump -h dbhost -d dbname -o dbdirectory</span><br></pre></td></tr></table></figure>\n\n<p>在mongodb/bin目录下，直接备份到当前目录可以简写：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;mongodump</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"数据恢复\"><a href=\"#数据恢复\" class=\"headerlink\" title=\"数据恢复\"></a>数据恢复</h3><p>mongodb使用 mongorestore 命令来恢复备份的数据。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;mongorestore -h &lt;hostname&gt;&lt;:port&gt; -d dbname &lt;path&gt;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;mongorestore</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"自动备份\"><a href=\"#自动备份\" class=\"headerlink\" title=\"自动备份\"></a>自动备份</h3><ol>\n<li>创建一个定时任务</li>\n<li>调用cmd</li>\n<li>执行命令后打包</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install node-schedule -S</span><br><span class=\"line\">npm install child_process -S</span><br><span class=\"line\">npm i fs -S</span><br><span class=\"line\">npm i compressing -S</span><br></pre></td></tr></table></figure>\n\n<p>代码如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> schedule = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;node-schedule&#x27;</span>);<span class=\"comment\">//引入定时任务模块</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> process = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;child_process&#x27;</span>);<span class=\"comment\">//引入cmd模块</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;fs&#x27;</span>);<span class=\"comment\">//引入fs模块</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> compressing = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;compressing&#x27;</span>);</span><br><span class=\"line\"><span class=\"comment\">//cmd执行内容</span></span><br><span class=\"line\"><span class=\"comment\">//数据库地址及端口 如:127.0.0.1:27017</span></span><br><span class=\"line\"><span class=\"comment\">//要备份的数据库名称 如:test</span></span><br><span class=\"line\"><span class=\"comment\">//备份路径如:C:\\\\backup</span></span><br><span class=\"line\"><span class=\"comment\">// const cmd = &#x27;mongodump -h [数据库地址:端口] -d [要备份的数据库名称] -o [备份路径]&#x27;;</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> cdIn = <span class=\"string\">&#x27;cd /www/server/mongodb/bin&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> cmd = <span class=\"string\">&#x27;mongodump&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">scheduleCronstyle</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;start....&#x27;</span>)</span><br><span class=\"line\">  schedule.<span class=\"title function_\">scheduleJob</span>(<span class=\"string\">&#x27;0 30 5 * * *&#x27;</span>, <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;  <span class=\"comment\">//每周日的23时整</span></span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;scheduleJob....&#x27;</span>)</span><br><span class=\"line\">    process.<span class=\"title function_\">exec</span>(cdIn, <span class=\"keyword\">function</span> (<span class=\"params\">error, stdout, stderr</span>) &#123;  <span class=\"comment\">//在cmd中执行上方定义的命令</span></span><br><span class=\"line\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;exec....&#x27;</span>, cdIn)</span><br><span class=\"line\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;exec....&#x27;</span>, cmd)</span><br><span class=\"line\">      process.<span class=\"title function_\">exec</span>(cmd, <span class=\"keyword\">function</span> (<span class=\"params\">error, stdout, stderr</span>) &#123;  <span class=\"comment\">//在cmd中执行上方定义的命令</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (error) &#123;</span><br><span class=\"line\">          <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;Error:&#x27;</span> + error); <span class=\"comment\">//错误</span></span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (stderr.<span class=\"property\">lenght</span> &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">          <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;Stderr:&#x27;</span> + stderr.<span class=\"title function_\">toString</span>())  <span class=\"comment\">//标准性错误</span></span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">          <span class=\"comment\">//成功之后写入时间</span></span><br><span class=\"line\">          <span class=\"keyword\">let</span> year = (<span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>()).<span class=\"title function_\">getFullYear</span>();<span class=\"comment\">//获取年</span></span><br><span class=\"line\">          <span class=\"keyword\">let</span> month = ((<span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>()).<span class=\"title function_\">getMonth</span>() + <span class=\"number\">1</span>) &gt; <span class=\"number\">9</span> ? ((<span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>()).<span class=\"title function_\">getMonth</span>() + <span class=\"number\">1</span>) : <span class=\"string\">&#x27;0&#x27;</span> + ((<span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>()).<span class=\"title function_\">getMonth</span>() + <span class=\"number\">1</span>);<span class=\"comment\">//获取月</span></span><br><span class=\"line\">          <span class=\"keyword\">let</span> date = (<span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>()).<span class=\"title function_\">getDate</span>() &gt; <span class=\"number\">9</span> ? (<span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>()).<span class=\"title function_\">getDate</span>() : <span class=\"string\">&#x27;0&#x27;</span> + (<span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>()).<span class=\"title function_\">getDate</span>();<span class=\"comment\">//获取日</span></span><br><span class=\"line\">          <span class=\"keyword\">let</span> hour = (<span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>()).<span class=\"title function_\">getHours</span>() &gt; <span class=\"number\">9</span> ? (<span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>()).<span class=\"title function_\">getHours</span>() : <span class=\"string\">&#x27;0&#x27;</span> + (<span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>()).<span class=\"title function_\">getHours</span>();<span class=\"comment\">//获取时</span></span><br><span class=\"line\">          <span class=\"keyword\">let</span> minute = (<span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>()).<span class=\"title function_\">getMinutes</span>() &gt; <span class=\"number\">9</span> ? (<span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>()).<span class=\"title function_\">getMinutes</span>() : <span class=\"string\">&#x27;0&#x27;</span> + (<span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>()).<span class=\"title function_\">getMinutes</span>();<span class=\"comment\">//获取分</span></span><br><span class=\"line\">          <span class=\"keyword\">let</span> seconds = (<span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>()).<span class=\"title function_\">getSeconds</span>() &gt; <span class=\"number\">9</span> ? (<span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>()).<span class=\"title function_\">getSeconds</span>() : <span class=\"string\">&#x27;0&#x27;</span> + (<span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>()).<span class=\"title function_\">getSeconds</span>();<span class=\"comment\">//获取秒</span></span><br><span class=\"line\">          <span class=\"keyword\">let</span> str = <span class=\"string\">`<span class=\"subst\">$&#123;year&#125;</span>-<span class=\"subst\">$&#123;month&#125;</span>-<span class=\"subst\">$&#123;date&#125;</span> <span class=\"subst\">$&#123;hour&#125;</span>:<span class=\"subst\">$&#123;minute&#125;</span>:<span class=\"subst\">$&#123;seconds&#125;</span> 备份`</span></span><br><span class=\"line\">          <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(str, <span class=\"string\">&#x27;srt&#x27;</span>)</span><br><span class=\"line\">          compressing.<span class=\"property\">zip</span>.<span class=\"title function_\">compressDir</span>(<span class=\"string\">&#x27;./dump&#x27;</span>, <span class=\"string\">&#x27;./&#x27;</span> + str + <span class=\"string\">&#x27;.zip&#x27;</span>)</span><br><span class=\"line\">            .<span class=\"title function_\">then</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">              <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;success&#x27;</span>);</span><br><span class=\"line\">            &#125;)</span><br><span class=\"line\">            .<span class=\"title function_\">catch</span>(<span class=\"function\"><span class=\"params\">err</span> =&gt;</span> &#123;</span><br><span class=\"line\">              <span class=\"variable language_\">console</span>.<span class=\"title function_\">error</span>(err);</span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">scheduleCronstyle</span>();</span><br></pre></td></tr></table></figure>\n\n<p>将文件放入node环境下，执行node index.js,在规定时间会在当前目录下生成数据库zip压缩包</p>\n<h3 id=\"定时任务scheduleCronstyle\"><a href=\"#定时任务scheduleCronstyle\" class=\"headerlink\" title=\"定时任务scheduleCronstyle\"></a>定时任务scheduleCronstyle</h3><p>传入参数的意思:</p>\n<p>每分钟的第30秒触发： ‘30 * * * * *’</p>\n<p>每小时的1分30秒触发 ：’30 1 * * * *’</p>\n<p>每天的凌晨1点1分30秒触发 ：’30 1 1 * * *’</p>\n<p>每月的1日1点1分30秒触发 ：’30 1 1 1 * *’</p>\n<p>2016年的1月1日1点1分30秒触发 ：’30 1 1 1 2016 *’</p>\n<p>每周1的1点1分30秒触发 ：’30 1 1 * * 1’</p>\n","site":{"data":{}},"excerpt":"<meta name=\"referrer\" content=\"no-referrer\"/>\n\n<h2 id=\"node实现自动备份数据库\"><a href=\"#node实现自动备份数据库\" class=\"headerlink\" title=\"node实现自动备份数据库\"></a>node实现自动备份数据库</h2><p>在Mongodb中我们使用mongodump命令来备份MongoDB数据。该命令可以导出所有数据到指定目录中。</p>\n<p>mongodump命令可以通过参数指定导出的数据量级转存的服务器</p>","more":"<blockquote>\n<p>手动备份比较麻烦并且没有必要。所以找了下自动备份的实现代码</p>\n</blockquote>\n<h3 id=\"备份命令\"><a href=\"#备份命令\" class=\"headerlink\" title=\"备份命令\"></a>备份命令</h3><p>mongodump命令脚本语法如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;mongodump -h dbhost -d dbname -o dbdirectory</span><br></pre></td></tr></table></figure>\n\n<p>在mongodb/bin目录下，直接备份到当前目录可以简写：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;mongodump</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"数据恢复\"><a href=\"#数据恢复\" class=\"headerlink\" title=\"数据恢复\"></a>数据恢复</h3><p>mongodb使用 mongorestore 命令来恢复备份的数据。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;mongorestore -h &lt;hostname&gt;&lt;:port&gt; -d dbname &lt;path&gt;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;mongorestore</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"自动备份\"><a href=\"#自动备份\" class=\"headerlink\" title=\"自动备份\"></a>自动备份</h3><ol>\n<li>创建一个定时任务</li>\n<li>调用cmd</li>\n<li>执行命令后打包</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install node-schedule -S</span><br><span class=\"line\">npm install child_process -S</span><br><span class=\"line\">npm i fs -S</span><br><span class=\"line\">npm i compressing -S</span><br></pre></td></tr></table></figure>\n\n<p>代码如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> schedule = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;node-schedule&#x27;</span>);<span class=\"comment\">//引入定时任务模块</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> process = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;child_process&#x27;</span>);<span class=\"comment\">//引入cmd模块</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;fs&#x27;</span>);<span class=\"comment\">//引入fs模块</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> compressing = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;compressing&#x27;</span>);</span><br><span class=\"line\"><span class=\"comment\">//cmd执行内容</span></span><br><span class=\"line\"><span class=\"comment\">//数据库地址及端口 如:127.0.0.1:27017</span></span><br><span class=\"line\"><span class=\"comment\">//要备份的数据库名称 如:test</span></span><br><span class=\"line\"><span class=\"comment\">//备份路径如:C:\\\\backup</span></span><br><span class=\"line\"><span class=\"comment\">// const cmd = &#x27;mongodump -h [数据库地址:端口] -d [要备份的数据库名称] -o [备份路径]&#x27;;</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> cdIn = <span class=\"string\">&#x27;cd /www/server/mongodb/bin&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> cmd = <span class=\"string\">&#x27;mongodump&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">scheduleCronstyle</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;start....&#x27;</span>)</span><br><span class=\"line\">  schedule.<span class=\"title function_\">scheduleJob</span>(<span class=\"string\">&#x27;0 30 5 * * *&#x27;</span>, <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;  <span class=\"comment\">//每周日的23时整</span></span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;scheduleJob....&#x27;</span>)</span><br><span class=\"line\">    process.<span class=\"title function_\">exec</span>(cdIn, <span class=\"keyword\">function</span> (<span class=\"params\">error, stdout, stderr</span>) &#123;  <span class=\"comment\">//在cmd中执行上方定义的命令</span></span><br><span class=\"line\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;exec....&#x27;</span>, cdIn)</span><br><span class=\"line\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;exec....&#x27;</span>, cmd)</span><br><span class=\"line\">      process.<span class=\"title function_\">exec</span>(cmd, <span class=\"keyword\">function</span> (<span class=\"params\">error, stdout, stderr</span>) &#123;  <span class=\"comment\">//在cmd中执行上方定义的命令</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (error) &#123;</span><br><span class=\"line\">          <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;Error:&#x27;</span> + error); <span class=\"comment\">//错误</span></span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (stderr.<span class=\"property\">lenght</span> &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">          <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;Stderr:&#x27;</span> + stderr.<span class=\"title function_\">toString</span>())  <span class=\"comment\">//标准性错误</span></span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">          <span class=\"comment\">//成功之后写入时间</span></span><br><span class=\"line\">          <span class=\"keyword\">let</span> year = (<span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>()).<span class=\"title function_\">getFullYear</span>();<span class=\"comment\">//获取年</span></span><br><span class=\"line\">          <span class=\"keyword\">let</span> month = ((<span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>()).<span class=\"title function_\">getMonth</span>() + <span class=\"number\">1</span>) &gt; <span class=\"number\">9</span> ? ((<span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>()).<span class=\"title function_\">getMonth</span>() + <span class=\"number\">1</span>) : <span class=\"string\">&#x27;0&#x27;</span> + ((<span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>()).<span class=\"title function_\">getMonth</span>() + <span class=\"number\">1</span>);<span class=\"comment\">//获取月</span></span><br><span class=\"line\">          <span class=\"keyword\">let</span> date = (<span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>()).<span class=\"title function_\">getDate</span>() &gt; <span class=\"number\">9</span> ? (<span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>()).<span class=\"title function_\">getDate</span>() : <span class=\"string\">&#x27;0&#x27;</span> + (<span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>()).<span class=\"title function_\">getDate</span>();<span class=\"comment\">//获取日</span></span><br><span class=\"line\">          <span class=\"keyword\">let</span> hour = (<span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>()).<span class=\"title function_\">getHours</span>() &gt; <span class=\"number\">9</span> ? (<span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>()).<span class=\"title function_\">getHours</span>() : <span class=\"string\">&#x27;0&#x27;</span> + (<span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>()).<span class=\"title function_\">getHours</span>();<span class=\"comment\">//获取时</span></span><br><span class=\"line\">          <span class=\"keyword\">let</span> minute = (<span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>()).<span class=\"title function_\">getMinutes</span>() &gt; <span class=\"number\">9</span> ? (<span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>()).<span class=\"title function_\">getMinutes</span>() : <span class=\"string\">&#x27;0&#x27;</span> + (<span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>()).<span class=\"title function_\">getMinutes</span>();<span class=\"comment\">//获取分</span></span><br><span class=\"line\">          <span class=\"keyword\">let</span> seconds = (<span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>()).<span class=\"title function_\">getSeconds</span>() &gt; <span class=\"number\">9</span> ? (<span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>()).<span class=\"title function_\">getSeconds</span>() : <span class=\"string\">&#x27;0&#x27;</span> + (<span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>()).<span class=\"title function_\">getSeconds</span>();<span class=\"comment\">//获取秒</span></span><br><span class=\"line\">          <span class=\"keyword\">let</span> str = <span class=\"string\">`<span class=\"subst\">$&#123;year&#125;</span>-<span class=\"subst\">$&#123;month&#125;</span>-<span class=\"subst\">$&#123;date&#125;</span> <span class=\"subst\">$&#123;hour&#125;</span>:<span class=\"subst\">$&#123;minute&#125;</span>:<span class=\"subst\">$&#123;seconds&#125;</span> 备份`</span></span><br><span class=\"line\">          <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(str, <span class=\"string\">&#x27;srt&#x27;</span>)</span><br><span class=\"line\">          compressing.<span class=\"property\">zip</span>.<span class=\"title function_\">compressDir</span>(<span class=\"string\">&#x27;./dump&#x27;</span>, <span class=\"string\">&#x27;./&#x27;</span> + str + <span class=\"string\">&#x27;.zip&#x27;</span>)</span><br><span class=\"line\">            .<span class=\"title function_\">then</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">              <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;success&#x27;</span>);</span><br><span class=\"line\">            &#125;)</span><br><span class=\"line\">            .<span class=\"title function_\">catch</span>(<span class=\"function\"><span class=\"params\">err</span> =&gt;</span> &#123;</span><br><span class=\"line\">              <span class=\"variable language_\">console</span>.<span class=\"title function_\">error</span>(err);</span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">scheduleCronstyle</span>();</span><br></pre></td></tr></table></figure>\n\n<p>将文件放入node环境下，执行node index.js,在规定时间会在当前目录下生成数据库zip压缩包</p>\n<h3 id=\"定时任务scheduleCronstyle\"><a href=\"#定时任务scheduleCronstyle\" class=\"headerlink\" title=\"定时任务scheduleCronstyle\"></a>定时任务scheduleCronstyle</h3><p>传入参数的意思:</p>\n<p>每分钟的第30秒触发： ‘30 * * * * *’</p>\n<p>每小时的1分30秒触发 ：’30 1 * * * *’</p>\n<p>每天的凌晨1点1分30秒触发 ：’30 1 1 * * *’</p>\n<p>每月的1日1点1分30秒触发 ：’30 1 1 1 * *’</p>\n<p>2016年的1月1日1点1分30秒触发 ：’30 1 1 1 2016 *’</p>\n<p>每周1的1点1分30秒触发 ：’30 1 1 * * 1’</p>"},{"title":"","date":"2020-07-12T09:16:26.000Z","_content":"\n<meta name=\"referrer\" content=\"no-referrer\"/>\n\n1\n\n!\n\n\n\n<!-- more -->\n\n> \n\n","source":"_posts/origin.md","raw":"---\n\ntitle: \ndate: 2020-07-12 17:16:26\ntags: [js,hexo]\n---\n\n<meta name=\"referrer\" content=\"no-referrer\"/>\n\n1\n\n!\n\n\n\n<!-- more -->\n\n> \n\n","slug":"origin","published":1,"updated":"2021-08-29T14:19:20.032Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl0uux6vk000h7suf3lhdcszt","content":"<meta name=\"referrer\" content=\"no-referrer\"/>\n\n<p>1</p>\n<p>!</p>\n<span id=\"more\"></span>\n\n<blockquote>\n</blockquote>\n","site":{"data":{}},"excerpt":"<meta name=\"referrer\" content=\"no-referrer\"/>\n\n<p>1</p>\n<p>!</p>","more":"<blockquote>\n</blockquote>"},{"title":"vue中的防抖和节流","date":"2020-07-12T09:16:26.000Z","_content":"\n<meta name=\"referrer\" content=\"no-referrer\"/>\n\n## vue中的防抖和节流\n\n### vue中防抖\n\n```js\n<script>\nconst delay = (function () {\n let timer = 0\n return function (callback, ms) {\n  clearTimeout(timer)\n  timer = setTimeout(callback, ms)\n }\n})()\nexport default {\nmethods：{\nfn() {\n   delay(() => {\n    //执行部分\n   }, 500)\n}\n}\n}\n</script>\n```\n\nvue中节流\n\n```js\n```\n\n\n\n","source":"_posts/vue中的防抖和节流.md","raw":"---\n\ntitle: vue中的防抖和节流\ndate: 2020-07-12 17:16:26\ntags: [js,hexo]\n---\n\n<meta name=\"referrer\" content=\"no-referrer\"/>\n\n## vue中的防抖和节流\n\n### vue中防抖\n\n```js\n<script>\nconst delay = (function () {\n let timer = 0\n return function (callback, ms) {\n  clearTimeout(timer)\n  timer = setTimeout(callback, ms)\n }\n})()\nexport default {\nmethods：{\nfn() {\n   delay(() => {\n    //执行部分\n   }, 500)\n}\n}\n}\n</script>\n```\n\nvue中节流\n\n```js\n```\n\n\n\n","slug":"vue中的防抖和节流","published":1,"updated":"2021-05-21T02:38:49.120Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl0uux6vl000j7suf6uvvcl6h","content":"<meta name=\"referrer\" content=\"no-referrer\"/>\n\n<h2 id=\"vue中的防抖和节流\"><a href=\"#vue中的防抖和节流\" class=\"headerlink\" title=\"vue中的防抖和节流\"></a>vue中的防抖和节流</h2><h3 id=\"vue中防抖\"><a href=\"#vue中防抖\" class=\"headerlink\" title=\"vue中防抖\"></a>vue中防抖</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\"><span class=\"keyword\">const</span> delay = (<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\"> <span class=\"keyword\">let</span> timer = <span class=\"number\">0</span></span><br><span class=\"line\"> <span class=\"keyword\">return</span> <span class=\"keyword\">function</span> (<span class=\"params\">callback, ms</span>) &#123;</span><br><span class=\"line\">  <span class=\"built_in\">clearTimeout</span>(timer)</span><br><span class=\"line\">  timer = <span class=\"built_in\">setTimeout</span>(callback, ms)</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\">&#125;)()</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">methods：&#123;</span><br><span class=\"line\"><span class=\"title function_\">fn</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">   <span class=\"title function_\">delay</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">//执行部分</span></span><br><span class=\"line\">   &#125;, <span class=\"number\">500</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n\n<p>vue中节流</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n","site":{"data":{}},"excerpt":"","more":"<meta name=\"referrer\" content=\"no-referrer\"/>\n\n<h2 id=\"vue中的防抖和节流\"><a href=\"#vue中的防抖和节流\" class=\"headerlink\" title=\"vue中的防抖和节流\"></a>vue中的防抖和节流</h2><h3 id=\"vue中防抖\"><a href=\"#vue中防抖\" class=\"headerlink\" title=\"vue中防抖\"></a>vue中防抖</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\"><span class=\"keyword\">const</span> delay = (<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\"> <span class=\"keyword\">let</span> timer = <span class=\"number\">0</span></span><br><span class=\"line\"> <span class=\"keyword\">return</span> <span class=\"keyword\">function</span> (<span class=\"params\">callback, ms</span>) &#123;</span><br><span class=\"line\">  <span class=\"built_in\">clearTimeout</span>(timer)</span><br><span class=\"line\">  timer = <span class=\"built_in\">setTimeout</span>(callback, ms)</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\">&#125;)()</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">methods：&#123;</span><br><span class=\"line\"><span class=\"title function_\">fn</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">   <span class=\"title function_\">delay</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">//执行部分</span></span><br><span class=\"line\">   &#125;, <span class=\"number\">500</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n\n<p>vue中节流</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n"},{"title":"Vue阅读文档笔记","date":"2020-07-12T09:16:26.000Z","_content":"\n<meta name=\"referrer\" content=\"no-referrer\"/>\n\n## Vue阅读文档笔记\n\n### 为什么要阅读文档\n\n从Vue的文档中，可以看到很多有趣的东西，比如：为什么要添加Vue的某个新特性，并用来解决对应的什么问题？从这些feature中就可以观察到前端工程化的一些变化。\n\n### 风格指南\n\nVue提供了一种推荐的组件风格命名规则，可以在[风格指南](https://cn.vuejs.org/v2/style-guide/)中查阅到关于组件名的建议。文章很长！\n\n### 详细阅读文档笔记\n\n#### 组件\n\n1. 自定义组件的小写加短横线命名规则\n\n   在注册一个组件的时候，我们始终需要给它一个名字。比如在全局注册的时候我们已经看到了：\n\n   ```\n   Vue.component('my-component-name', { /* ... */ })\n   ```\n\n   当直接在 DOM 中使用一个组件 (而不是在字符串模板或[单文件组件](https://cn.vuejs.org/v2/guide/single-file-components.html)) 的时候，我们强烈推荐遵循 [W3C 规范](https://html.spec.whatwg.org/multipage/custom-elements.html#valid-custom-element-name)中的自定义组件名 (字母全小写且必须包含一个连字符)。这会帮助你避免和当前以及未来的 HTML 元素相冲突。\n\n   你可以在[风格指南](https://cn.vuejs.org/v2/style-guide/#基础组件名-强烈推荐)中查阅到关于组件名的其它建议。\n\n   tips：\n\n   1. **应用特定样式和约定的基础组件 (也就是展示类的、无逻辑的或无状态的组件) 应该全部以一个特定的前缀开头，比如 `Base`、`App` 或 `V`。**\n\n      ```js\n      components/\n      |- BaseButton.vue\n      |- BaseTable.vue\n      |- BaseIcon.vue\n      ```\n\n   2. **只应该拥有单个活跃实例的组件应该以 `The` 前缀命名，以示其唯一性。**\n\n      这不意味着组件只可用于一个单页面，而是*每个页面*只使用一次。\n\n      ```js\n      components/\n      |- TheHeading.vue\n      |- TheSidebar.vue\n      ```\n\n   3. **和父组件紧密耦合的子组件应该以父组件名作为前缀命名。**\n\n      ```js\n      components/\n      |- TodoList.vue\n      |- TodoListItem.vue\n      |- TodoListItemButton.vue\n      ```\n\n   4. **组件名应该以高级别的 (通常是一般化描述的) 单词开头，以描述性的修饰词结尾。**\n\n      ```js\n      components/\n      |- SearchButtonClear.vue\n      |- SearchButtonRun.vue\n      |- SearchInputQuery.vue\n      |- SearchInputExcludeGlob.vue\n      |- SettingsCheckboxTerms.vue\n      |- SettingsCheckboxLaunchOnStartup.vue\n      ```\n\n   5. 如果你已经是 kebab-case 的重度用户，那么与 HTML 保持一致的命名约定且在多个项目中保持相同的大小写规则就可能比上述优势更为重要了。在这些情况下，**在所有的地方都使用 kebab-case 同样是可以接受的。**\n\n      ```js\n      <!-- 在单文件组件和字符串模板中 -->\n      <MyComponent/>\n      <!-- 在 DOM 模板中 -->\n      <my-component></my-component>\n      ```\n\n   6. **组件模板应该只包含简单的表达式，复杂的表达式则应该重构为计算属性或方法。**\n\n      ```js\n      <!-- 在模板中 -->\n      {{ normalizedFullName }}\n      // 复杂表达式已经移入一个计算属性\n      computed: {\n        normalizedFullName: function () {\n          return this.fullName.split(' ').map(function (word) {\n            return word[0].toUpperCase() + word.slice(1)\n          }).join(' ')\n        }\n      }\n      ```\n\n   7. **应该把复杂计算属性分割为尽可能多的更简单的 property。**\n\n      ```js\n      computed: {\n        basePrice: function () {\n          return this.manufactureCost / (1 - this.profitMargin)\n        },\n        discount: function () {\n          return this.basePrice * (this.discountPercent || 0)\n        },\n        finalPrice: function () {\n          return this.basePrice - this.discount\n        }\n      }\n      ```\n\n2. 111\n\n\n\n\n\n<!-- more -->\n\n> ","source":"_posts/vue的文档阅读.md","raw":"---\ntitle: Vue阅读文档笔记\ndate: 2020-07-12 17:16:26\ntags: [js,hexo]\n---\n\n<meta name=\"referrer\" content=\"no-referrer\"/>\n\n## Vue阅读文档笔记\n\n### 为什么要阅读文档\n\n从Vue的文档中，可以看到很多有趣的东西，比如：为什么要添加Vue的某个新特性，并用来解决对应的什么问题？从这些feature中就可以观察到前端工程化的一些变化。\n\n### 风格指南\n\nVue提供了一种推荐的组件风格命名规则，可以在[风格指南](https://cn.vuejs.org/v2/style-guide/)中查阅到关于组件名的建议。文章很长！\n\n### 详细阅读文档笔记\n\n#### 组件\n\n1. 自定义组件的小写加短横线命名规则\n\n   在注册一个组件的时候，我们始终需要给它一个名字。比如在全局注册的时候我们已经看到了：\n\n   ```\n   Vue.component('my-component-name', { /* ... */ })\n   ```\n\n   当直接在 DOM 中使用一个组件 (而不是在字符串模板或[单文件组件](https://cn.vuejs.org/v2/guide/single-file-components.html)) 的时候，我们强烈推荐遵循 [W3C 规范](https://html.spec.whatwg.org/multipage/custom-elements.html#valid-custom-element-name)中的自定义组件名 (字母全小写且必须包含一个连字符)。这会帮助你避免和当前以及未来的 HTML 元素相冲突。\n\n   你可以在[风格指南](https://cn.vuejs.org/v2/style-guide/#基础组件名-强烈推荐)中查阅到关于组件名的其它建议。\n\n   tips：\n\n   1. **应用特定样式和约定的基础组件 (也就是展示类的、无逻辑的或无状态的组件) 应该全部以一个特定的前缀开头，比如 `Base`、`App` 或 `V`。**\n\n      ```js\n      components/\n      |- BaseButton.vue\n      |- BaseTable.vue\n      |- BaseIcon.vue\n      ```\n\n   2. **只应该拥有单个活跃实例的组件应该以 `The` 前缀命名，以示其唯一性。**\n\n      这不意味着组件只可用于一个单页面，而是*每个页面*只使用一次。\n\n      ```js\n      components/\n      |- TheHeading.vue\n      |- TheSidebar.vue\n      ```\n\n   3. **和父组件紧密耦合的子组件应该以父组件名作为前缀命名。**\n\n      ```js\n      components/\n      |- TodoList.vue\n      |- TodoListItem.vue\n      |- TodoListItemButton.vue\n      ```\n\n   4. **组件名应该以高级别的 (通常是一般化描述的) 单词开头，以描述性的修饰词结尾。**\n\n      ```js\n      components/\n      |- SearchButtonClear.vue\n      |- SearchButtonRun.vue\n      |- SearchInputQuery.vue\n      |- SearchInputExcludeGlob.vue\n      |- SettingsCheckboxTerms.vue\n      |- SettingsCheckboxLaunchOnStartup.vue\n      ```\n\n   5. 如果你已经是 kebab-case 的重度用户，那么与 HTML 保持一致的命名约定且在多个项目中保持相同的大小写规则就可能比上述优势更为重要了。在这些情况下，**在所有的地方都使用 kebab-case 同样是可以接受的。**\n\n      ```js\n      <!-- 在单文件组件和字符串模板中 -->\n      <MyComponent/>\n      <!-- 在 DOM 模板中 -->\n      <my-component></my-component>\n      ```\n\n   6. **组件模板应该只包含简单的表达式，复杂的表达式则应该重构为计算属性或方法。**\n\n      ```js\n      <!-- 在模板中 -->\n      {{ normalizedFullName }}\n      // 复杂表达式已经移入一个计算属性\n      computed: {\n        normalizedFullName: function () {\n          return this.fullName.split(' ').map(function (word) {\n            return word[0].toUpperCase() + word.slice(1)\n          }).join(' ')\n        }\n      }\n      ```\n\n   7. **应该把复杂计算属性分割为尽可能多的更简单的 property。**\n\n      ```js\n      computed: {\n        basePrice: function () {\n          return this.manufactureCost / (1 - this.profitMargin)\n        },\n        discount: function () {\n          return this.basePrice * (this.discountPercent || 0)\n        },\n        finalPrice: function () {\n          return this.basePrice - this.discount\n        }\n      }\n      ```\n\n2. 111\n\n\n\n\n\n<!-- more -->\n\n> ","slug":"vue的文档阅读","published":1,"updated":"2021-03-16T07:43:18.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl0uux6vm000k7suf8a4pbr9v","content":"<meta name=\"referrer\" content=\"no-referrer\"/>\n\n<h2 id=\"Vue阅读文档笔记\"><a href=\"#Vue阅读文档笔记\" class=\"headerlink\" title=\"Vue阅读文档笔记\"></a>Vue阅读文档笔记</h2><h3 id=\"为什么要阅读文档\"><a href=\"#为什么要阅读文档\" class=\"headerlink\" title=\"为什么要阅读文档\"></a>为什么要阅读文档</h3><p>从Vue的文档中，可以看到很多有趣的东西，比如：为什么要添加Vue的某个新特性，并用来解决对应的什么问题？从这些feature中就可以观察到前端工程化的一些变化。</p>\n<h3 id=\"风格指南\"><a href=\"#风格指南\" class=\"headerlink\" title=\"风格指南\"></a>风格指南</h3><p>Vue提供了一种推荐的组件风格命名规则，可以在<a href=\"https://cn.vuejs.org/v2/style-guide/\">风格指南</a>中查阅到关于组件名的建议。文章很长！</p>\n<h3 id=\"详细阅读文档笔记\"><a href=\"#详细阅读文档笔记\" class=\"headerlink\" title=\"详细阅读文档笔记\"></a>详细阅读文档笔记</h3><h4 id=\"组件\"><a href=\"#组件\" class=\"headerlink\" title=\"组件\"></a>组件</h4><ol>\n<li><p>自定义组件的小写加短横线命名规则</p>\n<p>在注册一个组件的时候，我们始终需要给它一个名字。比如在全局注册的时候我们已经看到了：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Vue.component(&#x27;my-component-name&#x27;, &#123; /* ... */ &#125;)</span><br></pre></td></tr></table></figure>\n\n<p>当直接在 DOM 中使用一个组件 (而不是在字符串模板或<a href=\"https://cn.vuejs.org/v2/guide/single-file-components.html\">单文件组件</a>) 的时候，我们强烈推荐遵循 <a href=\"https://html.spec.whatwg.org/multipage/custom-elements.html#valid-custom-element-name\">W3C 规范</a>中的自定义组件名 (字母全小写且必须包含一个连字符)。这会帮助你避免和当前以及未来的 HTML 元素相冲突。</p>\n<p>你可以在<a href=\"https://cn.vuejs.org/v2/style-guide/#%E5%9F%BA%E7%A1%80%E7%BB%84%E4%BB%B6%E5%90%8D-%E5%BC%BA%E7%83%88%E6%8E%A8%E8%8D%90\">风格指南</a>中查阅到关于组件名的其它建议。</p>\n<p>tips：</p>\n<ol>\n<li><p><strong>应用特定样式和约定的基础组件 (也就是展示类的、无逻辑的或无状态的组件) 应该全部以一个特定的前缀开头，比如 <code>Base</code>、<code>App</code> 或 <code>V</code>。</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">components/</span><br><span class=\"line\">|- <span class=\"title class_\">BaseButton</span>.<span class=\"property\">vue</span></span><br><span class=\"line\">|- <span class=\"title class_\">BaseTable</span>.<span class=\"property\">vue</span></span><br><span class=\"line\">|- <span class=\"title class_\">BaseIcon</span>.<span class=\"property\">vue</span></span><br></pre></td></tr></table></figure></li>\n<li><p><strong>只应该拥有单个活跃实例的组件应该以 <code>The</code> 前缀命名，以示其唯一性。</strong></p>\n<p>这不意味着组件只可用于一个单页面，而是<em>每个页面</em>只使用一次。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">components/</span><br><span class=\"line\">|- <span class=\"title class_\">TheHeading</span>.<span class=\"property\">vue</span></span><br><span class=\"line\">|- <span class=\"title class_\">TheSidebar</span>.<span class=\"property\">vue</span></span><br></pre></td></tr></table></figure></li>\n<li><p><strong>和父组件紧密耦合的子组件应该以父组件名作为前缀命名。</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">components/</span><br><span class=\"line\">|- <span class=\"title class_\">TodoList</span>.<span class=\"property\">vue</span></span><br><span class=\"line\">|- <span class=\"title class_\">TodoListItem</span>.<span class=\"property\">vue</span></span><br><span class=\"line\">|- <span class=\"title class_\">TodoListItemButton</span>.<span class=\"property\">vue</span></span><br></pre></td></tr></table></figure></li>\n<li><p><strong>组件名应该以高级别的 (通常是一般化描述的) 单词开头，以描述性的修饰词结尾。</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">components/</span><br><span class=\"line\">|- <span class=\"title class_\">SearchButtonClear</span>.<span class=\"property\">vue</span></span><br><span class=\"line\">|- <span class=\"title class_\">SearchButtonRun</span>.<span class=\"property\">vue</span></span><br><span class=\"line\">|- <span class=\"title class_\">SearchInputQuery</span>.<span class=\"property\">vue</span></span><br><span class=\"line\">|- <span class=\"title class_\">SearchInputExcludeGlob</span>.<span class=\"property\">vue</span></span><br><span class=\"line\">|- <span class=\"title class_\">SettingsCheckboxTerms</span>.<span class=\"property\">vue</span></span><br><span class=\"line\">|- <span class=\"title class_\">SettingsCheckboxLaunchOnStartup</span>.<span class=\"property\">vue</span></span><br></pre></td></tr></table></figure></li>\n<li><p>如果你已经是 kebab-case 的重度用户，那么与 HTML 保持一致的命名约定且在多个项目中保持相同的大小写规则就可能比上述优势更为重要了。在这些情况下，<strong>在所有的地方都使用 kebab-case 同样是可以接受的。</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- 在单文件组件和字符串模板中 --&gt;</span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">MyComponent</span>/&gt;</span></span></span><br><span class=\"line\">&lt;!-- 在 <span class=\"variable constant_\">DOM</span> 模板中 --&gt;</span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">my-component</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">my-component</span>&gt;</span></span></span><br></pre></td></tr></table></figure></li>\n<li><p><strong>组件模板应该只包含简单的表达式，复杂的表达式则应该重构为计算属性或方法。</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- 在模板中 --&gt;</span><br><span class=\"line\">&#123;&#123; normalizedFullName &#125;&#125;</span><br><span class=\"line\"><span class=\"comment\">// 复杂表达式已经移入一个计算属性</span></span><br><span class=\"line\"><span class=\"attr\">computed</span>: &#123;</span><br><span class=\"line\">  <span class=\"attr\">normalizedFullName</span>: <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>.<span class=\"property\">fullName</span>.<span class=\"title function_\">split</span>(<span class=\"string\">&#x27; &#x27;</span>).<span class=\"title function_\">map</span>(<span class=\"keyword\">function</span> (<span class=\"params\">word</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> word[<span class=\"number\">0</span>].<span class=\"title function_\">toUpperCase</span>() + word.<span class=\"title function_\">slice</span>(<span class=\"number\">1</span>)</span><br><span class=\"line\">    &#125;).<span class=\"title function_\">join</span>(<span class=\"string\">&#x27; &#x27;</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li><p><strong>应该把复杂计算属性分割为尽可能多的更简单的 property。</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">computed</span>: &#123;</span><br><span class=\"line\">  <span class=\"attr\">basePrice</span>: <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>.<span class=\"property\">manufactureCost</span> / (<span class=\"number\">1</span> - <span class=\"variable language_\">this</span>.<span class=\"property\">profitMargin</span>)</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">discount</span>: <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>.<span class=\"property\">basePrice</span> * (<span class=\"variable language_\">this</span>.<span class=\"property\">discountPercent</span> || <span class=\"number\">0</span>)</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">finalPrice</span>: <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>.<span class=\"property\">basePrice</span> - <span class=\"variable language_\">this</span>.<span class=\"property\">discount</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ol>\n</li>\n<li><p>111</p>\n</li>\n</ol>\n<span id=\"more\"></span>\n\n<blockquote>\n</blockquote>\n","site":{"data":{}},"excerpt":"<meta name=\"referrer\" content=\"no-referrer\"/>\n\n<h2 id=\"Vue阅读文档笔记\"><a href=\"#Vue阅读文档笔记\" class=\"headerlink\" title=\"Vue阅读文档笔记\"></a>Vue阅读文档笔记</h2><h3 id=\"为什么要阅读文档\"><a href=\"#为什么要阅读文档\" class=\"headerlink\" title=\"为什么要阅读文档\"></a>为什么要阅读文档</h3><p>从Vue的文档中，可以看到很多有趣的东西，比如：为什么要添加Vue的某个新特性，并用来解决对应的什么问题？从这些feature中就可以观察到前端工程化的一些变化。</p>\n<h3 id=\"风格指南\"><a href=\"#风格指南\" class=\"headerlink\" title=\"风格指南\"></a>风格指南</h3><p>Vue提供了一种推荐的组件风格命名规则，可以在<a href=\"https://cn.vuejs.org/v2/style-guide/\">风格指南</a>中查阅到关于组件名的建议。文章很长！</p>\n<h3 id=\"详细阅读文档笔记\"><a href=\"#详细阅读文档笔记\" class=\"headerlink\" title=\"详细阅读文档笔记\"></a>详细阅读文档笔记</h3><h4 id=\"组件\"><a href=\"#组件\" class=\"headerlink\" title=\"组件\"></a>组件</h4><ol>\n<li><p>自定义组件的小写加短横线命名规则</p>\n<p>在注册一个组件的时候，我们始终需要给它一个名字。比如在全局注册的时候我们已经看到了：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Vue.component(&#x27;my-component-name&#x27;, &#123; /* ... */ &#125;)</span><br></pre></td></tr></table></figure>\n\n<p>当直接在 DOM 中使用一个组件 (而不是在字符串模板或<a href=\"https://cn.vuejs.org/v2/guide/single-file-components.html\">单文件组件</a>) 的时候，我们强烈推荐遵循 <a href=\"https://html.spec.whatwg.org/multipage/custom-elements.html#valid-custom-element-name\">W3C 规范</a>中的自定义组件名 (字母全小写且必须包含一个连字符)。这会帮助你避免和当前以及未来的 HTML 元素相冲突。</p>\n<p>你可以在<a href=\"https://cn.vuejs.org/v2/style-guide/#%E5%9F%BA%E7%A1%80%E7%BB%84%E4%BB%B6%E5%90%8D-%E5%BC%BA%E7%83%88%E6%8E%A8%E8%8D%90\">风格指南</a>中查阅到关于组件名的其它建议。</p>\n<p>tips：</p>\n<ol>\n<li><p><strong>应用特定样式和约定的基础组件 (也就是展示类的、无逻辑的或无状态的组件) 应该全部以一个特定的前缀开头，比如 <code>Base</code>、<code>App</code> 或 <code>V</code>。</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">components/</span><br><span class=\"line\">|- <span class=\"title class_\">BaseButton</span>.<span class=\"property\">vue</span></span><br><span class=\"line\">|- <span class=\"title class_\">BaseTable</span>.<span class=\"property\">vue</span></span><br><span class=\"line\">|- <span class=\"title class_\">BaseIcon</span>.<span class=\"property\">vue</span></span><br></pre></td></tr></table></figure></li>\n<li><p><strong>只应该拥有单个活跃实例的组件应该以 <code>The</code> 前缀命名，以示其唯一性。</strong></p>\n<p>这不意味着组件只可用于一个单页面，而是<em>每个页面</em>只使用一次。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">components/</span><br><span class=\"line\">|- <span class=\"title class_\">TheHeading</span>.<span class=\"property\">vue</span></span><br><span class=\"line\">|- <span class=\"title class_\">TheSidebar</span>.<span class=\"property\">vue</span></span><br></pre></td></tr></table></figure></li>\n<li><p><strong>和父组件紧密耦合的子组件应该以父组件名作为前缀命名。</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">components/</span><br><span class=\"line\">|- <span class=\"title class_\">TodoList</span>.<span class=\"property\">vue</span></span><br><span class=\"line\">|- <span class=\"title class_\">TodoListItem</span>.<span class=\"property\">vue</span></span><br><span class=\"line\">|- <span class=\"title class_\">TodoListItemButton</span>.<span class=\"property\">vue</span></span><br></pre></td></tr></table></figure></li>\n<li><p><strong>组件名应该以高级别的 (通常是一般化描述的) 单词开头，以描述性的修饰词结尾。</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">components/</span><br><span class=\"line\">|- <span class=\"title class_\">SearchButtonClear</span>.<span class=\"property\">vue</span></span><br><span class=\"line\">|- <span class=\"title class_\">SearchButtonRun</span>.<span class=\"property\">vue</span></span><br><span class=\"line\">|- <span class=\"title class_\">SearchInputQuery</span>.<span class=\"property\">vue</span></span><br><span class=\"line\">|- <span class=\"title class_\">SearchInputExcludeGlob</span>.<span class=\"property\">vue</span></span><br><span class=\"line\">|- <span class=\"title class_\">SettingsCheckboxTerms</span>.<span class=\"property\">vue</span></span><br><span class=\"line\">|- <span class=\"title class_\">SettingsCheckboxLaunchOnStartup</span>.<span class=\"property\">vue</span></span><br></pre></td></tr></table></figure></li>\n<li><p>如果你已经是 kebab-case 的重度用户，那么与 HTML 保持一致的命名约定且在多个项目中保持相同的大小写规则就可能比上述优势更为重要了。在这些情况下，<strong>在所有的地方都使用 kebab-case 同样是可以接受的。</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- 在单文件组件和字符串模板中 --&gt;</span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">MyComponent</span>/&gt;</span></span></span><br><span class=\"line\">&lt;!-- 在 <span class=\"variable constant_\">DOM</span> 模板中 --&gt;</span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">my-component</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">my-component</span>&gt;</span></span></span><br></pre></td></tr></table></figure></li>\n<li><p><strong>组件模板应该只包含简单的表达式，复杂的表达式则应该重构为计算属性或方法。</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- 在模板中 --&gt;</span><br><span class=\"line\">&#123;&#123; normalizedFullName &#125;&#125;</span><br><span class=\"line\"><span class=\"comment\">// 复杂表达式已经移入一个计算属性</span></span><br><span class=\"line\"><span class=\"attr\">computed</span>: &#123;</span><br><span class=\"line\">  <span class=\"attr\">normalizedFullName</span>: <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>.<span class=\"property\">fullName</span>.<span class=\"title function_\">split</span>(<span class=\"string\">&#x27; &#x27;</span>).<span class=\"title function_\">map</span>(<span class=\"keyword\">function</span> (<span class=\"params\">word</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> word[<span class=\"number\">0</span>].<span class=\"title function_\">toUpperCase</span>() + word.<span class=\"title function_\">slice</span>(<span class=\"number\">1</span>)</span><br><span class=\"line\">    &#125;).<span class=\"title function_\">join</span>(<span class=\"string\">&#x27; &#x27;</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li><p><strong>应该把复杂计算属性分割为尽可能多的更简单的 property。</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">computed</span>: &#123;</span><br><span class=\"line\">  <span class=\"attr\">basePrice</span>: <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>.<span class=\"property\">manufactureCost</span> / (<span class=\"number\">1</span> - <span class=\"variable language_\">this</span>.<span class=\"property\">profitMargin</span>)</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">discount</span>: <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>.<span class=\"property\">basePrice</span> * (<span class=\"variable language_\">this</span>.<span class=\"property\">discountPercent</span> || <span class=\"number\">0</span>)</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">finalPrice</span>: <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>.<span class=\"property\">basePrice</span> - <span class=\"variable language_\">this</span>.<span class=\"property\">discount</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ol>\n</li>\n<li><p>111</p>\n</li>\n</ol>","more":"<blockquote>\n</blockquote>"},{"title":"scss的换肤功能","date":"2020-07-12T09:16:26.000Z","_content":"\n<meta name=\"referrer\" content=\"no-referrer\"/>\n\n## scss的换肤功能\n\n### scss配置文件\n\n变量的定义文件_handle.scss\n\n```js\n@import './_themes.scss';\n\n//遍历主题map\n@mixin themeify {\n  @each $theme-name, $theme-map in $themes {\n    //!global 把局部变量强升为全局变量\n    $theme-map: $theme-map !global;\n    //判断html的data-theme的属性值  #{}是sass的插值表达式\n    //& sass嵌套里的父容器标识   @content是混合器插槽，像vue的slot\n    [data-theme='#{$theme-name}'] & {\n      @content;\n    }\n  }\n}\n\n//声明一个根据Key获取颜色的function\n@function themed($key) {\n  @return map-get($theme-map, $key);\n}\n\n//获取背景颜色\n@mixin background_color($color) {\n  @include themeify {\n    background-color: themed($color) !important;\n  }\n}\n\n@mixin background($color) {\n  @include themeify {\n    background: themed($color) !important;\n  }\n}\n// 阴影颜色\n\n@mixin box_shadow($color) {\n  @include themeify {\n    box-shadow: themed($color) !important;\n  }\n}\n\n//获取字体颜色\n@mixin font_color($color) {\n  @include themeify {\n    color: themed($color) !important;\n  }\n}\n\n//获取边框颜色\n@mixin border_color($color) {\n  @include themeify {\n    border-color: themed($color) !important;\n  }\n}\n\n```\n\n主题色配置文件_themes\n\n```js\n//_themes.scss\n//当HTML的data-theme为dark时，样式引用dark\n//data-theme为其他值时，就采用组件库的默认样式\n//注意一点是，每套配色方案里的key可以自定义但必须一致，不然就会混乱\n\n$themes: (\n    green: (\n      //字体\n      font_color1: #0BB3AC,\n      font_color2: #4CCBC8,\n\n      //背景\n      background_color1: #0BB3AC,\n      background_color2: rgba(11, 179, 172, 0.2),\n      box_shadow3: 0px 2px 6px 0px rgba(11, 179, 172, 0.2),\n      background1: linear-gradient(90deg,rgba(76,203,200,1),rgba(11,179,172,1)),\n      //边框\n      border_color1: #0BB3AC,\n    ),\n    // 橘色主题\n    orange: (\n        //字体\n        font_color1: #FF6A47,\n        font_color2: rgb(248, 138, 114),\n        \n        //背景\n        background_color1: #FF6A47,\n        background_color2: rgba(255,106,71,0.2),\n        box_shadow3: 0px 2px 6px 0px rgba(255,106,71,0.2),\n        background1: linear-gradient(90deg,rgba(245, 149, 128, 1),rgba(245, 128, 101, 1)),\n        \n        //边框\n        border_color1: #FF6A47,\n    \n    ),\n    \n    blue: (\n      //字体\n      font_color1: #2E9CFF,\n      font_color2: rgb(101, 175, 240),\n\n      //背景\n      background_color1: #2E9CFF,\n      background_color2: rgba(46,156,255, 0.2),\n      box_shadow3: 0px 2px 6px 0px rgba(46,156,255, 0.2),\n      background1: linear-gradient(90deg,rgba(99, 172, 236, 1),rgba(46,156,255,1)),\n      //边框\n      border_color1: #2E9CFF,\n    \n    ),\n\n    yellow: (\n      //字体\n      font_color1: #FFAF2E,\n      font_color2: rgb(240, 197, 128),\n\n      //背景\n      background_color1: #FFAF2E,\n      background_color2: rgba(255,175,46, 0.2),\n      box_shadow3: 0px 2px 6px 0px rgba(255,175,46, 0.2),\n      background1: linear-gradient(90deg,rgba(240, 186, 99, 1),rgba(255,175,46,1)),\n      //边框\n      border_color1: #FFAF2E,\n    \n    ),\n\n    red: (\n      //字体\n      font_color1: #F52231,\n      font_color2: rgb(238, 79, 90),\n\n      //背景\n      background_color1: #F52231,\n      background_color2: rgba(245,34,49, 0.2),\n      box_shadow3: 0px 2px 6px 0px rgba(245,34,49, 0.2),\n      background1: linear-gradient(90deg,rgba(247, 198, 121, 1),rgba(245,34,49,1)),\n      //边框\n      border_color1: #F52231,\n    )\n);\n```\n\n### 引入使用功能\n\n在app.vue中通过设置data数据来判断当前主题色，\n\n```js\n    window.document.documentElement.setAttribute('data-theme', 'orange')\n```\n\n文件中引用变量设置\n\n```js\n<style lang=\"scss\" scoped>\n  @import '@/common/_handle.scss';\n.btn_reject {\n  //   background: $blueLinear-gradient;\n  @include background_color('background_color1');\n  color: #ffffff;\n  box-shadow: 0 5rpx 10rpx 0 rgba(0, 29, 138, 0.3);\n  @include box_shadow('box_shadow3');\n  border: 2px solid #486cdc;\n  @include border_color('font_color1');\n}\n</style>\n```\n\n@include background_color和@include box_shadow这些变量都是通过handle文件来定义的。\n\n注意：border这类需要多个维度来判断的class，只需要改变其中的颜色部分。会自动覆盖对应之前定义的border中的颜色#486cdc","source":"_posts/scss的换肤功能.md","raw":"---\n\ntitle: scss的换肤功能\ndate: 2020-07-12 17:16:26\ntags: [js,hexo]\n---\n\n<meta name=\"referrer\" content=\"no-referrer\"/>\n\n## scss的换肤功能\n\n### scss配置文件\n\n变量的定义文件_handle.scss\n\n```js\n@import './_themes.scss';\n\n//遍历主题map\n@mixin themeify {\n  @each $theme-name, $theme-map in $themes {\n    //!global 把局部变量强升为全局变量\n    $theme-map: $theme-map !global;\n    //判断html的data-theme的属性值  #{}是sass的插值表达式\n    //& sass嵌套里的父容器标识   @content是混合器插槽，像vue的slot\n    [data-theme='#{$theme-name}'] & {\n      @content;\n    }\n  }\n}\n\n//声明一个根据Key获取颜色的function\n@function themed($key) {\n  @return map-get($theme-map, $key);\n}\n\n//获取背景颜色\n@mixin background_color($color) {\n  @include themeify {\n    background-color: themed($color) !important;\n  }\n}\n\n@mixin background($color) {\n  @include themeify {\n    background: themed($color) !important;\n  }\n}\n// 阴影颜色\n\n@mixin box_shadow($color) {\n  @include themeify {\n    box-shadow: themed($color) !important;\n  }\n}\n\n//获取字体颜色\n@mixin font_color($color) {\n  @include themeify {\n    color: themed($color) !important;\n  }\n}\n\n//获取边框颜色\n@mixin border_color($color) {\n  @include themeify {\n    border-color: themed($color) !important;\n  }\n}\n\n```\n\n主题色配置文件_themes\n\n```js\n//_themes.scss\n//当HTML的data-theme为dark时，样式引用dark\n//data-theme为其他值时，就采用组件库的默认样式\n//注意一点是，每套配色方案里的key可以自定义但必须一致，不然就会混乱\n\n$themes: (\n    green: (\n      //字体\n      font_color1: #0BB3AC,\n      font_color2: #4CCBC8,\n\n      //背景\n      background_color1: #0BB3AC,\n      background_color2: rgba(11, 179, 172, 0.2),\n      box_shadow3: 0px 2px 6px 0px rgba(11, 179, 172, 0.2),\n      background1: linear-gradient(90deg,rgba(76,203,200,1),rgba(11,179,172,1)),\n      //边框\n      border_color1: #0BB3AC,\n    ),\n    // 橘色主题\n    orange: (\n        //字体\n        font_color1: #FF6A47,\n        font_color2: rgb(248, 138, 114),\n        \n        //背景\n        background_color1: #FF6A47,\n        background_color2: rgba(255,106,71,0.2),\n        box_shadow3: 0px 2px 6px 0px rgba(255,106,71,0.2),\n        background1: linear-gradient(90deg,rgba(245, 149, 128, 1),rgba(245, 128, 101, 1)),\n        \n        //边框\n        border_color1: #FF6A47,\n    \n    ),\n    \n    blue: (\n      //字体\n      font_color1: #2E9CFF,\n      font_color2: rgb(101, 175, 240),\n\n      //背景\n      background_color1: #2E9CFF,\n      background_color2: rgba(46,156,255, 0.2),\n      box_shadow3: 0px 2px 6px 0px rgba(46,156,255, 0.2),\n      background1: linear-gradient(90deg,rgba(99, 172, 236, 1),rgba(46,156,255,1)),\n      //边框\n      border_color1: #2E9CFF,\n    \n    ),\n\n    yellow: (\n      //字体\n      font_color1: #FFAF2E,\n      font_color2: rgb(240, 197, 128),\n\n      //背景\n      background_color1: #FFAF2E,\n      background_color2: rgba(255,175,46, 0.2),\n      box_shadow3: 0px 2px 6px 0px rgba(255,175,46, 0.2),\n      background1: linear-gradient(90deg,rgba(240, 186, 99, 1),rgba(255,175,46,1)),\n      //边框\n      border_color1: #FFAF2E,\n    \n    ),\n\n    red: (\n      //字体\n      font_color1: #F52231,\n      font_color2: rgb(238, 79, 90),\n\n      //背景\n      background_color1: #F52231,\n      background_color2: rgba(245,34,49, 0.2),\n      box_shadow3: 0px 2px 6px 0px rgba(245,34,49, 0.2),\n      background1: linear-gradient(90deg,rgba(247, 198, 121, 1),rgba(245,34,49,1)),\n      //边框\n      border_color1: #F52231,\n    )\n);\n```\n\n### 引入使用功能\n\n在app.vue中通过设置data数据来判断当前主题色，\n\n```js\n    window.document.documentElement.setAttribute('data-theme', 'orange')\n```\n\n文件中引用变量设置\n\n```js\n<style lang=\"scss\" scoped>\n  @import '@/common/_handle.scss';\n.btn_reject {\n  //   background: $blueLinear-gradient;\n  @include background_color('background_color1');\n  color: #ffffff;\n  box-shadow: 0 5rpx 10rpx 0 rgba(0, 29, 138, 0.3);\n  @include box_shadow('box_shadow3');\n  border: 2px solid #486cdc;\n  @include border_color('font_color1');\n}\n</style>\n```\n\n@include background_color和@include box_shadow这些变量都是通过handle文件来定义的。\n\n注意：border这类需要多个维度来判断的class，只需要改变其中的颜色部分。会自动覆盖对应之前定义的border中的颜色#486cdc","slug":"scss的换肤功能","published":1,"updated":"2021-04-14T08:17:54.867Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl0uux6vn000l7suf3b3nb1ga","content":"<meta name=\"referrer\" content=\"no-referrer\"/>\n\n<h2 id=\"scss的换肤功能\"><a href=\"#scss的换肤功能\" class=\"headerlink\" title=\"scss的换肤功能\"></a>scss的换肤功能</h2><h3 id=\"scss配置文件\"><a href=\"#scss配置文件\" class=\"headerlink\" title=\"scss配置文件\"></a>scss配置文件</h3><p>变量的定义文件_handle.scss</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@<span class=\"keyword\">import</span> <span class=\"string\">&#x27;./_themes.scss&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//遍历主题map</span></span><br><span class=\"line\">@mixin themeify &#123;</span><br><span class=\"line\">  @each $theme-name, $theme-map <span class=\"keyword\">in</span> $themes &#123;</span><br><span class=\"line\">    <span class=\"comment\">//!global 把局部变量强升为全局变量</span></span><br><span class=\"line\">    $theme-<span class=\"attr\">map</span>: $theme-map !<span class=\"variable language_\">global</span>;</span><br><span class=\"line\">    <span class=\"comment\">//判断html的data-theme的属性值  #&#123;&#125;是sass的插值表达式</span></span><br><span class=\"line\">    <span class=\"comment\">//&amp; sass嵌套里的父容器标识   @content是混合器插槽，像vue的slot</span></span><br><span class=\"line\">    [data-theme=<span class=\"string\">&#x27;#&#123;$theme-name&#125;&#x27;</span>] &amp; &#123;</span><br><span class=\"line\">      @content;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//声明一个根据Key获取颜色的function</span></span><br><span class=\"line\">@<span class=\"keyword\">function</span> <span class=\"title function_\">themed</span>(<span class=\"params\">$key</span>) &#123;</span><br><span class=\"line\">  @<span class=\"keyword\">return</span> map-<span class=\"title function_\">get</span>($theme-map, $key);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//获取背景颜色</span></span><br><span class=\"line\">@mixin <span class=\"title function_\">background_color</span>(<span class=\"params\">$color</span>) &#123;</span><br><span class=\"line\">  @include themeify &#123;</span><br><span class=\"line\">    background-<span class=\"attr\">color</span>: <span class=\"title function_\">themed</span>($color) !important;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">@mixin <span class=\"title function_\">background</span>(<span class=\"params\">$color</span>) &#123;</span><br><span class=\"line\">  @include themeify &#123;</span><br><span class=\"line\">    <span class=\"attr\">background</span>: <span class=\"title function_\">themed</span>($color) !important;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 阴影颜色</span></span><br><span class=\"line\"></span><br><span class=\"line\">@mixin <span class=\"title function_\">box_shadow</span>(<span class=\"params\">$color</span>) &#123;</span><br><span class=\"line\">  @include themeify &#123;</span><br><span class=\"line\">    box-<span class=\"attr\">shadow</span>: <span class=\"title function_\">themed</span>($color) !important;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//获取字体颜色</span></span><br><span class=\"line\">@mixin <span class=\"title function_\">font_color</span>(<span class=\"params\">$color</span>) &#123;</span><br><span class=\"line\">  @include themeify &#123;</span><br><span class=\"line\">    <span class=\"attr\">color</span>: <span class=\"title function_\">themed</span>($color) !important;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//获取边框颜色</span></span><br><span class=\"line\">@mixin <span class=\"title function_\">border_color</span>(<span class=\"params\">$color</span>) &#123;</span><br><span class=\"line\">  @include themeify &#123;</span><br><span class=\"line\">    border-<span class=\"attr\">color</span>: <span class=\"title function_\">themed</span>($color) !important;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>主题色配置文件_themes</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//_themes.scss</span></span><br><span class=\"line\"><span class=\"comment\">//当HTML的data-theme为dark时，样式引用dark</span></span><br><span class=\"line\"><span class=\"comment\">//data-theme为其他值时，就采用组件库的默认样式</span></span><br><span class=\"line\"><span class=\"comment\">//注意一点是，每套配色方案里的key可以自定义但必须一致，不然就会混乱</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">$themes</span>: (</span><br><span class=\"line\">    <span class=\"attr\">green</span>: (</span><br><span class=\"line\">      <span class=\"comment\">//字体</span></span><br><span class=\"line\">      <span class=\"attr\">font_color1</span>: #0BB3AC,</span><br><span class=\"line\">      <span class=\"attr\">font_color2</span>: #4CCBC8,</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">//背景</span></span><br><span class=\"line\">      <span class=\"attr\">background_color1</span>: #0BB3AC,</span><br><span class=\"line\">      <span class=\"attr\">background_color2</span>: <span class=\"title function_\">rgba</span>(<span class=\"number\">11</span>, <span class=\"number\">179</span>, <span class=\"number\">172</span>, <span class=\"number\">0.2</span>),</span><br><span class=\"line\">      <span class=\"attr\">box_shadow3</span>: 0px 2px 6px 0px <span class=\"title function_\">rgba</span>(<span class=\"number\">11</span>, <span class=\"number\">179</span>, <span class=\"number\">172</span>, <span class=\"number\">0.2</span>),</span><br><span class=\"line\">      <span class=\"attr\">background1</span>: linear-<span class=\"title function_\">gradient</span>(90deg,<span class=\"title function_\">rgba</span>(<span class=\"number\">76</span>,<span class=\"number\">203</span>,<span class=\"number\">200</span>,<span class=\"number\">1</span>),<span class=\"title function_\">rgba</span>(<span class=\"number\">11</span>,<span class=\"number\">179</span>,<span class=\"number\">172</span>,<span class=\"number\">1</span>)),</span><br><span class=\"line\">      <span class=\"comment\">//边框</span></span><br><span class=\"line\">      <span class=\"attr\">border_color1</span>: #0BB3AC,</span><br><span class=\"line\">    ),</span><br><span class=\"line\">    <span class=\"comment\">// 橘色主题</span></span><br><span class=\"line\">    <span class=\"attr\">orange</span>: (</span><br><span class=\"line\">        <span class=\"comment\">//字体</span></span><br><span class=\"line\">        <span class=\"attr\">font_color1</span>: #<span class=\"title class_\">FF6A</span>47,</span><br><span class=\"line\">        <span class=\"attr\">font_color2</span>: <span class=\"title function_\">rgb</span>(<span class=\"number\">248</span>, <span class=\"number\">138</span>, <span class=\"number\">114</span>),</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\">//背景</span></span><br><span class=\"line\">        <span class=\"attr\">background_color1</span>: #<span class=\"title class_\">FF6A</span>47,</span><br><span class=\"line\">        <span class=\"attr\">background_color2</span>: <span class=\"title function_\">rgba</span>(<span class=\"number\">255</span>,<span class=\"number\">106</span>,<span class=\"number\">71</span>,<span class=\"number\">0.2</span>),</span><br><span class=\"line\">        <span class=\"attr\">box_shadow3</span>: 0px 2px 6px 0px <span class=\"title function_\">rgba</span>(<span class=\"number\">255</span>,<span class=\"number\">106</span>,<span class=\"number\">71</span>,<span class=\"number\">0.2</span>),</span><br><span class=\"line\">        <span class=\"attr\">background1</span>: linear-<span class=\"title function_\">gradient</span>(90deg,<span class=\"title function_\">rgba</span>(<span class=\"number\">245</span>, <span class=\"number\">149</span>, <span class=\"number\">128</span>, <span class=\"number\">1</span>),<span class=\"title function_\">rgba</span>(<span class=\"number\">245</span>, <span class=\"number\">128</span>, <span class=\"number\">101</span>, <span class=\"number\">1</span>)),</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\">//边框</span></span><br><span class=\"line\">        <span class=\"attr\">border_color1</span>: #<span class=\"title class_\">FF6A</span>47,</span><br><span class=\"line\">    </span><br><span class=\"line\">    ),</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"attr\">blue</span>: (</span><br><span class=\"line\">      <span class=\"comment\">//字体</span></span><br><span class=\"line\">      <span class=\"attr\">font_color1</span>: #2E9CFF,</span><br><span class=\"line\">      <span class=\"attr\">font_color2</span>: <span class=\"title function_\">rgb</span>(<span class=\"number\">101</span>, <span class=\"number\">175</span>, <span class=\"number\">240</span>),</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">//背景</span></span><br><span class=\"line\">      <span class=\"attr\">background_color1</span>: #2E9CFF,</span><br><span class=\"line\">      <span class=\"attr\">background_color2</span>: <span class=\"title function_\">rgba</span>(<span class=\"number\">46</span>,<span class=\"number\">156</span>,<span class=\"number\">255</span>, <span class=\"number\">0.2</span>),</span><br><span class=\"line\">      <span class=\"attr\">box_shadow3</span>: 0px 2px 6px 0px <span class=\"title function_\">rgba</span>(<span class=\"number\">46</span>,<span class=\"number\">156</span>,<span class=\"number\">255</span>, <span class=\"number\">0.2</span>),</span><br><span class=\"line\">      <span class=\"attr\">background1</span>: linear-<span class=\"title function_\">gradient</span>(90deg,<span class=\"title function_\">rgba</span>(<span class=\"number\">99</span>, <span class=\"number\">172</span>, <span class=\"number\">236</span>, <span class=\"number\">1</span>),<span class=\"title function_\">rgba</span>(<span class=\"number\">46</span>,<span class=\"number\">156</span>,<span class=\"number\">255</span>,<span class=\"number\">1</span>)),</span><br><span class=\"line\">      <span class=\"comment\">//边框</span></span><br><span class=\"line\">      <span class=\"attr\">border_color1</span>: #2E9CFF,</span><br><span class=\"line\">    </span><br><span class=\"line\">    ),</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"attr\">yellow</span>: (</span><br><span class=\"line\">      <span class=\"comment\">//字体</span></span><br><span class=\"line\">      <span class=\"attr\">font_color1</span>: #<span class=\"title class_\">FFAF2E</span>,</span><br><span class=\"line\">      <span class=\"attr\">font_color2</span>: <span class=\"title function_\">rgb</span>(<span class=\"number\">240</span>, <span class=\"number\">197</span>, <span class=\"number\">128</span>),</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">//背景</span></span><br><span class=\"line\">      <span class=\"attr\">background_color1</span>: #<span class=\"title class_\">FFAF2E</span>,</span><br><span class=\"line\">      <span class=\"attr\">background_color2</span>: <span class=\"title function_\">rgba</span>(<span class=\"number\">255</span>,<span class=\"number\">175</span>,<span class=\"number\">46</span>, <span class=\"number\">0.2</span>),</span><br><span class=\"line\">      <span class=\"attr\">box_shadow3</span>: 0px 2px 6px 0px <span class=\"title function_\">rgba</span>(<span class=\"number\">255</span>,<span class=\"number\">175</span>,<span class=\"number\">46</span>, <span class=\"number\">0.2</span>),</span><br><span class=\"line\">      <span class=\"attr\">background1</span>: linear-<span class=\"title function_\">gradient</span>(90deg,<span class=\"title function_\">rgba</span>(<span class=\"number\">240</span>, <span class=\"number\">186</span>, <span class=\"number\">99</span>, <span class=\"number\">1</span>),<span class=\"title function_\">rgba</span>(<span class=\"number\">255</span>,<span class=\"number\">175</span>,<span class=\"number\">46</span>,<span class=\"number\">1</span>)),</span><br><span class=\"line\">      <span class=\"comment\">//边框</span></span><br><span class=\"line\">      <span class=\"attr\">border_color1</span>: #<span class=\"title class_\">FFAF2E</span>,</span><br><span class=\"line\">    </span><br><span class=\"line\">    ),</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"attr\">red</span>: (</span><br><span class=\"line\">      <span class=\"comment\">//字体</span></span><br><span class=\"line\">      <span class=\"attr\">font_color1</span>: #<span class=\"variable constant_\">F52231</span>,</span><br><span class=\"line\">      <span class=\"attr\">font_color2</span>: <span class=\"title function_\">rgb</span>(<span class=\"number\">238</span>, <span class=\"number\">79</span>, <span class=\"number\">90</span>),</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">//背景</span></span><br><span class=\"line\">      <span class=\"attr\">background_color1</span>: #<span class=\"variable constant_\">F52231</span>,</span><br><span class=\"line\">      <span class=\"attr\">background_color2</span>: <span class=\"title function_\">rgba</span>(<span class=\"number\">245</span>,<span class=\"number\">34</span>,<span class=\"number\">49</span>, <span class=\"number\">0.2</span>),</span><br><span class=\"line\">      <span class=\"attr\">box_shadow3</span>: 0px 2px 6px 0px <span class=\"title function_\">rgba</span>(<span class=\"number\">245</span>,<span class=\"number\">34</span>,<span class=\"number\">49</span>, <span class=\"number\">0.2</span>),</span><br><span class=\"line\">      <span class=\"attr\">background1</span>: linear-<span class=\"title function_\">gradient</span>(90deg,<span class=\"title function_\">rgba</span>(<span class=\"number\">247</span>, <span class=\"number\">198</span>, <span class=\"number\">121</span>, <span class=\"number\">1</span>),<span class=\"title function_\">rgba</span>(<span class=\"number\">245</span>,<span class=\"number\">34</span>,<span class=\"number\">49</span>,<span class=\"number\">1</span>)),</span><br><span class=\"line\">      <span class=\"comment\">//边框</span></span><br><span class=\"line\">      <span class=\"attr\">border_color1</span>: #<span class=\"variable constant_\">F52231</span>,</span><br><span class=\"line\">    )</span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"引入使用功能\"><a href=\"#引入使用功能\" class=\"headerlink\" title=\"引入使用功能\"></a>引入使用功能</h3><p>在app.vue中通过设置data数据来判断当前主题色，</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">window</span>.<span class=\"property\">document</span>.<span class=\"property\">documentElement</span>.<span class=\"title function_\">setAttribute</span>(<span class=\"string\">&#x27;data-theme&#x27;</span>, <span class=\"string\">&#x27;orange&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n<p>文件中引用变量设置</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;style lang=<span class=\"string\">&quot;scss&quot;</span> scoped&gt;</span><br><span class=\"line\">  @<span class=\"keyword\">import</span> <span class=\"string\">&#x27;@/common/_handle.scss&#x27;</span>;</span><br><span class=\"line\">.<span class=\"property\">btn_reject</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">//   background: $blueLinear-gradient;</span></span><br><span class=\"line\">  @include <span class=\"title function_\">background_color</span>(<span class=\"string\">&#x27;background_color1&#x27;</span>);</span><br><span class=\"line\">  <span class=\"attr\">color</span>: #ffffff;</span><br><span class=\"line\">  box-<span class=\"attr\">shadow</span>: <span class=\"number\">0</span> 5rpx 10rpx <span class=\"number\">0</span> <span class=\"title function_\">rgba</span>(<span class=\"number\">0</span>, <span class=\"number\">29</span>, <span class=\"number\">138</span>, <span class=\"number\">0.3</span>);</span><br><span class=\"line\">  @include <span class=\"title function_\">box_shadow</span>(<span class=\"string\">&#x27;box_shadow3&#x27;</span>);</span><br><span class=\"line\">  <span class=\"attr\">border</span>: 2px solid #486cdc;</span><br><span class=\"line\">  @include <span class=\"title function_\">border_color</span>(<span class=\"string\">&#x27;font_color1&#x27;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/style&gt;</span><br></pre></td></tr></table></figure>\n\n<p>@include background_color和@include box_shadow这些变量都是通过handle文件来定义的。</p>\n<p>注意：border这类需要多个维度来判断的class，只需要改变其中的颜色部分。会自动覆盖对应之前定义的border中的颜色#486cdc</p>\n","site":{"data":{}},"excerpt":"","more":"<meta name=\"referrer\" content=\"no-referrer\"/>\n\n<h2 id=\"scss的换肤功能\"><a href=\"#scss的换肤功能\" class=\"headerlink\" title=\"scss的换肤功能\"></a>scss的换肤功能</h2><h3 id=\"scss配置文件\"><a href=\"#scss配置文件\" class=\"headerlink\" title=\"scss配置文件\"></a>scss配置文件</h3><p>变量的定义文件_handle.scss</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@<span class=\"keyword\">import</span> <span class=\"string\">&#x27;./_themes.scss&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//遍历主题map</span></span><br><span class=\"line\">@mixin themeify &#123;</span><br><span class=\"line\">  @each $theme-name, $theme-map <span class=\"keyword\">in</span> $themes &#123;</span><br><span class=\"line\">    <span class=\"comment\">//!global 把局部变量强升为全局变量</span></span><br><span class=\"line\">    $theme-<span class=\"attr\">map</span>: $theme-map !<span class=\"variable language_\">global</span>;</span><br><span class=\"line\">    <span class=\"comment\">//判断html的data-theme的属性值  #&#123;&#125;是sass的插值表达式</span></span><br><span class=\"line\">    <span class=\"comment\">//&amp; sass嵌套里的父容器标识   @content是混合器插槽，像vue的slot</span></span><br><span class=\"line\">    [data-theme=<span class=\"string\">&#x27;#&#123;$theme-name&#125;&#x27;</span>] &amp; &#123;</span><br><span class=\"line\">      @content;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//声明一个根据Key获取颜色的function</span></span><br><span class=\"line\">@<span class=\"keyword\">function</span> <span class=\"title function_\">themed</span>(<span class=\"params\">$key</span>) &#123;</span><br><span class=\"line\">  @<span class=\"keyword\">return</span> map-<span class=\"title function_\">get</span>($theme-map, $key);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//获取背景颜色</span></span><br><span class=\"line\">@mixin <span class=\"title function_\">background_color</span>(<span class=\"params\">$color</span>) &#123;</span><br><span class=\"line\">  @include themeify &#123;</span><br><span class=\"line\">    background-<span class=\"attr\">color</span>: <span class=\"title function_\">themed</span>($color) !important;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">@mixin <span class=\"title function_\">background</span>(<span class=\"params\">$color</span>) &#123;</span><br><span class=\"line\">  @include themeify &#123;</span><br><span class=\"line\">    <span class=\"attr\">background</span>: <span class=\"title function_\">themed</span>($color) !important;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 阴影颜色</span></span><br><span class=\"line\"></span><br><span class=\"line\">@mixin <span class=\"title function_\">box_shadow</span>(<span class=\"params\">$color</span>) &#123;</span><br><span class=\"line\">  @include themeify &#123;</span><br><span class=\"line\">    box-<span class=\"attr\">shadow</span>: <span class=\"title function_\">themed</span>($color) !important;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//获取字体颜色</span></span><br><span class=\"line\">@mixin <span class=\"title function_\">font_color</span>(<span class=\"params\">$color</span>) &#123;</span><br><span class=\"line\">  @include themeify &#123;</span><br><span class=\"line\">    <span class=\"attr\">color</span>: <span class=\"title function_\">themed</span>($color) !important;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//获取边框颜色</span></span><br><span class=\"line\">@mixin <span class=\"title function_\">border_color</span>(<span class=\"params\">$color</span>) &#123;</span><br><span class=\"line\">  @include themeify &#123;</span><br><span class=\"line\">    border-<span class=\"attr\">color</span>: <span class=\"title function_\">themed</span>($color) !important;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>主题色配置文件_themes</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//_themes.scss</span></span><br><span class=\"line\"><span class=\"comment\">//当HTML的data-theme为dark时，样式引用dark</span></span><br><span class=\"line\"><span class=\"comment\">//data-theme为其他值时，就采用组件库的默认样式</span></span><br><span class=\"line\"><span class=\"comment\">//注意一点是，每套配色方案里的key可以自定义但必须一致，不然就会混乱</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">$themes</span>: (</span><br><span class=\"line\">    <span class=\"attr\">green</span>: (</span><br><span class=\"line\">      <span class=\"comment\">//字体</span></span><br><span class=\"line\">      <span class=\"attr\">font_color1</span>: #0BB3AC,</span><br><span class=\"line\">      <span class=\"attr\">font_color2</span>: #4CCBC8,</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">//背景</span></span><br><span class=\"line\">      <span class=\"attr\">background_color1</span>: #0BB3AC,</span><br><span class=\"line\">      <span class=\"attr\">background_color2</span>: <span class=\"title function_\">rgba</span>(<span class=\"number\">11</span>, <span class=\"number\">179</span>, <span class=\"number\">172</span>, <span class=\"number\">0.2</span>),</span><br><span class=\"line\">      <span class=\"attr\">box_shadow3</span>: 0px 2px 6px 0px <span class=\"title function_\">rgba</span>(<span class=\"number\">11</span>, <span class=\"number\">179</span>, <span class=\"number\">172</span>, <span class=\"number\">0.2</span>),</span><br><span class=\"line\">      <span class=\"attr\">background1</span>: linear-<span class=\"title function_\">gradient</span>(90deg,<span class=\"title function_\">rgba</span>(<span class=\"number\">76</span>,<span class=\"number\">203</span>,<span class=\"number\">200</span>,<span class=\"number\">1</span>),<span class=\"title function_\">rgba</span>(<span class=\"number\">11</span>,<span class=\"number\">179</span>,<span class=\"number\">172</span>,<span class=\"number\">1</span>)),</span><br><span class=\"line\">      <span class=\"comment\">//边框</span></span><br><span class=\"line\">      <span class=\"attr\">border_color1</span>: #0BB3AC,</span><br><span class=\"line\">    ),</span><br><span class=\"line\">    <span class=\"comment\">// 橘色主题</span></span><br><span class=\"line\">    <span class=\"attr\">orange</span>: (</span><br><span class=\"line\">        <span class=\"comment\">//字体</span></span><br><span class=\"line\">        <span class=\"attr\">font_color1</span>: #<span class=\"title class_\">FF6A</span>47,</span><br><span class=\"line\">        <span class=\"attr\">font_color2</span>: <span class=\"title function_\">rgb</span>(<span class=\"number\">248</span>, <span class=\"number\">138</span>, <span class=\"number\">114</span>),</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\">//背景</span></span><br><span class=\"line\">        <span class=\"attr\">background_color1</span>: #<span class=\"title class_\">FF6A</span>47,</span><br><span class=\"line\">        <span class=\"attr\">background_color2</span>: <span class=\"title function_\">rgba</span>(<span class=\"number\">255</span>,<span class=\"number\">106</span>,<span class=\"number\">71</span>,<span class=\"number\">0.2</span>),</span><br><span class=\"line\">        <span class=\"attr\">box_shadow3</span>: 0px 2px 6px 0px <span class=\"title function_\">rgba</span>(<span class=\"number\">255</span>,<span class=\"number\">106</span>,<span class=\"number\">71</span>,<span class=\"number\">0.2</span>),</span><br><span class=\"line\">        <span class=\"attr\">background1</span>: linear-<span class=\"title function_\">gradient</span>(90deg,<span class=\"title function_\">rgba</span>(<span class=\"number\">245</span>, <span class=\"number\">149</span>, <span class=\"number\">128</span>, <span class=\"number\">1</span>),<span class=\"title function_\">rgba</span>(<span class=\"number\">245</span>, <span class=\"number\">128</span>, <span class=\"number\">101</span>, <span class=\"number\">1</span>)),</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\">//边框</span></span><br><span class=\"line\">        <span class=\"attr\">border_color1</span>: #<span class=\"title class_\">FF6A</span>47,</span><br><span class=\"line\">    </span><br><span class=\"line\">    ),</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"attr\">blue</span>: (</span><br><span class=\"line\">      <span class=\"comment\">//字体</span></span><br><span class=\"line\">      <span class=\"attr\">font_color1</span>: #2E9CFF,</span><br><span class=\"line\">      <span class=\"attr\">font_color2</span>: <span class=\"title function_\">rgb</span>(<span class=\"number\">101</span>, <span class=\"number\">175</span>, <span class=\"number\">240</span>),</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">//背景</span></span><br><span class=\"line\">      <span class=\"attr\">background_color1</span>: #2E9CFF,</span><br><span class=\"line\">      <span class=\"attr\">background_color2</span>: <span class=\"title function_\">rgba</span>(<span class=\"number\">46</span>,<span class=\"number\">156</span>,<span class=\"number\">255</span>, <span class=\"number\">0.2</span>),</span><br><span class=\"line\">      <span class=\"attr\">box_shadow3</span>: 0px 2px 6px 0px <span class=\"title function_\">rgba</span>(<span class=\"number\">46</span>,<span class=\"number\">156</span>,<span class=\"number\">255</span>, <span class=\"number\">0.2</span>),</span><br><span class=\"line\">      <span class=\"attr\">background1</span>: linear-<span class=\"title function_\">gradient</span>(90deg,<span class=\"title function_\">rgba</span>(<span class=\"number\">99</span>, <span class=\"number\">172</span>, <span class=\"number\">236</span>, <span class=\"number\">1</span>),<span class=\"title function_\">rgba</span>(<span class=\"number\">46</span>,<span class=\"number\">156</span>,<span class=\"number\">255</span>,<span class=\"number\">1</span>)),</span><br><span class=\"line\">      <span class=\"comment\">//边框</span></span><br><span class=\"line\">      <span class=\"attr\">border_color1</span>: #2E9CFF,</span><br><span class=\"line\">    </span><br><span class=\"line\">    ),</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"attr\">yellow</span>: (</span><br><span class=\"line\">      <span class=\"comment\">//字体</span></span><br><span class=\"line\">      <span class=\"attr\">font_color1</span>: #<span class=\"title class_\">FFAF2E</span>,</span><br><span class=\"line\">      <span class=\"attr\">font_color2</span>: <span class=\"title function_\">rgb</span>(<span class=\"number\">240</span>, <span class=\"number\">197</span>, <span class=\"number\">128</span>),</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">//背景</span></span><br><span class=\"line\">      <span class=\"attr\">background_color1</span>: #<span class=\"title class_\">FFAF2E</span>,</span><br><span class=\"line\">      <span class=\"attr\">background_color2</span>: <span class=\"title function_\">rgba</span>(<span class=\"number\">255</span>,<span class=\"number\">175</span>,<span class=\"number\">46</span>, <span class=\"number\">0.2</span>),</span><br><span class=\"line\">      <span class=\"attr\">box_shadow3</span>: 0px 2px 6px 0px <span class=\"title function_\">rgba</span>(<span class=\"number\">255</span>,<span class=\"number\">175</span>,<span class=\"number\">46</span>, <span class=\"number\">0.2</span>),</span><br><span class=\"line\">      <span class=\"attr\">background1</span>: linear-<span class=\"title function_\">gradient</span>(90deg,<span class=\"title function_\">rgba</span>(<span class=\"number\">240</span>, <span class=\"number\">186</span>, <span class=\"number\">99</span>, <span class=\"number\">1</span>),<span class=\"title function_\">rgba</span>(<span class=\"number\">255</span>,<span class=\"number\">175</span>,<span class=\"number\">46</span>,<span class=\"number\">1</span>)),</span><br><span class=\"line\">      <span class=\"comment\">//边框</span></span><br><span class=\"line\">      <span class=\"attr\">border_color1</span>: #<span class=\"title class_\">FFAF2E</span>,</span><br><span class=\"line\">    </span><br><span class=\"line\">    ),</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"attr\">red</span>: (</span><br><span class=\"line\">      <span class=\"comment\">//字体</span></span><br><span class=\"line\">      <span class=\"attr\">font_color1</span>: #<span class=\"variable constant_\">F52231</span>,</span><br><span class=\"line\">      <span class=\"attr\">font_color2</span>: <span class=\"title function_\">rgb</span>(<span class=\"number\">238</span>, <span class=\"number\">79</span>, <span class=\"number\">90</span>),</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">//背景</span></span><br><span class=\"line\">      <span class=\"attr\">background_color1</span>: #<span class=\"variable constant_\">F52231</span>,</span><br><span class=\"line\">      <span class=\"attr\">background_color2</span>: <span class=\"title function_\">rgba</span>(<span class=\"number\">245</span>,<span class=\"number\">34</span>,<span class=\"number\">49</span>, <span class=\"number\">0.2</span>),</span><br><span class=\"line\">      <span class=\"attr\">box_shadow3</span>: 0px 2px 6px 0px <span class=\"title function_\">rgba</span>(<span class=\"number\">245</span>,<span class=\"number\">34</span>,<span class=\"number\">49</span>, <span class=\"number\">0.2</span>),</span><br><span class=\"line\">      <span class=\"attr\">background1</span>: linear-<span class=\"title function_\">gradient</span>(90deg,<span class=\"title function_\">rgba</span>(<span class=\"number\">247</span>, <span class=\"number\">198</span>, <span class=\"number\">121</span>, <span class=\"number\">1</span>),<span class=\"title function_\">rgba</span>(<span class=\"number\">245</span>,<span class=\"number\">34</span>,<span class=\"number\">49</span>,<span class=\"number\">1</span>)),</span><br><span class=\"line\">      <span class=\"comment\">//边框</span></span><br><span class=\"line\">      <span class=\"attr\">border_color1</span>: #<span class=\"variable constant_\">F52231</span>,</span><br><span class=\"line\">    )</span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"引入使用功能\"><a href=\"#引入使用功能\" class=\"headerlink\" title=\"引入使用功能\"></a>引入使用功能</h3><p>在app.vue中通过设置data数据来判断当前主题色，</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">window</span>.<span class=\"property\">document</span>.<span class=\"property\">documentElement</span>.<span class=\"title function_\">setAttribute</span>(<span class=\"string\">&#x27;data-theme&#x27;</span>, <span class=\"string\">&#x27;orange&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n<p>文件中引用变量设置</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;style lang=<span class=\"string\">&quot;scss&quot;</span> scoped&gt;</span><br><span class=\"line\">  @<span class=\"keyword\">import</span> <span class=\"string\">&#x27;@/common/_handle.scss&#x27;</span>;</span><br><span class=\"line\">.<span class=\"property\">btn_reject</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">//   background: $blueLinear-gradient;</span></span><br><span class=\"line\">  @include <span class=\"title function_\">background_color</span>(<span class=\"string\">&#x27;background_color1&#x27;</span>);</span><br><span class=\"line\">  <span class=\"attr\">color</span>: #ffffff;</span><br><span class=\"line\">  box-<span class=\"attr\">shadow</span>: <span class=\"number\">0</span> 5rpx 10rpx <span class=\"number\">0</span> <span class=\"title function_\">rgba</span>(<span class=\"number\">0</span>, <span class=\"number\">29</span>, <span class=\"number\">138</span>, <span class=\"number\">0.3</span>);</span><br><span class=\"line\">  @include <span class=\"title function_\">box_shadow</span>(<span class=\"string\">&#x27;box_shadow3&#x27;</span>);</span><br><span class=\"line\">  <span class=\"attr\">border</span>: 2px solid #486cdc;</span><br><span class=\"line\">  @include <span class=\"title function_\">border_color</span>(<span class=\"string\">&#x27;font_color1&#x27;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/style&gt;</span><br></pre></td></tr></table></figure>\n\n<p>@include background_color和@include box_shadow这些变量都是通过handle文件来定义的。</p>\n<p>注意：border这类需要多个维度来判断的class，只需要改变其中的颜色部分。会自动覆盖对应之前定义的border中的颜色#486cdc</p>\n"},{"title":"使用uni进行APP和H5的混合开发","date":"2020-07-12T09:16:26.000Z","_content":"\n<meta name=\"referrer\" content=\"no-referrer\"/>\n\n## 使用Uni进行App和H5的混合开发\n\nUni的开发上手难度极低，基本和开发小程序没有太大区别、\n\n<!-- more -->\n\n> 当已有H5的功能页面时，可能会有复用H5页面的需求。即：点击App内的路由会直接跳转到浏览器的H5页面，然后在H5进行操作之后，再跳转回App\n\n### 代码实现\n\n1. App的前置工作\n\n   UniApp中也提供了一个web-view容器，用来打开外部的页面\n\n   形如下：\n\n   ```js\n   <template>\n     <view>\n       <web-view :webview-styles=\"webviewStyles\" :src=\"src\"></web-view>\n     </view>\n   </template>\n   ```\n\n   src即是需要跳转到的H5的页面路径。路径上可以通过拼接的方式携带对应的参数，Uni本身也提供了一种post Message的方式来传递参数\n\n2. H5的前置工作和引用\n\n   1. 首页引入Uni的js桥\n\n      在public的文件夹下的index.html中，引入Uni的SDK，形如\n\n      ```js\n      <script src=\"<%= BASE_URL %>js/uni.js\" rel=\"prefetch\"></script>\n      <!-- <script type=\"text/javascript\" src=\"https://js.cdn.aliyun.dcloud.net.cn/dev/uni-app/uni.webview.1.5.1.js\"></script> -->\n      ```\n\n      可以下载下来或者直接引用网络地址（不同的版本的SDK可能会有不同的bug和效果，要关注官网最新的SDK）\n\n   2. 在对应页面进行桥事件的监听，并调用Uni的方法\n\n      SDK提供了一个事件UniAppJSBridgeReady，可以监听桥是否完成，完成后，可以直接调用给定的uni的方法\n\n      ```js\n      document.addEventListener(\"UniAppJSBridgeReady\", () => {\n              document.querySelector(\".goback\").addEventListener(\"click\", (evt) => {\n                uni.navigateBack({\n                  delta: 1,\n                });\n              });\n      });\n      ```\n\n      如上述代码，当桥完成后，进行了一个绑定的操作，当点击H5中的按钮，可以直接调用uni.navigateBack，回到app\n\n   3. 通过调用uni的路由方法，跳回App中\n\n      在H5中，也可以直接调用Uni的路由，如下：\n\n      ```js\n      uni.navigateTo({\n                url: \"/pages/couponManager/couponManager\",\n      });\n      ```\n\n\n### 实际开发遇到的问题\n\n1. UniAppJSBridgeReady方法不生效\n\n   首先要检查UniAppJSBridgeReady的监听事件是否书写正确，然后检查sdk版本。有的版本的sdk是有bug的，会在打包后，部署到测试环境失效。一般需要使用官网的最新sdk\n\n2. 绑定事件阻塞\n\n   本次开发的H5页面会有较大的图片加载过程，会遇到绑定点击返回事件后，点击失效的情况，即浏览器正在加载js和下载图片，无法处理绑定的click事件，需要等图片下载完成后，再执行click事件。这里我直接通过图片初始化地址为空，然后在mounted周期给图片赋值地址来临时解决\n\n3. 请求头\n\n   后端有判断不同请求头走对应的接口的逻辑，所以，可以在跳转的链接中拼接hearderInfo来替换H5中的请求头，如：\n\n   ```js\n   config.headers = {\n             terminalcode: headerTem.terminalcode,\n             terminaltype: headerTem.terminaltype,\n             devicetype: headerTem.devicetype\n   };\n   ```\n\n   当从app跳转到h5时，devicetype为：APP，当用户直接用小程序或者H5访问时，devicetype为：WECHAT\n\n4. 埋点\n\n   需要实现编辑、修改、保存等埋点。这里的问题是，当从app跳入h5后，做一系列的操作，再返回到app这个过程中，需要在离开h5的时候发送埋点请求。而vue中通常使用的周期如：beforeDestroy无法在上述情况下触发。需要采用新的判断方法：visibilitychange\n\n   ```js\n   document.addEventListener(\"visibilitychange\", this.compareChange);\n   ```\n\n   visibilitychange可以判断的是：当前浏览器是否被隐藏或者显示。\n\n   当从h5跳回app时，不是销毁或者离开页面，而是直接销毁或者隐藏整个webView的浏览器，所以只会触发visibilitychange事件。\n\n5. 待续\n\n\n\n","source":"_posts/uni开发app.md","raw":"---\ntitle: 使用uni进行APP和H5的混合开发\ndate: 2020-07-12 17:16:26\ntags: [js,hexo]\n---\n\n<meta name=\"referrer\" content=\"no-referrer\"/>\n\n## 使用Uni进行App和H5的混合开发\n\nUni的开发上手难度极低，基本和开发小程序没有太大区别、\n\n<!-- more -->\n\n> 当已有H5的功能页面时，可能会有复用H5页面的需求。即：点击App内的路由会直接跳转到浏览器的H5页面，然后在H5进行操作之后，再跳转回App\n\n### 代码实现\n\n1. App的前置工作\n\n   UniApp中也提供了一个web-view容器，用来打开外部的页面\n\n   形如下：\n\n   ```js\n   <template>\n     <view>\n       <web-view :webview-styles=\"webviewStyles\" :src=\"src\"></web-view>\n     </view>\n   </template>\n   ```\n\n   src即是需要跳转到的H5的页面路径。路径上可以通过拼接的方式携带对应的参数，Uni本身也提供了一种post Message的方式来传递参数\n\n2. H5的前置工作和引用\n\n   1. 首页引入Uni的js桥\n\n      在public的文件夹下的index.html中，引入Uni的SDK，形如\n\n      ```js\n      <script src=\"<%= BASE_URL %>js/uni.js\" rel=\"prefetch\"></script>\n      <!-- <script type=\"text/javascript\" src=\"https://js.cdn.aliyun.dcloud.net.cn/dev/uni-app/uni.webview.1.5.1.js\"></script> -->\n      ```\n\n      可以下载下来或者直接引用网络地址（不同的版本的SDK可能会有不同的bug和效果，要关注官网最新的SDK）\n\n   2. 在对应页面进行桥事件的监听，并调用Uni的方法\n\n      SDK提供了一个事件UniAppJSBridgeReady，可以监听桥是否完成，完成后，可以直接调用给定的uni的方法\n\n      ```js\n      document.addEventListener(\"UniAppJSBridgeReady\", () => {\n              document.querySelector(\".goback\").addEventListener(\"click\", (evt) => {\n                uni.navigateBack({\n                  delta: 1,\n                });\n              });\n      });\n      ```\n\n      如上述代码，当桥完成后，进行了一个绑定的操作，当点击H5中的按钮，可以直接调用uni.navigateBack，回到app\n\n   3. 通过调用uni的路由方法，跳回App中\n\n      在H5中，也可以直接调用Uni的路由，如下：\n\n      ```js\n      uni.navigateTo({\n                url: \"/pages/couponManager/couponManager\",\n      });\n      ```\n\n\n### 实际开发遇到的问题\n\n1. UniAppJSBridgeReady方法不生效\n\n   首先要检查UniAppJSBridgeReady的监听事件是否书写正确，然后检查sdk版本。有的版本的sdk是有bug的，会在打包后，部署到测试环境失效。一般需要使用官网的最新sdk\n\n2. 绑定事件阻塞\n\n   本次开发的H5页面会有较大的图片加载过程，会遇到绑定点击返回事件后，点击失效的情况，即浏览器正在加载js和下载图片，无法处理绑定的click事件，需要等图片下载完成后，再执行click事件。这里我直接通过图片初始化地址为空，然后在mounted周期给图片赋值地址来临时解决\n\n3. 请求头\n\n   后端有判断不同请求头走对应的接口的逻辑，所以，可以在跳转的链接中拼接hearderInfo来替换H5中的请求头，如：\n\n   ```js\n   config.headers = {\n             terminalcode: headerTem.terminalcode,\n             terminaltype: headerTem.terminaltype,\n             devicetype: headerTem.devicetype\n   };\n   ```\n\n   当从app跳转到h5时，devicetype为：APP，当用户直接用小程序或者H5访问时，devicetype为：WECHAT\n\n4. 埋点\n\n   需要实现编辑、修改、保存等埋点。这里的问题是，当从app跳入h5后，做一系列的操作，再返回到app这个过程中，需要在离开h5的时候发送埋点请求。而vue中通常使用的周期如：beforeDestroy无法在上述情况下触发。需要采用新的判断方法：visibilitychange\n\n   ```js\n   document.addEventListener(\"visibilitychange\", this.compareChange);\n   ```\n\n   visibilitychange可以判断的是：当前浏览器是否被隐藏或者显示。\n\n   当从h5跳回app时，不是销毁或者离开页面，而是直接销毁或者隐藏整个webView的浏览器，所以只会触发visibilitychange事件。\n\n5. 待续\n\n\n\n","slug":"uni开发app","published":1,"updated":"2021-01-19T08:48:50.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl0uux6vo000n7sufd6tda7ng","content":"<meta name=\"referrer\" content=\"no-referrer\"/>\n\n<h2 id=\"使用Uni进行App和H5的混合开发\"><a href=\"#使用Uni进行App和H5的混合开发\" class=\"headerlink\" title=\"使用Uni进行App和H5的混合开发\"></a>使用Uni进行App和H5的混合开发</h2><p>Uni的开发上手难度极低，基本和开发小程序没有太大区别、</p>\n<span id=\"more\"></span>\n\n<blockquote>\n<p>当已有H5的功能页面时，可能会有复用H5页面的需求。即：点击App内的路由会直接跳转到浏览器的H5页面，然后在H5进行操作之后，再跳转回App</p>\n</blockquote>\n<h3 id=\"代码实现\"><a href=\"#代码实现\" class=\"headerlink\" title=\"代码实现\"></a>代码实现</h3><ol>\n<li><p>App的前置工作</p>\n<p>UniApp中也提供了一个web-view容器，用来打开外部的页面</p>\n<p>形如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">view</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;<span class=\"name\">web-view</span> <span class=\"attr\">:webview-styles</span>=<span class=\"string\">&quot;webviewStyles&quot;</span> <span class=\"attr\">:src</span>=<span class=\"string\">&quot;src&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">web-view</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">  <span class=\"tag\">&lt;/<span class=\"name\">view</span>&gt;</span></span></span><br><span class=\"line\">&lt;/template&gt;</span><br></pre></td></tr></table></figure>\n\n<p>src即是需要跳转到的H5的页面路径。路径上可以通过拼接的方式携带对应的参数，Uni本身也提供了一种post Message的方式来传递参数</p>\n</li>\n<li><p>H5的前置工作和引用</p>\n<ol>\n<li><p>首页引入Uni的js桥</p>\n<p>在public的文件夹下的index.html中，引入Uni的SDK，形如</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script src=<span class=\"string\">&quot;&lt;%= BASE_URL %&gt;js/uni.js&quot;</span> rel=<span class=\"string\">&quot;prefetch&quot;</span>&gt;&lt;/script&gt;</span><br><span class=\"line\">&lt;!-- <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/javascript&quot;</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;https://js.cdn.aliyun.dcloud.net.cn/dev/uni-app/uni.webview.1.5.1.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span> --&gt;</span><br></pre></td></tr></table></figure>\n\n<p>可以下载下来或者直接引用网络地址（不同的版本的SDK可能会有不同的bug和效果，要关注官网最新的SDK）</p>\n</li>\n<li><p>在对应页面进行桥事件的监听，并调用Uni的方法</p>\n<p>SDK提供了一个事件UniAppJSBridgeReady，可以监听桥是否完成，完成后，可以直接调用给定的uni的方法</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">document</span>.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&quot;UniAppJSBridgeReady&quot;</span>, <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&quot;.goback&quot;</span>).<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&quot;click&quot;</span>, <span class=\"function\">(<span class=\"params\">evt</span>) =&gt;</span> &#123;</span><br><span class=\"line\">          uni.<span class=\"title function_\">navigateBack</span>(&#123;</span><br><span class=\"line\">            <span class=\"attr\">delta</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">          &#125;);</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>如上述代码，当桥完成后，进行了一个绑定的操作，当点击H5中的按钮，可以直接调用uni.navigateBack，回到app</p>\n</li>\n<li><p>通过调用uni的路由方法，跳回App中</p>\n<p>在H5中，也可以直接调用Uni的路由，如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">uni.<span class=\"title function_\">navigateTo</span>(&#123;</span><br><span class=\"line\">          <span class=\"attr\">url</span>: <span class=\"string\">&quot;/pages/couponManager/couponManager&quot;</span>,</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></li>\n</ol>\n</li>\n</ol>\n<h3 id=\"实际开发遇到的问题\"><a href=\"#实际开发遇到的问题\" class=\"headerlink\" title=\"实际开发遇到的问题\"></a>实际开发遇到的问题</h3><ol>\n<li><p>UniAppJSBridgeReady方法不生效</p>\n<p>首先要检查UniAppJSBridgeReady的监听事件是否书写正确，然后检查sdk版本。有的版本的sdk是有bug的，会在打包后，部署到测试环境失效。一般需要使用官网的最新sdk</p>\n</li>\n<li><p>绑定事件阻塞</p>\n<p>本次开发的H5页面会有较大的图片加载过程，会遇到绑定点击返回事件后，点击失效的情况，即浏览器正在加载js和下载图片，无法处理绑定的click事件，需要等图片下载完成后，再执行click事件。这里我直接通过图片初始化地址为空，然后在mounted周期给图片赋值地址来临时解决</p>\n</li>\n<li><p>请求头</p>\n<p>后端有判断不同请求头走对应的接口的逻辑，所以，可以在跳转的链接中拼接hearderInfo来替换H5中的请求头，如：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">config.<span class=\"property\">headers</span> = &#123;</span><br><span class=\"line\">          <span class=\"attr\">terminalcode</span>: headerTem.<span class=\"property\">terminalcode</span>,</span><br><span class=\"line\">          <span class=\"attr\">terminaltype</span>: headerTem.<span class=\"property\">terminaltype</span>,</span><br><span class=\"line\">          <span class=\"attr\">devicetype</span>: headerTem.<span class=\"property\">devicetype</span></span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<p>当从app跳转到h5时，devicetype为：APP，当用户直接用小程序或者H5访问时，devicetype为：WECHAT</p>\n</li>\n<li><p>埋点</p>\n<p>需要实现编辑、修改、保存等埋点。这里的问题是，当从app跳入h5后，做一系列的操作，再返回到app这个过程中，需要在离开h5的时候发送埋点请求。而vue中通常使用的周期如：beforeDestroy无法在上述情况下触发。需要采用新的判断方法：visibilitychange</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">document</span>.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&quot;visibilitychange&quot;</span>, <span class=\"variable language_\">this</span>.<span class=\"property\">compareChange</span>);</span><br></pre></td></tr></table></figure>\n\n<p>visibilitychange可以判断的是：当前浏览器是否被隐藏或者显示。</p>\n<p>当从h5跳回app时，不是销毁或者离开页面，而是直接销毁或者隐藏整个webView的浏览器，所以只会触发visibilitychange事件。</p>\n</li>\n<li><p>待续</p>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"<meta name=\"referrer\" content=\"no-referrer\"/>\n\n<h2 id=\"使用Uni进行App和H5的混合开发\"><a href=\"#使用Uni进行App和H5的混合开发\" class=\"headerlink\" title=\"使用Uni进行App和H5的混合开发\"></a>使用Uni进行App和H5的混合开发</h2><p>Uni的开发上手难度极低，基本和开发小程序没有太大区别、</p>","more":"<blockquote>\n<p>当已有H5的功能页面时，可能会有复用H5页面的需求。即：点击App内的路由会直接跳转到浏览器的H5页面，然后在H5进行操作之后，再跳转回App</p>\n</blockquote>\n<h3 id=\"代码实现\"><a href=\"#代码实现\" class=\"headerlink\" title=\"代码实现\"></a>代码实现</h3><ol>\n<li><p>App的前置工作</p>\n<p>UniApp中也提供了一个web-view容器，用来打开外部的页面</p>\n<p>形如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">view</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;<span class=\"name\">web-view</span> <span class=\"attr\">:webview-styles</span>=<span class=\"string\">&quot;webviewStyles&quot;</span> <span class=\"attr\">:src</span>=<span class=\"string\">&quot;src&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">web-view</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">  <span class=\"tag\">&lt;/<span class=\"name\">view</span>&gt;</span></span></span><br><span class=\"line\">&lt;/template&gt;</span><br></pre></td></tr></table></figure>\n\n<p>src即是需要跳转到的H5的页面路径。路径上可以通过拼接的方式携带对应的参数，Uni本身也提供了一种post Message的方式来传递参数</p>\n</li>\n<li><p>H5的前置工作和引用</p>\n<ol>\n<li><p>首页引入Uni的js桥</p>\n<p>在public的文件夹下的index.html中，引入Uni的SDK，形如</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script src=<span class=\"string\">&quot;&lt;%= BASE_URL %&gt;js/uni.js&quot;</span> rel=<span class=\"string\">&quot;prefetch&quot;</span>&gt;&lt;/script&gt;</span><br><span class=\"line\">&lt;!-- <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/javascript&quot;</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;https://js.cdn.aliyun.dcloud.net.cn/dev/uni-app/uni.webview.1.5.1.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span> --&gt;</span><br></pre></td></tr></table></figure>\n\n<p>可以下载下来或者直接引用网络地址（不同的版本的SDK可能会有不同的bug和效果，要关注官网最新的SDK）</p>\n</li>\n<li><p>在对应页面进行桥事件的监听，并调用Uni的方法</p>\n<p>SDK提供了一个事件UniAppJSBridgeReady，可以监听桥是否完成，完成后，可以直接调用给定的uni的方法</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">document</span>.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&quot;UniAppJSBridgeReady&quot;</span>, <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&quot;.goback&quot;</span>).<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&quot;click&quot;</span>, <span class=\"function\">(<span class=\"params\">evt</span>) =&gt;</span> &#123;</span><br><span class=\"line\">          uni.<span class=\"title function_\">navigateBack</span>(&#123;</span><br><span class=\"line\">            <span class=\"attr\">delta</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">          &#125;);</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>如上述代码，当桥完成后，进行了一个绑定的操作，当点击H5中的按钮，可以直接调用uni.navigateBack，回到app</p>\n</li>\n<li><p>通过调用uni的路由方法，跳回App中</p>\n<p>在H5中，也可以直接调用Uni的路由，如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">uni.<span class=\"title function_\">navigateTo</span>(&#123;</span><br><span class=\"line\">          <span class=\"attr\">url</span>: <span class=\"string\">&quot;/pages/couponManager/couponManager&quot;</span>,</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></li>\n</ol>\n</li>\n</ol>\n<h3 id=\"实际开发遇到的问题\"><a href=\"#实际开发遇到的问题\" class=\"headerlink\" title=\"实际开发遇到的问题\"></a>实际开发遇到的问题</h3><ol>\n<li><p>UniAppJSBridgeReady方法不生效</p>\n<p>首先要检查UniAppJSBridgeReady的监听事件是否书写正确，然后检查sdk版本。有的版本的sdk是有bug的，会在打包后，部署到测试环境失效。一般需要使用官网的最新sdk</p>\n</li>\n<li><p>绑定事件阻塞</p>\n<p>本次开发的H5页面会有较大的图片加载过程，会遇到绑定点击返回事件后，点击失效的情况，即浏览器正在加载js和下载图片，无法处理绑定的click事件，需要等图片下载完成后，再执行click事件。这里我直接通过图片初始化地址为空，然后在mounted周期给图片赋值地址来临时解决</p>\n</li>\n<li><p>请求头</p>\n<p>后端有判断不同请求头走对应的接口的逻辑，所以，可以在跳转的链接中拼接hearderInfo来替换H5中的请求头，如：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">config.<span class=\"property\">headers</span> = &#123;</span><br><span class=\"line\">          <span class=\"attr\">terminalcode</span>: headerTem.<span class=\"property\">terminalcode</span>,</span><br><span class=\"line\">          <span class=\"attr\">terminaltype</span>: headerTem.<span class=\"property\">terminaltype</span>,</span><br><span class=\"line\">          <span class=\"attr\">devicetype</span>: headerTem.<span class=\"property\">devicetype</span></span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<p>当从app跳转到h5时，devicetype为：APP，当用户直接用小程序或者H5访问时，devicetype为：WECHAT</p>\n</li>\n<li><p>埋点</p>\n<p>需要实现编辑、修改、保存等埋点。这里的问题是，当从app跳入h5后，做一系列的操作，再返回到app这个过程中，需要在离开h5的时候发送埋点请求。而vue中通常使用的周期如：beforeDestroy无法在上述情况下触发。需要采用新的判断方法：visibilitychange</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">document</span>.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&quot;visibilitychange&quot;</span>, <span class=\"variable language_\">this</span>.<span class=\"property\">compareChange</span>);</span><br></pre></td></tr></table></figure>\n\n<p>visibilitychange可以判断的是：当前浏览器是否被隐藏或者显示。</p>\n<p>当从h5跳回app时，不是销毁或者离开页面，而是直接销毁或者隐藏整个webView的浏览器，所以只会触发visibilitychange事件。</p>\n</li>\n<li><p>待续</p>\n</li>\n</ol>"},{"title":"vue项目上线优化记录","date":"2020-03-12T09:16:26.000Z","_content":"\n<meta name=\"referrer\" content=\"no-referrer\"/>\n\n## vue项目上线优化记录\n\n项目上线，没有进行备案，所以需要架设于境外服务器，所有访问速度较慢，现在记录所作优化步骤：\n\n1. 引用线上地址\n2. 将静态资源放置于网络存储\n3. 精灵图减少请求\n4. 服务器开通gzip\n5. 路由懒加载\n\n<!-- more -->\n\n### 引用线上地址\n\n使用的是bootstrap，之前是通过下载到本地，然后引用，当build的时候，会将其一并打包，所以导致js文件过大，所以直接将引用地址改为网络请求，这样，打包后的文件会减小很多。\n\n> <script src=\"https://cdn.staticfile.org/jquery/3.2.1/jquery.min.js\"></script>\n> <script src=\"https://cdn.staticfile.org/popper.js/1.15.0/umd/popper.min.js\"></script>\n> <script src=\"https://cdn.staticfile.org/twitter-bootstrap/4.3.1/js/bootstrap.min.js\"></script>\n> <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap@3.3.7/dist/css/bootstrap.min.css\">\n\n### 将静态资源放置于网络存储\n\n网站的大部分图片都不会改动，所以将其上传到oss网络存储然后直接引用网络地址，这里采用的是北京的oss，这样从服务器请求的时候是从北京地区请求的图片，相对速度会快一些。\n\n> background-image: url(\"https://limengtupian.oss-cn-beijing.aliyuncs.com/%E9%A6%96%E9%A1%B5%E7%B2%BE%E7%81%B5%E5%9B%BE/img.png\");\n\n### 精灵图减少请求\n\n每一张图片都会发起一次请求，所以对于一些常用的小图标，我们一般都会将其做成一张图，然后通过定位的方式，显示出其中的一部分，这样的图片就是精灵图。\n\n### 服务器开通gzip\n\ngzip可以直接再服务端的时候，就对要传输的数据先进行一次压缩，减少传输数据的体积，这个概念跟下载游戏文件的时候一般下载下来的都是压缩包是类似的，然后再客户端的浏览器上，会进行解压处理，这样就大大减少了文件体积，减少的传输速度。\n\n由于是采用的vue-cli 3.0 ，查阅网上资料发现，通过3.0去构建的项目，是默认的开启gzip的，那么只需要再服务器上的配置文件修改。\n\n采用的是nginx，所以找到对应的conf文件(/usr/local/nginx/conf)，修改如下：\n\n> http {\n>\n>   gzip on;\n>\n>   gzip_min_length 1k;\n>\n>   gzip_buffers 4 16k;\n>\n>   \\#gzip_http_version 1.0;\n>\n>   gzip_comp_level 6;\n>\n>   gzip_types text/plain application/x-javascript text/css application/xml text/javascript application/x-httpd-php image/jpeg image/gif image/png;\n>\n>   gzip_vary off;\n>\n>   gzip_disable \"MSIE [1-6]\\.\";\n>\n> }\n\n再次请求，可以通过谷歌浏览器-F12-network-点击任意文件-header内的request header中，可以看到：\n\n**Accept-Encoding**：gzip\n\n已经是通过了zip压缩的文件了，体积明显缩小\n\n### 路由懒加载\n\n单页面应用是会再首页加载的时候将所有的页面直接加载完成，所以会出现首页加载较长的情况，这样就需要采用懒加载，当页面被点击的时候再加载。那么，配置如下：\n\n在router中配置如下：\n\n> export default {\n>\n>   path: '/home',\n>\n>   component: () => import('@/views/Home.vue')\n>\n> }\n\n将其component修改成了() => import('@/views/Home.vue')。\n\n但是现在**路由懒加载不生效**，因为cli 3.0 是直接默认会把所有通过import()按需加载的javascript文件加上 prefetch 。\n\n**关闭prefetch:** (官网示例)\n\n```html\t\n\n// vue.config.js\nmodule.exports = {\n  chainWebpack: config => {\n    // 移除 prefetch 插件\n    config.plugins.delete('prefetch')\n \n    // 或者\n    // 修改它的选项：\n    config.plugin('prefetch').tap(options => {\n      options[0].fileBlacklist = options[0].fileBlacklist || []\n      options[0].fileBlacklist.push(/myasyncRoute(.)+?\\.js$/)\n      return options\n    })\n  }\n```\n\nprefetch链接会消耗宽带，如果是在移动端，而且存在大量的chunk，那么可以关掉 prefetch 链接，手动选择要提前获取的代码区块。\n\n```html\n//手动选定要提前获取的代码\nimport(webpackPrefetch: true, './someAsyncComponent.vue')\n```\n\n## vue-cli上线 代理接口报404 修改conf\n\n前言： 项目使用vue-cli直接生成项目，然后使用proxyTable接口代理后， 在本地调用后台接口，一切正常，但是后期打包上线时，发现页面接口报404，后找到解决办法为：\n\n找到nginx 的conf文件，打开后，修改里面的配置如下：\n\n```html\n    server {\n        listen       80;//监听80端口\n        server_name  localhost;\n        location / {\n            root   html;\n            index  index.html index.htm;\n            try_files $uri $uri/ /index.html; //vue单页面应用，不能刷新，所有会设置这个，避免404\n        }\n        location /v2/ {\n            proxy_set_header X-Real-IP $remote_addr;\n            proxy_pass  http://douban.uieee.com;\n        }\n        error_page   500 502 503 504  /50x.html;\n        location = /50x.html {\n            root   html;\n        }\n}\n```\n\n里面主要添加的配置为：\n\n```html\n        location /v2/ {\n            proxy_set_header X-Real-IP $remote_addr;\n            proxy_pass  http://douban.uieee.com;\n        }\n```\n\n这个/v2/监听，实际上就是我api调用的名字，这个可以在你的vue.config.js里可以去设置：\n\n```html\t\nmodule.exports = {\n    //axios域代理，解决axios跨域问题\n    devServer: {\n        proxy: {\n            '/v2': {\n                target: 'https://douban.uieee.com',\n                changeOrigin: true,\n                ws: true,\n            }\n        }\n    }\n}\n```\n\n我请求的api格式如下：\n\n> https://douban.uieee.com/v2/movie/top250?start=0&count=12\n\n提供的api文档里面可以看到，所有的api都带有一个相同的字符/v2/。\n\n所以以这个字符为关键字来修改代理。\n\n<meta name=\"referrer\" content=\"no-referrer\"/>\n\n\n## 初始化设置和环境搭建（neginx,centOS，vue的环境搭建）/GitHub相关\n\n### 安装node.js\n\n一般来讲, 可以用以下三种方式安装 Node.js：\n\n- 通过安装包安装(Windows 和 Mac 用户推荐)\n- 通过源码编译安装(Linux用户推荐)\n- 在 Linux 下可以通过 yum|apt-get 安装\n\n1. 通过安装包安装：\n\n2. 源码编译安装：\n\n   <!-- more -->\n\n   Linux用户：\n\n   ```\n   curl -O https://nodejs.org/dist/v6.10.3/node-v6.10.3.tar.gz\n   tar -xzvf node-v6.10.3.tar.gz\n   cd  node-v6.10.3\n   ./configure\n   make\n   make install\n   ```\n\n### 安装cnpm镜像（可选择）\n\n   [淘宝 NPM 镜像](https://npm.taobao.org/)是一个完整 npmjs.org 镜像，你可以用此代替官方版本(只读)，同步频率目前为 10分钟 一次以保证尽量与官方服务同步。\n\n   ```\n   npm install -g cnpm --registry=https://registry.npm.taobao.org \n   cnpm install [name]\n   ```\n\n### 使用vue-cli\n\n   1. 安装\n\n      如果用npm下载速度慢，可以使用cnpm.\n\n      ```\n      npm install -g vue-cli\n      ```\n\n   2. init初始模板\n\n      目前可用的模板包括：\n\n      - [browserify](https://github.com/vuejs-templates/browserify)–全功能的Browserify + vueify，包括热加载，静态检测，单元测试\n\n      - [browserify-simple](https://github.com/vuejs-templates/browserify-simple)–一个简易的Browserify + vueify，以便于快速开始。\n\n      - [webpack](https://github.com/vuejs-templates/webpack)–全功能的Webpack + vueify，包括热加载，静态检测，单元测试\n\n      - [webpack-simple](https://github.com/vuejs-templates/webpack-simple)–一个简易的Webpack + vueify，以便于快速开始。\n\n      - [simple](https://github.com/vuejs-templates/simple) - 单个HTML文件中最简单的Vue设置\n\n        ```\n        vue init <template-name> <project-name>\n        ```\n\n   3. 运行项目\n\n      1. 我们的项目选择webpack,使用以下命令:\n\n      ```\n      vue init webpack vue-todos\n      ```\n\n      2. 输入下面的命令就可以运行这个项目了:\n\n         ```\n         cd vue-todos\n         npm install\n         npm run dev\n         ```\n\n## CentOS7安装Nginx\n\n## 安装所需环境\n\nNginx 是 C语言 开发，建议在 Linux 上运行，当然，也可以安装 Windows 版本，本篇则使用 [CentOS](http://www.linuxidc.com/topicnews.aspx?tid=14) 7 作为安装环境。\n\n顺序如下：\n\n1. **gcc 安装**\n\n   ```\n   yum install gcc-c++\n   ```\n\n2. **PCRE pcre-devel 安装**\n\n   ```\n   yum install -y pcre pcre-devel\n   ```\n\n3. **zlib 安装**\n\n   ```\n   yum install -y zlib zlib-devel\n   ```\n\n4. **OpenSSL 安装**\n\n   ```\n   yum install -y openssl openssl-devel\n   ```\n\n5. 下载`.tar.gz`安装包\n\n   ```\n   wget -c https://nginx.org/download/nginx-1.12.0.tar.gz\n   ```\n\n6. 解压\n\n   ```\n   tar -zxvf nginx-1.12.0.tar.gz\n   cd nginx-1.12.0\n   ```\n\n7. **配置**\n\n   ```\n   ./configure\n   ```\n\n8. 编译安装\n\n   ```\n   make\n   make install\n   ```\n\n9. 启动、停止nginx\n\n   ```\n   cd /usr/local/nginx/sbin/\n   ./nginx \n   ./nginx -s stop\n   ./nginx -s quit\n   ./nginx -s reload\n   ```\n\n10. 重启 **nginx**\n\n    ```\n    cd /usr/local/nginx/sbin/\n    ./nginx -s reload\n    ```\n\n## CSS Tools: Reset CSS重置css\n\n浏览器自带的css属性，一般需要重置，记录如下：\n\n\n\n```html\n/* http://meyerweb.com/eric/tools/css/reset/ \n   v2.0 | 20110126\n   License: none (public domain)\n*/\n\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed, \nfigure, figcaption, footer, header, hgroup, \nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tfont-size: 100%;\n\tfont: inherit;\n\tvertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure, \nfooter, header, hgroup, menu, nav, section {\n\tdisplay: block;\n}\nbody {\n\tline-height: 1;\n}\nol, ul {\n\tlist-style: none;\n}\nblockquote, q {\n\tquotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n\tcontent: '';\n\tcontent: none;\n}\ntable {\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n}\n```\n\n## vs code插件记录(更新中)\n\nvscode会使用比较多的插件，记录：\n\n1. Auto Close Tag（补充标签）\n2. Auto Rename Tag（修改标签）\n3. Chinese (Simplified) Language Pack for VS Code\n4. Debugger for Chrome\n5. Open in Browser\n6. Prettier（格式化）\n7. Vetur（智能提示补全代码）\n8. vscode-icons（美化icon）\n9. Bracket Pair Colorizer（括号颜色，快速识别括号位置）\n\n### 记录：\n\n* Vetur\n\n  使用scss的时候，会遇到vetur报错的情况：\n\n  ```html\n  <style lang=\"scss\" scoped>\n      @keyframes glitch-one {\n    @for $i from 20 to 30 {\n      #{$i / 2}% {\n        left: #{randomNum(200, -100)}px;\n        clip-path: inset(#{randomNum(150, 30)}px 0 #{randomNum(150, 30)}px);\n      }\n    }\n    }\n  ```\n\n  比如上面的这种情况，就会有红色波浪线提示，但是在浏览器中是正确的。所以需要配置如下：\n\n  1. 文件》首选项》设置\n\n  2. 右上角三个选项的第一个（打开设置Json）\n\n  3. 在大括号内添加最后四行（跟vetur相关的配置）\n\n     ```html\n     {\n         \"workbench.iconTheme\": \"vscode-icons\",\n         \"[html]\": {\n             \"editor.defaultFormatter\": \"vscode.html-language-features\"\n         },\n         \"open-in-browser.default\": \"chrome\",\n         \"explorer.confirmDragAndDrop\": false,\n         \"window.zoomLevel\": 1,\n         \"[javascript]\": {\n             \"editor.defaultFormatter\": \"vscode.typescript-language-features\"\n         },\n         \"explorer.confirmDelete\": false,\n         \"vsicons.dontShowNewVersionMessage\": true,\n         \"editor.fontSize\": 20,\n         \"[css]\": {\n             \"editor.defaultFormatter\": \"esbenp.prettier-vscode\"\n         },\n         \"vetur.validation.template\": false,\n         \"vetur.experimental.templateInterpolationService\": false,\n         \"vetur.validation.style\": false,\n         \"vetur.validation.script\": false,\n     }\n     ```\n\n     \n\n## GitHub相关问题\n\nGitHub是一个面向[开源](https://baike.baidu.com/item/开源/20720669)及私有[软件](https://baike.baidu.com/item/软件/12053)项目的托管平台，因为只支持git 作为唯一的版本库格式进行托管，故名GitHub。\n\n## 初始设置github\n\n记录开始使用GitHub中三点注意：\n\n1. 注册账号会验证邮箱，而163邮箱不能接受验证邮件\n\n   ***注意***：注册需要设置邮箱，需要选用qq邮箱或者gmail邮箱，163邮箱发现不能接收到GitHub的邮件！\n\n   新的库，需要设置sshkeys\n\n   1. 检查是否有sshkeys\n\n      ```\n      ~/.ssh\n      ```\n\n   2. 创建ssh\n\n      首先创建一个SSH，在Git Bash中输入\n\n      ``` \n      $ ssh-keygen -t rsa -C “你的邮箱”\n      ```\n\n      然后他就会显示这两行\n\n      ``` \n      Generating public/private rsa key pair.\n      Enter file in which to save the key (/c/Users/16627/.ssh/id_rsa):\n      ```\n\n      这是让你输入一个文件名，用于保存刚才生成的 SSH key 代码。如果你不输入，直接回车，那么就会默认生成id_rsa和id_rsa.pub两个秘钥文件（如下提示）。\n\n      ```\n      Created directory ‘/c/Users/16627/.ssh’.\n      ```\n\n      紧接着又会提示你\n\n      ``` \n      Enter passphrase (empty for no passphrase):\n      Enter same passphrase again:\n      ```\n\n      接着又会提示你输入两次密码（该密码是你push文件的时候要输入的密码，而不是github管理者的密码），当然你还可以不输入密码，直接按回车。那么fetch和push的时候就不需要输入密码。\n\n      ![chegngong](https://img-blog.csdn.net/20180118114145818?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzY2NjcxNzA=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast)\n\n      已经创建成功\n\n      ![chenggong](https://img-blog.csdn.net/20180118115923234?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzY2NjcxNzA=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast)\n\n   3. 添加ssh到GitHub\n\n      按照以下的步骤操作：\n\n      ![1](https://img-blog.csdn.net/20180118120316317?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzY2NjcxNzA=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast)\n\n      ![2](https://img-blog.csdn.net/20180118120349241?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzY2NjcxNzA=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast)\n\n      ![3](https://img-blog.csdn.net/20180118120556118?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzY2NjcxNzA=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast)\n\n      title随便给他起个名字就好。然后是key，这时候你要打开你刚才在电脑上的SSH key。刚才提示你建立的那段文字有SSH key的地址，按照地址找到你的文件，用记事本**打开id_rsa.pub文件，全选其中的内容粘贴到网页的Key中即可。**\n\n      ![4](https://img-blog.csdn.net/20180118121323658?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzY2NjcxNzA=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast)\n\n      ![5](https://img-blog.csdn.net/20180118121457269?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzY2NjcxNzA=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast)\n\n      **然后你就会受到建立成功的邮件了。**\n\n      ![6](https://img-blog.csdn.net/20180118121751176?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzY2NjcxNzA=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast)\n\n   4. 测试一下ssh key\n\n      在git Bash 中输入以下代码：\n\n      ```\n      ssh -T git@github.com\n      注意是git@github.com，不是你的邮箱。\n      ```\n\n      然后会提示你：\n\n      ``` \n      The authenticity of host ‘github.com (192.30.255.112)’ can’t be established.\n      RSA key fingerprint is SHA256:nThbg6kXUpJWGl7E1IGOCspRomTxdCARLviKw6E5SY8.\n      Are you sure you want to continue connecting (yes/no)?\n      ```\n\n      正常提示，你只需要YES就可以。如果你创建 SSH key 的时候设置了密码，接下来就会提示你输入密码，如果你没设置密码会提示你:\n\n      ```\n      Warning: Permanently added ‘github.com,192.30.255.112’ (RSA) to the list of known hosts.\n      Hi “用户名”! You’ve successfully authenticated, but GitHub does not provide shell access.\n      ```\n\n2. 需要设置config.name和config.email\n\n   * 按照以下的步骤操作\n\n     ``` \n     git config --global user.name \"yourname\" 设置用户名\n     git config --global user.email myemail@qq.com 设置用户邮箱\n     git config --list 查看git设置列表信息\n     git config user.name  查看用户名\n     ```\n\n     \n\n## git推动GitHub提示faild\n\n在添加远程库的时候一直验证不成功，一直提示failed to push some refs to git的问题，经过网上查找终于解决了这个问题。\n\n主要问题指向了README.md文件\n\n### git步骤如下\n\n```html\n1. git add . //添加到暂存区\n2. git commit -m \"备注内容\" //添加到head\n3. git push -u origin master //添加到远程仓库\n```\n\n其中第三步出错，提示ailed to push some refs to git\n\n### 解决\n\n出现错误的主要原因是github中的README.md文件不在本地代码目录中，\n\n可以通过如下命令进行代码合并【注：pull=fetch+merge]\n\n```html\ngit pull --rebase origin master\n```\n\n执行上面代码后可以看到本地代码库中多了README.md文件\n\n此时再执行语句 git push -u origin master即可完成代码上传到github\n\n<meta name=\"referrer\" content=\"no-referrer\"/>\n\n## keep-alive 的使用与周期\n\n### 使用keep-alive的时机\n\n在搭建 vue 项目时，有某些组件没必要多次渲染，所以需要将组件在内存中进行‘持久化，此时 keep-alive 便可以派上用场了。keep-alive  可以使被包含的组件状态维持不变，即便是组件切换了，其内的状态依旧维持在内存之中。在下一次显示时，也不会重现渲染。\n\n> PS：`` 与 ``相似，只是一个抽象组件，它不会在DOM树中渲染(真实或者虚拟都不会)，也不在父组件链中存在，比如：你永远在 `this.$parent` 中找不到 `keep-alive` 。\n\n<!-- more -->\n\n### 配合router-view去使用\n\n有些时候可能需要将整个路由页面一切缓存下来，也就是将 `` 进行缓存。这种使用场景还是蛮多的\n\n```js\n<keep-alive>\n    <router-view v-if=\"$router.meta.keepAlive\"></router-view>\n</keep-alive>\n<router-view v-if=\"!$router.meta.keepAlive\"></router-view>\n\n//router配置\nnew Router({\n    routes: [\n        {\n            name: 'a',\n            path: '/a',\n            component: A,\n            meta: {\n                keepAlive: true\n            }\n        },\n        {\n            name: 'b',\n            path: '/b',\n            component: B\n        }\n    ]\n})\n```\n\n### keep-alive 生命周期和新属性\n\n#### 生命周期\n\n被包含在 `` 中创建的组件，会多出两个生命周期的钩子: `activated` 与 `deactivated`\n\n- activated\n\n在组件被激活时调用，**在组件第一次渲染时也会被调用**，之后每次keep-alive激活时被调用。\n\n- deactivated\n\n在组件被停用时调用。\n\n> 注意：只有组件被 `keep-alive` 包裹时，这两个生命周期才会被调用，如果作为正常组件使用，是不会被调用，以及在 `2.1.0` 版本之后，使用 `exclude` 排除之后，就算被包裹在 `keep-alive` 中，这两个钩子依然不会被调用！另外在服务端渲染时此钩子也不会被调用的。\n\n#### 新属性\n\n在vue `2.1.0` 版本之后，`keep-alive` 新加入了两个属性: `include`(包含的组件缓存生效) 与 `exclude`(排除的组件不缓存，优先级大于include) 。\n\n`include` 和 `exclude` 属性允许组件有条件地缓存。二者都可以用逗号分隔字符串、正则表达式或一个数组来表示\n\n当使用正则或者是数组时，一定要使用 `v-bind` !\n\n```js\n<!-- 逗号分隔字符串，只有组件a与b被缓存。这样使用场景变得更有意义了 -->\n<keep-alive include=\"a,b\">\n  <component :is=\"view\"></component>\n</keep-alive>\n\n<!-- 正则表达式 (需要使用 v-bind，符合匹配规则的都会被缓存) -->\n<keep-alive :include=\"/a|b/\">\n  <component :is=\"view\"></component>\n</keep-alive>\n\n<!-- Array (需要使用 v-bind，被包含的都会被缓存) -->\n<keep-alive :include=\"['a', 'b']\">\n  <component :is=\"view\"></component>\n</keep-alive>\n```\n\n* 有了include之后，再与 `router-view` 一起使用时便方便许多了:\n\n```js\n<!-- 一个include解决了，不需要多写一个标签，也不需要在路由元中添加keepAlive了 -->\n<keep-alive include='a'>\n    <router-view></router-view>\n</keeo-alive>\n```\n\n### 注意\n\n1. keeo-alive先匹配被包含组件的 `name` 字段，如果 `name` 不可用，则匹配当前组件 `components` 配置中的注册名称。\n\n2. keeo-alive不会在函数式组件中正常工作，因为它们没有缓存实例。\n\n3. 当匹配条件同时在 `include` 与 `exclude` 存在时，以 `exclude` 优先级最高(当前vue 2.4.2 version)。比如：包含于排除同时匹配到了组件A，那组件A不会被缓存。\n\n4. 包含在 keeo-alive 中，但符合 `exclude` ，不会调用`activated` 和 `deactivated`。\n\n5. **设置了`keep-alive`,这个时候不会触发生命周期的钩子函数。**\n\n   当页面内的数据没有发生变化时，页面内的操作比如跳转到另一个路由，是不会去经过生命周期函数的，比如：desdtroy函数等。\n\n   它会直接在进入的时候触发`activated` 和离开的时候触发 deactivated。\n\n   所以，如果是有涉及到之前放入mouted周期中的函数，可以将其放入activated，放入desdtroy周期的函数可以放入deactivated。","source":"_posts/vue项目上线优化记录.md","raw":"---\ntitle: vue项目上线优化记录\ndate: 2020-03-12 17:16:26\ntags: [vue,优化]\n---\n\n<meta name=\"referrer\" content=\"no-referrer\"/>\n\n## vue项目上线优化记录\n\n项目上线，没有进行备案，所以需要架设于境外服务器，所有访问速度较慢，现在记录所作优化步骤：\n\n1. 引用线上地址\n2. 将静态资源放置于网络存储\n3. 精灵图减少请求\n4. 服务器开通gzip\n5. 路由懒加载\n\n<!-- more -->\n\n### 引用线上地址\n\n使用的是bootstrap，之前是通过下载到本地，然后引用，当build的时候，会将其一并打包，所以导致js文件过大，所以直接将引用地址改为网络请求，这样，打包后的文件会减小很多。\n\n> <script src=\"https://cdn.staticfile.org/jquery/3.2.1/jquery.min.js\"></script>\n> <script src=\"https://cdn.staticfile.org/popper.js/1.15.0/umd/popper.min.js\"></script>\n> <script src=\"https://cdn.staticfile.org/twitter-bootstrap/4.3.1/js/bootstrap.min.js\"></script>\n> <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap@3.3.7/dist/css/bootstrap.min.css\">\n\n### 将静态资源放置于网络存储\n\n网站的大部分图片都不会改动，所以将其上传到oss网络存储然后直接引用网络地址，这里采用的是北京的oss，这样从服务器请求的时候是从北京地区请求的图片，相对速度会快一些。\n\n> background-image: url(\"https://limengtupian.oss-cn-beijing.aliyuncs.com/%E9%A6%96%E9%A1%B5%E7%B2%BE%E7%81%B5%E5%9B%BE/img.png\");\n\n### 精灵图减少请求\n\n每一张图片都会发起一次请求，所以对于一些常用的小图标，我们一般都会将其做成一张图，然后通过定位的方式，显示出其中的一部分，这样的图片就是精灵图。\n\n### 服务器开通gzip\n\ngzip可以直接再服务端的时候，就对要传输的数据先进行一次压缩，减少传输数据的体积，这个概念跟下载游戏文件的时候一般下载下来的都是压缩包是类似的，然后再客户端的浏览器上，会进行解压处理，这样就大大减少了文件体积，减少的传输速度。\n\n由于是采用的vue-cli 3.0 ，查阅网上资料发现，通过3.0去构建的项目，是默认的开启gzip的，那么只需要再服务器上的配置文件修改。\n\n采用的是nginx，所以找到对应的conf文件(/usr/local/nginx/conf)，修改如下：\n\n> http {\n>\n>   gzip on;\n>\n>   gzip_min_length 1k;\n>\n>   gzip_buffers 4 16k;\n>\n>   \\#gzip_http_version 1.0;\n>\n>   gzip_comp_level 6;\n>\n>   gzip_types text/plain application/x-javascript text/css application/xml text/javascript application/x-httpd-php image/jpeg image/gif image/png;\n>\n>   gzip_vary off;\n>\n>   gzip_disable \"MSIE [1-6]\\.\";\n>\n> }\n\n再次请求，可以通过谷歌浏览器-F12-network-点击任意文件-header内的request header中，可以看到：\n\n**Accept-Encoding**：gzip\n\n已经是通过了zip压缩的文件了，体积明显缩小\n\n### 路由懒加载\n\n单页面应用是会再首页加载的时候将所有的页面直接加载完成，所以会出现首页加载较长的情况，这样就需要采用懒加载，当页面被点击的时候再加载。那么，配置如下：\n\n在router中配置如下：\n\n> export default {\n>\n>   path: '/home',\n>\n>   component: () => import('@/views/Home.vue')\n>\n> }\n\n将其component修改成了() => import('@/views/Home.vue')。\n\n但是现在**路由懒加载不生效**，因为cli 3.0 是直接默认会把所有通过import()按需加载的javascript文件加上 prefetch 。\n\n**关闭prefetch:** (官网示例)\n\n```html\t\n\n// vue.config.js\nmodule.exports = {\n  chainWebpack: config => {\n    // 移除 prefetch 插件\n    config.plugins.delete('prefetch')\n \n    // 或者\n    // 修改它的选项：\n    config.plugin('prefetch').tap(options => {\n      options[0].fileBlacklist = options[0].fileBlacklist || []\n      options[0].fileBlacklist.push(/myasyncRoute(.)+?\\.js$/)\n      return options\n    })\n  }\n```\n\nprefetch链接会消耗宽带，如果是在移动端，而且存在大量的chunk，那么可以关掉 prefetch 链接，手动选择要提前获取的代码区块。\n\n```html\n//手动选定要提前获取的代码\nimport(webpackPrefetch: true, './someAsyncComponent.vue')\n```\n\n## vue-cli上线 代理接口报404 修改conf\n\n前言： 项目使用vue-cli直接生成项目，然后使用proxyTable接口代理后， 在本地调用后台接口，一切正常，但是后期打包上线时，发现页面接口报404，后找到解决办法为：\n\n找到nginx 的conf文件，打开后，修改里面的配置如下：\n\n```html\n    server {\n        listen       80;//监听80端口\n        server_name  localhost;\n        location / {\n            root   html;\n            index  index.html index.htm;\n            try_files $uri $uri/ /index.html; //vue单页面应用，不能刷新，所有会设置这个，避免404\n        }\n        location /v2/ {\n            proxy_set_header X-Real-IP $remote_addr;\n            proxy_pass  http://douban.uieee.com;\n        }\n        error_page   500 502 503 504  /50x.html;\n        location = /50x.html {\n            root   html;\n        }\n}\n```\n\n里面主要添加的配置为：\n\n```html\n        location /v2/ {\n            proxy_set_header X-Real-IP $remote_addr;\n            proxy_pass  http://douban.uieee.com;\n        }\n```\n\n这个/v2/监听，实际上就是我api调用的名字，这个可以在你的vue.config.js里可以去设置：\n\n```html\t\nmodule.exports = {\n    //axios域代理，解决axios跨域问题\n    devServer: {\n        proxy: {\n            '/v2': {\n                target: 'https://douban.uieee.com',\n                changeOrigin: true,\n                ws: true,\n            }\n        }\n    }\n}\n```\n\n我请求的api格式如下：\n\n> https://douban.uieee.com/v2/movie/top250?start=0&count=12\n\n提供的api文档里面可以看到，所有的api都带有一个相同的字符/v2/。\n\n所以以这个字符为关键字来修改代理。\n\n<meta name=\"referrer\" content=\"no-referrer\"/>\n\n\n## 初始化设置和环境搭建（neginx,centOS，vue的环境搭建）/GitHub相关\n\n### 安装node.js\n\n一般来讲, 可以用以下三种方式安装 Node.js：\n\n- 通过安装包安装(Windows 和 Mac 用户推荐)\n- 通过源码编译安装(Linux用户推荐)\n- 在 Linux 下可以通过 yum|apt-get 安装\n\n1. 通过安装包安装：\n\n2. 源码编译安装：\n\n   <!-- more -->\n\n   Linux用户：\n\n   ```\n   curl -O https://nodejs.org/dist/v6.10.3/node-v6.10.3.tar.gz\n   tar -xzvf node-v6.10.3.tar.gz\n   cd  node-v6.10.3\n   ./configure\n   make\n   make install\n   ```\n\n### 安装cnpm镜像（可选择）\n\n   [淘宝 NPM 镜像](https://npm.taobao.org/)是一个完整 npmjs.org 镜像，你可以用此代替官方版本(只读)，同步频率目前为 10分钟 一次以保证尽量与官方服务同步。\n\n   ```\n   npm install -g cnpm --registry=https://registry.npm.taobao.org \n   cnpm install [name]\n   ```\n\n### 使用vue-cli\n\n   1. 安装\n\n      如果用npm下载速度慢，可以使用cnpm.\n\n      ```\n      npm install -g vue-cli\n      ```\n\n   2. init初始模板\n\n      目前可用的模板包括：\n\n      - [browserify](https://github.com/vuejs-templates/browserify)–全功能的Browserify + vueify，包括热加载，静态检测，单元测试\n\n      - [browserify-simple](https://github.com/vuejs-templates/browserify-simple)–一个简易的Browserify + vueify，以便于快速开始。\n\n      - [webpack](https://github.com/vuejs-templates/webpack)–全功能的Webpack + vueify，包括热加载，静态检测，单元测试\n\n      - [webpack-simple](https://github.com/vuejs-templates/webpack-simple)–一个简易的Webpack + vueify，以便于快速开始。\n\n      - [simple](https://github.com/vuejs-templates/simple) - 单个HTML文件中最简单的Vue设置\n\n        ```\n        vue init <template-name> <project-name>\n        ```\n\n   3. 运行项目\n\n      1. 我们的项目选择webpack,使用以下命令:\n\n      ```\n      vue init webpack vue-todos\n      ```\n\n      2. 输入下面的命令就可以运行这个项目了:\n\n         ```\n         cd vue-todos\n         npm install\n         npm run dev\n         ```\n\n## CentOS7安装Nginx\n\n## 安装所需环境\n\nNginx 是 C语言 开发，建议在 Linux 上运行，当然，也可以安装 Windows 版本，本篇则使用 [CentOS](http://www.linuxidc.com/topicnews.aspx?tid=14) 7 作为安装环境。\n\n顺序如下：\n\n1. **gcc 安装**\n\n   ```\n   yum install gcc-c++\n   ```\n\n2. **PCRE pcre-devel 安装**\n\n   ```\n   yum install -y pcre pcre-devel\n   ```\n\n3. **zlib 安装**\n\n   ```\n   yum install -y zlib zlib-devel\n   ```\n\n4. **OpenSSL 安装**\n\n   ```\n   yum install -y openssl openssl-devel\n   ```\n\n5. 下载`.tar.gz`安装包\n\n   ```\n   wget -c https://nginx.org/download/nginx-1.12.0.tar.gz\n   ```\n\n6. 解压\n\n   ```\n   tar -zxvf nginx-1.12.0.tar.gz\n   cd nginx-1.12.0\n   ```\n\n7. **配置**\n\n   ```\n   ./configure\n   ```\n\n8. 编译安装\n\n   ```\n   make\n   make install\n   ```\n\n9. 启动、停止nginx\n\n   ```\n   cd /usr/local/nginx/sbin/\n   ./nginx \n   ./nginx -s stop\n   ./nginx -s quit\n   ./nginx -s reload\n   ```\n\n10. 重启 **nginx**\n\n    ```\n    cd /usr/local/nginx/sbin/\n    ./nginx -s reload\n    ```\n\n## CSS Tools: Reset CSS重置css\n\n浏览器自带的css属性，一般需要重置，记录如下：\n\n\n\n```html\n/* http://meyerweb.com/eric/tools/css/reset/ \n   v2.0 | 20110126\n   License: none (public domain)\n*/\n\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed, \nfigure, figcaption, footer, header, hgroup, \nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tfont-size: 100%;\n\tfont: inherit;\n\tvertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure, \nfooter, header, hgroup, menu, nav, section {\n\tdisplay: block;\n}\nbody {\n\tline-height: 1;\n}\nol, ul {\n\tlist-style: none;\n}\nblockquote, q {\n\tquotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n\tcontent: '';\n\tcontent: none;\n}\ntable {\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n}\n```\n\n## vs code插件记录(更新中)\n\nvscode会使用比较多的插件，记录：\n\n1. Auto Close Tag（补充标签）\n2. Auto Rename Tag（修改标签）\n3. Chinese (Simplified) Language Pack for VS Code\n4. Debugger for Chrome\n5. Open in Browser\n6. Prettier（格式化）\n7. Vetur（智能提示补全代码）\n8. vscode-icons（美化icon）\n9. Bracket Pair Colorizer（括号颜色，快速识别括号位置）\n\n### 记录：\n\n* Vetur\n\n  使用scss的时候，会遇到vetur报错的情况：\n\n  ```html\n  <style lang=\"scss\" scoped>\n      @keyframes glitch-one {\n    @for $i from 20 to 30 {\n      #{$i / 2}% {\n        left: #{randomNum(200, -100)}px;\n        clip-path: inset(#{randomNum(150, 30)}px 0 #{randomNum(150, 30)}px);\n      }\n    }\n    }\n  ```\n\n  比如上面的这种情况，就会有红色波浪线提示，但是在浏览器中是正确的。所以需要配置如下：\n\n  1. 文件》首选项》设置\n\n  2. 右上角三个选项的第一个（打开设置Json）\n\n  3. 在大括号内添加最后四行（跟vetur相关的配置）\n\n     ```html\n     {\n         \"workbench.iconTheme\": \"vscode-icons\",\n         \"[html]\": {\n             \"editor.defaultFormatter\": \"vscode.html-language-features\"\n         },\n         \"open-in-browser.default\": \"chrome\",\n         \"explorer.confirmDragAndDrop\": false,\n         \"window.zoomLevel\": 1,\n         \"[javascript]\": {\n             \"editor.defaultFormatter\": \"vscode.typescript-language-features\"\n         },\n         \"explorer.confirmDelete\": false,\n         \"vsicons.dontShowNewVersionMessage\": true,\n         \"editor.fontSize\": 20,\n         \"[css]\": {\n             \"editor.defaultFormatter\": \"esbenp.prettier-vscode\"\n         },\n         \"vetur.validation.template\": false,\n         \"vetur.experimental.templateInterpolationService\": false,\n         \"vetur.validation.style\": false,\n         \"vetur.validation.script\": false,\n     }\n     ```\n\n     \n\n## GitHub相关问题\n\nGitHub是一个面向[开源](https://baike.baidu.com/item/开源/20720669)及私有[软件](https://baike.baidu.com/item/软件/12053)项目的托管平台，因为只支持git 作为唯一的版本库格式进行托管，故名GitHub。\n\n## 初始设置github\n\n记录开始使用GitHub中三点注意：\n\n1. 注册账号会验证邮箱，而163邮箱不能接受验证邮件\n\n   ***注意***：注册需要设置邮箱，需要选用qq邮箱或者gmail邮箱，163邮箱发现不能接收到GitHub的邮件！\n\n   新的库，需要设置sshkeys\n\n   1. 检查是否有sshkeys\n\n      ```\n      ~/.ssh\n      ```\n\n   2. 创建ssh\n\n      首先创建一个SSH，在Git Bash中输入\n\n      ``` \n      $ ssh-keygen -t rsa -C “你的邮箱”\n      ```\n\n      然后他就会显示这两行\n\n      ``` \n      Generating public/private rsa key pair.\n      Enter file in which to save the key (/c/Users/16627/.ssh/id_rsa):\n      ```\n\n      这是让你输入一个文件名，用于保存刚才生成的 SSH key 代码。如果你不输入，直接回车，那么就会默认生成id_rsa和id_rsa.pub两个秘钥文件（如下提示）。\n\n      ```\n      Created directory ‘/c/Users/16627/.ssh’.\n      ```\n\n      紧接着又会提示你\n\n      ``` \n      Enter passphrase (empty for no passphrase):\n      Enter same passphrase again:\n      ```\n\n      接着又会提示你输入两次密码（该密码是你push文件的时候要输入的密码，而不是github管理者的密码），当然你还可以不输入密码，直接按回车。那么fetch和push的时候就不需要输入密码。\n\n      ![chegngong](https://img-blog.csdn.net/20180118114145818?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzY2NjcxNzA=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast)\n\n      已经创建成功\n\n      ![chenggong](https://img-blog.csdn.net/20180118115923234?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzY2NjcxNzA=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast)\n\n   3. 添加ssh到GitHub\n\n      按照以下的步骤操作：\n\n      ![1](https://img-blog.csdn.net/20180118120316317?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzY2NjcxNzA=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast)\n\n      ![2](https://img-blog.csdn.net/20180118120349241?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzY2NjcxNzA=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast)\n\n      ![3](https://img-blog.csdn.net/20180118120556118?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzY2NjcxNzA=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast)\n\n      title随便给他起个名字就好。然后是key，这时候你要打开你刚才在电脑上的SSH key。刚才提示你建立的那段文字有SSH key的地址，按照地址找到你的文件，用记事本**打开id_rsa.pub文件，全选其中的内容粘贴到网页的Key中即可。**\n\n      ![4](https://img-blog.csdn.net/20180118121323658?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzY2NjcxNzA=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast)\n\n      ![5](https://img-blog.csdn.net/20180118121457269?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzY2NjcxNzA=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast)\n\n      **然后你就会受到建立成功的邮件了。**\n\n      ![6](https://img-blog.csdn.net/20180118121751176?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzY2NjcxNzA=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast)\n\n   4. 测试一下ssh key\n\n      在git Bash 中输入以下代码：\n\n      ```\n      ssh -T git@github.com\n      注意是git@github.com，不是你的邮箱。\n      ```\n\n      然后会提示你：\n\n      ``` \n      The authenticity of host ‘github.com (192.30.255.112)’ can’t be established.\n      RSA key fingerprint is SHA256:nThbg6kXUpJWGl7E1IGOCspRomTxdCARLviKw6E5SY8.\n      Are you sure you want to continue connecting (yes/no)?\n      ```\n\n      正常提示，你只需要YES就可以。如果你创建 SSH key 的时候设置了密码，接下来就会提示你输入密码，如果你没设置密码会提示你:\n\n      ```\n      Warning: Permanently added ‘github.com,192.30.255.112’ (RSA) to the list of known hosts.\n      Hi “用户名”! You’ve successfully authenticated, but GitHub does not provide shell access.\n      ```\n\n2. 需要设置config.name和config.email\n\n   * 按照以下的步骤操作\n\n     ``` \n     git config --global user.name \"yourname\" 设置用户名\n     git config --global user.email myemail@qq.com 设置用户邮箱\n     git config --list 查看git设置列表信息\n     git config user.name  查看用户名\n     ```\n\n     \n\n## git推动GitHub提示faild\n\n在添加远程库的时候一直验证不成功，一直提示failed to push some refs to git的问题，经过网上查找终于解决了这个问题。\n\n主要问题指向了README.md文件\n\n### git步骤如下\n\n```html\n1. git add . //添加到暂存区\n2. git commit -m \"备注内容\" //添加到head\n3. git push -u origin master //添加到远程仓库\n```\n\n其中第三步出错，提示ailed to push some refs to git\n\n### 解决\n\n出现错误的主要原因是github中的README.md文件不在本地代码目录中，\n\n可以通过如下命令进行代码合并【注：pull=fetch+merge]\n\n```html\ngit pull --rebase origin master\n```\n\n执行上面代码后可以看到本地代码库中多了README.md文件\n\n此时再执行语句 git push -u origin master即可完成代码上传到github\n\n<meta name=\"referrer\" content=\"no-referrer\"/>\n\n## keep-alive 的使用与周期\n\n### 使用keep-alive的时机\n\n在搭建 vue 项目时，有某些组件没必要多次渲染，所以需要将组件在内存中进行‘持久化，此时 keep-alive 便可以派上用场了。keep-alive  可以使被包含的组件状态维持不变，即便是组件切换了，其内的状态依旧维持在内存之中。在下一次显示时，也不会重现渲染。\n\n> PS：`` 与 ``相似，只是一个抽象组件，它不会在DOM树中渲染(真实或者虚拟都不会)，也不在父组件链中存在，比如：你永远在 `this.$parent` 中找不到 `keep-alive` 。\n\n<!-- more -->\n\n### 配合router-view去使用\n\n有些时候可能需要将整个路由页面一切缓存下来，也就是将 `` 进行缓存。这种使用场景还是蛮多的\n\n```js\n<keep-alive>\n    <router-view v-if=\"$router.meta.keepAlive\"></router-view>\n</keep-alive>\n<router-view v-if=\"!$router.meta.keepAlive\"></router-view>\n\n//router配置\nnew Router({\n    routes: [\n        {\n            name: 'a',\n            path: '/a',\n            component: A,\n            meta: {\n                keepAlive: true\n            }\n        },\n        {\n            name: 'b',\n            path: '/b',\n            component: B\n        }\n    ]\n})\n```\n\n### keep-alive 生命周期和新属性\n\n#### 生命周期\n\n被包含在 `` 中创建的组件，会多出两个生命周期的钩子: `activated` 与 `deactivated`\n\n- activated\n\n在组件被激活时调用，**在组件第一次渲染时也会被调用**，之后每次keep-alive激活时被调用。\n\n- deactivated\n\n在组件被停用时调用。\n\n> 注意：只有组件被 `keep-alive` 包裹时，这两个生命周期才会被调用，如果作为正常组件使用，是不会被调用，以及在 `2.1.0` 版本之后，使用 `exclude` 排除之后，就算被包裹在 `keep-alive` 中，这两个钩子依然不会被调用！另外在服务端渲染时此钩子也不会被调用的。\n\n#### 新属性\n\n在vue `2.1.0` 版本之后，`keep-alive` 新加入了两个属性: `include`(包含的组件缓存生效) 与 `exclude`(排除的组件不缓存，优先级大于include) 。\n\n`include` 和 `exclude` 属性允许组件有条件地缓存。二者都可以用逗号分隔字符串、正则表达式或一个数组来表示\n\n当使用正则或者是数组时，一定要使用 `v-bind` !\n\n```js\n<!-- 逗号分隔字符串，只有组件a与b被缓存。这样使用场景变得更有意义了 -->\n<keep-alive include=\"a,b\">\n  <component :is=\"view\"></component>\n</keep-alive>\n\n<!-- 正则表达式 (需要使用 v-bind，符合匹配规则的都会被缓存) -->\n<keep-alive :include=\"/a|b/\">\n  <component :is=\"view\"></component>\n</keep-alive>\n\n<!-- Array (需要使用 v-bind，被包含的都会被缓存) -->\n<keep-alive :include=\"['a', 'b']\">\n  <component :is=\"view\"></component>\n</keep-alive>\n```\n\n* 有了include之后，再与 `router-view` 一起使用时便方便许多了:\n\n```js\n<!-- 一个include解决了，不需要多写一个标签，也不需要在路由元中添加keepAlive了 -->\n<keep-alive include='a'>\n    <router-view></router-view>\n</keeo-alive>\n```\n\n### 注意\n\n1. keeo-alive先匹配被包含组件的 `name` 字段，如果 `name` 不可用，则匹配当前组件 `components` 配置中的注册名称。\n\n2. keeo-alive不会在函数式组件中正常工作，因为它们没有缓存实例。\n\n3. 当匹配条件同时在 `include` 与 `exclude` 存在时，以 `exclude` 优先级最高(当前vue 2.4.2 version)。比如：包含于排除同时匹配到了组件A，那组件A不会被缓存。\n\n4. 包含在 keeo-alive 中，但符合 `exclude` ，不会调用`activated` 和 `deactivated`。\n\n5. **设置了`keep-alive`,这个时候不会触发生命周期的钩子函数。**\n\n   当页面内的数据没有发生变化时，页面内的操作比如跳转到另一个路由，是不会去经过生命周期函数的，比如：desdtroy函数等。\n\n   它会直接在进入的时候触发`activated` 和离开的时候触发 deactivated。\n\n   所以，如果是有涉及到之前放入mouted周期中的函数，可以将其放入activated，放入desdtroy周期的函数可以放入deactivated。","slug":"vue项目上线优化记录","published":1,"updated":"2020-07-03T08:01:44.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl0uux6vo000o7suf2bwlbl6u","content":"<meta name=\"referrer\" content=\"no-referrer\"/>\n\n<h2 id=\"vue项目上线优化记录\"><a href=\"#vue项目上线优化记录\" class=\"headerlink\" title=\"vue项目上线优化记录\"></a>vue项目上线优化记录</h2><p>项目上线，没有进行备案，所以需要架设于境外服务器，所有访问速度较慢，现在记录所作优化步骤：</p>\n<ol>\n<li>引用线上地址</li>\n<li>将静态资源放置于网络存储</li>\n<li>精灵图减少请求</li>\n<li>服务器开通gzip</li>\n<li>路由懒加载</li>\n</ol>\n<span id=\"more\"></span>\n\n<h3 id=\"引用线上地址\"><a href=\"#引用线上地址\" class=\"headerlink\" title=\"引用线上地址\"></a>引用线上地址</h3><p>使用的是bootstrap，之前是通过下载到本地，然后引用，当build的时候，会将其一并打包，所以导致js文件过大，所以直接将引用地址改为网络请求，这样，打包后的文件会减小很多。</p>\n<blockquote>\n<script src=\"https://cdn.staticfile.org/jquery/3.2.1/jquery.min.js\"></script>\n<script src=\"https://cdn.staticfile.org/popper.js/1.15.0/umd/popper.min.js\"></script>\n<script src=\"https://cdn.staticfile.org/twitter-bootstrap/4.3.1/js/bootstrap.min.js\"></script>\n<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap@3.3.7/dist/css/bootstrap.min.css\">\n</blockquote>\n<h3 id=\"将静态资源放置于网络存储\"><a href=\"#将静态资源放置于网络存储\" class=\"headerlink\" title=\"将静态资源放置于网络存储\"></a>将静态资源放置于网络存储</h3><p>网站的大部分图片都不会改动，所以将其上传到oss网络存储然后直接引用网络地址，这里采用的是北京的oss，这样从服务器请求的时候是从北京地区请求的图片，相对速度会快一些。</p>\n<blockquote>\n<p>background-image: url(“<a href=\"https://limengtupian.oss-cn-beijing.aliyuncs.com/%E9%A6%96%E9%A1%B5%E7%B2%BE%E7%81%B5%E5%9B%BE/img.png&quot;\">https://limengtupian.oss-cn-beijing.aliyuncs.com/%E9%A6%96%E9%A1%B5%E7%B2%BE%E7%81%B5%E5%9B%BE/img.png&quot;</a>);</p>\n</blockquote>\n<h3 id=\"精灵图减少请求\"><a href=\"#精灵图减少请求\" class=\"headerlink\" title=\"精灵图减少请求\"></a>精灵图减少请求</h3><p>每一张图片都会发起一次请求，所以对于一些常用的小图标，我们一般都会将其做成一张图，然后通过定位的方式，显示出其中的一部分，这样的图片就是精灵图。</p>\n<h3 id=\"服务器开通gzip\"><a href=\"#服务器开通gzip\" class=\"headerlink\" title=\"服务器开通gzip\"></a>服务器开通gzip</h3><p>gzip可以直接再服务端的时候，就对要传输的数据先进行一次压缩，减少传输数据的体积，这个概念跟下载游戏文件的时候一般下载下来的都是压缩包是类似的，然后再客户端的浏览器上，会进行解压处理，这样就大大减少了文件体积，减少的传输速度。</p>\n<p>由于是采用的vue-cli 3.0 ，查阅网上资料发现，通过3.0去构建的项目，是默认的开启gzip的，那么只需要再服务器上的配置文件修改。</p>\n<p>采用的是nginx，所以找到对应的conf文件(/usr/local/nginx/conf)，修改如下：</p>\n<blockquote>\n<p>http {</p>\n<p>  gzip on;</p>\n<p>  gzip_min_length 1k;</p>\n<p>  gzip_buffers 4 16k;</p>\n<p>  #gzip_http_version 1.0;</p>\n<p>  gzip_comp_level 6;</p>\n<p>  gzip_types text/plain application/x-javascript text/css application/xml text/javascript application/x-httpd-php image/jpeg image/gif image/png;</p>\n<p>  gzip_vary off;</p>\n<p>  gzip_disable “MSIE [1-6].“;</p>\n<p>}</p>\n</blockquote>\n<p>再次请求，可以通过谷歌浏览器-F12-network-点击任意文件-header内的request header中，可以看到：</p>\n<p><strong>Accept-Encoding</strong>：gzip</p>\n<p>已经是通过了zip压缩的文件了，体积明显缩小</p>\n<h3 id=\"路由懒加载\"><a href=\"#路由懒加载\" class=\"headerlink\" title=\"路由懒加载\"></a>路由懒加载</h3><p>单页面应用是会再首页加载的时候将所有的页面直接加载完成，所以会出现首页加载较长的情况，这样就需要采用懒加载，当页面被点击的时候再加载。那么，配置如下：</p>\n<p>在router中配置如下：</p>\n<blockquote>\n<p>export default {</p>\n<p>  path: ‘/home’,</p>\n<p>  component: () =&gt; import(‘@/views/Home.vue’)</p>\n<p>}</p>\n</blockquote>\n<p>将其component修改成了() =&gt; import(‘@/views/Home.vue’)。</p>\n<p>但是现在<strong>路由懒加载不生效</strong>，因为cli 3.0 是直接默认会把所有通过import()按需加载的javascript文件加上 prefetch 。</p>\n<p><strong>关闭prefetch:</strong> (官网示例)</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">// vue.config.js</span><br><span class=\"line\">module.exports = &#123;</span><br><span class=\"line\">  chainWebpack: config =&gt; &#123;</span><br><span class=\"line\">    // 移除 prefetch 插件</span><br><span class=\"line\">    config.plugins.delete(&#x27;prefetch&#x27;)</span><br><span class=\"line\"> </span><br><span class=\"line\">    // 或者</span><br><span class=\"line\">    // 修改它的选项：</span><br><span class=\"line\">    config.plugin(&#x27;prefetch&#x27;).tap(options =&gt; &#123;</span><br><span class=\"line\">      options[0].fileBlacklist = options[0].fileBlacklist || []</span><br><span class=\"line\">      options[0].fileBlacklist.push(/myasyncRoute(.)+?\\.js$/)</span><br><span class=\"line\">      return options</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n\n<p>prefetch链接会消耗宽带，如果是在移动端，而且存在大量的chunk，那么可以关掉 prefetch 链接，手动选择要提前获取的代码区块。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//手动选定要提前获取的代码</span><br><span class=\"line\">import(webpackPrefetch: true, &#x27;./someAsyncComponent.vue&#x27;)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"vue-cli上线-代理接口报404-修改conf\"><a href=\"#vue-cli上线-代理接口报404-修改conf\" class=\"headerlink\" title=\"vue-cli上线 代理接口报404 修改conf\"></a>vue-cli上线 代理接口报404 修改conf</h2><p>前言： 项目使用vue-cli直接生成项目，然后使用proxyTable接口代理后， 在本地调用后台接口，一切正常，但是后期打包上线时，发现页面接口报404，后找到解决办法为：</p>\n<p>找到nginx 的conf文件，打开后，修改里面的配置如下：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">    server &#123;</span><br><span class=\"line\">        listen       80;//监听80端口</span><br><span class=\"line\">        server_name  localhost;</span><br><span class=\"line\">        location / &#123;</span><br><span class=\"line\">            root   html;</span><br><span class=\"line\">            index  index.html index.htm;</span><br><span class=\"line\">            try_files $uri $uri/ /index.html; //vue单页面应用，不能刷新，所有会设置这个，避免404</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        location /v2/ &#123;</span><br><span class=\"line\">            proxy_set_header X-Real-IP $remote_addr;</span><br><span class=\"line\">            proxy_pass  http://douban.uieee.com;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        error_page   500 502 503 504  /50x.html;</span><br><span class=\"line\">        location = /50x.html &#123;</span><br><span class=\"line\">            root   html;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>里面主要添加的配置为：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">location /v2/ &#123;</span><br><span class=\"line\">    proxy_set_header X-Real-IP $remote_addr;</span><br><span class=\"line\">    proxy_pass  http://douban.uieee.com;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>这个/v2/监听，实际上就是我api调用的名字，这个可以在你的vue.config.js里可以去设置：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">module.exports = &#123;</span><br><span class=\"line\">    //axios域代理，解决axios跨域问题</span><br><span class=\"line\">    devServer: &#123;</span><br><span class=\"line\">        proxy: &#123;</span><br><span class=\"line\">            &#x27;/v2&#x27;: &#123;</span><br><span class=\"line\">                target: &#x27;https://douban.uieee.com&#x27;,</span><br><span class=\"line\">                changeOrigin: true,</span><br><span class=\"line\">                ws: true,</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>我请求的api格式如下：</p>\n<blockquote>\n<p><a href=\"https://douban.uieee.com/v2/movie/top250?start=0&amp;count=12\">https://douban.uieee.com/v2/movie/top250?start=0&amp;count=12</a></p>\n</blockquote>\n<p>提供的api文档里面可以看到，所有的api都带有一个相同的字符/v2/。</p>\n<p>所以以这个字符为关键字来修改代理。</p>\n<meta name=\"referrer\" content=\"no-referrer\"/>\n\n\n<h2 id=\"初始化设置和环境搭建（neginx-centOS，vue的环境搭建）-GitHub相关\"><a href=\"#初始化设置和环境搭建（neginx-centOS，vue的环境搭建）-GitHub相关\" class=\"headerlink\" title=\"初始化设置和环境搭建（neginx,centOS，vue的环境搭建）/GitHub相关\"></a>初始化设置和环境搭建（neginx,centOS，vue的环境搭建）/GitHub相关</h2><h3 id=\"安装node-js\"><a href=\"#安装node-js\" class=\"headerlink\" title=\"安装node.js\"></a>安装node.js</h3><p>一般来讲, 可以用以下三种方式安装 Node.js：</p>\n<ul>\n<li>通过安装包安装(Windows 和 Mac 用户推荐)</li>\n<li>通过源码编译安装(Linux用户推荐)</li>\n<li>在 Linux 下可以通过 yum|apt-get 安装</li>\n</ul>\n<ol>\n<li><p>通过安装包安装：</p>\n</li>\n<li><p>源码编译安装：</p>\n<!-- more -->\n\n<p>Linux用户：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -O https://nodejs.org/dist/v6.10.3/node-v6.10.3.tar.gz</span><br><span class=\"line\">tar -xzvf node-v6.10.3.tar.gz</span><br><span class=\"line\">cd  node-v6.10.3</span><br><span class=\"line\">./configure</span><br><span class=\"line\">make</span><br><span class=\"line\">make install</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h3 id=\"安装cnpm镜像（可选择）\"><a href=\"#安装cnpm镜像（可选择）\" class=\"headerlink\" title=\"安装cnpm镜像（可选择）\"></a>安装cnpm镜像（可选择）</h3><p>   <a href=\"https://npm.taobao.org/\">淘宝 NPM 镜像</a>是一个完整 npmjs.org 镜像，你可以用此代替官方版本(只读)，同步频率目前为 10分钟 一次以保证尽量与官方服务同步。</p>\n   <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g cnpm --registry=https://registry.npm.taobao.org </span><br><span class=\"line\">cnpm install [name]</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"使用vue-cli\"><a href=\"#使用vue-cli\" class=\"headerlink\" title=\"使用vue-cli\"></a>使用vue-cli</h3><ol>\n<li><p>安装</p>\n<p>如果用npm下载速度慢，可以使用cnpm.</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g vue-cli</span><br></pre></td></tr></table></figure></li>\n<li><p>init初始模板</p>\n<p>目前可用的模板包括：</p>\n<ul>\n<li><p><a href=\"https://github.com/vuejs-templates/browserify\">browserify</a>–全功能的Browserify + vueify，包括热加载，静态检测，单元测试</p>\n</li>\n<li><p><a href=\"https://github.com/vuejs-templates/browserify-simple\">browserify-simple</a>–一个简易的Browserify + vueify，以便于快速开始。</p>\n</li>\n<li><p><a href=\"https://github.com/vuejs-templates/webpack\">webpack</a>–全功能的Webpack + vueify，包括热加载，静态检测，单元测试</p>\n</li>\n<li><p><a href=\"https://github.com/vuejs-templates/webpack-simple\">webpack-simple</a>–一个简易的Webpack + vueify，以便于快速开始。</p>\n</li>\n<li><p><a href=\"https://github.com/vuejs-templates/simple\">simple</a> - 单个HTML文件中最简单的Vue设置</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vue init &lt;template-name&gt; &lt;project-name&gt;</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li><p>运行项目</p>\n<ol>\n<li>我们的项目选择webpack,使用以下命令:</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vue init webpack vue-todos</span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li><p>输入下面的命令就可以运行这个项目了:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd vue-todos</span><br><span class=\"line\">npm install</span><br><span class=\"line\">npm run dev</span><br></pre></td></tr></table></figure></li>\n</ol>\n</li>\n</ol>\n<h2 id=\"CentOS7安装Nginx\"><a href=\"#CentOS7安装Nginx\" class=\"headerlink\" title=\"CentOS7安装Nginx\"></a>CentOS7安装Nginx</h2><h2 id=\"安装所需环境\"><a href=\"#安装所需环境\" class=\"headerlink\" title=\"安装所需环境\"></a>安装所需环境</h2><p>Nginx 是 C语言 开发，建议在 Linux 上运行，当然，也可以安装 Windows 版本，本篇则使用 <a href=\"http://www.linuxidc.com/topicnews.aspx?tid=14\">CentOS</a> 7 作为安装环境。</p>\n<p>顺序如下：</p>\n<ol>\n<li><p><strong>gcc 安装</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install gcc-c++</span><br></pre></td></tr></table></figure></li>\n<li><p><strong>PCRE pcre-devel 安装</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install -y pcre pcre-devel</span><br></pre></td></tr></table></figure></li>\n<li><p><strong>zlib 安装</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install -y zlib zlib-devel</span><br></pre></td></tr></table></figure></li>\n<li><p><strong>OpenSSL 安装</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install -y openssl openssl-devel</span><br></pre></td></tr></table></figure></li>\n<li><p>下载<code>.tar.gz</code>安装包</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget -c https://nginx.org/download/nginx-1.12.0.tar.gz</span><br></pre></td></tr></table></figure></li>\n<li><p>解压</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar -zxvf nginx-1.12.0.tar.gz</span><br><span class=\"line\">cd nginx-1.12.0</span><br></pre></td></tr></table></figure></li>\n<li><p><strong>配置</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./configure</span><br></pre></td></tr></table></figure></li>\n<li><p>编译安装</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">make</span><br><span class=\"line\">make install</span><br></pre></td></tr></table></figure></li>\n<li><p>启动、停止nginx</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /usr/local/nginx/sbin/</span><br><span class=\"line\">./nginx </span><br><span class=\"line\">./nginx -s stop</span><br><span class=\"line\">./nginx -s quit</span><br><span class=\"line\">./nginx -s reload</span><br></pre></td></tr></table></figure></li>\n<li><p>重启 <strong>nginx</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /usr/local/nginx/sbin/</span><br><span class=\"line\">./nginx -s reload</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h2 id=\"CSS-Tools-Reset-CSS重置css\"><a href=\"#CSS-Tools-Reset-CSS重置css\" class=\"headerlink\" title=\"CSS Tools: Reset CSS重置css\"></a>CSS Tools: Reset CSS重置css</h2><p>浏览器自带的css属性，一般需要重置，记录如下：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/* http://meyerweb.com/eric/tools/css/reset/ </span><br><span class=\"line\">   v2.0 | 20110126</span><br><span class=\"line\">   License: none (public domain)</span><br><span class=\"line\">*/</span><br><span class=\"line\"></span><br><span class=\"line\">html, body, div, span, applet, object, iframe,</span><br><span class=\"line\">h1, h2, h3, h4, h5, h6, p, blockquote, pre,</span><br><span class=\"line\">a, abbr, acronym, address, big, cite, code,</span><br><span class=\"line\">del, dfn, em, img, ins, kbd, q, s, samp,</span><br><span class=\"line\">small, strike, strong, sub, sup, tt, var,</span><br><span class=\"line\">b, u, i, center,</span><br><span class=\"line\">dl, dt, dd, ol, ul, li,</span><br><span class=\"line\">fieldset, form, label, legend,</span><br><span class=\"line\">table, caption, tbody, tfoot, thead, tr, th, td,</span><br><span class=\"line\">article, aside, canvas, details, embed, </span><br><span class=\"line\">figure, figcaption, footer, header, hgroup, </span><br><span class=\"line\">menu, nav, output, ruby, section, summary,</span><br><span class=\"line\">time, mark, audio, video &#123;</span><br><span class=\"line\">\tmargin: 0;</span><br><span class=\"line\">\tpadding: 0;</span><br><span class=\"line\">\tborder: 0;</span><br><span class=\"line\">\tfont-size: 100%;</span><br><span class=\"line\">\tfont: inherit;</span><br><span class=\"line\">\tvertical-align: baseline;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">/* HTML5 display-role reset for older browsers */</span><br><span class=\"line\">article, aside, details, figcaption, figure, </span><br><span class=\"line\">footer, header, hgroup, menu, nav, section &#123;</span><br><span class=\"line\">\tdisplay: block;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">body &#123;</span><br><span class=\"line\">\tline-height: 1;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">ol, ul &#123;</span><br><span class=\"line\">\tlist-style: none;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">blockquote, q &#123;</span><br><span class=\"line\">\tquotes: none;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">blockquote:before, blockquote:after,</span><br><span class=\"line\">q:before, q:after &#123;</span><br><span class=\"line\">\tcontent: &#x27;&#x27;;</span><br><span class=\"line\">\tcontent: none;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">table &#123;</span><br><span class=\"line\">\tborder-collapse: collapse;</span><br><span class=\"line\">\tborder-spacing: 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"vs-code插件记录-更新中\"><a href=\"#vs-code插件记录-更新中\" class=\"headerlink\" title=\"vs code插件记录(更新中)\"></a>vs code插件记录(更新中)</h2><p>vscode会使用比较多的插件，记录：</p>\n<ol>\n<li>Auto Close Tag（补充标签）</li>\n<li>Auto Rename Tag（修改标签）</li>\n<li>Chinese (Simplified) Language Pack for VS Code</li>\n<li>Debugger for Chrome</li>\n<li>Open in Browser</li>\n<li>Prettier（格式化）</li>\n<li>Vetur（智能提示补全代码）</li>\n<li>vscode-icons（美化icon）</li>\n<li>Bracket Pair Colorizer（括号颜色，快速识别括号位置）</li>\n</ol>\n<h3 id=\"记录：\"><a href=\"#记录：\" class=\"headerlink\" title=\"记录：\"></a>记录：</h3><ul>\n<li><p>Vetur</p>\n<p>使用scss的时候，会遇到vetur报错的情况：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;scss&quot;</span> <span class=\"attr\">scoped</span>&gt;</span></span><br><span class=\"line\">    @keyframes glitch-one &#123;</span><br><span class=\"line\">  @for $i from 20 to 30 &#123;</span><br><span class=\"line\">    #&#123;$i / 2&#125;% &#123;</span><br><span class=\"line\">      left: #&#123;randomNum(200, -100)&#125;px;</span><br><span class=\"line\">      clip-path: inset(#&#123;randomNum(150, 30)&#125;px 0 #&#123;randomNum(150, 30)&#125;px);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n\n<p>比如上面的这种情况，就会有红色波浪线提示，但是在浏览器中是正确的。所以需要配置如下：</p>\n<ol>\n<li><p>文件》首选项》设置</p>\n</li>\n<li><p>右上角三个选项的第一个（打开设置Json）</p>\n</li>\n<li><p>在大括号内添加最后四行（跟vetur相关的配置）</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    &quot;workbench.iconTheme&quot;: &quot;vscode-icons&quot;,</span><br><span class=\"line\">    &quot;[html]&quot;: &#123;</span><br><span class=\"line\">        &quot;editor.defaultFormatter&quot;: &quot;vscode.html-language-features&quot;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &quot;open-in-browser.default&quot;: &quot;chrome&quot;,</span><br><span class=\"line\">    &quot;explorer.confirmDragAndDrop&quot;: false,</span><br><span class=\"line\">    &quot;window.zoomLevel&quot;: 1,</span><br><span class=\"line\">    &quot;[javascript]&quot;: &#123;</span><br><span class=\"line\">        &quot;editor.defaultFormatter&quot;: &quot;vscode.typescript-language-features&quot;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &quot;explorer.confirmDelete&quot;: false,</span><br><span class=\"line\">    &quot;vsicons.dontShowNewVersionMessage&quot;: true,</span><br><span class=\"line\">    &quot;editor.fontSize&quot;: 20,</span><br><span class=\"line\">    &quot;[css]&quot;: &#123;</span><br><span class=\"line\">        &quot;editor.defaultFormatter&quot;: &quot;esbenp.prettier-vscode&quot;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &quot;vetur.validation.template&quot;: false,</span><br><span class=\"line\">    &quot;vetur.experimental.templateInterpolationService&quot;: false,</span><br><span class=\"line\">    &quot;vetur.validation.style&quot;: false,</span><br><span class=\"line\">    &quot;vetur.validation.script&quot;: false,</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ol>\n</li>\n</ul>\n<h2 id=\"GitHub相关问题\"><a href=\"#GitHub相关问题\" class=\"headerlink\" title=\"GitHub相关问题\"></a>GitHub相关问题</h2><p>GitHub是一个面向<a href=\"https://baike.baidu.com/item/%E5%BC%80%E6%BA%90/20720669\">开源</a>及私有<a href=\"https://baike.baidu.com/item/%E8%BD%AF%E4%BB%B6/12053\">软件</a>项目的托管平台，因为只支持git 作为唯一的版本库格式进行托管，故名GitHub。</p>\n<h2 id=\"初始设置github\"><a href=\"#初始设置github\" class=\"headerlink\" title=\"初始设置github\"></a>初始设置github</h2><p>记录开始使用GitHub中三点注意：</p>\n<ol>\n<li><p>注册账号会验证邮箱，而163邮箱不能接受验证邮件</p>\n<p><em><strong>注意</strong></em>：注册需要设置邮箱，需要选用qq邮箱或者gmail邮箱，163邮箱发现不能接收到GitHub的邮件！</p>\n<p>新的库，需要设置sshkeys</p>\n<ol>\n<li><p>检查是否有sshkeys</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">~/.ssh</span><br></pre></td></tr></table></figure></li>\n<li><p>创建ssh</p>\n<p>首先创建一个SSH，在Git Bash中输入</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ssh-keygen -t rsa -C “你的邮箱”</span><br></pre></td></tr></table></figure>\n\n<p>然后他就会显示这两行</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Generating public/private rsa key pair.</span><br><span class=\"line\">Enter file in which to save the key (/c/Users/16627/.ssh/id_rsa):</span><br></pre></td></tr></table></figure>\n\n<p>这是让你输入一个文件名，用于保存刚才生成的 SSH key 代码。如果你不输入，直接回车，那么就会默认生成id_rsa和id_rsa.pub两个秘钥文件（如下提示）。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Created directory ‘/c/Users/16627/.ssh’.</span><br></pre></td></tr></table></figure>\n\n<p>紧接着又会提示你</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Enter passphrase (empty for no passphrase):</span><br><span class=\"line\">Enter same passphrase again:</span><br></pre></td></tr></table></figure>\n\n<p>接着又会提示你输入两次密码（该密码是你push文件的时候要输入的密码，而不是github管理者的密码），当然你还可以不输入密码，直接按回车。那么fetch和push的时候就不需要输入密码。</p>\n<p><img src=\"https://img-blog.csdn.net/20180118114145818?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzY2NjcxNzA=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast\" alt=\"chegngong\"></p>\n<p>已经创建成功</p>\n<p><img src=\"https://img-blog.csdn.net/20180118115923234?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzY2NjcxNzA=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast\" alt=\"chenggong\"></p>\n</li>\n<li><p>添加ssh到GitHub</p>\n<p>按照以下的步骤操作：</p>\n<p><img src=\"https://img-blog.csdn.net/20180118120316317?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzY2NjcxNzA=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast\" alt=\"1\"></p>\n<p><img src=\"https://img-blog.csdn.net/20180118120349241?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzY2NjcxNzA=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast\" alt=\"2\"></p>\n<p><img src=\"https://img-blog.csdn.net/20180118120556118?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzY2NjcxNzA=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast\" alt=\"3\"></p>\n<p>title随便给他起个名字就好。然后是key，这时候你要打开你刚才在电脑上的SSH key。刚才提示你建立的那段文字有SSH key的地址，按照地址找到你的文件，用记事本<strong>打开id_rsa.pub文件，全选其中的内容粘贴到网页的Key中即可。</strong></p>\n<p><img src=\"https://img-blog.csdn.net/20180118121323658?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzY2NjcxNzA=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast\" alt=\"4\"></p>\n<p><img src=\"https://img-blog.csdn.net/20180118121457269?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzY2NjcxNzA=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast\" alt=\"5\"></p>\n<p><strong>然后你就会受到建立成功的邮件了。</strong></p>\n<p><img src=\"https://img-blog.csdn.net/20180118121751176?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzY2NjcxNzA=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast\" alt=\"6\"></p>\n</li>\n<li><p>测试一下ssh key</p>\n<p>在git Bash 中输入以下代码：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh -T git@github.com</span><br><span class=\"line\">注意是git@github.com，不是你的邮箱。</span><br></pre></td></tr></table></figure>\n\n<p>然后会提示你：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">The authenticity of host ‘github.com (192.30.255.112)’ can’t be established.</span><br><span class=\"line\">RSA key fingerprint is SHA256:nThbg6kXUpJWGl7E1IGOCspRomTxdCARLviKw6E5SY8.</span><br><span class=\"line\">Are you sure you want to continue connecting (yes/no)?</span><br></pre></td></tr></table></figure>\n\n<p>正常提示，你只需要YES就可以。如果你创建 SSH key 的时候设置了密码，接下来就会提示你输入密码，如果你没设置密码会提示你:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Warning: Permanently added ‘github.com,192.30.255.112’ (RSA) to the list of known hosts.</span><br><span class=\"line\">Hi “用户名”! You’ve successfully authenticated, but GitHub does not provide shell access.</span><br></pre></td></tr></table></figure></li>\n</ol>\n</li>\n<li><p>需要设置config.name和config.email</p>\n<ul>\n<li><p>按照以下的步骤操作</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global user.name &quot;yourname&quot; 设置用户名</span><br><span class=\"line\">git config --global user.email myemail@qq.com 设置用户邮箱</span><br><span class=\"line\">git config --list 查看git设置列表信息</span><br><span class=\"line\">git config user.name  查看用户名</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n</ol>\n<h2 id=\"git推动GitHub提示faild\"><a href=\"#git推动GitHub提示faild\" class=\"headerlink\" title=\"git推动GitHub提示faild\"></a>git推动GitHub提示faild</h2><p>在添加远程库的时候一直验证不成功，一直提示failed to push some refs to git的问题，经过网上查找终于解决了这个问题。</p>\n<p>主要问题指向了README.md文件</p>\n<h3 id=\"git步骤如下\"><a href=\"#git步骤如下\" class=\"headerlink\" title=\"git步骤如下\"></a>git步骤如下</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. git add . //添加到暂存区</span><br><span class=\"line\">2. git commit -m &quot;备注内容&quot; //添加到head</span><br><span class=\"line\">3. git push -u origin master //添加到远程仓库</span><br></pre></td></tr></table></figure>\n\n<p>其中第三步出错，提示ailed to push some refs to git</p>\n<h3 id=\"解决\"><a href=\"#解决\" class=\"headerlink\" title=\"解决\"></a>解决</h3><p>出现错误的主要原因是github中的README.md文件不在本地代码目录中，</p>\n<p>可以通过如下命令进行代码合并【注：pull=fetch+merge]</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git pull --rebase origin master</span><br></pre></td></tr></table></figure>\n\n<p>执行上面代码后可以看到本地代码库中多了README.md文件</p>\n<p>此时再执行语句 git push -u origin master即可完成代码上传到github</p>\n<meta name=\"referrer\" content=\"no-referrer\"/>\n\n<h2 id=\"keep-alive-的使用与周期\"><a href=\"#keep-alive-的使用与周期\" class=\"headerlink\" title=\"keep-alive 的使用与周期\"></a>keep-alive 的使用与周期</h2><h3 id=\"使用keep-alive的时机\"><a href=\"#使用keep-alive的时机\" class=\"headerlink\" title=\"使用keep-alive的时机\"></a>使用keep-alive的时机</h3><p>在搭建 vue 项目时，有某些组件没必要多次渲染，所以需要将组件在内存中进行‘持久化，此时 keep-alive 便可以派上用场了。keep-alive  可以使被包含的组件状态维持不变，即便是组件切换了，其内的状态依旧维持在内存之中。在下一次显示时，也不会重现渲染。</p>\n<blockquote>\n<p>PS：<code>与</code>相似，只是一个抽象组件，它不会在DOM树中渲染(真实或者虚拟都不会)，也不在父组件链中存在，比如：你永远在 <code>this.$parent</code> 中找不到 <code>keep-alive</code> 。</p>\n</blockquote>\n<!-- more -->\n\n<h3 id=\"配合router-view去使用\"><a href=\"#配合router-view去使用\" class=\"headerlink\" title=\"配合router-view去使用\"></a>配合router-view去使用</h3><p>有些时候可能需要将整个路由页面一切缓存下来，也就是将 `` 进行缓存。这种使用场景还是蛮多的</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;keep-alive&gt;</span><br><span class=\"line\">    <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">router-view</span> <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;$router.meta.keepAlive&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">router-view</span>&gt;</span></span></span><br><span class=\"line\">&lt;/keep-alive&gt;</span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">router-view</span> <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;!$router.meta.keepAlive&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">router-view</span>&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//router配置</span></span><br><span class=\"line\"><span class=\"keyword\">new</span> <span class=\"title class_\">Router</span>(&#123;</span><br><span class=\"line\">    <span class=\"attr\">routes</span>: [</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"attr\">name</span>: <span class=\"string\">&#x27;a&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">path</span>: <span class=\"string\">&#x27;/a&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">component</span>: A,</span><br><span class=\"line\">            <span class=\"attr\">meta</span>: &#123;</span><br><span class=\"line\">                <span class=\"attr\">keepAlive</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"attr\">name</span>: <span class=\"string\">&#x27;b&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">path</span>: <span class=\"string\">&#x27;/b&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">component</span>: B</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"keep-alive-生命周期和新属性\"><a href=\"#keep-alive-生命周期和新属性\" class=\"headerlink\" title=\"keep-alive 生命周期和新属性\"></a>keep-alive 生命周期和新属性</h3><h4 id=\"生命周期\"><a href=\"#生命周期\" class=\"headerlink\" title=\"生命周期\"></a>生命周期</h4><p>被包含在 `` 中创建的组件，会多出两个生命周期的钩子: <code>activated</code> 与 <code>deactivated</code></p>\n<ul>\n<li>activated</li>\n</ul>\n<p>在组件被激活时调用，<strong>在组件第一次渲染时也会被调用</strong>，之后每次keep-alive激活时被调用。</p>\n<ul>\n<li>deactivated</li>\n</ul>\n<p>在组件被停用时调用。</p>\n<blockquote>\n<p>注意：只有组件被 <code>keep-alive</code> 包裹时，这两个生命周期才会被调用，如果作为正常组件使用，是不会被调用，以及在 <code>2.1.0</code> 版本之后，使用 <code>exclude</code> 排除之后，就算被包裹在 <code>keep-alive</code> 中，这两个钩子依然不会被调用！另外在服务端渲染时此钩子也不会被调用的。</p>\n</blockquote>\n<h4 id=\"新属性\"><a href=\"#新属性\" class=\"headerlink\" title=\"新属性\"></a>新属性</h4><p>在vue <code>2.1.0</code> 版本之后，<code>keep-alive</code> 新加入了两个属性: <code>include</code>(包含的组件缓存生效) 与 <code>exclude</code>(排除的组件不缓存，优先级大于include) 。</p>\n<p><code>include</code> 和 <code>exclude</code> 属性允许组件有条件地缓存。二者都可以用逗号分隔字符串、正则表达式或一个数组来表示</p>\n<p>当使用正则或者是数组时，一定要使用 <code>v-bind</code> !</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- 逗号分隔字符串，只有组件a与b被缓存。这样使用场景变得更有意义了 --&gt;</span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">keep-alive</span> <span class=\"attr\">include</span>=<span class=\"string\">&quot;a,b&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">  <span class=\"tag\">&lt;<span class=\"name\">component</span> <span class=\"attr\">:is</span>=<span class=\"string\">&quot;view&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">component</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;/<span class=\"name\">keep-alive</span>&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!-- 正则表达式 (需要使用 v-bind，符合匹配规则的都会被缓存) --&gt;</span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">keep-alive</span> <span class=\"attr\">:include</span>=<span class=\"string\">&quot;/a|b/&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">  <span class=\"tag\">&lt;<span class=\"name\">component</span> <span class=\"attr\">:is</span>=<span class=\"string\">&quot;view&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">component</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;/<span class=\"name\">keep-alive</span>&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!-- <span class=\"title class_\">Array</span> (需要使用 v-bind，被包含的都会被缓存) --&gt;</span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">keep-alive</span> <span class=\"attr\">:include</span>=<span class=\"string\">&quot;[&#x27;a&#x27;, &#x27;b&#x27;]&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">  <span class=\"tag\">&lt;<span class=\"name\">component</span> <span class=\"attr\">:is</span>=<span class=\"string\">&quot;view&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">component</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;/<span class=\"name\">keep-alive</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>有了include之后，再与 <code>router-view</code> 一起使用时便方便许多了:</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- 一个include解决了，不需要多写一个标签，也不需要在路由元中添加keepAlive了 --&gt;</span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">keep-alive</span> <span class=\"attr\">include</span>=<span class=\"string\">&#x27;a&#x27;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;<span class=\"name\">router-view</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">router-view</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;/<span class=\"name\">keeo-alive</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"注意\"><a href=\"#注意\" class=\"headerlink\" title=\"注意\"></a>注意</h3><ol>\n<li><p>keeo-alive先匹配被包含组件的 <code>name</code> 字段，如果 <code>name</code> 不可用，则匹配当前组件 <code>components</code> 配置中的注册名称。</p>\n</li>\n<li><p>keeo-alive不会在函数式组件中正常工作，因为它们没有缓存实例。</p>\n</li>\n<li><p>当匹配条件同时在 <code>include</code> 与 <code>exclude</code> 存在时，以 <code>exclude</code> 优先级最高(当前vue 2.4.2 version)。比如：包含于排除同时匹配到了组件A，那组件A不会被缓存。</p>\n</li>\n<li><p>包含在 keeo-alive 中，但符合 <code>exclude</code> ，不会调用<code>activated</code> 和 <code>deactivated</code>。</p>\n</li>\n<li><p><strong>设置了<code>keep-alive</code>,这个时候不会触发生命周期的钩子函数。</strong></p>\n<p>当页面内的数据没有发生变化时，页面内的操作比如跳转到另一个路由，是不会去经过生命周期函数的，比如：desdtroy函数等。</p>\n<p>它会直接在进入的时候触发<code>activated</code> 和离开的时候触发 deactivated。</p>\n<p>所以，如果是有涉及到之前放入mouted周期中的函数，可以将其放入activated，放入desdtroy周期的函数可以放入deactivated。</p>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"<meta name=\"referrer\" content=\"no-referrer\"/>\n\n<h2 id=\"vue项目上线优化记录\"><a href=\"#vue项目上线优化记录\" class=\"headerlink\" title=\"vue项目上线优化记录\"></a>vue项目上线优化记录</h2><p>项目上线，没有进行备案，所以需要架设于境外服务器，所有访问速度较慢，现在记录所作优化步骤：</p>\n<ol>\n<li>引用线上地址</li>\n<li>将静态资源放置于网络存储</li>\n<li>精灵图减少请求</li>\n<li>服务器开通gzip</li>\n<li>路由懒加载</li>\n</ol>","more":"<h3 id=\"引用线上地址\"><a href=\"#引用线上地址\" class=\"headerlink\" title=\"引用线上地址\"></a>引用线上地址</h3><p>使用的是bootstrap，之前是通过下载到本地，然后引用，当build的时候，会将其一并打包，所以导致js文件过大，所以直接将引用地址改为网络请求，这样，打包后的文件会减小很多。</p>\n<blockquote>\n<script src=\"https://cdn.staticfile.org/jquery/3.2.1/jquery.min.js\"></script>\n<script src=\"https://cdn.staticfile.org/popper.js/1.15.0/umd/popper.min.js\"></script>\n<script src=\"https://cdn.staticfile.org/twitter-bootstrap/4.3.1/js/bootstrap.min.js\"></script>\n<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap@3.3.7/dist/css/bootstrap.min.css\">\n</blockquote>\n<h3 id=\"将静态资源放置于网络存储\"><a href=\"#将静态资源放置于网络存储\" class=\"headerlink\" title=\"将静态资源放置于网络存储\"></a>将静态资源放置于网络存储</h3><p>网站的大部分图片都不会改动，所以将其上传到oss网络存储然后直接引用网络地址，这里采用的是北京的oss，这样从服务器请求的时候是从北京地区请求的图片，相对速度会快一些。</p>\n<blockquote>\n<p>background-image: url(“<a href=\"https://limengtupian.oss-cn-beijing.aliyuncs.com/%E9%A6%96%E9%A1%B5%E7%B2%BE%E7%81%B5%E5%9B%BE/img.png&quot;\">https://limengtupian.oss-cn-beijing.aliyuncs.com/%E9%A6%96%E9%A1%B5%E7%B2%BE%E7%81%B5%E5%9B%BE/img.png&quot;</a>);</p>\n</blockquote>\n<h3 id=\"精灵图减少请求\"><a href=\"#精灵图减少请求\" class=\"headerlink\" title=\"精灵图减少请求\"></a>精灵图减少请求</h3><p>每一张图片都会发起一次请求，所以对于一些常用的小图标，我们一般都会将其做成一张图，然后通过定位的方式，显示出其中的一部分，这样的图片就是精灵图。</p>\n<h3 id=\"服务器开通gzip\"><a href=\"#服务器开通gzip\" class=\"headerlink\" title=\"服务器开通gzip\"></a>服务器开通gzip</h3><p>gzip可以直接再服务端的时候，就对要传输的数据先进行一次压缩，减少传输数据的体积，这个概念跟下载游戏文件的时候一般下载下来的都是压缩包是类似的，然后再客户端的浏览器上，会进行解压处理，这样就大大减少了文件体积，减少的传输速度。</p>\n<p>由于是采用的vue-cli 3.0 ，查阅网上资料发现，通过3.0去构建的项目，是默认的开启gzip的，那么只需要再服务器上的配置文件修改。</p>\n<p>采用的是nginx，所以找到对应的conf文件(/usr/local/nginx/conf)，修改如下：</p>\n<blockquote>\n<p>http {</p>\n<p>  gzip on;</p>\n<p>  gzip_min_length 1k;</p>\n<p>  gzip_buffers 4 16k;</p>\n<p>  #gzip_http_version 1.0;</p>\n<p>  gzip_comp_level 6;</p>\n<p>  gzip_types text/plain application/x-javascript text/css application/xml text/javascript application/x-httpd-php image/jpeg image/gif image/png;</p>\n<p>  gzip_vary off;</p>\n<p>  gzip_disable “MSIE [1-6].“;</p>\n<p>}</p>\n</blockquote>\n<p>再次请求，可以通过谷歌浏览器-F12-network-点击任意文件-header内的request header中，可以看到：</p>\n<p><strong>Accept-Encoding</strong>：gzip</p>\n<p>已经是通过了zip压缩的文件了，体积明显缩小</p>\n<h3 id=\"路由懒加载\"><a href=\"#路由懒加载\" class=\"headerlink\" title=\"路由懒加载\"></a>路由懒加载</h3><p>单页面应用是会再首页加载的时候将所有的页面直接加载完成，所以会出现首页加载较长的情况，这样就需要采用懒加载，当页面被点击的时候再加载。那么，配置如下：</p>\n<p>在router中配置如下：</p>\n<blockquote>\n<p>export default {</p>\n<p>  path: ‘/home’,</p>\n<p>  component: () =&gt; import(‘@/views/Home.vue’)</p>\n<p>}</p>\n</blockquote>\n<p>将其component修改成了() =&gt; import(‘@/views/Home.vue’)。</p>\n<p>但是现在<strong>路由懒加载不生效</strong>，因为cli 3.0 是直接默认会把所有通过import()按需加载的javascript文件加上 prefetch 。</p>\n<p><strong>关闭prefetch:</strong> (官网示例)</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">// vue.config.js</span><br><span class=\"line\">module.exports = &#123;</span><br><span class=\"line\">  chainWebpack: config =&gt; &#123;</span><br><span class=\"line\">    // 移除 prefetch 插件</span><br><span class=\"line\">    config.plugins.delete(&#x27;prefetch&#x27;)</span><br><span class=\"line\"> </span><br><span class=\"line\">    // 或者</span><br><span class=\"line\">    // 修改它的选项：</span><br><span class=\"line\">    config.plugin(&#x27;prefetch&#x27;).tap(options =&gt; &#123;</span><br><span class=\"line\">      options[0].fileBlacklist = options[0].fileBlacklist || []</span><br><span class=\"line\">      options[0].fileBlacklist.push(/myasyncRoute(.)+?\\.js$/)</span><br><span class=\"line\">      return options</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n\n<p>prefetch链接会消耗宽带，如果是在移动端，而且存在大量的chunk，那么可以关掉 prefetch 链接，手动选择要提前获取的代码区块。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//手动选定要提前获取的代码</span><br><span class=\"line\">import(webpackPrefetch: true, &#x27;./someAsyncComponent.vue&#x27;)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"vue-cli上线-代理接口报404-修改conf\"><a href=\"#vue-cli上线-代理接口报404-修改conf\" class=\"headerlink\" title=\"vue-cli上线 代理接口报404 修改conf\"></a>vue-cli上线 代理接口报404 修改conf</h2><p>前言： 项目使用vue-cli直接生成项目，然后使用proxyTable接口代理后， 在本地调用后台接口，一切正常，但是后期打包上线时，发现页面接口报404，后找到解决办法为：</p>\n<p>找到nginx 的conf文件，打开后，修改里面的配置如下：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">    server &#123;</span><br><span class=\"line\">        listen       80;//监听80端口</span><br><span class=\"line\">        server_name  localhost;</span><br><span class=\"line\">        location / &#123;</span><br><span class=\"line\">            root   html;</span><br><span class=\"line\">            index  index.html index.htm;</span><br><span class=\"line\">            try_files $uri $uri/ /index.html; //vue单页面应用，不能刷新，所有会设置这个，避免404</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        location /v2/ &#123;</span><br><span class=\"line\">            proxy_set_header X-Real-IP $remote_addr;</span><br><span class=\"line\">            proxy_pass  http://douban.uieee.com;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        error_page   500 502 503 504  /50x.html;</span><br><span class=\"line\">        location = /50x.html &#123;</span><br><span class=\"line\">            root   html;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>里面主要添加的配置为：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">location /v2/ &#123;</span><br><span class=\"line\">    proxy_set_header X-Real-IP $remote_addr;</span><br><span class=\"line\">    proxy_pass  http://douban.uieee.com;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>这个/v2/监听，实际上就是我api调用的名字，这个可以在你的vue.config.js里可以去设置：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">module.exports = &#123;</span><br><span class=\"line\">    //axios域代理，解决axios跨域问题</span><br><span class=\"line\">    devServer: &#123;</span><br><span class=\"line\">        proxy: &#123;</span><br><span class=\"line\">            &#x27;/v2&#x27;: &#123;</span><br><span class=\"line\">                target: &#x27;https://douban.uieee.com&#x27;,</span><br><span class=\"line\">                changeOrigin: true,</span><br><span class=\"line\">                ws: true,</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>我请求的api格式如下：</p>\n<blockquote>\n<p><a href=\"https://douban.uieee.com/v2/movie/top250?start=0&amp;count=12\">https://douban.uieee.com/v2/movie/top250?start=0&amp;count=12</a></p>\n</blockquote>\n<p>提供的api文档里面可以看到，所有的api都带有一个相同的字符/v2/。</p>\n<p>所以以这个字符为关键字来修改代理。</p>\n<meta name=\"referrer\" content=\"no-referrer\"/>\n\n\n<h2 id=\"初始化设置和环境搭建（neginx-centOS，vue的环境搭建）-GitHub相关\"><a href=\"#初始化设置和环境搭建（neginx-centOS，vue的环境搭建）-GitHub相关\" class=\"headerlink\" title=\"初始化设置和环境搭建（neginx,centOS，vue的环境搭建）/GitHub相关\"></a>初始化设置和环境搭建（neginx,centOS，vue的环境搭建）/GitHub相关</h2><h3 id=\"安装node-js\"><a href=\"#安装node-js\" class=\"headerlink\" title=\"安装node.js\"></a>安装node.js</h3><p>一般来讲, 可以用以下三种方式安装 Node.js：</p>\n<ul>\n<li>通过安装包安装(Windows 和 Mac 用户推荐)</li>\n<li>通过源码编译安装(Linux用户推荐)</li>\n<li>在 Linux 下可以通过 yum|apt-get 安装</li>\n</ul>\n<ol>\n<li><p>通过安装包安装：</p>\n</li>\n<li><p>源码编译安装：</p>\n<!-- more -->\n\n<p>Linux用户：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -O https://nodejs.org/dist/v6.10.3/node-v6.10.3.tar.gz</span><br><span class=\"line\">tar -xzvf node-v6.10.3.tar.gz</span><br><span class=\"line\">cd  node-v6.10.3</span><br><span class=\"line\">./configure</span><br><span class=\"line\">make</span><br><span class=\"line\">make install</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h3 id=\"安装cnpm镜像（可选择）\"><a href=\"#安装cnpm镜像（可选择）\" class=\"headerlink\" title=\"安装cnpm镜像（可选择）\"></a>安装cnpm镜像（可选择）</h3><p>   <a href=\"https://npm.taobao.org/\">淘宝 NPM 镜像</a>是一个完整 npmjs.org 镜像，你可以用此代替官方版本(只读)，同步频率目前为 10分钟 一次以保证尽量与官方服务同步。</p>\n   <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g cnpm --registry=https://registry.npm.taobao.org </span><br><span class=\"line\">cnpm install [name]</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"使用vue-cli\"><a href=\"#使用vue-cli\" class=\"headerlink\" title=\"使用vue-cli\"></a>使用vue-cli</h3><ol>\n<li><p>安装</p>\n<p>如果用npm下载速度慢，可以使用cnpm.</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g vue-cli</span><br></pre></td></tr></table></figure></li>\n<li><p>init初始模板</p>\n<p>目前可用的模板包括：</p>\n<ul>\n<li><p><a href=\"https://github.com/vuejs-templates/browserify\">browserify</a>–全功能的Browserify + vueify，包括热加载，静态检测，单元测试</p>\n</li>\n<li><p><a href=\"https://github.com/vuejs-templates/browserify-simple\">browserify-simple</a>–一个简易的Browserify + vueify，以便于快速开始。</p>\n</li>\n<li><p><a href=\"https://github.com/vuejs-templates/webpack\">webpack</a>–全功能的Webpack + vueify，包括热加载，静态检测，单元测试</p>\n</li>\n<li><p><a href=\"https://github.com/vuejs-templates/webpack-simple\">webpack-simple</a>–一个简易的Webpack + vueify，以便于快速开始。</p>\n</li>\n<li><p><a href=\"https://github.com/vuejs-templates/simple\">simple</a> - 单个HTML文件中最简单的Vue设置</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vue init &lt;template-name&gt; &lt;project-name&gt;</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li><p>运行项目</p>\n<ol>\n<li>我们的项目选择webpack,使用以下命令:</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vue init webpack vue-todos</span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li><p>输入下面的命令就可以运行这个项目了:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd vue-todos</span><br><span class=\"line\">npm install</span><br><span class=\"line\">npm run dev</span><br></pre></td></tr></table></figure></li>\n</ol>\n</li>\n</ol>\n<h2 id=\"CentOS7安装Nginx\"><a href=\"#CentOS7安装Nginx\" class=\"headerlink\" title=\"CentOS7安装Nginx\"></a>CentOS7安装Nginx</h2><h2 id=\"安装所需环境\"><a href=\"#安装所需环境\" class=\"headerlink\" title=\"安装所需环境\"></a>安装所需环境</h2><p>Nginx 是 C语言 开发，建议在 Linux 上运行，当然，也可以安装 Windows 版本，本篇则使用 <a href=\"http://www.linuxidc.com/topicnews.aspx?tid=14\">CentOS</a> 7 作为安装环境。</p>\n<p>顺序如下：</p>\n<ol>\n<li><p><strong>gcc 安装</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install gcc-c++</span><br></pre></td></tr></table></figure></li>\n<li><p><strong>PCRE pcre-devel 安装</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install -y pcre pcre-devel</span><br></pre></td></tr></table></figure></li>\n<li><p><strong>zlib 安装</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install -y zlib zlib-devel</span><br></pre></td></tr></table></figure></li>\n<li><p><strong>OpenSSL 安装</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install -y openssl openssl-devel</span><br></pre></td></tr></table></figure></li>\n<li><p>下载<code>.tar.gz</code>安装包</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget -c https://nginx.org/download/nginx-1.12.0.tar.gz</span><br></pre></td></tr></table></figure></li>\n<li><p>解压</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar -zxvf nginx-1.12.0.tar.gz</span><br><span class=\"line\">cd nginx-1.12.0</span><br></pre></td></tr></table></figure></li>\n<li><p><strong>配置</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./configure</span><br></pre></td></tr></table></figure></li>\n<li><p>编译安装</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">make</span><br><span class=\"line\">make install</span><br></pre></td></tr></table></figure></li>\n<li><p>启动、停止nginx</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /usr/local/nginx/sbin/</span><br><span class=\"line\">./nginx </span><br><span class=\"line\">./nginx -s stop</span><br><span class=\"line\">./nginx -s quit</span><br><span class=\"line\">./nginx -s reload</span><br></pre></td></tr></table></figure></li>\n<li><p>重启 <strong>nginx</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /usr/local/nginx/sbin/</span><br><span class=\"line\">./nginx -s reload</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h2 id=\"CSS-Tools-Reset-CSS重置css\"><a href=\"#CSS-Tools-Reset-CSS重置css\" class=\"headerlink\" title=\"CSS Tools: Reset CSS重置css\"></a>CSS Tools: Reset CSS重置css</h2><p>浏览器自带的css属性，一般需要重置，记录如下：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/* http://meyerweb.com/eric/tools/css/reset/ </span><br><span class=\"line\">   v2.0 | 20110126</span><br><span class=\"line\">   License: none (public domain)</span><br><span class=\"line\">*/</span><br><span class=\"line\"></span><br><span class=\"line\">html, body, div, span, applet, object, iframe,</span><br><span class=\"line\">h1, h2, h3, h4, h5, h6, p, blockquote, pre,</span><br><span class=\"line\">a, abbr, acronym, address, big, cite, code,</span><br><span class=\"line\">del, dfn, em, img, ins, kbd, q, s, samp,</span><br><span class=\"line\">small, strike, strong, sub, sup, tt, var,</span><br><span class=\"line\">b, u, i, center,</span><br><span class=\"line\">dl, dt, dd, ol, ul, li,</span><br><span class=\"line\">fieldset, form, label, legend,</span><br><span class=\"line\">table, caption, tbody, tfoot, thead, tr, th, td,</span><br><span class=\"line\">article, aside, canvas, details, embed, </span><br><span class=\"line\">figure, figcaption, footer, header, hgroup, </span><br><span class=\"line\">menu, nav, output, ruby, section, summary,</span><br><span class=\"line\">time, mark, audio, video &#123;</span><br><span class=\"line\">\tmargin: 0;</span><br><span class=\"line\">\tpadding: 0;</span><br><span class=\"line\">\tborder: 0;</span><br><span class=\"line\">\tfont-size: 100%;</span><br><span class=\"line\">\tfont: inherit;</span><br><span class=\"line\">\tvertical-align: baseline;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">/* HTML5 display-role reset for older browsers */</span><br><span class=\"line\">article, aside, details, figcaption, figure, </span><br><span class=\"line\">footer, header, hgroup, menu, nav, section &#123;</span><br><span class=\"line\">\tdisplay: block;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">body &#123;</span><br><span class=\"line\">\tline-height: 1;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">ol, ul &#123;</span><br><span class=\"line\">\tlist-style: none;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">blockquote, q &#123;</span><br><span class=\"line\">\tquotes: none;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">blockquote:before, blockquote:after,</span><br><span class=\"line\">q:before, q:after &#123;</span><br><span class=\"line\">\tcontent: &#x27;&#x27;;</span><br><span class=\"line\">\tcontent: none;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">table &#123;</span><br><span class=\"line\">\tborder-collapse: collapse;</span><br><span class=\"line\">\tborder-spacing: 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"vs-code插件记录-更新中\"><a href=\"#vs-code插件记录-更新中\" class=\"headerlink\" title=\"vs code插件记录(更新中)\"></a>vs code插件记录(更新中)</h2><p>vscode会使用比较多的插件，记录：</p>\n<ol>\n<li>Auto Close Tag（补充标签）</li>\n<li>Auto Rename Tag（修改标签）</li>\n<li>Chinese (Simplified) Language Pack for VS Code</li>\n<li>Debugger for Chrome</li>\n<li>Open in Browser</li>\n<li>Prettier（格式化）</li>\n<li>Vetur（智能提示补全代码）</li>\n<li>vscode-icons（美化icon）</li>\n<li>Bracket Pair Colorizer（括号颜色，快速识别括号位置）</li>\n</ol>\n<h3 id=\"记录：\"><a href=\"#记录：\" class=\"headerlink\" title=\"记录：\"></a>记录：</h3><ul>\n<li><p>Vetur</p>\n<p>使用scss的时候，会遇到vetur报错的情况：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;scss&quot;</span> <span class=\"attr\">scoped</span>&gt;</span></span><br><span class=\"line\">    @keyframes glitch-one &#123;</span><br><span class=\"line\">  @for $i from 20 to 30 &#123;</span><br><span class=\"line\">    #&#123;$i / 2&#125;% &#123;</span><br><span class=\"line\">      left: #&#123;randomNum(200, -100)&#125;px;</span><br><span class=\"line\">      clip-path: inset(#&#123;randomNum(150, 30)&#125;px 0 #&#123;randomNum(150, 30)&#125;px);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n\n<p>比如上面的这种情况，就会有红色波浪线提示，但是在浏览器中是正确的。所以需要配置如下：</p>\n<ol>\n<li><p>文件》首选项》设置</p>\n</li>\n<li><p>右上角三个选项的第一个（打开设置Json）</p>\n</li>\n<li><p>在大括号内添加最后四行（跟vetur相关的配置）</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    &quot;workbench.iconTheme&quot;: &quot;vscode-icons&quot;,</span><br><span class=\"line\">    &quot;[html]&quot;: &#123;</span><br><span class=\"line\">        &quot;editor.defaultFormatter&quot;: &quot;vscode.html-language-features&quot;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &quot;open-in-browser.default&quot;: &quot;chrome&quot;,</span><br><span class=\"line\">    &quot;explorer.confirmDragAndDrop&quot;: false,</span><br><span class=\"line\">    &quot;window.zoomLevel&quot;: 1,</span><br><span class=\"line\">    &quot;[javascript]&quot;: &#123;</span><br><span class=\"line\">        &quot;editor.defaultFormatter&quot;: &quot;vscode.typescript-language-features&quot;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &quot;explorer.confirmDelete&quot;: false,</span><br><span class=\"line\">    &quot;vsicons.dontShowNewVersionMessage&quot;: true,</span><br><span class=\"line\">    &quot;editor.fontSize&quot;: 20,</span><br><span class=\"line\">    &quot;[css]&quot;: &#123;</span><br><span class=\"line\">        &quot;editor.defaultFormatter&quot;: &quot;esbenp.prettier-vscode&quot;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &quot;vetur.validation.template&quot;: false,</span><br><span class=\"line\">    &quot;vetur.experimental.templateInterpolationService&quot;: false,</span><br><span class=\"line\">    &quot;vetur.validation.style&quot;: false,</span><br><span class=\"line\">    &quot;vetur.validation.script&quot;: false,</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ol>\n</li>\n</ul>\n<h2 id=\"GitHub相关问题\"><a href=\"#GitHub相关问题\" class=\"headerlink\" title=\"GitHub相关问题\"></a>GitHub相关问题</h2><p>GitHub是一个面向<a href=\"https://baike.baidu.com/item/%E5%BC%80%E6%BA%90/20720669\">开源</a>及私有<a href=\"https://baike.baidu.com/item/%E8%BD%AF%E4%BB%B6/12053\">软件</a>项目的托管平台，因为只支持git 作为唯一的版本库格式进行托管，故名GitHub。</p>\n<h2 id=\"初始设置github\"><a href=\"#初始设置github\" class=\"headerlink\" title=\"初始设置github\"></a>初始设置github</h2><p>记录开始使用GitHub中三点注意：</p>\n<ol>\n<li><p>注册账号会验证邮箱，而163邮箱不能接受验证邮件</p>\n<p><em><strong>注意</strong></em>：注册需要设置邮箱，需要选用qq邮箱或者gmail邮箱，163邮箱发现不能接收到GitHub的邮件！</p>\n<p>新的库，需要设置sshkeys</p>\n<ol>\n<li><p>检查是否有sshkeys</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">~/.ssh</span><br></pre></td></tr></table></figure></li>\n<li><p>创建ssh</p>\n<p>首先创建一个SSH，在Git Bash中输入</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ssh-keygen -t rsa -C “你的邮箱”</span><br></pre></td></tr></table></figure>\n\n<p>然后他就会显示这两行</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Generating public/private rsa key pair.</span><br><span class=\"line\">Enter file in which to save the key (/c/Users/16627/.ssh/id_rsa):</span><br></pre></td></tr></table></figure>\n\n<p>这是让你输入一个文件名，用于保存刚才生成的 SSH key 代码。如果你不输入，直接回车，那么就会默认生成id_rsa和id_rsa.pub两个秘钥文件（如下提示）。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Created directory ‘/c/Users/16627/.ssh’.</span><br></pre></td></tr></table></figure>\n\n<p>紧接着又会提示你</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Enter passphrase (empty for no passphrase):</span><br><span class=\"line\">Enter same passphrase again:</span><br></pre></td></tr></table></figure>\n\n<p>接着又会提示你输入两次密码（该密码是你push文件的时候要输入的密码，而不是github管理者的密码），当然你还可以不输入密码，直接按回车。那么fetch和push的时候就不需要输入密码。</p>\n<p><img src=\"https://img-blog.csdn.net/20180118114145818?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzY2NjcxNzA=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast\" alt=\"chegngong\"></p>\n<p>已经创建成功</p>\n<p><img src=\"https://img-blog.csdn.net/20180118115923234?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzY2NjcxNzA=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast\" alt=\"chenggong\"></p>\n</li>\n<li><p>添加ssh到GitHub</p>\n<p>按照以下的步骤操作：</p>\n<p><img src=\"https://img-blog.csdn.net/20180118120316317?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzY2NjcxNzA=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast\" alt=\"1\"></p>\n<p><img src=\"https://img-blog.csdn.net/20180118120349241?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzY2NjcxNzA=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast\" alt=\"2\"></p>\n<p><img src=\"https://img-blog.csdn.net/20180118120556118?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzY2NjcxNzA=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast\" alt=\"3\"></p>\n<p>title随便给他起个名字就好。然后是key，这时候你要打开你刚才在电脑上的SSH key。刚才提示你建立的那段文字有SSH key的地址，按照地址找到你的文件，用记事本<strong>打开id_rsa.pub文件，全选其中的内容粘贴到网页的Key中即可。</strong></p>\n<p><img src=\"https://img-blog.csdn.net/20180118121323658?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzY2NjcxNzA=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast\" alt=\"4\"></p>\n<p><img src=\"https://img-blog.csdn.net/20180118121457269?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzY2NjcxNzA=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast\" alt=\"5\"></p>\n<p><strong>然后你就会受到建立成功的邮件了。</strong></p>\n<p><img src=\"https://img-blog.csdn.net/20180118121751176?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzY2NjcxNzA=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast\" alt=\"6\"></p>\n</li>\n<li><p>测试一下ssh key</p>\n<p>在git Bash 中输入以下代码：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh -T git@github.com</span><br><span class=\"line\">注意是git@github.com，不是你的邮箱。</span><br></pre></td></tr></table></figure>\n\n<p>然后会提示你：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">The authenticity of host ‘github.com (192.30.255.112)’ can’t be established.</span><br><span class=\"line\">RSA key fingerprint is SHA256:nThbg6kXUpJWGl7E1IGOCspRomTxdCARLviKw6E5SY8.</span><br><span class=\"line\">Are you sure you want to continue connecting (yes/no)?</span><br></pre></td></tr></table></figure>\n\n<p>正常提示，你只需要YES就可以。如果你创建 SSH key 的时候设置了密码，接下来就会提示你输入密码，如果你没设置密码会提示你:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Warning: Permanently added ‘github.com,192.30.255.112’ (RSA) to the list of known hosts.</span><br><span class=\"line\">Hi “用户名”! You’ve successfully authenticated, but GitHub does not provide shell access.</span><br></pre></td></tr></table></figure></li>\n</ol>\n</li>\n<li><p>需要设置config.name和config.email</p>\n<ul>\n<li><p>按照以下的步骤操作</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global user.name &quot;yourname&quot; 设置用户名</span><br><span class=\"line\">git config --global user.email myemail@qq.com 设置用户邮箱</span><br><span class=\"line\">git config --list 查看git设置列表信息</span><br><span class=\"line\">git config user.name  查看用户名</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n</ol>\n<h2 id=\"git推动GitHub提示faild\"><a href=\"#git推动GitHub提示faild\" class=\"headerlink\" title=\"git推动GitHub提示faild\"></a>git推动GitHub提示faild</h2><p>在添加远程库的时候一直验证不成功，一直提示failed to push some refs to git的问题，经过网上查找终于解决了这个问题。</p>\n<p>主要问题指向了README.md文件</p>\n<h3 id=\"git步骤如下\"><a href=\"#git步骤如下\" class=\"headerlink\" title=\"git步骤如下\"></a>git步骤如下</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. git add . //添加到暂存区</span><br><span class=\"line\">2. git commit -m &quot;备注内容&quot; //添加到head</span><br><span class=\"line\">3. git push -u origin master //添加到远程仓库</span><br></pre></td></tr></table></figure>\n\n<p>其中第三步出错，提示ailed to push some refs to git</p>\n<h3 id=\"解决\"><a href=\"#解决\" class=\"headerlink\" title=\"解决\"></a>解决</h3><p>出现错误的主要原因是github中的README.md文件不在本地代码目录中，</p>\n<p>可以通过如下命令进行代码合并【注：pull=fetch+merge]</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git pull --rebase origin master</span><br></pre></td></tr></table></figure>\n\n<p>执行上面代码后可以看到本地代码库中多了README.md文件</p>\n<p>此时再执行语句 git push -u origin master即可完成代码上传到github</p>\n<meta name=\"referrer\" content=\"no-referrer\"/>\n\n<h2 id=\"keep-alive-的使用与周期\"><a href=\"#keep-alive-的使用与周期\" class=\"headerlink\" title=\"keep-alive 的使用与周期\"></a>keep-alive 的使用与周期</h2><h3 id=\"使用keep-alive的时机\"><a href=\"#使用keep-alive的时机\" class=\"headerlink\" title=\"使用keep-alive的时机\"></a>使用keep-alive的时机</h3><p>在搭建 vue 项目时，有某些组件没必要多次渲染，所以需要将组件在内存中进行‘持久化，此时 keep-alive 便可以派上用场了。keep-alive  可以使被包含的组件状态维持不变，即便是组件切换了，其内的状态依旧维持在内存之中。在下一次显示时，也不会重现渲染。</p>\n<blockquote>\n<p>PS：<code>与</code>相似，只是一个抽象组件，它不会在DOM树中渲染(真实或者虚拟都不会)，也不在父组件链中存在，比如：你永远在 <code>this.$parent</code> 中找不到 <code>keep-alive</code> 。</p>\n</blockquote>\n<!-- more -->\n\n<h3 id=\"配合router-view去使用\"><a href=\"#配合router-view去使用\" class=\"headerlink\" title=\"配合router-view去使用\"></a>配合router-view去使用</h3><p>有些时候可能需要将整个路由页面一切缓存下来，也就是将 `` 进行缓存。这种使用场景还是蛮多的</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;keep-alive&gt;</span><br><span class=\"line\">    <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">router-view</span> <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;$router.meta.keepAlive&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">router-view</span>&gt;</span></span></span><br><span class=\"line\">&lt;/keep-alive&gt;</span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">router-view</span> <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;!$router.meta.keepAlive&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">router-view</span>&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//router配置</span></span><br><span class=\"line\"><span class=\"keyword\">new</span> <span class=\"title class_\">Router</span>(&#123;</span><br><span class=\"line\">    <span class=\"attr\">routes</span>: [</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"attr\">name</span>: <span class=\"string\">&#x27;a&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">path</span>: <span class=\"string\">&#x27;/a&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">component</span>: A,</span><br><span class=\"line\">            <span class=\"attr\">meta</span>: &#123;</span><br><span class=\"line\">                <span class=\"attr\">keepAlive</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"attr\">name</span>: <span class=\"string\">&#x27;b&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">path</span>: <span class=\"string\">&#x27;/b&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">component</span>: B</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"keep-alive-生命周期和新属性\"><a href=\"#keep-alive-生命周期和新属性\" class=\"headerlink\" title=\"keep-alive 生命周期和新属性\"></a>keep-alive 生命周期和新属性</h3><h4 id=\"生命周期\"><a href=\"#生命周期\" class=\"headerlink\" title=\"生命周期\"></a>生命周期</h4><p>被包含在 `` 中创建的组件，会多出两个生命周期的钩子: <code>activated</code> 与 <code>deactivated</code></p>\n<ul>\n<li>activated</li>\n</ul>\n<p>在组件被激活时调用，<strong>在组件第一次渲染时也会被调用</strong>，之后每次keep-alive激活时被调用。</p>\n<ul>\n<li>deactivated</li>\n</ul>\n<p>在组件被停用时调用。</p>\n<blockquote>\n<p>注意：只有组件被 <code>keep-alive</code> 包裹时，这两个生命周期才会被调用，如果作为正常组件使用，是不会被调用，以及在 <code>2.1.0</code> 版本之后，使用 <code>exclude</code> 排除之后，就算被包裹在 <code>keep-alive</code> 中，这两个钩子依然不会被调用！另外在服务端渲染时此钩子也不会被调用的。</p>\n</blockquote>\n<h4 id=\"新属性\"><a href=\"#新属性\" class=\"headerlink\" title=\"新属性\"></a>新属性</h4><p>在vue <code>2.1.0</code> 版本之后，<code>keep-alive</code> 新加入了两个属性: <code>include</code>(包含的组件缓存生效) 与 <code>exclude</code>(排除的组件不缓存，优先级大于include) 。</p>\n<p><code>include</code> 和 <code>exclude</code> 属性允许组件有条件地缓存。二者都可以用逗号分隔字符串、正则表达式或一个数组来表示</p>\n<p>当使用正则或者是数组时，一定要使用 <code>v-bind</code> !</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- 逗号分隔字符串，只有组件a与b被缓存。这样使用场景变得更有意义了 --&gt;</span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">keep-alive</span> <span class=\"attr\">include</span>=<span class=\"string\">&quot;a,b&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">  <span class=\"tag\">&lt;<span class=\"name\">component</span> <span class=\"attr\">:is</span>=<span class=\"string\">&quot;view&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">component</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;/<span class=\"name\">keep-alive</span>&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!-- 正则表达式 (需要使用 v-bind，符合匹配规则的都会被缓存) --&gt;</span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">keep-alive</span> <span class=\"attr\">:include</span>=<span class=\"string\">&quot;/a|b/&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">  <span class=\"tag\">&lt;<span class=\"name\">component</span> <span class=\"attr\">:is</span>=<span class=\"string\">&quot;view&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">component</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;/<span class=\"name\">keep-alive</span>&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!-- <span class=\"title class_\">Array</span> (需要使用 v-bind，被包含的都会被缓存) --&gt;</span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">keep-alive</span> <span class=\"attr\">:include</span>=<span class=\"string\">&quot;[&#x27;a&#x27;, &#x27;b&#x27;]&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">  <span class=\"tag\">&lt;<span class=\"name\">component</span> <span class=\"attr\">:is</span>=<span class=\"string\">&quot;view&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">component</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;/<span class=\"name\">keep-alive</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>有了include之后，再与 <code>router-view</code> 一起使用时便方便许多了:</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- 一个include解决了，不需要多写一个标签，也不需要在路由元中添加keepAlive了 --&gt;</span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">keep-alive</span> <span class=\"attr\">include</span>=<span class=\"string\">&#x27;a&#x27;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;<span class=\"name\">router-view</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">router-view</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;/<span class=\"name\">keeo-alive</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"注意\"><a href=\"#注意\" class=\"headerlink\" title=\"注意\"></a>注意</h3><ol>\n<li><p>keeo-alive先匹配被包含组件的 <code>name</code> 字段，如果 <code>name</code> 不可用，则匹配当前组件 <code>components</code> 配置中的注册名称。</p>\n</li>\n<li><p>keeo-alive不会在函数式组件中正常工作，因为它们没有缓存实例。</p>\n</li>\n<li><p>当匹配条件同时在 <code>include</code> 与 <code>exclude</code> 存在时，以 <code>exclude</code> 优先级最高(当前vue 2.4.2 version)。比如：包含于排除同时匹配到了组件A，那组件A不会被缓存。</p>\n</li>\n<li><p>包含在 keeo-alive 中，但符合 <code>exclude</code> ，不会调用<code>activated</code> 和 <code>deactivated</code>。</p>\n</li>\n<li><p><strong>设置了<code>keep-alive</code>,这个时候不会触发生命周期的钩子函数。</strong></p>\n<p>当页面内的数据没有发生变化时，页面内的操作比如跳转到另一个路由，是不会去经过生命周期函数的，比如：desdtroy函数等。</p>\n<p>它会直接在进入的时候触发<code>activated</code> 和离开的时候触发 deactivated。</p>\n<p>所以，如果是有涉及到之前放入mouted周期中的函数，可以将其放入activated，放入desdtroy周期的函数可以放入deactivated。</p>\n</li>\n</ol>"},{"title":"websokect初体验","date":"2020-07-12T09:16:26.000Z","_content":"\n<meta name=\"referrer\" content=\"no-referrer\"/>\n\n## WebSocket初体验\n\nWebSocket是HTML5出的东西（协议），也就是说HTTP协议没有变化，或者说没关系，但HTTP是不支持持久连接的（长连接，循环连接的不算）首先HTTP有1.1和1.0之说，也就是所谓的keep-alive，把多个HTTP请求合并为一个，但是Websocket其实是一个新协议，跟HTTP协议基本没有关系，只是为了兼容现有浏览器的握手规范而已，\n\n### 需求\n\n提供一个图片下载至服务器进度的功能，需要实时获取服务器下载图片的张数。实现方法如下：\n\n1.直接采用轮询的方法，每隔一段时间请求图片下载数据\n\n2.采用长连接，建立起ws链接后，可以直接接受到服务器发来的数据，知道有一方主动断开链接\n\n### VUE中使用ws\n\n```js\n createWS() {\n      let token = sessionStorage.getItem('token')\n        ? sessionStorage.getItem('token')\n        : false\n      if (token) {\n        //判断当前浏览器是否支持WebSocket, 主要此处要更换为自己的地址\n        if ('WebSocket' in window) {\n          let websocket = new WebSocket(\n            `ws://192.168.1.126:9527/api/litchi/${token}`\n          )\n          websocket.onopen = () => {\n            console.log('Connection open ...')\n            sessionStorage.setItem('isWSConnectioning', true)\n          }\n          websocket.addEventListener('close', (event) => {\n            console.log(event, '关闭的回调')\n          })\n          websocket.addEventListener('error', (event) => {\n            console.log(event, '失败的回调')\n          })\n          //接收到消息的回调方法\n          websocket.addEventListener('message', (event) => {\n            if (event.data) {\n            }\n          })\n          websocket.onmessage = (event) => {}\n        } else {\n          alert('Not support websocket')\n        }\n      }\n    },\n```\n\n使用Tips：使用步骤非常简单。1.new WebSocket的对象，2.调用对象上的方法，如：open、close、message。3.在对应的事件中进行数据的操作，比如改变页面的进度条和数据。\n\n### 业务难点\n\n实现ws不复杂，但是需求中有额外的要求：当用户切换到其他的页面后，再跳转回ws的进度条页面后，也需要进度的实时更新。\n\n这里问题则是：1、当跳转到其他页面后，如何保持ws的长连接，2、如何保存当前图片下载进度，3、如何每次进入页面都能够实时更新图片的进度\n\n解决方案：\n\n1、因为vue是单页面应用，页面跳转本质是页面的路由更换而已。所有，ws一旦建立了，不会随着页面的跳转而关闭\n\n2、公共变量的保存一般是1、VueX的store，2、SessionStorage的浏览器缓存\n\n3、实时的监听1、store的监听可以通过watch实现（未实际考察），2、SessionStorage的监听可以通过‘storage’的事件监听\n\n### 实现方案\n\n采用SessionStorage的方案，监听浏览器缓存事件\n\n```js\nthis.resetSetItem(\n 'downCheckedImageListSuccess',\n JSON.stringify(this.downCheckedImageListSuccess)\n)\n```\n\n上面写了一个自定义的事件resetSetItem，这个事件是用来保存数据入浏览器缓存的。\n\n为什么不用浏览器的SessionStorage.setItem和 window.addEventListener('storage')事件呢？\n\n实际使用中发现，当页面跳转后再回到下载进度页面后，监听有失效的情况。没有触发页面的数据更新。（当然有可能是我自己没有搞懂）。总之，查询了搜索引擎后采用了另外一种方案:\n\n1.main.js中vue原型上添加自定义事件\n\n```js\n// 添加全局事件监控方法\nVue.prototype.resetSetItem = function(key, newVal) {\n  //   if (key === 'downCheckedImageListSuccess') {\n  // 创建一个StorageEvent事件\n  var newStorageEvent = document.createEvent('StorageEvent')\n  const storage = {\n    setItem: function(k, val) {\n      sessionStorage.setItem(k, val)\n      // 初始化创建的事件\n      newStorageEvent.initStorageEvent(\n        'setItem',\n        false,\n        false,\n        k,\n        null,\n        val,\n        null,\n        null\n      )\n      // 派发对象\n      window.dispatchEvent(newStorageEvent)\n    },\n  }\n  return storage.setItem(key, newVal)\n  //   }\n}\n```\n\n2.页面初始化时，添加监听事件\n\n```js\nwindow.addEventListener('setItem', () => {\n this.setNum()\n  } else {\n }\n})\n```\n\n当页面中有调用resetSetItem方法时，会触发setItem事件中的函数，从而触发页面的数据的更新。","source":"_posts/websokect初体验.md","raw":"---\n\ntitle: websokect初体验\ndate: 2020-07-12 17:16:26\ntags: [js,hexo]\n---\n\n<meta name=\"referrer\" content=\"no-referrer\"/>\n\n## WebSocket初体验\n\nWebSocket是HTML5出的东西（协议），也就是说HTTP协议没有变化，或者说没关系，但HTTP是不支持持久连接的（长连接，循环连接的不算）首先HTTP有1.1和1.0之说，也就是所谓的keep-alive，把多个HTTP请求合并为一个，但是Websocket其实是一个新协议，跟HTTP协议基本没有关系，只是为了兼容现有浏览器的握手规范而已，\n\n### 需求\n\n提供一个图片下载至服务器进度的功能，需要实时获取服务器下载图片的张数。实现方法如下：\n\n1.直接采用轮询的方法，每隔一段时间请求图片下载数据\n\n2.采用长连接，建立起ws链接后，可以直接接受到服务器发来的数据，知道有一方主动断开链接\n\n### VUE中使用ws\n\n```js\n createWS() {\n      let token = sessionStorage.getItem('token')\n        ? sessionStorage.getItem('token')\n        : false\n      if (token) {\n        //判断当前浏览器是否支持WebSocket, 主要此处要更换为自己的地址\n        if ('WebSocket' in window) {\n          let websocket = new WebSocket(\n            `ws://192.168.1.126:9527/api/litchi/${token}`\n          )\n          websocket.onopen = () => {\n            console.log('Connection open ...')\n            sessionStorage.setItem('isWSConnectioning', true)\n          }\n          websocket.addEventListener('close', (event) => {\n            console.log(event, '关闭的回调')\n          })\n          websocket.addEventListener('error', (event) => {\n            console.log(event, '失败的回调')\n          })\n          //接收到消息的回调方法\n          websocket.addEventListener('message', (event) => {\n            if (event.data) {\n            }\n          })\n          websocket.onmessage = (event) => {}\n        } else {\n          alert('Not support websocket')\n        }\n      }\n    },\n```\n\n使用Tips：使用步骤非常简单。1.new WebSocket的对象，2.调用对象上的方法，如：open、close、message。3.在对应的事件中进行数据的操作，比如改变页面的进度条和数据。\n\n### 业务难点\n\n实现ws不复杂，但是需求中有额外的要求：当用户切换到其他的页面后，再跳转回ws的进度条页面后，也需要进度的实时更新。\n\n这里问题则是：1、当跳转到其他页面后，如何保持ws的长连接，2、如何保存当前图片下载进度，3、如何每次进入页面都能够实时更新图片的进度\n\n解决方案：\n\n1、因为vue是单页面应用，页面跳转本质是页面的路由更换而已。所有，ws一旦建立了，不会随着页面的跳转而关闭\n\n2、公共变量的保存一般是1、VueX的store，2、SessionStorage的浏览器缓存\n\n3、实时的监听1、store的监听可以通过watch实现（未实际考察），2、SessionStorage的监听可以通过‘storage’的事件监听\n\n### 实现方案\n\n采用SessionStorage的方案，监听浏览器缓存事件\n\n```js\nthis.resetSetItem(\n 'downCheckedImageListSuccess',\n JSON.stringify(this.downCheckedImageListSuccess)\n)\n```\n\n上面写了一个自定义的事件resetSetItem，这个事件是用来保存数据入浏览器缓存的。\n\n为什么不用浏览器的SessionStorage.setItem和 window.addEventListener('storage')事件呢？\n\n实际使用中发现，当页面跳转后再回到下载进度页面后，监听有失效的情况。没有触发页面的数据更新。（当然有可能是我自己没有搞懂）。总之，查询了搜索引擎后采用了另外一种方案:\n\n1.main.js中vue原型上添加自定义事件\n\n```js\n// 添加全局事件监控方法\nVue.prototype.resetSetItem = function(key, newVal) {\n  //   if (key === 'downCheckedImageListSuccess') {\n  // 创建一个StorageEvent事件\n  var newStorageEvent = document.createEvent('StorageEvent')\n  const storage = {\n    setItem: function(k, val) {\n      sessionStorage.setItem(k, val)\n      // 初始化创建的事件\n      newStorageEvent.initStorageEvent(\n        'setItem',\n        false,\n        false,\n        k,\n        null,\n        val,\n        null,\n        null\n      )\n      // 派发对象\n      window.dispatchEvent(newStorageEvent)\n    },\n  }\n  return storage.setItem(key, newVal)\n  //   }\n}\n```\n\n2.页面初始化时，添加监听事件\n\n```js\nwindow.addEventListener('setItem', () => {\n this.setNum()\n  } else {\n }\n})\n```\n\n当页面中有调用resetSetItem方法时，会触发setItem事件中的函数，从而触发页面的数据的更新。","slug":"websokect初体验","published":1,"updated":"2021-06-07T08:06:04.018Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl0uux6vp000q7suf2kazbkyk","content":"<meta name=\"referrer\" content=\"no-referrer\"/>\n\n<h2 id=\"WebSocket初体验\"><a href=\"#WebSocket初体验\" class=\"headerlink\" title=\"WebSocket初体验\"></a>WebSocket初体验</h2><p>WebSocket是HTML5出的东西（协议），也就是说HTTP协议没有变化，或者说没关系，但HTTP是不支持持久连接的（长连接，循环连接的不算）首先HTTP有1.1和1.0之说，也就是所谓的keep-alive，把多个HTTP请求合并为一个，但是Websocket其实是一个新协议，跟HTTP协议基本没有关系，只是为了兼容现有浏览器的握手规范而已，</p>\n<h3 id=\"需求\"><a href=\"#需求\" class=\"headerlink\" title=\"需求\"></a>需求</h3><p>提供一个图片下载至服务器进度的功能，需要实时获取服务器下载图片的张数。实现方法如下：</p>\n<p>1.直接采用轮询的方法，每隔一段时间请求图片下载数据</p>\n<p>2.采用长连接，建立起ws链接后，可以直接接受到服务器发来的数据，知道有一方主动断开链接</p>\n<h3 id=\"VUE中使用ws\"><a href=\"#VUE中使用ws\" class=\"headerlink\" title=\"VUE中使用ws\"></a>VUE中使用ws</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">createWS</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">     <span class=\"keyword\">let</span> token = sessionStorage.<span class=\"title function_\">getItem</span>(<span class=\"string\">&#x27;token&#x27;</span>)</span><br><span class=\"line\">       ? sessionStorage.<span class=\"title function_\">getItem</span>(<span class=\"string\">&#x27;token&#x27;</span>)</span><br><span class=\"line\">       : <span class=\"literal\">false</span></span><br><span class=\"line\">     <span class=\"keyword\">if</span> (token) &#123;</span><br><span class=\"line\">       <span class=\"comment\">//判断当前浏览器是否支持WebSocket, 主要此处要更换为自己的地址</span></span><br><span class=\"line\">       <span class=\"keyword\">if</span> (<span class=\"string\">&#x27;WebSocket&#x27;</span> <span class=\"keyword\">in</span> <span class=\"variable language_\">window</span>) &#123;</span><br><span class=\"line\">         <span class=\"keyword\">let</span> websocket = <span class=\"keyword\">new</span> <span class=\"title class_\">WebSocket</span>(</span><br><span class=\"line\">           <span class=\"string\">`ws://192.168.1.126:9527/api/litchi/<span class=\"subst\">$&#123;token&#125;</span>`</span></span><br><span class=\"line\">         )</span><br><span class=\"line\">         websocket.<span class=\"property\">onopen</span> = <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">           <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;Connection open ...&#x27;</span>)</span><br><span class=\"line\">           sessionStorage.<span class=\"title function_\">setItem</span>(<span class=\"string\">&#x27;isWSConnectioning&#x27;</span>, <span class=\"literal\">true</span>)</span><br><span class=\"line\">         &#125;</span><br><span class=\"line\">         websocket.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;close&#x27;</span>, <span class=\"function\">(<span class=\"params\">event</span>) =&gt;</span> &#123;</span><br><span class=\"line\">           <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(event, <span class=\"string\">&#x27;关闭的回调&#x27;</span>)</span><br><span class=\"line\">         &#125;)</span><br><span class=\"line\">         websocket.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;error&#x27;</span>, <span class=\"function\">(<span class=\"params\">event</span>) =&gt;</span> &#123;</span><br><span class=\"line\">           <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(event, <span class=\"string\">&#x27;失败的回调&#x27;</span>)</span><br><span class=\"line\">         &#125;)</span><br><span class=\"line\">         <span class=\"comment\">//接收到消息的回调方法</span></span><br><span class=\"line\">         websocket.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;message&#x27;</span>, <span class=\"function\">(<span class=\"params\">event</span>) =&gt;</span> &#123;</span><br><span class=\"line\">           <span class=\"keyword\">if</span> (event.<span class=\"property\">data</span>) &#123;</span><br><span class=\"line\">           &#125;</span><br><span class=\"line\">         &#125;)</span><br><span class=\"line\">         websocket.<span class=\"property\">onmessage</span> = <span class=\"function\">(<span class=\"params\">event</span>) =&gt;</span> &#123;&#125;</span><br><span class=\"line\">       &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">         <span class=\"title function_\">alert</span>(<span class=\"string\">&#x27;Not support websocket&#x27;</span>)</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">   &#125;,</span><br></pre></td></tr></table></figure>\n\n<p>使用Tips：使用步骤非常简单。1.new WebSocket的对象，2.调用对象上的方法，如：open、close、message。3.在对应的事件中进行数据的操作，比如改变页面的进度条和数据。</p>\n<h3 id=\"业务难点\"><a href=\"#业务难点\" class=\"headerlink\" title=\"业务难点\"></a>业务难点</h3><p>实现ws不复杂，但是需求中有额外的要求：当用户切换到其他的页面后，再跳转回ws的进度条页面后，也需要进度的实时更新。</p>\n<p>这里问题则是：1、当跳转到其他页面后，如何保持ws的长连接，2、如何保存当前图片下载进度，3、如何每次进入页面都能够实时更新图片的进度</p>\n<p>解决方案：</p>\n<p>1、因为vue是单页面应用，页面跳转本质是页面的路由更换而已。所有，ws一旦建立了，不会随着页面的跳转而关闭</p>\n<p>2、公共变量的保存一般是1、VueX的store，2、SessionStorage的浏览器缓存</p>\n<p>3、实时的监听1、store的监听可以通过watch实现（未实际考察），2、SessionStorage的监听可以通过‘storage’的事件监听</p>\n<h3 id=\"实现方案\"><a href=\"#实现方案\" class=\"headerlink\" title=\"实现方案\"></a>实现方案</h3><p>采用SessionStorage的方案，监听浏览器缓存事件</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">this</span>.<span class=\"title function_\">resetSetItem</span>(</span><br><span class=\"line\"> <span class=\"string\">&#x27;downCheckedImageListSuccess&#x27;</span>,</span><br><span class=\"line\"> <span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">downCheckedImageListSuccess</span>)</span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n\n<p>上面写了一个自定义的事件resetSetItem，这个事件是用来保存数据入浏览器缓存的。</p>\n<p>为什么不用浏览器的SessionStorage.setItem和 window.addEventListener(‘storage’)事件呢？</p>\n<p>实际使用中发现，当页面跳转后再回到下载进度页面后，监听有失效的情况。没有触发页面的数据更新。（当然有可能是我自己没有搞懂）。总之，查询了搜索引擎后采用了另外一种方案:</p>\n<p>1.main.js中vue原型上添加自定义事件</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 添加全局事件监控方法</span></span><br><span class=\"line\"><span class=\"title class_\">Vue</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">resetSetItem</span> = <span class=\"keyword\">function</span>(<span class=\"params\">key, newVal</span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">//   if (key === &#x27;downCheckedImageListSuccess&#x27;) &#123;</span></span><br><span class=\"line\">  <span class=\"comment\">// 创建一个StorageEvent事件</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> newStorageEvent = <span class=\"variable language_\">document</span>.<span class=\"title function_\">createEvent</span>(<span class=\"string\">&#x27;StorageEvent&#x27;</span>)</span><br><span class=\"line\">  <span class=\"keyword\">const</span> storage = &#123;</span><br><span class=\"line\">    <span class=\"attr\">setItem</span>: <span class=\"keyword\">function</span>(<span class=\"params\">k, val</span>) &#123;</span><br><span class=\"line\">      sessionStorage.<span class=\"title function_\">setItem</span>(k, val)</span><br><span class=\"line\">      <span class=\"comment\">// 初始化创建的事件</span></span><br><span class=\"line\">      newStorageEvent.<span class=\"title function_\">initStorageEvent</span>(</span><br><span class=\"line\">        <span class=\"string\">&#x27;setItem&#x27;</span>,</span><br><span class=\"line\">        <span class=\"literal\">false</span>,</span><br><span class=\"line\">        <span class=\"literal\">false</span>,</span><br><span class=\"line\">        k,</span><br><span class=\"line\">        <span class=\"literal\">null</span>,</span><br><span class=\"line\">        val,</span><br><span class=\"line\">        <span class=\"literal\">null</span>,</span><br><span class=\"line\">        <span class=\"literal\">null</span></span><br><span class=\"line\">      )</span><br><span class=\"line\">      <span class=\"comment\">// 派发对象</span></span><br><span class=\"line\">      <span class=\"variable language_\">window</span>.<span class=\"title function_\">dispatchEvent</span>(newStorageEvent)</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> storage.<span class=\"title function_\">setItem</span>(key, newVal)</span><br><span class=\"line\">  <span class=\"comment\">//   &#125;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>2.页面初始化时，添加监听事件</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">window</span>.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;setItem&#x27;</span>, <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\"> <span class=\"variable language_\">this</span>.<span class=\"title function_\">setNum</span>()</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<p>当页面中有调用resetSetItem方法时，会触发setItem事件中的函数，从而触发页面的数据的更新。</p>\n","site":{"data":{}},"excerpt":"","more":"<meta name=\"referrer\" content=\"no-referrer\"/>\n\n<h2 id=\"WebSocket初体验\"><a href=\"#WebSocket初体验\" class=\"headerlink\" title=\"WebSocket初体验\"></a>WebSocket初体验</h2><p>WebSocket是HTML5出的东西（协议），也就是说HTTP协议没有变化，或者说没关系，但HTTP是不支持持久连接的（长连接，循环连接的不算）首先HTTP有1.1和1.0之说，也就是所谓的keep-alive，把多个HTTP请求合并为一个，但是Websocket其实是一个新协议，跟HTTP协议基本没有关系，只是为了兼容现有浏览器的握手规范而已，</p>\n<h3 id=\"需求\"><a href=\"#需求\" class=\"headerlink\" title=\"需求\"></a>需求</h3><p>提供一个图片下载至服务器进度的功能，需要实时获取服务器下载图片的张数。实现方法如下：</p>\n<p>1.直接采用轮询的方法，每隔一段时间请求图片下载数据</p>\n<p>2.采用长连接，建立起ws链接后，可以直接接受到服务器发来的数据，知道有一方主动断开链接</p>\n<h3 id=\"VUE中使用ws\"><a href=\"#VUE中使用ws\" class=\"headerlink\" title=\"VUE中使用ws\"></a>VUE中使用ws</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">createWS</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">     <span class=\"keyword\">let</span> token = sessionStorage.<span class=\"title function_\">getItem</span>(<span class=\"string\">&#x27;token&#x27;</span>)</span><br><span class=\"line\">       ? sessionStorage.<span class=\"title function_\">getItem</span>(<span class=\"string\">&#x27;token&#x27;</span>)</span><br><span class=\"line\">       : <span class=\"literal\">false</span></span><br><span class=\"line\">     <span class=\"keyword\">if</span> (token) &#123;</span><br><span class=\"line\">       <span class=\"comment\">//判断当前浏览器是否支持WebSocket, 主要此处要更换为自己的地址</span></span><br><span class=\"line\">       <span class=\"keyword\">if</span> (<span class=\"string\">&#x27;WebSocket&#x27;</span> <span class=\"keyword\">in</span> <span class=\"variable language_\">window</span>) &#123;</span><br><span class=\"line\">         <span class=\"keyword\">let</span> websocket = <span class=\"keyword\">new</span> <span class=\"title class_\">WebSocket</span>(</span><br><span class=\"line\">           <span class=\"string\">`ws://192.168.1.126:9527/api/litchi/<span class=\"subst\">$&#123;token&#125;</span>`</span></span><br><span class=\"line\">         )</span><br><span class=\"line\">         websocket.<span class=\"property\">onopen</span> = <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">           <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;Connection open ...&#x27;</span>)</span><br><span class=\"line\">           sessionStorage.<span class=\"title function_\">setItem</span>(<span class=\"string\">&#x27;isWSConnectioning&#x27;</span>, <span class=\"literal\">true</span>)</span><br><span class=\"line\">         &#125;</span><br><span class=\"line\">         websocket.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;close&#x27;</span>, <span class=\"function\">(<span class=\"params\">event</span>) =&gt;</span> &#123;</span><br><span class=\"line\">           <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(event, <span class=\"string\">&#x27;关闭的回调&#x27;</span>)</span><br><span class=\"line\">         &#125;)</span><br><span class=\"line\">         websocket.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;error&#x27;</span>, <span class=\"function\">(<span class=\"params\">event</span>) =&gt;</span> &#123;</span><br><span class=\"line\">           <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(event, <span class=\"string\">&#x27;失败的回调&#x27;</span>)</span><br><span class=\"line\">         &#125;)</span><br><span class=\"line\">         <span class=\"comment\">//接收到消息的回调方法</span></span><br><span class=\"line\">         websocket.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;message&#x27;</span>, <span class=\"function\">(<span class=\"params\">event</span>) =&gt;</span> &#123;</span><br><span class=\"line\">           <span class=\"keyword\">if</span> (event.<span class=\"property\">data</span>) &#123;</span><br><span class=\"line\">           &#125;</span><br><span class=\"line\">         &#125;)</span><br><span class=\"line\">         websocket.<span class=\"property\">onmessage</span> = <span class=\"function\">(<span class=\"params\">event</span>) =&gt;</span> &#123;&#125;</span><br><span class=\"line\">       &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">         <span class=\"title function_\">alert</span>(<span class=\"string\">&#x27;Not support websocket&#x27;</span>)</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">   &#125;,</span><br></pre></td></tr></table></figure>\n\n<p>使用Tips：使用步骤非常简单。1.new WebSocket的对象，2.调用对象上的方法，如：open、close、message。3.在对应的事件中进行数据的操作，比如改变页面的进度条和数据。</p>\n<h3 id=\"业务难点\"><a href=\"#业务难点\" class=\"headerlink\" title=\"业务难点\"></a>业务难点</h3><p>实现ws不复杂，但是需求中有额外的要求：当用户切换到其他的页面后，再跳转回ws的进度条页面后，也需要进度的实时更新。</p>\n<p>这里问题则是：1、当跳转到其他页面后，如何保持ws的长连接，2、如何保存当前图片下载进度，3、如何每次进入页面都能够实时更新图片的进度</p>\n<p>解决方案：</p>\n<p>1、因为vue是单页面应用，页面跳转本质是页面的路由更换而已。所有，ws一旦建立了，不会随着页面的跳转而关闭</p>\n<p>2、公共变量的保存一般是1、VueX的store，2、SessionStorage的浏览器缓存</p>\n<p>3、实时的监听1、store的监听可以通过watch实现（未实际考察），2、SessionStorage的监听可以通过‘storage’的事件监听</p>\n<h3 id=\"实现方案\"><a href=\"#实现方案\" class=\"headerlink\" title=\"实现方案\"></a>实现方案</h3><p>采用SessionStorage的方案，监听浏览器缓存事件</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">this</span>.<span class=\"title function_\">resetSetItem</span>(</span><br><span class=\"line\"> <span class=\"string\">&#x27;downCheckedImageListSuccess&#x27;</span>,</span><br><span class=\"line\"> <span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">downCheckedImageListSuccess</span>)</span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n\n<p>上面写了一个自定义的事件resetSetItem，这个事件是用来保存数据入浏览器缓存的。</p>\n<p>为什么不用浏览器的SessionStorage.setItem和 window.addEventListener(‘storage’)事件呢？</p>\n<p>实际使用中发现，当页面跳转后再回到下载进度页面后，监听有失效的情况。没有触发页面的数据更新。（当然有可能是我自己没有搞懂）。总之，查询了搜索引擎后采用了另外一种方案:</p>\n<p>1.main.js中vue原型上添加自定义事件</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 添加全局事件监控方法</span></span><br><span class=\"line\"><span class=\"title class_\">Vue</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">resetSetItem</span> = <span class=\"keyword\">function</span>(<span class=\"params\">key, newVal</span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">//   if (key === &#x27;downCheckedImageListSuccess&#x27;) &#123;</span></span><br><span class=\"line\">  <span class=\"comment\">// 创建一个StorageEvent事件</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> newStorageEvent = <span class=\"variable language_\">document</span>.<span class=\"title function_\">createEvent</span>(<span class=\"string\">&#x27;StorageEvent&#x27;</span>)</span><br><span class=\"line\">  <span class=\"keyword\">const</span> storage = &#123;</span><br><span class=\"line\">    <span class=\"attr\">setItem</span>: <span class=\"keyword\">function</span>(<span class=\"params\">k, val</span>) &#123;</span><br><span class=\"line\">      sessionStorage.<span class=\"title function_\">setItem</span>(k, val)</span><br><span class=\"line\">      <span class=\"comment\">// 初始化创建的事件</span></span><br><span class=\"line\">      newStorageEvent.<span class=\"title function_\">initStorageEvent</span>(</span><br><span class=\"line\">        <span class=\"string\">&#x27;setItem&#x27;</span>,</span><br><span class=\"line\">        <span class=\"literal\">false</span>,</span><br><span class=\"line\">        <span class=\"literal\">false</span>,</span><br><span class=\"line\">        k,</span><br><span class=\"line\">        <span class=\"literal\">null</span>,</span><br><span class=\"line\">        val,</span><br><span class=\"line\">        <span class=\"literal\">null</span>,</span><br><span class=\"line\">        <span class=\"literal\">null</span></span><br><span class=\"line\">      )</span><br><span class=\"line\">      <span class=\"comment\">// 派发对象</span></span><br><span class=\"line\">      <span class=\"variable language_\">window</span>.<span class=\"title function_\">dispatchEvent</span>(newStorageEvent)</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> storage.<span class=\"title function_\">setItem</span>(key, newVal)</span><br><span class=\"line\">  <span class=\"comment\">//   &#125;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>2.页面初始化时，添加监听事件</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">window</span>.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;setItem&#x27;</span>, <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\"> <span class=\"variable language_\">this</span>.<span class=\"title function_\">setNum</span>()</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<p>当页面中有调用resetSetItem方法时，会触发setItem事件中的函数，从而触发页面的数据的更新。</p>\n"},{"title":"上传多个excle到服务器解析","date":"2020-07-12T09:16:26.000Z","_content":"\n<meta name=\"referrer\" content=\"no-referrer\"/>\n\n## 上传多个Excle文件到服务器解析\n\n一般情况下，一个input框选择对应Excle文件后，会通过action直接传输到后端。\n\n新的需求需要选择多个Excle并在最后点击提交的时候一起将多个Excle文件传输过去，这里需要重新设计一个提交功能\n\n<!-- more -->\n\n> 前端解析Excle、提交多个Excle、\n\n### 前端解析Excle\n\n之前都是后端接受到前端传递的file，直接解析Excle并入库，或者返回数据。现在实现多次传递文件，就需要前端来解析Excle文件\n\n> npm install xlsx  \n\n1.  引入解析库\n\n   ```js\n    <input\n         ref=\"excel-upload-input\"\n         class=\"excel-upload-input\"\n         type=\"file\"\n         accept=\".xlsx, .xls\"\n         @change=\"handleClick\"\n       />\n       <el-button\n         :disabled=\"disabledClick\"\n         :loading=\"isLoading\"\n         size=\"small\"\n         @click=\"handleUpload\"\n         type=\"primary\"\n         >导入用户</el-button\n       >\n           \n   import XLSX from 'xlsx'\n   \n   ```\n\n   \n\n2. 前端代码\n\n   ```js\n   export default {\n     props: {\n       beforeUpload: Function, // eslint-disable-line\n       onSuccess: Function, // eslint-disable-line\n       isLoading: Boolean,\n       disabledClick: Boolean,\n     },\n     data() {\n       return {\n         loading: false,\n         excelData: {\n           header: null,\n           results: null,\n         },\n       }\n     },\n     methods: {\n        generateData({ header, results }) {\n         this.excelData.header = header\n         this.excelData.results = results\n         this.onSuccess && this.onSuccess(this.excelData)\n       },\n       handleDrop(e) {\n         e.stopPropagation()\n         e.preventDefault()\n         if (this.loading) return\n         const files = e.dataTransfer.files\n         if (files.length !== 1) {\n           this.$message.error('Only support uploading one file!')\n           return\n         }\n         const rawFile = files[0] // only use files[0]\n   \n         if (!this.isExcel(rawFile)) {\n           this.$message.error(\n             'Only supports upload .xlsx, .xls, .csv suffix files'\n           )\n           return false\n         }\n         this.upload(rawFile)\n         e.stopPropagation()\n         e.preventDefault()\n       },\n       handleDragover(e) {\n         e.stopPropagation()\n         e.preventDefault()\n         e.dataTransfer.dropEffect = 'copy'\n       },\n       handleUpload() {\n         this.$refs['excel-upload-input'].click()\n       },\n       handleClick(e) {\n         const files = e.target.files\n         const rawFile = files[0] // only use files[0]\n         if (!rawFile) return\n         this.upload(rawFile)\n         this.$emit('getFileData', rawFile)\n       },\n       upload(rawFile) {\n         this.$refs['excel-upload-input'].value = null // fix can't select the same excel\n   \n         if (!this.beforeUpload) {\n           this.readerData(rawFile)\n           return\n         }\n         const before = this.beforeUpload(rawFile)\n         if (before) {\n           this.readerData(rawFile)\n         }\n       },\n       readerData(rawFile) {\n         this.loading = true\n         return new Promise((resolve, reject) => {\n           const reader = new FileReader()\n           reader.onload = (e) => {\n             const data = e.target.result\n             const workbook = XLSX.read(data, { type: 'array' })\n             const firstSheetName = workbook.SheetNames[0]\n             const worksheet = workbook.Sheets[firstSheetName]\n             const header = this.getHeaderRow(worksheet)\n             const results = XLSX.utils.sheet_to_json(worksheet)\n             this.generateData({ header, results })\n             this.loading = false\n             resolve()\n           }\n           reader.readAsArrayBuffer(rawFile)\n         })\n       },\n       getHeaderRow(sheet) {\n         const headers = []\n         const range = XLSX.utils.decode_range(sheet['!ref'])\n         let C\n         const R = range.s.r\n         /* start in the first row */\n         for (C = range.s.c; C <= range.e.c; ++C) {\n           /* walk every column in the range */\n           const cell = sheet[XLSX.utils.encode_cell({ c: C, r: R })]\n           /* find the cell in the first row */\n           let hdr = 'UNKNOWN ' + C // <-- replace with your desired default\n           if (cell && cell.t) hdr = XLSX.utils.format_cell(cell)\n           headers.push(hdr)\n         }\n         return headers\n       },\n       isExcel(file) {\n         return /\\.(xlsx|xls|csv)$/.test(file.name)\n       },\n       },\n      }\n   }\n   ```\n\n   \n\n3. 将file提交到父组件\n\n   ```js\n    this.$emit('getFileData', rawFile)\n   ```\n\n#### 提交多个file请求\n\n1. 存储file\n\n   子组件emit提交上去，并临时存储到一个list中。\n\n   ```js\n    <upload-excel-component\n             :on-success=\"handleSuccess\"\n             :before-upload=\"beforeUpload\"\n             @getFileData=\"getFileData\"\n             :disabledClick=\"disabledClick\"\n   />\n   <el-button type=\"primary\" :loading=\"btnLoading\" @click=\"onSubmit\">保存</el-button>\n   import UploadExcelComponent from '@/components/UploadExcel/index.vue'\n   \n   \n   export default {\n     components: { UploadExcelComponent },\n     methods: {\n       getFileData(e) {\n         console.log(e, 'zizujiandeshuju')\n         this.fileList.push(e)\n         this.currentFile = e\n       },\n     }\n   }\n   ```\n\n   \n\n2. 循环提交file\n\n   ```js\n   inputFile(form, id) {\n         return new Promise((resolve, rej) => {\n           let formTem = new FormData() // FormData 对象\n           formTem.append('file', form) // 文件对象\n           api.importSpecifyUser(formTem, { id: id }).then((res) => {\n             if (res.code == 200) {\n               resolve(true)\n             }\n           })\n         })\n       },\n   onSubmit() {\n      let form = new FormData() // FormData 对象\n      form.append('file', this.fileList[0]) // 文件对象\n      this.btnLoading = true\n      let id = await this.firstUpload(form, tem)\n      let cutFileList =\n      this.fileList.length > 1\n                   ? this.fileList.slice(1, this.fileList.length)\n                   : []\n     if (id && cutFileList.length > 0) {\n                 cutFileList.forEach(async (e) => {\n                   await this.inputFile(e, id)\n                 })\n     }\n   }\n   ```\n\n   Tips：1.请求接口里一次只传输一个file，所以采用发送多次请求的形式去传递多个Excle文件\n\n   ​          2. 第一次发送file后，后端会返回给一个id。后续的file请求则类似于更新这个id下的数据，所以，需要采用同步的形式，当第一个请求返回后，再发送后续的file请求。\n\n#### 参考地址\n\n[vue-element-admin](https://panjiachen.github.io/vue-element-admin/#/)","source":"_posts/上传多个excle到服务器解析.md","raw":"---\ntitle: 上传多个excle到服务器解析\ndate: 2020-07-12 17:16:26\ntags: [js,hexo]\n---\n\n<meta name=\"referrer\" content=\"no-referrer\"/>\n\n## 上传多个Excle文件到服务器解析\n\n一般情况下，一个input框选择对应Excle文件后，会通过action直接传输到后端。\n\n新的需求需要选择多个Excle并在最后点击提交的时候一起将多个Excle文件传输过去，这里需要重新设计一个提交功能\n\n<!-- more -->\n\n> 前端解析Excle、提交多个Excle、\n\n### 前端解析Excle\n\n之前都是后端接受到前端传递的file，直接解析Excle并入库，或者返回数据。现在实现多次传递文件，就需要前端来解析Excle文件\n\n> npm install xlsx  \n\n1.  引入解析库\n\n   ```js\n    <input\n         ref=\"excel-upload-input\"\n         class=\"excel-upload-input\"\n         type=\"file\"\n         accept=\".xlsx, .xls\"\n         @change=\"handleClick\"\n       />\n       <el-button\n         :disabled=\"disabledClick\"\n         :loading=\"isLoading\"\n         size=\"small\"\n         @click=\"handleUpload\"\n         type=\"primary\"\n         >导入用户</el-button\n       >\n           \n   import XLSX from 'xlsx'\n   \n   ```\n\n   \n\n2. 前端代码\n\n   ```js\n   export default {\n     props: {\n       beforeUpload: Function, // eslint-disable-line\n       onSuccess: Function, // eslint-disable-line\n       isLoading: Boolean,\n       disabledClick: Boolean,\n     },\n     data() {\n       return {\n         loading: false,\n         excelData: {\n           header: null,\n           results: null,\n         },\n       }\n     },\n     methods: {\n        generateData({ header, results }) {\n         this.excelData.header = header\n         this.excelData.results = results\n         this.onSuccess && this.onSuccess(this.excelData)\n       },\n       handleDrop(e) {\n         e.stopPropagation()\n         e.preventDefault()\n         if (this.loading) return\n         const files = e.dataTransfer.files\n         if (files.length !== 1) {\n           this.$message.error('Only support uploading one file!')\n           return\n         }\n         const rawFile = files[0] // only use files[0]\n   \n         if (!this.isExcel(rawFile)) {\n           this.$message.error(\n             'Only supports upload .xlsx, .xls, .csv suffix files'\n           )\n           return false\n         }\n         this.upload(rawFile)\n         e.stopPropagation()\n         e.preventDefault()\n       },\n       handleDragover(e) {\n         e.stopPropagation()\n         e.preventDefault()\n         e.dataTransfer.dropEffect = 'copy'\n       },\n       handleUpload() {\n         this.$refs['excel-upload-input'].click()\n       },\n       handleClick(e) {\n         const files = e.target.files\n         const rawFile = files[0] // only use files[0]\n         if (!rawFile) return\n         this.upload(rawFile)\n         this.$emit('getFileData', rawFile)\n       },\n       upload(rawFile) {\n         this.$refs['excel-upload-input'].value = null // fix can't select the same excel\n   \n         if (!this.beforeUpload) {\n           this.readerData(rawFile)\n           return\n         }\n         const before = this.beforeUpload(rawFile)\n         if (before) {\n           this.readerData(rawFile)\n         }\n       },\n       readerData(rawFile) {\n         this.loading = true\n         return new Promise((resolve, reject) => {\n           const reader = new FileReader()\n           reader.onload = (e) => {\n             const data = e.target.result\n             const workbook = XLSX.read(data, { type: 'array' })\n             const firstSheetName = workbook.SheetNames[0]\n             const worksheet = workbook.Sheets[firstSheetName]\n             const header = this.getHeaderRow(worksheet)\n             const results = XLSX.utils.sheet_to_json(worksheet)\n             this.generateData({ header, results })\n             this.loading = false\n             resolve()\n           }\n           reader.readAsArrayBuffer(rawFile)\n         })\n       },\n       getHeaderRow(sheet) {\n         const headers = []\n         const range = XLSX.utils.decode_range(sheet['!ref'])\n         let C\n         const R = range.s.r\n         /* start in the first row */\n         for (C = range.s.c; C <= range.e.c; ++C) {\n           /* walk every column in the range */\n           const cell = sheet[XLSX.utils.encode_cell({ c: C, r: R })]\n           /* find the cell in the first row */\n           let hdr = 'UNKNOWN ' + C // <-- replace with your desired default\n           if (cell && cell.t) hdr = XLSX.utils.format_cell(cell)\n           headers.push(hdr)\n         }\n         return headers\n       },\n       isExcel(file) {\n         return /\\.(xlsx|xls|csv)$/.test(file.name)\n       },\n       },\n      }\n   }\n   ```\n\n   \n\n3. 将file提交到父组件\n\n   ```js\n    this.$emit('getFileData', rawFile)\n   ```\n\n#### 提交多个file请求\n\n1. 存储file\n\n   子组件emit提交上去，并临时存储到一个list中。\n\n   ```js\n    <upload-excel-component\n             :on-success=\"handleSuccess\"\n             :before-upload=\"beforeUpload\"\n             @getFileData=\"getFileData\"\n             :disabledClick=\"disabledClick\"\n   />\n   <el-button type=\"primary\" :loading=\"btnLoading\" @click=\"onSubmit\">保存</el-button>\n   import UploadExcelComponent from '@/components/UploadExcel/index.vue'\n   \n   \n   export default {\n     components: { UploadExcelComponent },\n     methods: {\n       getFileData(e) {\n         console.log(e, 'zizujiandeshuju')\n         this.fileList.push(e)\n         this.currentFile = e\n       },\n     }\n   }\n   ```\n\n   \n\n2. 循环提交file\n\n   ```js\n   inputFile(form, id) {\n         return new Promise((resolve, rej) => {\n           let formTem = new FormData() // FormData 对象\n           formTem.append('file', form) // 文件对象\n           api.importSpecifyUser(formTem, { id: id }).then((res) => {\n             if (res.code == 200) {\n               resolve(true)\n             }\n           })\n         })\n       },\n   onSubmit() {\n      let form = new FormData() // FormData 对象\n      form.append('file', this.fileList[0]) // 文件对象\n      this.btnLoading = true\n      let id = await this.firstUpload(form, tem)\n      let cutFileList =\n      this.fileList.length > 1\n                   ? this.fileList.slice(1, this.fileList.length)\n                   : []\n     if (id && cutFileList.length > 0) {\n                 cutFileList.forEach(async (e) => {\n                   await this.inputFile(e, id)\n                 })\n     }\n   }\n   ```\n\n   Tips：1.请求接口里一次只传输一个file，所以采用发送多次请求的形式去传递多个Excle文件\n\n   ​          2. 第一次发送file后，后端会返回给一个id。后续的file请求则类似于更新这个id下的数据，所以，需要采用同步的形式，当第一个请求返回后，再发送后续的file请求。\n\n#### 参考地址\n\n[vue-element-admin](https://panjiachen.github.io/vue-element-admin/#/)","slug":"上传多个excle到服务器解析","published":1,"updated":"2021-02-19T08:34:00.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl0uux6vq000s7sufcix7b2cn","content":"<meta name=\"referrer\" content=\"no-referrer\"/>\n\n<h2 id=\"上传多个Excle文件到服务器解析\"><a href=\"#上传多个Excle文件到服务器解析\" class=\"headerlink\" title=\"上传多个Excle文件到服务器解析\"></a>上传多个Excle文件到服务器解析</h2><p>一般情况下，一个input框选择对应Excle文件后，会通过action直接传输到后端。</p>\n<p>新的需求需要选择多个Excle并在最后点击提交的时候一起将多个Excle文件传输过去，这里需要重新设计一个提交功能</p>\n<span id=\"more\"></span>\n\n<blockquote>\n<p>前端解析Excle、提交多个Excle、</p>\n</blockquote>\n<h3 id=\"前端解析Excle\"><a href=\"#前端解析Excle\" class=\"headerlink\" title=\"前端解析Excle\"></a>前端解析Excle</h3><p>之前都是后端接受到前端传递的file，直接解析Excle并入库，或者返回数据。现在实现多次传递文件，就需要前端来解析Excle文件</p>\n<blockquote>\n<p>npm install xlsx  </p>\n</blockquote>\n<ol>\n<li> 引入解析库</li>\n</ol>\n   <figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> &lt;input</span><br><span class=\"line\">      ref=<span class=\"string\">&quot;excel-upload-input&quot;</span></span><br><span class=\"line\">      <span class=\"keyword\">class</span>=<span class=\"string\">&quot;excel-upload-input&quot;</span></span><br><span class=\"line\">      type=<span class=\"string\">&quot;file&quot;</span></span><br><span class=\"line\">      accept=<span class=\"string\">&quot;.xlsx, .xls&quot;</span></span><br><span class=\"line\">      @change=<span class=\"string\">&quot;handleClick&quot;</span></span><br><span class=\"line\">    /&gt;</span><br><span class=\"line\">    <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">el-button</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">      <span class=\"attr\">:disabled</span>=<span class=\"string\">&quot;disabledClick&quot;</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">      <span class=\"attr\">:loading</span>=<span class=\"string\">&quot;isLoading&quot;</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">      <span class=\"attr\">size</span>=<span class=\"string\">&quot;small&quot;</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">      @<span class=\"attr\">click</span>=<span class=\"string\">&quot;handleUpload&quot;</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">      <span class=\"attr\">type</span>=<span class=\"string\">&quot;primary&quot;</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">      &gt;</span>导入用户&lt;/el-button</span></span><br><span class=\"line\"><span class=\"language-xml\">    &gt;</span></span><br><span class=\"line\"><span class=\"language-xml\">        </span></span><br><span class=\"line\"><span class=\"language-xml\">import XLSX from &#x27;xlsx&#x27;</span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li><p>前端代码</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">  <span class=\"attr\">props</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">beforeUpload</span>: <span class=\"title class_\">Function</span>, <span class=\"comment\">// eslint-disable-line</span></span><br><span class=\"line\">    <span class=\"attr\">onSuccess</span>: <span class=\"title class_\">Function</span>, <span class=\"comment\">// eslint-disable-line</span></span><br><span class=\"line\">    <span class=\"attr\">isLoading</span>: <span class=\"title class_\">Boolean</span>,</span><br><span class=\"line\">    <span class=\"attr\">disabledClick</span>: <span class=\"title class_\">Boolean</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"title function_\">data</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">      <span class=\"attr\">loading</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">      <span class=\"attr\">excelData</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">header</span>: <span class=\"literal\">null</span>,</span><br><span class=\"line\">        <span class=\"attr\">results</span>: <span class=\"literal\">null</span>,</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">methods</span>: &#123;</span><br><span class=\"line\">     <span class=\"title function_\">generateData</span>(<span class=\"params\">&#123; header, results &#125;</span>) &#123;</span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"property\">excelData</span>.<span class=\"property\">header</span> = header</span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"property\">excelData</span>.<span class=\"property\">results</span> = results</span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"property\">onSuccess</span> &amp;&amp; <span class=\"variable language_\">this</span>.<span class=\"title function_\">onSuccess</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">excelData</span>)</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"title function_\">handleDrop</span>(<span class=\"params\">e</span>) &#123;</span><br><span class=\"line\">      e.<span class=\"title function_\">stopPropagation</span>()</span><br><span class=\"line\">      e.<span class=\"title function_\">preventDefault</span>()</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (<span class=\"variable language_\">this</span>.<span class=\"property\">loading</span>) <span class=\"keyword\">return</span></span><br><span class=\"line\">      <span class=\"keyword\">const</span> files = e.<span class=\"property\">dataTransfer</span>.<span class=\"property\">files</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (files.<span class=\"property\">length</span> !== <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">$message</span>.<span class=\"title function_\">error</span>(<span class=\"string\">&#x27;Only support uploading one file!&#x27;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">return</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> rawFile = files[<span class=\"number\">0</span>] <span class=\"comment\">// only use files[0]</span></span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (!<span class=\"variable language_\">this</span>.<span class=\"title function_\">isExcel</span>(rawFile)) &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">$message</span>.<span class=\"title function_\">error</span>(</span><br><span class=\"line\">          <span class=\"string\">&#x27;Only supports upload .xlsx, .xls, .csv suffix files&#x27;</span></span><br><span class=\"line\">        )</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"title function_\">upload</span>(rawFile)</span><br><span class=\"line\">      e.<span class=\"title function_\">stopPropagation</span>()</span><br><span class=\"line\">      e.<span class=\"title function_\">preventDefault</span>()</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"title function_\">handleDragover</span>(<span class=\"params\">e</span>) &#123;</span><br><span class=\"line\">      e.<span class=\"title function_\">stopPropagation</span>()</span><br><span class=\"line\">      e.<span class=\"title function_\">preventDefault</span>()</span><br><span class=\"line\">      e.<span class=\"property\">dataTransfer</span>.<span class=\"property\">dropEffect</span> = <span class=\"string\">&#x27;copy&#x27;</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"title function_\">handleUpload</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"property\">$refs</span>[<span class=\"string\">&#x27;excel-upload-input&#x27;</span>].<span class=\"title function_\">click</span>()</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"title function_\">handleClick</span>(<span class=\"params\">e</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> files = e.<span class=\"property\">target</span>.<span class=\"property\">files</span></span><br><span class=\"line\">      <span class=\"keyword\">const</span> rawFile = files[<span class=\"number\">0</span>] <span class=\"comment\">// only use files[0]</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (!rawFile) <span class=\"keyword\">return</span></span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"title function_\">upload</span>(rawFile)</span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.$emit(<span class=\"string\">&#x27;getFileData&#x27;</span>, rawFile)</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"title function_\">upload</span>(<span class=\"params\">rawFile</span>) &#123;</span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"property\">$refs</span>[<span class=\"string\">&#x27;excel-upload-input&#x27;</span>].<span class=\"property\">value</span> = <span class=\"literal\">null</span> <span class=\"comment\">// fix can&#x27;t select the same excel</span></span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (!<span class=\"variable language_\">this</span>.<span class=\"property\">beforeUpload</span>) &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"title function_\">readerData</span>(rawFile)</span><br><span class=\"line\">        <span class=\"keyword\">return</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> before = <span class=\"variable language_\">this</span>.<span class=\"title function_\">beforeUpload</span>(rawFile)</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (before) &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"title function_\">readerData</span>(rawFile)</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"title function_\">readerData</span>(<span class=\"params\">rawFile</span>) &#123;</span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"property\">loading</span> = <span class=\"literal\">true</span></span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> reader = <span class=\"keyword\">new</span> <span class=\"title class_\">FileReader</span>()</span><br><span class=\"line\">        reader.<span class=\"property\">onload</span> = <span class=\"function\">(<span class=\"params\">e</span>) =&gt;</span> &#123;</span><br><span class=\"line\">          <span class=\"keyword\">const</span> data = e.<span class=\"property\">target</span>.<span class=\"property\">result</span></span><br><span class=\"line\">          <span class=\"keyword\">const</span> workbook = <span class=\"variable constant_\">XLSX</span>.<span class=\"title function_\">read</span>(data, &#123; <span class=\"attr\">type</span>: <span class=\"string\">&#x27;array&#x27;</span> &#125;)</span><br><span class=\"line\">          <span class=\"keyword\">const</span> firstSheetName = workbook.<span class=\"property\">SheetNames</span>[<span class=\"number\">0</span>]</span><br><span class=\"line\">          <span class=\"keyword\">const</span> worksheet = workbook.<span class=\"property\">Sheets</span>[firstSheetName]</span><br><span class=\"line\">          <span class=\"keyword\">const</span> header = <span class=\"variable language_\">this</span>.<span class=\"title function_\">getHeaderRow</span>(worksheet)</span><br><span class=\"line\">          <span class=\"keyword\">const</span> results = <span class=\"variable constant_\">XLSX</span>.<span class=\"property\">utils</span>.<span class=\"title function_\">sheet_to_json</span>(worksheet)</span><br><span class=\"line\">          <span class=\"variable language_\">this</span>.<span class=\"title function_\">generateData</span>(&#123; header, results &#125;)</span><br><span class=\"line\">          <span class=\"variable language_\">this</span>.<span class=\"property\">loading</span> = <span class=\"literal\">false</span></span><br><span class=\"line\">          <span class=\"title function_\">resolve</span>()</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        reader.<span class=\"title function_\">readAsArrayBuffer</span>(rawFile)</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"title function_\">getHeaderRow</span>(<span class=\"params\">sheet</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> headers = []</span><br><span class=\"line\">      <span class=\"keyword\">const</span> range = <span class=\"variable constant_\">XLSX</span>.<span class=\"property\">utils</span>.<span class=\"title function_\">decode_range</span>(sheet[<span class=\"string\">&#x27;!ref&#x27;</span>])</span><br><span class=\"line\">      <span class=\"keyword\">let</span> C</span><br><span class=\"line\">      <span class=\"keyword\">const</span> R = range.<span class=\"property\">s</span>.<span class=\"property\">r</span></span><br><span class=\"line\">      <span class=\"comment\">/* start in the first row */</span></span><br><span class=\"line\">      <span class=\"keyword\">for</span> (C = range.<span class=\"property\">s</span>.<span class=\"property\">c</span>; C &lt;= range.<span class=\"property\">e</span>.<span class=\"property\">c</span>; ++C) &#123;</span><br><span class=\"line\">        <span class=\"comment\">/* walk every column in the range */</span></span><br><span class=\"line\">        <span class=\"keyword\">const</span> cell = sheet[<span class=\"variable constant_\">XLSX</span>.<span class=\"property\">utils</span>.<span class=\"title function_\">encode_cell</span>(&#123; <span class=\"attr\">c</span>: C, <span class=\"attr\">r</span>: R &#125;)]</span><br><span class=\"line\">        <span class=\"comment\">/* find the cell in the first row */</span></span><br><span class=\"line\">        <span class=\"keyword\">let</span> hdr = <span class=\"string\">&#x27;UNKNOWN &#x27;</span> + C <span class=\"comment\">// &lt;-- replace with your desired default</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (cell &amp;&amp; cell.<span class=\"property\">t</span>) hdr = <span class=\"variable constant_\">XLSX</span>.<span class=\"property\">utils</span>.<span class=\"title function_\">format_cell</span>(cell)</span><br><span class=\"line\">        headers.<span class=\"title function_\">push</span>(hdr)</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> headers</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"title function_\">isExcel</span>(<span class=\"params\">file</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"regexp\">/\\.(xlsx|xls|csv)$/</span>.<span class=\"title function_\">test</span>(file.<span class=\"property\">name</span>)</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li><p>将file提交到父组件</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">this</span>.$emit(<span class=\"string\">&#x27;getFileData&#x27;</span>, rawFile)</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h4 id=\"提交多个file请求\"><a href=\"#提交多个file请求\" class=\"headerlink\" title=\"提交多个file请求\"></a>提交多个file请求</h4><ol>\n<li><p>存储file</p>\n<p>子组件emit提交上去，并临时存储到一个list中。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> &lt;upload-excel-component</span><br><span class=\"line\">          :on-success=<span class=\"string\">&quot;handleSuccess&quot;</span></span><br><span class=\"line\">          :before-upload=<span class=\"string\">&quot;beforeUpload&quot;</span></span><br><span class=\"line\">          @getFileData=<span class=\"string\">&quot;getFileData&quot;</span></span><br><span class=\"line\">          :disabledClick=<span class=\"string\">&quot;disabledClick&quot;</span></span><br><span class=\"line\">/&gt;</span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">el-button</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;primary&quot;</span> <span class=\"attr\">:loading</span>=<span class=\"string\">&quot;btnLoading&quot;</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;onSubmit&quot;</span>&gt;</span>保存<span class=\"tag\">&lt;/<span class=\"name\">el-button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">UploadExcelComponent</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;@/components/UploadExcel/index.vue&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">  <span class=\"attr\">components</span>: &#123; <span class=\"title class_\">UploadExcelComponent</span> &#125;,</span><br><span class=\"line\">  <span class=\"attr\">methods</span>: &#123;</span><br><span class=\"line\">    <span class=\"title function_\">getFileData</span>(<span class=\"params\">e</span>) &#123;</span><br><span class=\"line\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(e, <span class=\"string\">&#x27;zizujiandeshuju&#x27;</span>)</span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"property\">fileList</span>.<span class=\"title function_\">push</span>(e)</span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"property\">currentFile</span> = e</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li><p>循环提交file</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">inputFile</span>(<span class=\"params\">form, id</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, rej</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> formTem = <span class=\"keyword\">new</span> <span class=\"title class_\">FormData</span>() <span class=\"comment\">// FormData 对象</span></span><br><span class=\"line\">        formTem.<span class=\"title function_\">append</span>(<span class=\"string\">&#x27;file&#x27;</span>, form) <span class=\"comment\">// 文件对象</span></span><br><span class=\"line\">        api.<span class=\"title function_\">importSpecifyUser</span>(formTem, &#123; <span class=\"attr\">id</span>: id &#125;).<span class=\"title function_\">then</span>(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> &#123;</span><br><span class=\"line\">          <span class=\"keyword\">if</span> (res.<span class=\"property\">code</span> == <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">            <span class=\"title function_\">resolve</span>(<span class=\"literal\">true</span>)</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\"><span class=\"title function_\">onSubmit</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">   <span class=\"keyword\">let</span> form = <span class=\"keyword\">new</span> <span class=\"title class_\">FormData</span>() <span class=\"comment\">// FormData 对象</span></span><br><span class=\"line\">   form.<span class=\"title function_\">append</span>(<span class=\"string\">&#x27;file&#x27;</span>, <span class=\"variable language_\">this</span>.<span class=\"property\">fileList</span>[<span class=\"number\">0</span>]) <span class=\"comment\">// 文件对象</span></span><br><span class=\"line\">   <span class=\"variable language_\">this</span>.<span class=\"property\">btnLoading</span> = <span class=\"literal\">true</span></span><br><span class=\"line\">   <span class=\"keyword\">let</span> id = <span class=\"keyword\">await</span> <span class=\"variable language_\">this</span>.<span class=\"title function_\">firstUpload</span>(form, tem)</span><br><span class=\"line\">   <span class=\"keyword\">let</span> cutFileList =</span><br><span class=\"line\">   <span class=\"variable language_\">this</span>.<span class=\"property\">fileList</span>.<span class=\"property\">length</span> &gt; <span class=\"number\">1</span></span><br><span class=\"line\">                ? <span class=\"variable language_\">this</span>.<span class=\"property\">fileList</span>.<span class=\"title function_\">slice</span>(<span class=\"number\">1</span>, <span class=\"variable language_\">this</span>.<span class=\"property\">fileList</span>.<span class=\"property\">length</span>)</span><br><span class=\"line\">                : []</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (id &amp;&amp; cutFileList.<span class=\"property\">length</span> &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">              cutFileList.<span class=\"title function_\">forEach</span>(<span class=\"keyword\">async</span> (e) =&gt; &#123;</span><br><span class=\"line\">                <span class=\"keyword\">await</span> <span class=\"variable language_\">this</span>.<span class=\"title function_\">inputFile</span>(e, id)</span><br><span class=\"line\">              &#125;)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>Tips：1.请求接口里一次只传输一个file，所以采用发送多次请求的形式去传递多个Excle文件</p>\n<p>​          2. 第一次发送file后，后端会返回给一个id。后续的file请求则类似于更新这个id下的数据，所以，需要采用同步的形式，当第一个请求返回后，再发送后续的file请求。</p>\n</li>\n</ol>\n<h4 id=\"参考地址\"><a href=\"#参考地址\" class=\"headerlink\" title=\"参考地址\"></a>参考地址</h4><p><a href=\"https://panjiachen.github.io/vue-element-admin/#/\">vue-element-admin</a></p>\n","site":{"data":{}},"excerpt":"<meta name=\"referrer\" content=\"no-referrer\"/>\n\n<h2 id=\"上传多个Excle文件到服务器解析\"><a href=\"#上传多个Excle文件到服务器解析\" class=\"headerlink\" title=\"上传多个Excle文件到服务器解析\"></a>上传多个Excle文件到服务器解析</h2><p>一般情况下，一个input框选择对应Excle文件后，会通过action直接传输到后端。</p>\n<p>新的需求需要选择多个Excle并在最后点击提交的时候一起将多个Excle文件传输过去，这里需要重新设计一个提交功能</p>","more":"<blockquote>\n<p>前端解析Excle、提交多个Excle、</p>\n</blockquote>\n<h3 id=\"前端解析Excle\"><a href=\"#前端解析Excle\" class=\"headerlink\" title=\"前端解析Excle\"></a>前端解析Excle</h3><p>之前都是后端接受到前端传递的file，直接解析Excle并入库，或者返回数据。现在实现多次传递文件，就需要前端来解析Excle文件</p>\n<blockquote>\n<p>npm install xlsx  </p>\n</blockquote>\n<ol>\n<li> 引入解析库</li>\n</ol>\n   <figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> &lt;input</span><br><span class=\"line\">      ref=<span class=\"string\">&quot;excel-upload-input&quot;</span></span><br><span class=\"line\">      <span class=\"keyword\">class</span>=<span class=\"string\">&quot;excel-upload-input&quot;</span></span><br><span class=\"line\">      type=<span class=\"string\">&quot;file&quot;</span></span><br><span class=\"line\">      accept=<span class=\"string\">&quot;.xlsx, .xls&quot;</span></span><br><span class=\"line\">      @change=<span class=\"string\">&quot;handleClick&quot;</span></span><br><span class=\"line\">    /&gt;</span><br><span class=\"line\">    <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">el-button</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">      <span class=\"attr\">:disabled</span>=<span class=\"string\">&quot;disabledClick&quot;</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">      <span class=\"attr\">:loading</span>=<span class=\"string\">&quot;isLoading&quot;</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">      <span class=\"attr\">size</span>=<span class=\"string\">&quot;small&quot;</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">      @<span class=\"attr\">click</span>=<span class=\"string\">&quot;handleUpload&quot;</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">      <span class=\"attr\">type</span>=<span class=\"string\">&quot;primary&quot;</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">      &gt;</span>导入用户&lt;/el-button</span></span><br><span class=\"line\"><span class=\"language-xml\">    &gt;</span></span><br><span class=\"line\"><span class=\"language-xml\">        </span></span><br><span class=\"line\"><span class=\"language-xml\">import XLSX from &#x27;xlsx&#x27;</span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li><p>前端代码</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">  <span class=\"attr\">props</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">beforeUpload</span>: <span class=\"title class_\">Function</span>, <span class=\"comment\">// eslint-disable-line</span></span><br><span class=\"line\">    <span class=\"attr\">onSuccess</span>: <span class=\"title class_\">Function</span>, <span class=\"comment\">// eslint-disable-line</span></span><br><span class=\"line\">    <span class=\"attr\">isLoading</span>: <span class=\"title class_\">Boolean</span>,</span><br><span class=\"line\">    <span class=\"attr\">disabledClick</span>: <span class=\"title class_\">Boolean</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"title function_\">data</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">      <span class=\"attr\">loading</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">      <span class=\"attr\">excelData</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">header</span>: <span class=\"literal\">null</span>,</span><br><span class=\"line\">        <span class=\"attr\">results</span>: <span class=\"literal\">null</span>,</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">methods</span>: &#123;</span><br><span class=\"line\">     <span class=\"title function_\">generateData</span>(<span class=\"params\">&#123; header, results &#125;</span>) &#123;</span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"property\">excelData</span>.<span class=\"property\">header</span> = header</span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"property\">excelData</span>.<span class=\"property\">results</span> = results</span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"property\">onSuccess</span> &amp;&amp; <span class=\"variable language_\">this</span>.<span class=\"title function_\">onSuccess</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">excelData</span>)</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"title function_\">handleDrop</span>(<span class=\"params\">e</span>) &#123;</span><br><span class=\"line\">      e.<span class=\"title function_\">stopPropagation</span>()</span><br><span class=\"line\">      e.<span class=\"title function_\">preventDefault</span>()</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (<span class=\"variable language_\">this</span>.<span class=\"property\">loading</span>) <span class=\"keyword\">return</span></span><br><span class=\"line\">      <span class=\"keyword\">const</span> files = e.<span class=\"property\">dataTransfer</span>.<span class=\"property\">files</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (files.<span class=\"property\">length</span> !== <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">$message</span>.<span class=\"title function_\">error</span>(<span class=\"string\">&#x27;Only support uploading one file!&#x27;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">return</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> rawFile = files[<span class=\"number\">0</span>] <span class=\"comment\">// only use files[0]</span></span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (!<span class=\"variable language_\">this</span>.<span class=\"title function_\">isExcel</span>(rawFile)) &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">$message</span>.<span class=\"title function_\">error</span>(</span><br><span class=\"line\">          <span class=\"string\">&#x27;Only supports upload .xlsx, .xls, .csv suffix files&#x27;</span></span><br><span class=\"line\">        )</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"title function_\">upload</span>(rawFile)</span><br><span class=\"line\">      e.<span class=\"title function_\">stopPropagation</span>()</span><br><span class=\"line\">      e.<span class=\"title function_\">preventDefault</span>()</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"title function_\">handleDragover</span>(<span class=\"params\">e</span>) &#123;</span><br><span class=\"line\">      e.<span class=\"title function_\">stopPropagation</span>()</span><br><span class=\"line\">      e.<span class=\"title function_\">preventDefault</span>()</span><br><span class=\"line\">      e.<span class=\"property\">dataTransfer</span>.<span class=\"property\">dropEffect</span> = <span class=\"string\">&#x27;copy&#x27;</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"title function_\">handleUpload</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"property\">$refs</span>[<span class=\"string\">&#x27;excel-upload-input&#x27;</span>].<span class=\"title function_\">click</span>()</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"title function_\">handleClick</span>(<span class=\"params\">e</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> files = e.<span class=\"property\">target</span>.<span class=\"property\">files</span></span><br><span class=\"line\">      <span class=\"keyword\">const</span> rawFile = files[<span class=\"number\">0</span>] <span class=\"comment\">// only use files[0]</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (!rawFile) <span class=\"keyword\">return</span></span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"title function_\">upload</span>(rawFile)</span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.$emit(<span class=\"string\">&#x27;getFileData&#x27;</span>, rawFile)</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"title function_\">upload</span>(<span class=\"params\">rawFile</span>) &#123;</span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"property\">$refs</span>[<span class=\"string\">&#x27;excel-upload-input&#x27;</span>].<span class=\"property\">value</span> = <span class=\"literal\">null</span> <span class=\"comment\">// fix can&#x27;t select the same excel</span></span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (!<span class=\"variable language_\">this</span>.<span class=\"property\">beforeUpload</span>) &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"title function_\">readerData</span>(rawFile)</span><br><span class=\"line\">        <span class=\"keyword\">return</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> before = <span class=\"variable language_\">this</span>.<span class=\"title function_\">beforeUpload</span>(rawFile)</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (before) &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"title function_\">readerData</span>(rawFile)</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"title function_\">readerData</span>(<span class=\"params\">rawFile</span>) &#123;</span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"property\">loading</span> = <span class=\"literal\">true</span></span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> reader = <span class=\"keyword\">new</span> <span class=\"title class_\">FileReader</span>()</span><br><span class=\"line\">        reader.<span class=\"property\">onload</span> = <span class=\"function\">(<span class=\"params\">e</span>) =&gt;</span> &#123;</span><br><span class=\"line\">          <span class=\"keyword\">const</span> data = e.<span class=\"property\">target</span>.<span class=\"property\">result</span></span><br><span class=\"line\">          <span class=\"keyword\">const</span> workbook = <span class=\"variable constant_\">XLSX</span>.<span class=\"title function_\">read</span>(data, &#123; <span class=\"attr\">type</span>: <span class=\"string\">&#x27;array&#x27;</span> &#125;)</span><br><span class=\"line\">          <span class=\"keyword\">const</span> firstSheetName = workbook.<span class=\"property\">SheetNames</span>[<span class=\"number\">0</span>]</span><br><span class=\"line\">          <span class=\"keyword\">const</span> worksheet = workbook.<span class=\"property\">Sheets</span>[firstSheetName]</span><br><span class=\"line\">          <span class=\"keyword\">const</span> header = <span class=\"variable language_\">this</span>.<span class=\"title function_\">getHeaderRow</span>(worksheet)</span><br><span class=\"line\">          <span class=\"keyword\">const</span> results = <span class=\"variable constant_\">XLSX</span>.<span class=\"property\">utils</span>.<span class=\"title function_\">sheet_to_json</span>(worksheet)</span><br><span class=\"line\">          <span class=\"variable language_\">this</span>.<span class=\"title function_\">generateData</span>(&#123; header, results &#125;)</span><br><span class=\"line\">          <span class=\"variable language_\">this</span>.<span class=\"property\">loading</span> = <span class=\"literal\">false</span></span><br><span class=\"line\">          <span class=\"title function_\">resolve</span>()</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        reader.<span class=\"title function_\">readAsArrayBuffer</span>(rawFile)</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"title function_\">getHeaderRow</span>(<span class=\"params\">sheet</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> headers = []</span><br><span class=\"line\">      <span class=\"keyword\">const</span> range = <span class=\"variable constant_\">XLSX</span>.<span class=\"property\">utils</span>.<span class=\"title function_\">decode_range</span>(sheet[<span class=\"string\">&#x27;!ref&#x27;</span>])</span><br><span class=\"line\">      <span class=\"keyword\">let</span> C</span><br><span class=\"line\">      <span class=\"keyword\">const</span> R = range.<span class=\"property\">s</span>.<span class=\"property\">r</span></span><br><span class=\"line\">      <span class=\"comment\">/* start in the first row */</span></span><br><span class=\"line\">      <span class=\"keyword\">for</span> (C = range.<span class=\"property\">s</span>.<span class=\"property\">c</span>; C &lt;= range.<span class=\"property\">e</span>.<span class=\"property\">c</span>; ++C) &#123;</span><br><span class=\"line\">        <span class=\"comment\">/* walk every column in the range */</span></span><br><span class=\"line\">        <span class=\"keyword\">const</span> cell = sheet[<span class=\"variable constant_\">XLSX</span>.<span class=\"property\">utils</span>.<span class=\"title function_\">encode_cell</span>(&#123; <span class=\"attr\">c</span>: C, <span class=\"attr\">r</span>: R &#125;)]</span><br><span class=\"line\">        <span class=\"comment\">/* find the cell in the first row */</span></span><br><span class=\"line\">        <span class=\"keyword\">let</span> hdr = <span class=\"string\">&#x27;UNKNOWN &#x27;</span> + C <span class=\"comment\">// &lt;-- replace with your desired default</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (cell &amp;&amp; cell.<span class=\"property\">t</span>) hdr = <span class=\"variable constant_\">XLSX</span>.<span class=\"property\">utils</span>.<span class=\"title function_\">format_cell</span>(cell)</span><br><span class=\"line\">        headers.<span class=\"title function_\">push</span>(hdr)</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> headers</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"title function_\">isExcel</span>(<span class=\"params\">file</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"regexp\">/\\.(xlsx|xls|csv)$/</span>.<span class=\"title function_\">test</span>(file.<span class=\"property\">name</span>)</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li><p>将file提交到父组件</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">this</span>.$emit(<span class=\"string\">&#x27;getFileData&#x27;</span>, rawFile)</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h4 id=\"提交多个file请求\"><a href=\"#提交多个file请求\" class=\"headerlink\" title=\"提交多个file请求\"></a>提交多个file请求</h4><ol>\n<li><p>存储file</p>\n<p>子组件emit提交上去，并临时存储到一个list中。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> &lt;upload-excel-component</span><br><span class=\"line\">          :on-success=<span class=\"string\">&quot;handleSuccess&quot;</span></span><br><span class=\"line\">          :before-upload=<span class=\"string\">&quot;beforeUpload&quot;</span></span><br><span class=\"line\">          @getFileData=<span class=\"string\">&quot;getFileData&quot;</span></span><br><span class=\"line\">          :disabledClick=<span class=\"string\">&quot;disabledClick&quot;</span></span><br><span class=\"line\">/&gt;</span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">el-button</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;primary&quot;</span> <span class=\"attr\">:loading</span>=<span class=\"string\">&quot;btnLoading&quot;</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;onSubmit&quot;</span>&gt;</span>保存<span class=\"tag\">&lt;/<span class=\"name\">el-button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">UploadExcelComponent</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;@/components/UploadExcel/index.vue&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">  <span class=\"attr\">components</span>: &#123; <span class=\"title class_\">UploadExcelComponent</span> &#125;,</span><br><span class=\"line\">  <span class=\"attr\">methods</span>: &#123;</span><br><span class=\"line\">    <span class=\"title function_\">getFileData</span>(<span class=\"params\">e</span>) &#123;</span><br><span class=\"line\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(e, <span class=\"string\">&#x27;zizujiandeshuju&#x27;</span>)</span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"property\">fileList</span>.<span class=\"title function_\">push</span>(e)</span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"property\">currentFile</span> = e</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li><p>循环提交file</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">inputFile</span>(<span class=\"params\">form, id</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, rej</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> formTem = <span class=\"keyword\">new</span> <span class=\"title class_\">FormData</span>() <span class=\"comment\">// FormData 对象</span></span><br><span class=\"line\">        formTem.<span class=\"title function_\">append</span>(<span class=\"string\">&#x27;file&#x27;</span>, form) <span class=\"comment\">// 文件对象</span></span><br><span class=\"line\">        api.<span class=\"title function_\">importSpecifyUser</span>(formTem, &#123; <span class=\"attr\">id</span>: id &#125;).<span class=\"title function_\">then</span>(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> &#123;</span><br><span class=\"line\">          <span class=\"keyword\">if</span> (res.<span class=\"property\">code</span> == <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">            <span class=\"title function_\">resolve</span>(<span class=\"literal\">true</span>)</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\"><span class=\"title function_\">onSubmit</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">   <span class=\"keyword\">let</span> form = <span class=\"keyword\">new</span> <span class=\"title class_\">FormData</span>() <span class=\"comment\">// FormData 对象</span></span><br><span class=\"line\">   form.<span class=\"title function_\">append</span>(<span class=\"string\">&#x27;file&#x27;</span>, <span class=\"variable language_\">this</span>.<span class=\"property\">fileList</span>[<span class=\"number\">0</span>]) <span class=\"comment\">// 文件对象</span></span><br><span class=\"line\">   <span class=\"variable language_\">this</span>.<span class=\"property\">btnLoading</span> = <span class=\"literal\">true</span></span><br><span class=\"line\">   <span class=\"keyword\">let</span> id = <span class=\"keyword\">await</span> <span class=\"variable language_\">this</span>.<span class=\"title function_\">firstUpload</span>(form, tem)</span><br><span class=\"line\">   <span class=\"keyword\">let</span> cutFileList =</span><br><span class=\"line\">   <span class=\"variable language_\">this</span>.<span class=\"property\">fileList</span>.<span class=\"property\">length</span> &gt; <span class=\"number\">1</span></span><br><span class=\"line\">                ? <span class=\"variable language_\">this</span>.<span class=\"property\">fileList</span>.<span class=\"title function_\">slice</span>(<span class=\"number\">1</span>, <span class=\"variable language_\">this</span>.<span class=\"property\">fileList</span>.<span class=\"property\">length</span>)</span><br><span class=\"line\">                : []</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (id &amp;&amp; cutFileList.<span class=\"property\">length</span> &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">              cutFileList.<span class=\"title function_\">forEach</span>(<span class=\"keyword\">async</span> (e) =&gt; &#123;</span><br><span class=\"line\">                <span class=\"keyword\">await</span> <span class=\"variable language_\">this</span>.<span class=\"title function_\">inputFile</span>(e, id)</span><br><span class=\"line\">              &#125;)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>Tips：1.请求接口里一次只传输一个file，所以采用发送多次请求的形式去传递多个Excle文件</p>\n<p>​          2. 第一次发送file后，后端会返回给一个id。后续的file请求则类似于更新这个id下的数据，所以，需要采用同步的形式，当第一个请求返回后，再发送后续的file请求。</p>\n</li>\n</ol>\n<h4 id=\"参考地址\"><a href=\"#参考地址\" class=\"headerlink\" title=\"参考地址\"></a>参考地址</h4><p><a href=\"https://panjiachen.github.io/vue-element-admin/#/\">vue-element-admin</a></p>"},{"title":"从JavaScript的构造函数讲到多态","date":"2020-07-12T09:16:26.000Z","_content":"\n<meta name=\"referrer\" content=\"no-referrer\"/>\n\n## 从JavaScript的构造函数到多态\n\n### 我们为什么需要构造函数\n\n> 在 JavaScript 中，用 new 关键字来调用的函数，称为构造函数。构造函数首字母一般大写\n\n当某种需求下，需要创建多个属性、方法差不多的对象的时候，就需要构造函数。比如：\n\n```jsx\nfunction Person(name, gender, hobby) {\n this.name = name;\n this.gender = gender;\n this.hobby = hobby;\n this.age = 6;\n}\n\nvar p1 = new Person('zs', '男', 'basketball');\n```\n\n上述代码，可以通过 new关键字，创建一个新对象，这个对象默认就携带了age属性，并且这属性的值是6。\n\n### new做了什么？\n\n其实我们可以不用new，最开始本来是这样的：\n\n```js\nlet obj = {}\nobj._proto_ = Fun.prototype\nFun.call(obj)\nreturn obj\n```\n\n1. 定义一个空对象\n2. 将obj对象的原型指向构造函数的原型\n3. 修改obj对象的this指向，即call它一下\n4. 将这个新的obj返回出去\n\n每当我们调用构造函数生成一个新对象的时候，都需要执行一下以上的4步，这太麻烦了，不如用一个关键字来代替这四步，即 new 关键字。\n\n### 由构造函数想到继承\n\n通过new关键字新得到了一个实实在在的对象，但是这个对象内容是默认的。即构造函数是什么属性和方法，生成的对象也是对应的方法。\n\n我如果要生成不同的对象，就需要重新生成对象的模板（它的构造函数）再进行实例化，这也太麻烦了。\n\n**我能不能直接通过某种方式改变构造函数，用来生成新的对象？**\n\n这个就是继承！\n\n简单点说，就是以前：从模板>生成实例，现在：从模板>修改一下之前的模板>生成实例\n\n#### 组合继承\n\n```js\nfunction Person(name) {\n  this.name = name\n  this.jump = function () {\n    console.log('3m')\n  }\n}\nPerson.prototype.age = 10\n\nfunction LittlePerson(name, sex) {\n  this.sex = sex //重点！ 新添加了一个sex属性\n  this.pet = 'dog' //重点！ 新添加了一个pet属性，他们都拥有一只狗\n  this.say = function () {\n    console.log('good morning')\n  }\n  Person.call(this, name) //构造函数继承\n}\nLittlePerson.prototype = new Person() //原型继承\n\nlet littleTom = new LittlePerson('Tom', 'man')\nlet littleLily = new LittlePerson('Lily', 'girl')\nconsole.log(littleTom.sex, littleLily.sex)\nconsole.log(littleLily.say(), '1111')\nconsole.log(littleLily.jump(), '222')\nconsole.log(littleTom.pet)\n```\n\n> 构造函数继承和原型继承，组合到一起，我们就把它叫做组合继承吧。\n\n这里可以看到，子类中，添加了一些新的属性，sex（性别）和pet（宠物）。由LittlePerson构造函数生成的实例，默认有了新的属性sex、pet，和 Person 构造函数生成的实例有了区别。\n\n**这样就通过对父类构造函数的修改生成新的之类构造函数，再生成特定的实例！**\n\n### 多态\n\n上面的继承，可以看到构造函数提供的方法处理是固定的，但是可以通过 多态 来实现 **同一个动作，不同的对象有不同的行为**\n\n```js\nfunction Add(){\nfunction nothing(){\n    return 0;\n}\nfunction one(a){\n    return a;\n}\nfunction two(a,b){\n     return a+b\n}\nthis.add = function(){\n    var length =arguments.length\n    switch(length){\n        case 0:\n        return nothing();\n        case 1:\n        return one(arguments[0]);\n        case 2:\n        return two(arguments[0],arguments[1]);\n    }\n}\n}\nvar p =new Add();\nconsole.log(p.add());//0\nconsole.log(p.add(10));//10\nconsole.log(p.add(10,20));//30\n```\n\n","source":"_posts/从JavaScript的构造函数讲到多态.md","raw":"---\n\ntitle: 从JavaScript的构造函数讲到多态\ndate: 2020-07-12 17:16:26\ntags: [js]\n---\n\n<meta name=\"referrer\" content=\"no-referrer\"/>\n\n## 从JavaScript的构造函数到多态\n\n### 我们为什么需要构造函数\n\n> 在 JavaScript 中，用 new 关键字来调用的函数，称为构造函数。构造函数首字母一般大写\n\n当某种需求下，需要创建多个属性、方法差不多的对象的时候，就需要构造函数。比如：\n\n```jsx\nfunction Person(name, gender, hobby) {\n this.name = name;\n this.gender = gender;\n this.hobby = hobby;\n this.age = 6;\n}\n\nvar p1 = new Person('zs', '男', 'basketball');\n```\n\n上述代码，可以通过 new关键字，创建一个新对象，这个对象默认就携带了age属性，并且这属性的值是6。\n\n### new做了什么？\n\n其实我们可以不用new，最开始本来是这样的：\n\n```js\nlet obj = {}\nobj._proto_ = Fun.prototype\nFun.call(obj)\nreturn obj\n```\n\n1. 定义一个空对象\n2. 将obj对象的原型指向构造函数的原型\n3. 修改obj对象的this指向，即call它一下\n4. 将这个新的obj返回出去\n\n每当我们调用构造函数生成一个新对象的时候，都需要执行一下以上的4步，这太麻烦了，不如用一个关键字来代替这四步，即 new 关键字。\n\n### 由构造函数想到继承\n\n通过new关键字新得到了一个实实在在的对象，但是这个对象内容是默认的。即构造函数是什么属性和方法，生成的对象也是对应的方法。\n\n我如果要生成不同的对象，就需要重新生成对象的模板（它的构造函数）再进行实例化，这也太麻烦了。\n\n**我能不能直接通过某种方式改变构造函数，用来生成新的对象？**\n\n这个就是继承！\n\n简单点说，就是以前：从模板>生成实例，现在：从模板>修改一下之前的模板>生成实例\n\n#### 组合继承\n\n```js\nfunction Person(name) {\n  this.name = name\n  this.jump = function () {\n    console.log('3m')\n  }\n}\nPerson.prototype.age = 10\n\nfunction LittlePerson(name, sex) {\n  this.sex = sex //重点！ 新添加了一个sex属性\n  this.pet = 'dog' //重点！ 新添加了一个pet属性，他们都拥有一只狗\n  this.say = function () {\n    console.log('good morning')\n  }\n  Person.call(this, name) //构造函数继承\n}\nLittlePerson.prototype = new Person() //原型继承\n\nlet littleTom = new LittlePerson('Tom', 'man')\nlet littleLily = new LittlePerson('Lily', 'girl')\nconsole.log(littleTom.sex, littleLily.sex)\nconsole.log(littleLily.say(), '1111')\nconsole.log(littleLily.jump(), '222')\nconsole.log(littleTom.pet)\n```\n\n> 构造函数继承和原型继承，组合到一起，我们就把它叫做组合继承吧。\n\n这里可以看到，子类中，添加了一些新的属性，sex（性别）和pet（宠物）。由LittlePerson构造函数生成的实例，默认有了新的属性sex、pet，和 Person 构造函数生成的实例有了区别。\n\n**这样就通过对父类构造函数的修改生成新的之类构造函数，再生成特定的实例！**\n\n### 多态\n\n上面的继承，可以看到构造函数提供的方法处理是固定的，但是可以通过 多态 来实现 **同一个动作，不同的对象有不同的行为**\n\n```js\nfunction Add(){\nfunction nothing(){\n    return 0;\n}\nfunction one(a){\n    return a;\n}\nfunction two(a,b){\n     return a+b\n}\nthis.add = function(){\n    var length =arguments.length\n    switch(length){\n        case 0:\n        return nothing();\n        case 1:\n        return one(arguments[0]);\n        case 2:\n        return two(arguments[0],arguments[1]);\n    }\n}\n}\nvar p =new Add();\nconsole.log(p.add());//0\nconsole.log(p.add(10));//10\nconsole.log(p.add(10,20));//30\n```\n\n","slug":"从JavaScript的构造函数讲到多态","published":1,"updated":"2021-04-12T07:31:57.011Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl0uux6vr000v7sufhgznacpo","content":"<meta name=\"referrer\" content=\"no-referrer\"/>\n\n<h2 id=\"从JavaScript的构造函数到多态\"><a href=\"#从JavaScript的构造函数到多态\" class=\"headerlink\" title=\"从JavaScript的构造函数到多态\"></a>从JavaScript的构造函数到多态</h2><h3 id=\"我们为什么需要构造函数\"><a href=\"#我们为什么需要构造函数\" class=\"headerlink\" title=\"我们为什么需要构造函数\"></a>我们为什么需要构造函数</h3><blockquote>\n<p>在 JavaScript 中，用 new 关键字来调用的函数，称为构造函数。构造函数首字母一般大写</p>\n</blockquote>\n<p>当某种需求下，需要创建多个属性、方法差不多的对象的时候，就需要构造函数。比如：</p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">Person</span>(<span class=\"params\">name, gender, hobby</span>) &#123;</span><br><span class=\"line\"> <span class=\"variable language_\">this</span>.<span class=\"property\">name</span> = name;</span><br><span class=\"line\"> <span class=\"variable language_\">this</span>.<span class=\"property\">gender</span> = gender;</span><br><span class=\"line\"> <span class=\"variable language_\">this</span>.<span class=\"property\">hobby</span> = hobby;</span><br><span class=\"line\"> <span class=\"variable language_\">this</span>.<span class=\"property\">age</span> = <span class=\"number\">6</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> p1 = <span class=\"keyword\">new</span> <span class=\"title class_\">Person</span>(<span class=\"string\">&#x27;zs&#x27;</span>, <span class=\"string\">&#x27;男&#x27;</span>, <span class=\"string\">&#x27;basketball&#x27;</span>);</span><br></pre></td></tr></table></figure>\n\n<p>上述代码，可以通过 new关键字，创建一个新对象，这个对象默认就携带了age属性，并且这属性的值是6。</p>\n<h3 id=\"new做了什么？\"><a href=\"#new做了什么？\" class=\"headerlink\" title=\"new做了什么？\"></a>new做了什么？</h3><p>其实我们可以不用new，最开始本来是这样的：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> obj = &#123;&#125;</span><br><span class=\"line\">obj.<span class=\"property\">_proto_</span> = <span class=\"title class_\">Fun</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span></span><br><span class=\"line\"><span class=\"title class_\">Fun</span>.<span class=\"title function_\">call</span>(obj)</span><br><span class=\"line\"><span class=\"keyword\">return</span> obj</span><br></pre></td></tr></table></figure>\n\n<ol>\n<li>定义一个空对象</li>\n<li>将obj对象的原型指向构造函数的原型</li>\n<li>修改obj对象的this指向，即call它一下</li>\n<li>将这个新的obj返回出去</li>\n</ol>\n<p>每当我们调用构造函数生成一个新对象的时候，都需要执行一下以上的4步，这太麻烦了，不如用一个关键字来代替这四步，即 new 关键字。</p>\n<h3 id=\"由构造函数想到继承\"><a href=\"#由构造函数想到继承\" class=\"headerlink\" title=\"由构造函数想到继承\"></a>由构造函数想到继承</h3><p>通过new关键字新得到了一个实实在在的对象，但是这个对象内容是默认的。即构造函数是什么属性和方法，生成的对象也是对应的方法。</p>\n<p>我如果要生成不同的对象，就需要重新生成对象的模板（它的构造函数）再进行实例化，这也太麻烦了。</p>\n<p><strong>我能不能直接通过某种方式改变构造函数，用来生成新的对象？</strong></p>\n<p>这个就是继承！</p>\n<p>简单点说，就是以前：从模板&gt;生成实例，现在：从模板&gt;修改一下之前的模板&gt;生成实例</p>\n<h4 id=\"组合继承\"><a href=\"#组合继承\" class=\"headerlink\" title=\"组合继承\"></a>组合继承</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">Person</span>(<span class=\"params\">name</span>) &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">this</span>.<span class=\"property\">name</span> = name</span><br><span class=\"line\">  <span class=\"variable language_\">this</span>.<span class=\"property\">jump</span> = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;3m&#x27;</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"title class_\">Person</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">age</span> = <span class=\"number\">10</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">LittlePerson</span>(<span class=\"params\">name, sex</span>) &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">this</span>.<span class=\"property\">sex</span> = sex <span class=\"comment\">//重点！ 新添加了一个sex属性</span></span><br><span class=\"line\">  <span class=\"variable language_\">this</span>.<span class=\"property\">pet</span> = <span class=\"string\">&#x27;dog&#x27;</span> <span class=\"comment\">//重点！ 新添加了一个pet属性，他们都拥有一只狗</span></span><br><span class=\"line\">  <span class=\"variable language_\">this</span>.<span class=\"property\">say</span> = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;good morning&#x27;</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"title class_\">Person</span>.<span class=\"title function_\">call</span>(<span class=\"variable language_\">this</span>, name) <span class=\"comment\">//构造函数继承</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"title class_\">LittlePerson</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span> = <span class=\"keyword\">new</span> <span class=\"title class_\">Person</span>() <span class=\"comment\">//原型继承</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> littleTom = <span class=\"keyword\">new</span> <span class=\"title class_\">LittlePerson</span>(<span class=\"string\">&#x27;Tom&#x27;</span>, <span class=\"string\">&#x27;man&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">let</span> littleLily = <span class=\"keyword\">new</span> <span class=\"title class_\">LittlePerson</span>(<span class=\"string\">&#x27;Lily&#x27;</span>, <span class=\"string\">&#x27;girl&#x27;</span>)</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(littleTom.<span class=\"property\">sex</span>, littleLily.<span class=\"property\">sex</span>)</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(littleLily.<span class=\"title function_\">say</span>(), <span class=\"string\">&#x27;1111&#x27;</span>)</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(littleLily.<span class=\"title function_\">jump</span>(), <span class=\"string\">&#x27;222&#x27;</span>)</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(littleTom.<span class=\"property\">pet</span>)</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>构造函数继承和原型继承，组合到一起，我们就把它叫做组合继承吧。</p>\n</blockquote>\n<p>这里可以看到，子类中，添加了一些新的属性，sex（性别）和pet（宠物）。由LittlePerson构造函数生成的实例，默认有了新的属性sex、pet，和 Person 构造函数生成的实例有了区别。</p>\n<p><strong>这样就通过对父类构造函数的修改生成新的之类构造函数，再生成特定的实例！</strong></p>\n<h3 id=\"多态\"><a href=\"#多态\" class=\"headerlink\" title=\"多态\"></a>多态</h3><p>上面的继承，可以看到构造函数提供的方法处理是固定的，但是可以通过 多态 来实现 <strong>同一个动作，不同的对象有不同的行为</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">Add</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">nothing</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">one</span>(<span class=\"params\">a</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> a;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">two</span>(<span class=\"params\">a,b</span>)&#123;</span><br><span class=\"line\">     <span class=\"keyword\">return</span> a+b</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"variable language_\">this</span>.<span class=\"property\">add</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> length =<span class=\"variable language_\">arguments</span>.<span class=\"property\">length</span></span><br><span class=\"line\">    <span class=\"keyword\">switch</span>(length)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">0</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"title function_\">nothing</span>();</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">1</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"title function_\">one</span>(<span class=\"variable language_\">arguments</span>[<span class=\"number\">0</span>]);</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">2</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"title function_\">two</span>(<span class=\"variable language_\">arguments</span>[<span class=\"number\">0</span>],<span class=\"variable language_\">arguments</span>[<span class=\"number\">1</span>]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> p =<span class=\"keyword\">new</span> <span class=\"title class_\">Add</span>();</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(p.<span class=\"title function_\">add</span>());<span class=\"comment\">//0</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(p.<span class=\"title function_\">add</span>(<span class=\"number\">10</span>));<span class=\"comment\">//10</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(p.<span class=\"title function_\">add</span>(<span class=\"number\">10</span>,<span class=\"number\">20</span>));<span class=\"comment\">//30</span></span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"","more":"<meta name=\"referrer\" content=\"no-referrer\"/>\n\n<h2 id=\"从JavaScript的构造函数到多态\"><a href=\"#从JavaScript的构造函数到多态\" class=\"headerlink\" title=\"从JavaScript的构造函数到多态\"></a>从JavaScript的构造函数到多态</h2><h3 id=\"我们为什么需要构造函数\"><a href=\"#我们为什么需要构造函数\" class=\"headerlink\" title=\"我们为什么需要构造函数\"></a>我们为什么需要构造函数</h3><blockquote>\n<p>在 JavaScript 中，用 new 关键字来调用的函数，称为构造函数。构造函数首字母一般大写</p>\n</blockquote>\n<p>当某种需求下，需要创建多个属性、方法差不多的对象的时候，就需要构造函数。比如：</p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">Person</span>(<span class=\"params\">name, gender, hobby</span>) &#123;</span><br><span class=\"line\"> <span class=\"variable language_\">this</span>.<span class=\"property\">name</span> = name;</span><br><span class=\"line\"> <span class=\"variable language_\">this</span>.<span class=\"property\">gender</span> = gender;</span><br><span class=\"line\"> <span class=\"variable language_\">this</span>.<span class=\"property\">hobby</span> = hobby;</span><br><span class=\"line\"> <span class=\"variable language_\">this</span>.<span class=\"property\">age</span> = <span class=\"number\">6</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> p1 = <span class=\"keyword\">new</span> <span class=\"title class_\">Person</span>(<span class=\"string\">&#x27;zs&#x27;</span>, <span class=\"string\">&#x27;男&#x27;</span>, <span class=\"string\">&#x27;basketball&#x27;</span>);</span><br></pre></td></tr></table></figure>\n\n<p>上述代码，可以通过 new关键字，创建一个新对象，这个对象默认就携带了age属性，并且这属性的值是6。</p>\n<h3 id=\"new做了什么？\"><a href=\"#new做了什么？\" class=\"headerlink\" title=\"new做了什么？\"></a>new做了什么？</h3><p>其实我们可以不用new，最开始本来是这样的：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> obj = &#123;&#125;</span><br><span class=\"line\">obj.<span class=\"property\">_proto_</span> = <span class=\"title class_\">Fun</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span></span><br><span class=\"line\"><span class=\"title class_\">Fun</span>.<span class=\"title function_\">call</span>(obj)</span><br><span class=\"line\"><span class=\"keyword\">return</span> obj</span><br></pre></td></tr></table></figure>\n\n<ol>\n<li>定义一个空对象</li>\n<li>将obj对象的原型指向构造函数的原型</li>\n<li>修改obj对象的this指向，即call它一下</li>\n<li>将这个新的obj返回出去</li>\n</ol>\n<p>每当我们调用构造函数生成一个新对象的时候，都需要执行一下以上的4步，这太麻烦了，不如用一个关键字来代替这四步，即 new 关键字。</p>\n<h3 id=\"由构造函数想到继承\"><a href=\"#由构造函数想到继承\" class=\"headerlink\" title=\"由构造函数想到继承\"></a>由构造函数想到继承</h3><p>通过new关键字新得到了一个实实在在的对象，但是这个对象内容是默认的。即构造函数是什么属性和方法，生成的对象也是对应的方法。</p>\n<p>我如果要生成不同的对象，就需要重新生成对象的模板（它的构造函数）再进行实例化，这也太麻烦了。</p>\n<p><strong>我能不能直接通过某种方式改变构造函数，用来生成新的对象？</strong></p>\n<p>这个就是继承！</p>\n<p>简单点说，就是以前：从模板&gt;生成实例，现在：从模板&gt;修改一下之前的模板&gt;生成实例</p>\n<h4 id=\"组合继承\"><a href=\"#组合继承\" class=\"headerlink\" title=\"组合继承\"></a>组合继承</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">Person</span>(<span class=\"params\">name</span>) &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">this</span>.<span class=\"property\">name</span> = name</span><br><span class=\"line\">  <span class=\"variable language_\">this</span>.<span class=\"property\">jump</span> = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;3m&#x27;</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"title class_\">Person</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">age</span> = <span class=\"number\">10</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">LittlePerson</span>(<span class=\"params\">name, sex</span>) &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">this</span>.<span class=\"property\">sex</span> = sex <span class=\"comment\">//重点！ 新添加了一个sex属性</span></span><br><span class=\"line\">  <span class=\"variable language_\">this</span>.<span class=\"property\">pet</span> = <span class=\"string\">&#x27;dog&#x27;</span> <span class=\"comment\">//重点！ 新添加了一个pet属性，他们都拥有一只狗</span></span><br><span class=\"line\">  <span class=\"variable language_\">this</span>.<span class=\"property\">say</span> = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;good morning&#x27;</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"title class_\">Person</span>.<span class=\"title function_\">call</span>(<span class=\"variable language_\">this</span>, name) <span class=\"comment\">//构造函数继承</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"title class_\">LittlePerson</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span> = <span class=\"keyword\">new</span> <span class=\"title class_\">Person</span>() <span class=\"comment\">//原型继承</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> littleTom = <span class=\"keyword\">new</span> <span class=\"title class_\">LittlePerson</span>(<span class=\"string\">&#x27;Tom&#x27;</span>, <span class=\"string\">&#x27;man&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">let</span> littleLily = <span class=\"keyword\">new</span> <span class=\"title class_\">LittlePerson</span>(<span class=\"string\">&#x27;Lily&#x27;</span>, <span class=\"string\">&#x27;girl&#x27;</span>)</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(littleTom.<span class=\"property\">sex</span>, littleLily.<span class=\"property\">sex</span>)</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(littleLily.<span class=\"title function_\">say</span>(), <span class=\"string\">&#x27;1111&#x27;</span>)</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(littleLily.<span class=\"title function_\">jump</span>(), <span class=\"string\">&#x27;222&#x27;</span>)</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(littleTom.<span class=\"property\">pet</span>)</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>构造函数继承和原型继承，组合到一起，我们就把它叫做组合继承吧。</p>\n</blockquote>\n<p>这里可以看到，子类中，添加了一些新的属性，sex（性别）和pet（宠物）。由LittlePerson构造函数生成的实例，默认有了新的属性sex、pet，和 Person 构造函数生成的实例有了区别。</p>\n<p><strong>这样就通过对父类构造函数的修改生成新的之类构造函数，再生成特定的实例！</strong></p>\n<h3 id=\"多态\"><a href=\"#多态\" class=\"headerlink\" title=\"多态\"></a>多态</h3><p>上面的继承，可以看到构造函数提供的方法处理是固定的，但是可以通过 多态 来实现 <strong>同一个动作，不同的对象有不同的行为</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">Add</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">nothing</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">one</span>(<span class=\"params\">a</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> a;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">two</span>(<span class=\"params\">a,b</span>)&#123;</span><br><span class=\"line\">     <span class=\"keyword\">return</span> a+b</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"variable language_\">this</span>.<span class=\"property\">add</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> length =<span class=\"variable language_\">arguments</span>.<span class=\"property\">length</span></span><br><span class=\"line\">    <span class=\"keyword\">switch</span>(length)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">0</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"title function_\">nothing</span>();</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">1</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"title function_\">one</span>(<span class=\"variable language_\">arguments</span>[<span class=\"number\">0</span>]);</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">2</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"title function_\">two</span>(<span class=\"variable language_\">arguments</span>[<span class=\"number\">0</span>],<span class=\"variable language_\">arguments</span>[<span class=\"number\">1</span>]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> p =<span class=\"keyword\">new</span> <span class=\"title class_\">Add</span>();</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(p.<span class=\"title function_\">add</span>());<span class=\"comment\">//0</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(p.<span class=\"title function_\">add</span>(<span class=\"number\">10</span>));<span class=\"comment\">//10</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(p.<span class=\"title function_\">add</span>(<span class=\"number\">10</span>,<span class=\"number\">20</span>));<span class=\"comment\">//30</span></span><br></pre></td></tr></table></figure>\n\n"},{"title":"你可能会用到的webpack","date":"2020-07-12T09:16:26.000Z","_content":"\n<meta name=\"referrer\" content=\"no-referrer\"/>\n\n## 你可能会用到的webpack\n\n### install\n\n```js\nnpm install webpack webpack-dev-server --save-dev\n```\n\n### vue.config.js\n\n`vue.config.js` 是一个可选的配置文件，如果项目的 (和 `package.json` 同级的) 根目录中存在这个文件，那么它会被 `@vue/cli-service` 自动加载。你也可以使用 `package.json` 中的 `vue` 字段，但是注意这种写法需要你严格遵照 JSON 的格式来写。\n\n其中经常用到的配置是本地的代理和基本path\n\n```js\n// vue.config.js\n\n/**\n * @type {import('@vue/cli-service').ProjectOptions}\n */\nmodule.exports = {\n  // 部署应用时的基本 URL\n  publicPath: process.env.VUE_APP_PUBLIC,\n  // build时构建文件的目录 构建时传入 --no-clean 可关闭该行为\n  outputDir: 'dist',\n  // build时放置生成的静态资源 (js、css、img、fonts) 的 (相对于 outputDir 的) 目录\n  assetsDir: '',\n  // 指定生成的 index.html 的输出路径 (相对于 outputDir)。也可以是一个绝对路径。\n  indexPath: 'index.html',\n  // 默认在生成的静态资源文件名中包含hash以控制缓存\n  filenameHashing: true,\n  // 构建多页面应用，页面的配置\n  pages: {\n    index: {\n      // page 的入口\n      entry: 'src/main.js',\n      // 模板来源\n      template: 'public/index.html',\n      // 在 dist/index.html 的输出\n      filename: 'index.html',\n      // 当使用 title 选项时，template 中的 title 标签需要是 <title><%= htmlWebpackPlugin.options.title %></title>\n      title: 'Index Page',\n      // 在这个页面中包含的块，默认情况下会包含\n      // 提取出来的通用 chunk 和 vendor chunk。\n      chunks: ['chunk-vendors', 'chunk-common', 'index'],\n    },\n    // 所有 webpack-dev-server 的选项都支持\n  devServer: {\n    proxy: {\n      '/api': {\n        target: process.env.VUE_APP_PROXY,\n        changeOrigin: true,\n        ws: true,\n        pathRewrite: {\n          '^/api': '',\n        },\n      },\n      '/mall': {\n        target: process.env.VUE_APP_HOST1,\n        changeOrigin: true,\n        ws: true,\n        pathRewrite: {\n          '^/mall': '',\n        },\n      },\n    },\n  },\n}\n```\n\nproxy字段中的代理类似于 nginx 的代理。可以将'/api'或者'/mall'开头的请求通过代理定向到其他的地址，并且可以对代理的链接进行重新修改（pathRewrite），\n\n配置典型的env文件(.env.development)，如下：\n\n```js\nNODE_ENV=development\nVUE_APP_HOST=/api\nVUE_APP_MALL_HOST=/mall\nVUE_APP_HOST1=http://110.168.1.1:13008/\nVUE_APP_PROXY=http://110.168.1.1:13008/mallB/\nVUE_APP_DEBUG=development\n```\n\n请求文件类似如下：\n\n```js\n  getGoodsConfigList(query) { //商品配置数据列表查询\n        return request({\n            url: '/mall/goodsConfig/getGoodsConfigList',\n            method: 'POST',\n            ContentType: 'application/json',\n            data: JSON.stringify(query)\n        })\n    },\n```\n\n```js\nconst service = axios.create({\n  baseURL: host.host,\n  timeout: 60000000,\n})\nservice.interceptors.request.use(\n  (config) => {\n    const token = sessionStorage.getItem('token')\n\n    config.headers = token\n      ? { Authorization: 'Bearer ' + sessionStorage.getItem('token') }\n      : ''\n\n    if (config.ContentType) {\n      config.headers['Content-Type'] = config.ContentType\n      delete config.ContentType\n    }\n    if (\n      //本地环境情况下，需要把login的host写死。避免频繁的切换host\n      process.env.VUE_APP_DEBUG === 'development' &&\n      config.url.split('?')[0] == '/admin/login'\n    ) {\n      config.baseURL = process.env.VUE_APP_HOST\n    } else {\n      //测试环境或者正式环境，需要将所有的host改成环境文件中的host\n      switch (config.basicUrl) {\n        case '/mall':\n          config.baseURL = process.env.VUE_APP_HOST1\n          break\n        default:\n          config.baseURL = process.env.VUE_APP_HOST\n          break\n      }\n    }\n    return config\n  },\n  (error) => {\n    return Promise.reject()\n  }\n)\n```\n\n","source":"_posts/你可能会用到的webpack.md","raw":"---\n\ntitle: 你可能会用到的webpack\ndate: 2020-07-12 17:16:26\ntags: [js,hexo]\n---\n\n<meta name=\"referrer\" content=\"no-referrer\"/>\n\n## 你可能会用到的webpack\n\n### install\n\n```js\nnpm install webpack webpack-dev-server --save-dev\n```\n\n### vue.config.js\n\n`vue.config.js` 是一个可选的配置文件，如果项目的 (和 `package.json` 同级的) 根目录中存在这个文件，那么它会被 `@vue/cli-service` 自动加载。你也可以使用 `package.json` 中的 `vue` 字段，但是注意这种写法需要你严格遵照 JSON 的格式来写。\n\n其中经常用到的配置是本地的代理和基本path\n\n```js\n// vue.config.js\n\n/**\n * @type {import('@vue/cli-service').ProjectOptions}\n */\nmodule.exports = {\n  // 部署应用时的基本 URL\n  publicPath: process.env.VUE_APP_PUBLIC,\n  // build时构建文件的目录 构建时传入 --no-clean 可关闭该行为\n  outputDir: 'dist',\n  // build时放置生成的静态资源 (js、css、img、fonts) 的 (相对于 outputDir 的) 目录\n  assetsDir: '',\n  // 指定生成的 index.html 的输出路径 (相对于 outputDir)。也可以是一个绝对路径。\n  indexPath: 'index.html',\n  // 默认在生成的静态资源文件名中包含hash以控制缓存\n  filenameHashing: true,\n  // 构建多页面应用，页面的配置\n  pages: {\n    index: {\n      // page 的入口\n      entry: 'src/main.js',\n      // 模板来源\n      template: 'public/index.html',\n      // 在 dist/index.html 的输出\n      filename: 'index.html',\n      // 当使用 title 选项时，template 中的 title 标签需要是 <title><%= htmlWebpackPlugin.options.title %></title>\n      title: 'Index Page',\n      // 在这个页面中包含的块，默认情况下会包含\n      // 提取出来的通用 chunk 和 vendor chunk。\n      chunks: ['chunk-vendors', 'chunk-common', 'index'],\n    },\n    // 所有 webpack-dev-server 的选项都支持\n  devServer: {\n    proxy: {\n      '/api': {\n        target: process.env.VUE_APP_PROXY,\n        changeOrigin: true,\n        ws: true,\n        pathRewrite: {\n          '^/api': '',\n        },\n      },\n      '/mall': {\n        target: process.env.VUE_APP_HOST1,\n        changeOrigin: true,\n        ws: true,\n        pathRewrite: {\n          '^/mall': '',\n        },\n      },\n    },\n  },\n}\n```\n\nproxy字段中的代理类似于 nginx 的代理。可以将'/api'或者'/mall'开头的请求通过代理定向到其他的地址，并且可以对代理的链接进行重新修改（pathRewrite），\n\n配置典型的env文件(.env.development)，如下：\n\n```js\nNODE_ENV=development\nVUE_APP_HOST=/api\nVUE_APP_MALL_HOST=/mall\nVUE_APP_HOST1=http://110.168.1.1:13008/\nVUE_APP_PROXY=http://110.168.1.1:13008/mallB/\nVUE_APP_DEBUG=development\n```\n\n请求文件类似如下：\n\n```js\n  getGoodsConfigList(query) { //商品配置数据列表查询\n        return request({\n            url: '/mall/goodsConfig/getGoodsConfigList',\n            method: 'POST',\n            ContentType: 'application/json',\n            data: JSON.stringify(query)\n        })\n    },\n```\n\n```js\nconst service = axios.create({\n  baseURL: host.host,\n  timeout: 60000000,\n})\nservice.interceptors.request.use(\n  (config) => {\n    const token = sessionStorage.getItem('token')\n\n    config.headers = token\n      ? { Authorization: 'Bearer ' + sessionStorage.getItem('token') }\n      : ''\n\n    if (config.ContentType) {\n      config.headers['Content-Type'] = config.ContentType\n      delete config.ContentType\n    }\n    if (\n      //本地环境情况下，需要把login的host写死。避免频繁的切换host\n      process.env.VUE_APP_DEBUG === 'development' &&\n      config.url.split('?')[0] == '/admin/login'\n    ) {\n      config.baseURL = process.env.VUE_APP_HOST\n    } else {\n      //测试环境或者正式环境，需要将所有的host改成环境文件中的host\n      switch (config.basicUrl) {\n        case '/mall':\n          config.baseURL = process.env.VUE_APP_HOST1\n          break\n        default:\n          config.baseURL = process.env.VUE_APP_HOST\n          break\n      }\n    }\n    return config\n  },\n  (error) => {\n    return Promise.reject()\n  }\n)\n```\n\n","slug":"你可能会用到的webpack","published":1,"updated":"2021-04-02T07:18:08.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl0uux6vr000x7sufabp21pd9","content":"<meta name=\"referrer\" content=\"no-referrer\"/>\n\n<h2 id=\"你可能会用到的webpack\"><a href=\"#你可能会用到的webpack\" class=\"headerlink\" title=\"你可能会用到的webpack\"></a>你可能会用到的webpack</h2><h3 id=\"install\"><a href=\"#install\" class=\"headerlink\" title=\"install\"></a>install</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install webpack webpack-dev-server --save-dev</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"vue-config-js\"><a href=\"#vue-config-js\" class=\"headerlink\" title=\"vue.config.js\"></a>vue.config.js</h3><p><code>vue.config.js</code> 是一个可选的配置文件，如果项目的 (和 <code>package.json</code> 同级的) 根目录中存在这个文件，那么它会被 <code>@vue/cli-service</code> 自动加载。你也可以使用 <code>package.json</code> 中的 <code>vue</code> 字段，但是注意这种写法需要你严格遵照 JSON 的格式来写。</p>\n<p>其中经常用到的配置是本地的代理和基本path</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// vue.config.js</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@type</span> &#123;<span class=\"type\">import(&#x27;@vue/cli-service&#x27;).ProjectOptions</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 部署应用时的基本 URL</span></span><br><span class=\"line\">  <span class=\"attr\">publicPath</span>: process.<span class=\"property\">env</span>.<span class=\"property\">VUE_APP_PUBLIC</span>,</span><br><span class=\"line\">  <span class=\"comment\">// build时构建文件的目录 构建时传入 --no-clean 可关闭该行为</span></span><br><span class=\"line\">  <span class=\"attr\">outputDir</span>: <span class=\"string\">&#x27;dist&#x27;</span>,</span><br><span class=\"line\">  <span class=\"comment\">// build时放置生成的静态资源 (js、css、img、fonts) 的 (相对于 outputDir 的) 目录</span></span><br><span class=\"line\">  <span class=\"attr\">assetsDir</span>: <span class=\"string\">&#x27;&#x27;</span>,</span><br><span class=\"line\">  <span class=\"comment\">// 指定生成的 index.html 的输出路径 (相对于 outputDir)。也可以是一个绝对路径。</span></span><br><span class=\"line\">  <span class=\"attr\">indexPath</span>: <span class=\"string\">&#x27;index.html&#x27;</span>,</span><br><span class=\"line\">  <span class=\"comment\">// 默认在生成的静态资源文件名中包含hash以控制缓存</span></span><br><span class=\"line\">  <span class=\"attr\">filenameHashing</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  <span class=\"comment\">// 构建多页面应用，页面的配置</span></span><br><span class=\"line\">  <span class=\"attr\">pages</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">index</span>: &#123;</span><br><span class=\"line\">      <span class=\"comment\">// page 的入口</span></span><br><span class=\"line\">      <span class=\"attr\">entry</span>: <span class=\"string\">&#x27;src/main.js&#x27;</span>,</span><br><span class=\"line\">      <span class=\"comment\">// 模板来源</span></span><br><span class=\"line\">      <span class=\"attr\">template</span>: <span class=\"string\">&#x27;public/index.html&#x27;</span>,</span><br><span class=\"line\">      <span class=\"comment\">// 在 dist/index.html 的输出</span></span><br><span class=\"line\">      <span class=\"attr\">filename</span>: <span class=\"string\">&#x27;index.html&#x27;</span>,</span><br><span class=\"line\">      <span class=\"comment\">// 当使用 title 选项时，template 中的 title 标签需要是 &lt;title&gt;&lt;%= htmlWebpackPlugin.options.title %&gt;&lt;/title&gt;</span></span><br><span class=\"line\">      <span class=\"attr\">title</span>: <span class=\"string\">&#x27;Index Page&#x27;</span>,</span><br><span class=\"line\">      <span class=\"comment\">// 在这个页面中包含的块，默认情况下会包含</span></span><br><span class=\"line\">      <span class=\"comment\">// 提取出来的通用 chunk 和 vendor chunk。</span></span><br><span class=\"line\">      <span class=\"attr\">chunks</span>: [<span class=\"string\">&#x27;chunk-vendors&#x27;</span>, <span class=\"string\">&#x27;chunk-common&#x27;</span>, <span class=\"string\">&#x27;index&#x27;</span>],</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"comment\">// 所有 webpack-dev-server 的选项都支持</span></span><br><span class=\"line\">  <span class=\"attr\">devServer</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">proxy</span>: &#123;</span><br><span class=\"line\">      <span class=\"string\">&#x27;/api&#x27;</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">target</span>: process.<span class=\"property\">env</span>.<span class=\"property\">VUE_APP_PROXY</span>,</span><br><span class=\"line\">        <span class=\"attr\">changeOrigin</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">        <span class=\"attr\">ws</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">        <span class=\"attr\">pathRewrite</span>: &#123;</span><br><span class=\"line\">          <span class=\"string\">&#x27;^/api&#x27;</span>: <span class=\"string\">&#x27;&#x27;</span>,</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      <span class=\"string\">&#x27;/mall&#x27;</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">target</span>: process.<span class=\"property\">env</span>.<span class=\"property\">VUE_APP_HOST1</span>,</span><br><span class=\"line\">        <span class=\"attr\">changeOrigin</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">        <span class=\"attr\">ws</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">        <span class=\"attr\">pathRewrite</span>: &#123;</span><br><span class=\"line\">          <span class=\"string\">&#x27;^/mall&#x27;</span>: <span class=\"string\">&#x27;&#x27;</span>,</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>proxy字段中的代理类似于 nginx 的代理。可以将’/api’或者’/mall’开头的请求通过代理定向到其他的地址，并且可以对代理的链接进行重新修改（pathRewrite），</p>\n<p>配置典型的env文件(.env.development)，如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable constant_\">NODE_ENV</span>=development</span><br><span class=\"line\"><span class=\"variable constant_\">VUE_APP_HOST</span>=/api</span><br><span class=\"line\"><span class=\"variable constant_\">VUE_APP_MALL_HOST</span>=/mall</span><br><span class=\"line\"><span class=\"variable constant_\">VUE_APP_HOST1</span>=<span class=\"attr\">http</span>:<span class=\"comment\">//110.168.1.1:13008/</span></span><br><span class=\"line\"><span class=\"variable constant_\">VUE_APP_PROXY</span>=<span class=\"attr\">http</span>:<span class=\"comment\">//110.168.1.1:13008/mallB/</span></span><br><span class=\"line\"><span class=\"variable constant_\">VUE_APP_DEBUG</span>=development</span><br></pre></td></tr></table></figure>\n\n<p>请求文件类似如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">getGoodsConfigList</span>(<span class=\"params\">query</span>) &#123; <span class=\"comment\">//商品配置数据列表查询</span></span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"title function_\">request</span>(&#123;</span><br><span class=\"line\">          <span class=\"attr\">url</span>: <span class=\"string\">&#x27;/mall/goodsConfig/getGoodsConfigList&#x27;</span>,</span><br><span class=\"line\">          <span class=\"attr\">method</span>: <span class=\"string\">&#x27;POST&#x27;</span>,</span><br><span class=\"line\">          <span class=\"title class_\">ContentType</span>: <span class=\"string\">&#x27;application/json&#x27;</span>,</span><br><span class=\"line\">          <span class=\"attr\">data</span>: <span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(query)</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">  &#125;,</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> service = axios.<span class=\"title function_\">create</span>(&#123;</span><br><span class=\"line\">  <span class=\"attr\">baseURL</span>: host.<span class=\"property\">host</span>,</span><br><span class=\"line\">  <span class=\"attr\">timeout</span>: <span class=\"number\">60000000</span>,</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">service.<span class=\"property\">interceptors</span>.<span class=\"property\">request</span>.<span class=\"title function_\">use</span>(</span><br><span class=\"line\">  <span class=\"function\">(<span class=\"params\">config</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> token = sessionStorage.<span class=\"title function_\">getItem</span>(<span class=\"string\">&#x27;token&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    config.<span class=\"property\">headers</span> = token</span><br><span class=\"line\">      ? &#123; <span class=\"title class_\">Authorization</span>: <span class=\"string\">&#x27;Bearer &#x27;</span> + sessionStorage.<span class=\"title function_\">getItem</span>(<span class=\"string\">&#x27;token&#x27;</span>) &#125;</span><br><span class=\"line\">      : <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (config.<span class=\"property\">ContentType</span>) &#123;</span><br><span class=\"line\">      config.<span class=\"property\">headers</span>[<span class=\"string\">&#x27;Content-Type&#x27;</span>] = config.<span class=\"property\">ContentType</span></span><br><span class=\"line\">      <span class=\"keyword\">delete</span> config.<span class=\"property\">ContentType</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (</span><br><span class=\"line\">      <span class=\"comment\">//本地环境情况下，需要把login的host写死。避免频繁的切换host</span></span><br><span class=\"line\">      process.<span class=\"property\">env</span>.<span class=\"property\">VUE_APP_DEBUG</span> === <span class=\"string\">&#x27;development&#x27;</span> &amp;&amp;</span><br><span class=\"line\">      config.<span class=\"property\">url</span>.<span class=\"title function_\">split</span>(<span class=\"string\">&#x27;?&#x27;</span>)[<span class=\"number\">0</span>] == <span class=\"string\">&#x27;/admin/login&#x27;</span></span><br><span class=\"line\">    ) &#123;</span><br><span class=\"line\">      config.<span class=\"property\">baseURL</span> = process.<span class=\"property\">env</span>.<span class=\"property\">VUE_APP_HOST</span></span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"comment\">//测试环境或者正式环境，需要将所有的host改成环境文件中的host</span></span><br><span class=\"line\">      <span class=\"keyword\">switch</span> (config.<span class=\"property\">basicUrl</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"string\">&#x27;/mall&#x27;</span>:</span><br><span class=\"line\">          config.<span class=\"property\">baseURL</span> = process.<span class=\"property\">env</span>.<span class=\"property\">VUE_APP_HOST1</span></span><br><span class=\"line\">          <span class=\"keyword\">break</span></span><br><span class=\"line\">        <span class=\"attr\">default</span>:</span><br><span class=\"line\">          config.<span class=\"property\">baseURL</span> = process.<span class=\"property\">env</span>.<span class=\"property\">VUE_APP_HOST</span></span><br><span class=\"line\">          <span class=\"keyword\">break</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> config</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"function\">(<span class=\"params\">error</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"title class_\">Promise</span>.<span class=\"title function_\">reject</span>()</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"","more":"<meta name=\"referrer\" content=\"no-referrer\"/>\n\n<h2 id=\"你可能会用到的webpack\"><a href=\"#你可能会用到的webpack\" class=\"headerlink\" title=\"你可能会用到的webpack\"></a>你可能会用到的webpack</h2><h3 id=\"install\"><a href=\"#install\" class=\"headerlink\" title=\"install\"></a>install</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install webpack webpack-dev-server --save-dev</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"vue-config-js\"><a href=\"#vue-config-js\" class=\"headerlink\" title=\"vue.config.js\"></a>vue.config.js</h3><p><code>vue.config.js</code> 是一个可选的配置文件，如果项目的 (和 <code>package.json</code> 同级的) 根目录中存在这个文件，那么它会被 <code>@vue/cli-service</code> 自动加载。你也可以使用 <code>package.json</code> 中的 <code>vue</code> 字段，但是注意这种写法需要你严格遵照 JSON 的格式来写。</p>\n<p>其中经常用到的配置是本地的代理和基本path</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// vue.config.js</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@type</span> &#123;<span class=\"type\">import(&#x27;@vue/cli-service&#x27;).ProjectOptions</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 部署应用时的基本 URL</span></span><br><span class=\"line\">  <span class=\"attr\">publicPath</span>: process.<span class=\"property\">env</span>.<span class=\"property\">VUE_APP_PUBLIC</span>,</span><br><span class=\"line\">  <span class=\"comment\">// build时构建文件的目录 构建时传入 --no-clean 可关闭该行为</span></span><br><span class=\"line\">  <span class=\"attr\">outputDir</span>: <span class=\"string\">&#x27;dist&#x27;</span>,</span><br><span class=\"line\">  <span class=\"comment\">// build时放置生成的静态资源 (js、css、img、fonts) 的 (相对于 outputDir 的) 目录</span></span><br><span class=\"line\">  <span class=\"attr\">assetsDir</span>: <span class=\"string\">&#x27;&#x27;</span>,</span><br><span class=\"line\">  <span class=\"comment\">// 指定生成的 index.html 的输出路径 (相对于 outputDir)。也可以是一个绝对路径。</span></span><br><span class=\"line\">  <span class=\"attr\">indexPath</span>: <span class=\"string\">&#x27;index.html&#x27;</span>,</span><br><span class=\"line\">  <span class=\"comment\">// 默认在生成的静态资源文件名中包含hash以控制缓存</span></span><br><span class=\"line\">  <span class=\"attr\">filenameHashing</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  <span class=\"comment\">// 构建多页面应用，页面的配置</span></span><br><span class=\"line\">  <span class=\"attr\">pages</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">index</span>: &#123;</span><br><span class=\"line\">      <span class=\"comment\">// page 的入口</span></span><br><span class=\"line\">      <span class=\"attr\">entry</span>: <span class=\"string\">&#x27;src/main.js&#x27;</span>,</span><br><span class=\"line\">      <span class=\"comment\">// 模板来源</span></span><br><span class=\"line\">      <span class=\"attr\">template</span>: <span class=\"string\">&#x27;public/index.html&#x27;</span>,</span><br><span class=\"line\">      <span class=\"comment\">// 在 dist/index.html 的输出</span></span><br><span class=\"line\">      <span class=\"attr\">filename</span>: <span class=\"string\">&#x27;index.html&#x27;</span>,</span><br><span class=\"line\">      <span class=\"comment\">// 当使用 title 选项时，template 中的 title 标签需要是 &lt;title&gt;&lt;%= htmlWebpackPlugin.options.title %&gt;&lt;/title&gt;</span></span><br><span class=\"line\">      <span class=\"attr\">title</span>: <span class=\"string\">&#x27;Index Page&#x27;</span>,</span><br><span class=\"line\">      <span class=\"comment\">// 在这个页面中包含的块，默认情况下会包含</span></span><br><span class=\"line\">      <span class=\"comment\">// 提取出来的通用 chunk 和 vendor chunk。</span></span><br><span class=\"line\">      <span class=\"attr\">chunks</span>: [<span class=\"string\">&#x27;chunk-vendors&#x27;</span>, <span class=\"string\">&#x27;chunk-common&#x27;</span>, <span class=\"string\">&#x27;index&#x27;</span>],</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"comment\">// 所有 webpack-dev-server 的选项都支持</span></span><br><span class=\"line\">  <span class=\"attr\">devServer</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">proxy</span>: &#123;</span><br><span class=\"line\">      <span class=\"string\">&#x27;/api&#x27;</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">target</span>: process.<span class=\"property\">env</span>.<span class=\"property\">VUE_APP_PROXY</span>,</span><br><span class=\"line\">        <span class=\"attr\">changeOrigin</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">        <span class=\"attr\">ws</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">        <span class=\"attr\">pathRewrite</span>: &#123;</span><br><span class=\"line\">          <span class=\"string\">&#x27;^/api&#x27;</span>: <span class=\"string\">&#x27;&#x27;</span>,</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      <span class=\"string\">&#x27;/mall&#x27;</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">target</span>: process.<span class=\"property\">env</span>.<span class=\"property\">VUE_APP_HOST1</span>,</span><br><span class=\"line\">        <span class=\"attr\">changeOrigin</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">        <span class=\"attr\">ws</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">        <span class=\"attr\">pathRewrite</span>: &#123;</span><br><span class=\"line\">          <span class=\"string\">&#x27;^/mall&#x27;</span>: <span class=\"string\">&#x27;&#x27;</span>,</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>proxy字段中的代理类似于 nginx 的代理。可以将’/api’或者’/mall’开头的请求通过代理定向到其他的地址，并且可以对代理的链接进行重新修改（pathRewrite），</p>\n<p>配置典型的env文件(.env.development)，如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable constant_\">NODE_ENV</span>=development</span><br><span class=\"line\"><span class=\"variable constant_\">VUE_APP_HOST</span>=/api</span><br><span class=\"line\"><span class=\"variable constant_\">VUE_APP_MALL_HOST</span>=/mall</span><br><span class=\"line\"><span class=\"variable constant_\">VUE_APP_HOST1</span>=<span class=\"attr\">http</span>:<span class=\"comment\">//110.168.1.1:13008/</span></span><br><span class=\"line\"><span class=\"variable constant_\">VUE_APP_PROXY</span>=<span class=\"attr\">http</span>:<span class=\"comment\">//110.168.1.1:13008/mallB/</span></span><br><span class=\"line\"><span class=\"variable constant_\">VUE_APP_DEBUG</span>=development</span><br></pre></td></tr></table></figure>\n\n<p>请求文件类似如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">getGoodsConfigList</span>(<span class=\"params\">query</span>) &#123; <span class=\"comment\">//商品配置数据列表查询</span></span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"title function_\">request</span>(&#123;</span><br><span class=\"line\">          <span class=\"attr\">url</span>: <span class=\"string\">&#x27;/mall/goodsConfig/getGoodsConfigList&#x27;</span>,</span><br><span class=\"line\">          <span class=\"attr\">method</span>: <span class=\"string\">&#x27;POST&#x27;</span>,</span><br><span class=\"line\">          <span class=\"title class_\">ContentType</span>: <span class=\"string\">&#x27;application/json&#x27;</span>,</span><br><span class=\"line\">          <span class=\"attr\">data</span>: <span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(query)</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">  &#125;,</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> service = axios.<span class=\"title function_\">create</span>(&#123;</span><br><span class=\"line\">  <span class=\"attr\">baseURL</span>: host.<span class=\"property\">host</span>,</span><br><span class=\"line\">  <span class=\"attr\">timeout</span>: <span class=\"number\">60000000</span>,</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">service.<span class=\"property\">interceptors</span>.<span class=\"property\">request</span>.<span class=\"title function_\">use</span>(</span><br><span class=\"line\">  <span class=\"function\">(<span class=\"params\">config</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> token = sessionStorage.<span class=\"title function_\">getItem</span>(<span class=\"string\">&#x27;token&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    config.<span class=\"property\">headers</span> = token</span><br><span class=\"line\">      ? &#123; <span class=\"title class_\">Authorization</span>: <span class=\"string\">&#x27;Bearer &#x27;</span> + sessionStorage.<span class=\"title function_\">getItem</span>(<span class=\"string\">&#x27;token&#x27;</span>) &#125;</span><br><span class=\"line\">      : <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (config.<span class=\"property\">ContentType</span>) &#123;</span><br><span class=\"line\">      config.<span class=\"property\">headers</span>[<span class=\"string\">&#x27;Content-Type&#x27;</span>] = config.<span class=\"property\">ContentType</span></span><br><span class=\"line\">      <span class=\"keyword\">delete</span> config.<span class=\"property\">ContentType</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (</span><br><span class=\"line\">      <span class=\"comment\">//本地环境情况下，需要把login的host写死。避免频繁的切换host</span></span><br><span class=\"line\">      process.<span class=\"property\">env</span>.<span class=\"property\">VUE_APP_DEBUG</span> === <span class=\"string\">&#x27;development&#x27;</span> &amp;&amp;</span><br><span class=\"line\">      config.<span class=\"property\">url</span>.<span class=\"title function_\">split</span>(<span class=\"string\">&#x27;?&#x27;</span>)[<span class=\"number\">0</span>] == <span class=\"string\">&#x27;/admin/login&#x27;</span></span><br><span class=\"line\">    ) &#123;</span><br><span class=\"line\">      config.<span class=\"property\">baseURL</span> = process.<span class=\"property\">env</span>.<span class=\"property\">VUE_APP_HOST</span></span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"comment\">//测试环境或者正式环境，需要将所有的host改成环境文件中的host</span></span><br><span class=\"line\">      <span class=\"keyword\">switch</span> (config.<span class=\"property\">basicUrl</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"string\">&#x27;/mall&#x27;</span>:</span><br><span class=\"line\">          config.<span class=\"property\">baseURL</span> = process.<span class=\"property\">env</span>.<span class=\"property\">VUE_APP_HOST1</span></span><br><span class=\"line\">          <span class=\"keyword\">break</span></span><br><span class=\"line\">        <span class=\"attr\">default</span>:</span><br><span class=\"line\">          config.<span class=\"property\">baseURL</span> = process.<span class=\"property\">env</span>.<span class=\"property\">VUE_APP_HOST</span></span><br><span class=\"line\">          <span class=\"keyword\">break</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> config</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"function\">(<span class=\"params\">error</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"title class_\">Promise</span>.<span class=\"title function_\">reject</span>()</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n\n"},{"title":"使用node上传和下载文件","date":"2020-07-12T09:16:26.000Z","_content":"\n<meta name=\"referrer\" content=\"no-referrer\"/>\n\n## 使用node上传和下载文件\n\n前后端分离的情况下，如何上传和下载不同格式的文件，环境：node+vue+elementUI+press\n\n<!-- more -->\n\n> blob = new Blob([res.data], { type: 'image/png' });\n>\n> ​    objectUrl = URL.createObjectURL(blob);\n\n`Blob` 对象表示一个不可变、原始数据的类文件对象。它的数据可以按文本或二进制的格式进行读取，也可以转换成 [`ReadableStream`](https://developer.mozilla.org/zh-CN/docs/Web/API/ReadableStream) 来用于数据操作\n\n### 上传前端\n\n```vue\n          <el-upload\n            class=\"upload-demo\"\n            :action=\"uploadUrl\"\n            :on-success=\"uploadSuccess\"\n            :file-list=\"fileList\"\n          >\n            <el-button size=\"small\" type=\"primary\">点击上传</el-button>\n          </el-upload>\n```\n\n```js\n    uploadUrl: \"/api/infor\",\n    uploadSuccess(res, file, fileList) {\n      if (res.code == 200) {\n        this.fileList = fileList;\n        this.submitForm.fileName = res.rows.originalname;\n        this.submitForm.IDName = res.rows.IDName;\n        this.$message.success(\"上传成功\");\n      } else if (res.code == 999) {\n      } else {\n        this.fileList = [];\n        this.$message.error(res.msg);\n      }\n    },\n```\n\n1. elemengtUI上传组件，填写action，当上传成功后，回调函数中记录下文件**”本身名称类型“**和服务器中的**”被更改后的文件名称“**\n\n2. file list接收到赋值，用于回显\n\n### 上传后端\n\n安装multer\n\n> ```\n> npm install --save multer\n> ```\n\n引入multer\n\n```js\nconst objMulter = multer({ dest: '../static/files' });//指定存放位置\n\napp.use(objMulter.any());\n```\n\n处理上传来的文件\n\n> Multer 会添加一个 `body` 对象 以及 `file` 或 `files` 对象 到 express 的 `request` 对象中。 `body` 对象包含表单的文本域信息，`file` 或 `files` 对象包含对象表单上传的文件信息。\n\n```JS\n//上传的文件\nrouter.post('/api/infor', function (req, res, next) {\n  console.log(req.files[0], '传递来的数据')\n  const newname = req.files[0].path + path.parse(req.files[0].originalname).ext\n  let fileName = req.files[0].filename + path.parse(req.files[0].originalname).ext;\n  let info = {\n    originalname: req.files[0].originalname,\n    IDName: fileName\n  }\n  fs.rename(req.files[0].path, newname, function (err) {\n    if (err) {\n      res.send({ code: 999, msg: '上传失败' })\n    } else {\n      res.send({ code: 200, msg: '上传成功', rows: info })\n    }\n  })\n})\n```\n\n1. 调用fs的rename方法，用来对文件进行重命名，保证文件的唯一性。\n\n ### 下载前端\n\n```js\nimport { exportInfo } from \"../../../static/js/export.js\";\n\ndownload(index, row) {\n      let Tem = JSON.parse(JSON.stringify(row));\n      let infoTem = Tem.fileName.split(\".\");\n      let nameTem = infoTem.reduce((a, b) => {\n        return a + \".\" + b;\n      });\n      let info = {\n        method: \"POST\",\n        url: \"/api/download/\" + row._id,\n        responseType: \"blob\",\n        type: infoTem[infoTem.length - 1],\n        name: nameTem,\n      };\n      exportInfo(info)\n        .then((res) => {})\n        .catch(() => {});\n    },\n```\n\nexport.js\n\n```js\nimport axios from 'axios';\n\nfunction setUrlParam(data) {\n  let _str = '';\n  for (let i in data) {\n    if (!isNull(data[i])) {\n      _str += i + '=' + encodeURIComponent(data[i]) + '&';\n    }\n  }\n  return '?' + _str.substring(0, _str.length - 1);\n}\nfunction isNull(e) { // 排除为0 或者其他情况\n  let _ = String(e);\n  return (_ === 'null' || _ === 'NaN' || _ === 'undefined' || _.length === 0);\n}\nfunction whatType(type) {//判断传过来的type类型\n  let TypeObject = [\n    {\n      typeList: ['xlc', 'xll', 'xlm', 'xls', 'xlw', 'xlsx'],\n      typeOut: 'excel',\n    },\n    {\n      typeList: ['jpg', 'jpeg', 'png', 'gif'],\n      typeOut: 'img',\n    },\n    {\n      typeList: ['zip', '.tar', '.gz'],\n      typeOut: 'zip',\n    },\n    {\n      typeList: ['doc', 'docx'],\n      typeOut: 'doc',\n    },\n    {\n      typeList: ['ppt', 'pptx'],\n      typeOut: 'ppt',\n    },\n    {\n      typeList: ['tar'],\n      typeOut: 'tar',\n    },\n    {\n      typeList: ['gzip', 'gz'],\n      typeOut: 'gz',\n    }\n  ]\n  let currentType = null;\n  TypeObject.forEach(v => {\n    let currentIndex = v['typeList'].findIndex(e => e == type)\n    if (currentIndex > -1) {\n      currentType = v.typeOut\n    } else {\n      return\n    }\n  })\n  return currentType\n}\n\nexport function exportInfo(info) {\n  return new Promise((resolve, reject) => {\n    axios({\n      method: info.method,\n      url: info.params ? info.url + setUrlParam(info.params) : info.url,\n      data: info.params,\n      responseType: info.responseType, // 优先尝试 blob\n      headers: { 'Authorization': sessionStorage.getItem('token') ? 'Bearer ' + sessionStorage.getItem('token') : '' }\n    }).then((res) => {\n      console.log(info.type, whatType(info.type), 'whatType(info.type)')\n      let objectUrl = null, blob = null;\n      if (whatType(info.type) === 'excel') {\n        blob = new Blob([res.data], {\n          type: \"application/vnd.ms-excel\"\n        });\n        objectUrl = URL.createObjectURL(blob);\n      } else if (whatType(info.type) === 'img') {\n        blob = new Blob([res.data], { type: 'image/png' });\n        objectUrl = URL.createObjectURL(blob);\n        // objectUrl = 'data:image/png;base64,' + btoa(new Uint8Array(res.data).reduce((data, byte) => data + String.fromCharCode(byte), ''));\n      } else if (whatType(info.type) === 'zip') {\n        blob = new Blob([res.data], { type: 'application/zip' });\n        objectUrl = URL.createObjectURL(blob);\n      } else if (whatType(info.type) === 'doc') {\n        blob = new Blob([res.data], {\n          type: \"application/msword\"\n        });\n        objectUrl = URL.createObjectURL(blob);\n      } else if (whatType(info.type) === 'ppt') {\n        blob = new Blob([res.data], {\n          type: \"application/vnd.ms-powerpoint\"\n        });\n        objectUrl = URL.createObjectURL(blob);\n      } else if (whatType(info.type) === 'tar') {\n        blob = new Blob([res.data], {\n          type: \"application/x-tar\"\n        });\n        objectUrl = URL.createObjectURL(blob);\n      } else if (whatType(info.type) === 'gz') {\n        blob = new Blob([res.data], {\n          type: \"application/x-gzip\"\n        });\n        objectUrl = URL.createObjectURL(blob);\n      } else {\n        blob = new Blob([res.data], {\n          type: \"application/octet-stream\"\n        });\n        objectUrl = URL.createObjectURL(blob);\n      }\n      console.log(objectUrl, '下载地址')\n      let a = document.createElement(\"a\");\n      a.href = objectUrl;\n      a.download = info.name;\n      //a.click();\n      //下面这个写法兼容火狐\n      a.dispatchEvent(new MouseEvent('click', { bubbles: true, cancelable: true, view: window }));\n      window.URL.revokeObjectURL(blob);\n      resolve(res)\n    }).catch(error => {\n      console.log(\"response: \", error);\n      reject(error)\n    })\n  })\n}\n\n```\n\n1. 下载需要用特定的数据格式接收-blob和指定的type\n\n   ```js\n           blob = new Blob([res.data], {\n             type: \"application/x-gzip\"\n           });\n           objectUrl = URL.createObjectURL(blob);\n   ```\n\n2. 模拟 a 链接的行为\n\n   ```js\n   let a = document.createElement(\"a\");\n         a.href = objectUrl;\n         a.download = info.name;\n   ```\n\n\n\n\n### 下载后端\n\n```js\nrouter.post('/api/download/:id', function (req, res) {\n  db.Demo.findOne({ _id: req.params.id }, function (err, docs) {\n    if (err) {\n      console.error(err)\n      return\n    }\n    if (docs) {\n      console.log(req.params.id, docs.IDName)\n      let filePath = '../static/files/' + docs.IDName\n      let stats = fs.statSync(filePath);\n      console.log(stats)\n      if (stats.isFile()) {\n        res.set({\n          'Content-Type': 'application/octet-stream',\n          'Content-Disposition': 'attachment; filename=' + docs.IDName,\n          'Content-Length': stats.size\n        });\n        fs.createReadStream(filePath).pipe(res);\n      } else {\n        res.end(404);\n      }\n    }\n  })\n})\n```\n\n1. 数据库中查找服务器的唯一文件名称。以便拼接出filePath文件地址。\n\n2. 读取对应地址的文件流，流入到res中，返回给前端，前端使用blob接收\n\n   ```js\n   fs.createReadStream(filePath).pipe(res);\n   ```\n\n### 部署到云服务器\n\n1. 使用宝塔安装mongodb，pm2，nginx。\n\n2. nginx需要配置转发。conf文件如下\n\n   ```js\n   user  www www;\n   worker_processes auto;\n   error_log  /www/wwwlogs/nginx_error.log  crit;\n   pid        /www/server/nginx/logs/nginx.pid;\n   worker_rlimit_nofile 51200;\n   \n   events\n       {\n           use epoll;\n           worker_connections 51200;\n           multi_accept on;\n       }\n   \n   http\n   {\n           include       mime.types;\n   \t\t    #include luawaf.conf;\n   \n   \t    \tinclude proxy.conf;\n   \n           default_type  application/octet-stream;\n   \n           server_names_hash_bucket_size 512;\n           client_header_buffer_size 32k;\n           large_client_header_buffers 4 32k;\n           client_max_body_size 50m;\n   \n           sendfile   on;\n           tcp_nopush on;\n   \n           keepalive_timeout 60;\n   \n           tcp_nodelay on;\n   \n           fastcgi_connect_timeout 300;\n           fastcgi_send_timeout 300;\n           fastcgi_read_timeout 300;\n           fastcgi_buffer_size 64k;\n           fastcgi_buffers 4 64k;\n           fastcgi_busy_buffers_size 128k;\n           fastcgi_temp_file_write_size 256k;\n   \t\t    fastcgi_intercept_errors on;\n   \n           gzip on;\n           gzip_min_length  1k;\n           gzip_buffers     4 16k;\n           gzip_http_version 1.1;\n           gzip_comp_level 2;\n           gzip_types     text/plain application/javascript application/x-javascript text/javascript text/css application/xml;\n           gzip_vary on;\n           gzip_proxied   expired no-cache no-store private auth;\n           gzip_disable   \"MSIE [1-6]\\.\";\n   \n           limit_conn_zone $binary_remote_addr zone=perip:10m;\n   \t\t    limit_conn_zone $server_name zone=perserver:10m;\n   \n           server_tokens off;\n           access_log off;\n   \n   server\n       {\n           listen 888;\n           server_name phpmyadmin;\n           index index.html index.htm index.php;\n           root  /www/server/phpmyadmin;\n   \n           #error_page   404   /404.html;\n           include enable-php.conf;\n   \n           location ~ .*\\.(gif|jpg|jpeg|png|bmp|swf)$\n           {\n               expires      30d;\n           }\n   \n           location ~ .*\\.(js|css)?$\n           {\n               expires      12h;\n           }\n   \n           location ~ /\\.\n           {\n               deny all;\n           }\n   \n           access_log  /www/wwwlogs/access.log;\n       }\n   \n   server\n       {\n           listen 80;\n           server_name limeng.website;\n           index index.html index.htm index.php;\n           root  /www/server/nginx/html;\n   \n           #error_page   404   /404.html;\n        location / {\n            try_files $uri /index.html;\n        }\n          \n        location /api {\n            proxy_pass http://localhost:8088;\n            proxy_http_version 1.1;\n            proxy_set_header Upgrade $http_upgrade;\n            proxy_set_header Connection ‘upgrade’;\n            proxy_set_header Host $host;\n            proxy_cache_bypass $http_upgrade;\n        }\n        location /images {\n          root  /BLOG/static/files;\n          autoindex on;\n        }\n           access_log  /www/wwwlogs/access.log;\n       }\n   include /www/server/panel/vhost/nginx/*.conf;\n   }\n   ```\n\n   添加对应api 的转发，将api的请求转发到http://localhost:8088，8088端口即是 之前mongodb的listen端口。\n\n   ```js\n       location /api {\n            proxy_pass http://localhost:8088;\n            proxy_http_version 1.1;\n            proxy_set_header Upgrade $http_upgrade;\n            proxy_set_header Connection ‘upgrade’;\n            proxy_set_header Host $host;\n            proxy_cache_bypass $http_upgrade;\n        }\n   ```\n\n","source":"_posts/使用node上传和下载文件.md","raw":"---\ntitle: 使用node上传和下载文件\ndate: 2020-07-12 17:16:26\ntags: [node,express，multer]\n---\n\n<meta name=\"referrer\" content=\"no-referrer\"/>\n\n## 使用node上传和下载文件\n\n前后端分离的情况下，如何上传和下载不同格式的文件，环境：node+vue+elementUI+press\n\n<!-- more -->\n\n> blob = new Blob([res.data], { type: 'image/png' });\n>\n> ​    objectUrl = URL.createObjectURL(blob);\n\n`Blob` 对象表示一个不可变、原始数据的类文件对象。它的数据可以按文本或二进制的格式进行读取，也可以转换成 [`ReadableStream`](https://developer.mozilla.org/zh-CN/docs/Web/API/ReadableStream) 来用于数据操作\n\n### 上传前端\n\n```vue\n          <el-upload\n            class=\"upload-demo\"\n            :action=\"uploadUrl\"\n            :on-success=\"uploadSuccess\"\n            :file-list=\"fileList\"\n          >\n            <el-button size=\"small\" type=\"primary\">点击上传</el-button>\n          </el-upload>\n```\n\n```js\n    uploadUrl: \"/api/infor\",\n    uploadSuccess(res, file, fileList) {\n      if (res.code == 200) {\n        this.fileList = fileList;\n        this.submitForm.fileName = res.rows.originalname;\n        this.submitForm.IDName = res.rows.IDName;\n        this.$message.success(\"上传成功\");\n      } else if (res.code == 999) {\n      } else {\n        this.fileList = [];\n        this.$message.error(res.msg);\n      }\n    },\n```\n\n1. elemengtUI上传组件，填写action，当上传成功后，回调函数中记录下文件**”本身名称类型“**和服务器中的**”被更改后的文件名称“**\n\n2. file list接收到赋值，用于回显\n\n### 上传后端\n\n安装multer\n\n> ```\n> npm install --save multer\n> ```\n\n引入multer\n\n```js\nconst objMulter = multer({ dest: '../static/files' });//指定存放位置\n\napp.use(objMulter.any());\n```\n\n处理上传来的文件\n\n> Multer 会添加一个 `body` 对象 以及 `file` 或 `files` 对象 到 express 的 `request` 对象中。 `body` 对象包含表单的文本域信息，`file` 或 `files` 对象包含对象表单上传的文件信息。\n\n```JS\n//上传的文件\nrouter.post('/api/infor', function (req, res, next) {\n  console.log(req.files[0], '传递来的数据')\n  const newname = req.files[0].path + path.parse(req.files[0].originalname).ext\n  let fileName = req.files[0].filename + path.parse(req.files[0].originalname).ext;\n  let info = {\n    originalname: req.files[0].originalname,\n    IDName: fileName\n  }\n  fs.rename(req.files[0].path, newname, function (err) {\n    if (err) {\n      res.send({ code: 999, msg: '上传失败' })\n    } else {\n      res.send({ code: 200, msg: '上传成功', rows: info })\n    }\n  })\n})\n```\n\n1. 调用fs的rename方法，用来对文件进行重命名，保证文件的唯一性。\n\n ### 下载前端\n\n```js\nimport { exportInfo } from \"../../../static/js/export.js\";\n\ndownload(index, row) {\n      let Tem = JSON.parse(JSON.stringify(row));\n      let infoTem = Tem.fileName.split(\".\");\n      let nameTem = infoTem.reduce((a, b) => {\n        return a + \".\" + b;\n      });\n      let info = {\n        method: \"POST\",\n        url: \"/api/download/\" + row._id,\n        responseType: \"blob\",\n        type: infoTem[infoTem.length - 1],\n        name: nameTem,\n      };\n      exportInfo(info)\n        .then((res) => {})\n        .catch(() => {});\n    },\n```\n\nexport.js\n\n```js\nimport axios from 'axios';\n\nfunction setUrlParam(data) {\n  let _str = '';\n  for (let i in data) {\n    if (!isNull(data[i])) {\n      _str += i + '=' + encodeURIComponent(data[i]) + '&';\n    }\n  }\n  return '?' + _str.substring(0, _str.length - 1);\n}\nfunction isNull(e) { // 排除为0 或者其他情况\n  let _ = String(e);\n  return (_ === 'null' || _ === 'NaN' || _ === 'undefined' || _.length === 0);\n}\nfunction whatType(type) {//判断传过来的type类型\n  let TypeObject = [\n    {\n      typeList: ['xlc', 'xll', 'xlm', 'xls', 'xlw', 'xlsx'],\n      typeOut: 'excel',\n    },\n    {\n      typeList: ['jpg', 'jpeg', 'png', 'gif'],\n      typeOut: 'img',\n    },\n    {\n      typeList: ['zip', '.tar', '.gz'],\n      typeOut: 'zip',\n    },\n    {\n      typeList: ['doc', 'docx'],\n      typeOut: 'doc',\n    },\n    {\n      typeList: ['ppt', 'pptx'],\n      typeOut: 'ppt',\n    },\n    {\n      typeList: ['tar'],\n      typeOut: 'tar',\n    },\n    {\n      typeList: ['gzip', 'gz'],\n      typeOut: 'gz',\n    }\n  ]\n  let currentType = null;\n  TypeObject.forEach(v => {\n    let currentIndex = v['typeList'].findIndex(e => e == type)\n    if (currentIndex > -1) {\n      currentType = v.typeOut\n    } else {\n      return\n    }\n  })\n  return currentType\n}\n\nexport function exportInfo(info) {\n  return new Promise((resolve, reject) => {\n    axios({\n      method: info.method,\n      url: info.params ? info.url + setUrlParam(info.params) : info.url,\n      data: info.params,\n      responseType: info.responseType, // 优先尝试 blob\n      headers: { 'Authorization': sessionStorage.getItem('token') ? 'Bearer ' + sessionStorage.getItem('token') : '' }\n    }).then((res) => {\n      console.log(info.type, whatType(info.type), 'whatType(info.type)')\n      let objectUrl = null, blob = null;\n      if (whatType(info.type) === 'excel') {\n        blob = new Blob([res.data], {\n          type: \"application/vnd.ms-excel\"\n        });\n        objectUrl = URL.createObjectURL(blob);\n      } else if (whatType(info.type) === 'img') {\n        blob = new Blob([res.data], { type: 'image/png' });\n        objectUrl = URL.createObjectURL(blob);\n        // objectUrl = 'data:image/png;base64,' + btoa(new Uint8Array(res.data).reduce((data, byte) => data + String.fromCharCode(byte), ''));\n      } else if (whatType(info.type) === 'zip') {\n        blob = new Blob([res.data], { type: 'application/zip' });\n        objectUrl = URL.createObjectURL(blob);\n      } else if (whatType(info.type) === 'doc') {\n        blob = new Blob([res.data], {\n          type: \"application/msword\"\n        });\n        objectUrl = URL.createObjectURL(blob);\n      } else if (whatType(info.type) === 'ppt') {\n        blob = new Blob([res.data], {\n          type: \"application/vnd.ms-powerpoint\"\n        });\n        objectUrl = URL.createObjectURL(blob);\n      } else if (whatType(info.type) === 'tar') {\n        blob = new Blob([res.data], {\n          type: \"application/x-tar\"\n        });\n        objectUrl = URL.createObjectURL(blob);\n      } else if (whatType(info.type) === 'gz') {\n        blob = new Blob([res.data], {\n          type: \"application/x-gzip\"\n        });\n        objectUrl = URL.createObjectURL(blob);\n      } else {\n        blob = new Blob([res.data], {\n          type: \"application/octet-stream\"\n        });\n        objectUrl = URL.createObjectURL(blob);\n      }\n      console.log(objectUrl, '下载地址')\n      let a = document.createElement(\"a\");\n      a.href = objectUrl;\n      a.download = info.name;\n      //a.click();\n      //下面这个写法兼容火狐\n      a.dispatchEvent(new MouseEvent('click', { bubbles: true, cancelable: true, view: window }));\n      window.URL.revokeObjectURL(blob);\n      resolve(res)\n    }).catch(error => {\n      console.log(\"response: \", error);\n      reject(error)\n    })\n  })\n}\n\n```\n\n1. 下载需要用特定的数据格式接收-blob和指定的type\n\n   ```js\n           blob = new Blob([res.data], {\n             type: \"application/x-gzip\"\n           });\n           objectUrl = URL.createObjectURL(blob);\n   ```\n\n2. 模拟 a 链接的行为\n\n   ```js\n   let a = document.createElement(\"a\");\n         a.href = objectUrl;\n         a.download = info.name;\n   ```\n\n\n\n\n### 下载后端\n\n```js\nrouter.post('/api/download/:id', function (req, res) {\n  db.Demo.findOne({ _id: req.params.id }, function (err, docs) {\n    if (err) {\n      console.error(err)\n      return\n    }\n    if (docs) {\n      console.log(req.params.id, docs.IDName)\n      let filePath = '../static/files/' + docs.IDName\n      let stats = fs.statSync(filePath);\n      console.log(stats)\n      if (stats.isFile()) {\n        res.set({\n          'Content-Type': 'application/octet-stream',\n          'Content-Disposition': 'attachment; filename=' + docs.IDName,\n          'Content-Length': stats.size\n        });\n        fs.createReadStream(filePath).pipe(res);\n      } else {\n        res.end(404);\n      }\n    }\n  })\n})\n```\n\n1. 数据库中查找服务器的唯一文件名称。以便拼接出filePath文件地址。\n\n2. 读取对应地址的文件流，流入到res中，返回给前端，前端使用blob接收\n\n   ```js\n   fs.createReadStream(filePath).pipe(res);\n   ```\n\n### 部署到云服务器\n\n1. 使用宝塔安装mongodb，pm2，nginx。\n\n2. nginx需要配置转发。conf文件如下\n\n   ```js\n   user  www www;\n   worker_processes auto;\n   error_log  /www/wwwlogs/nginx_error.log  crit;\n   pid        /www/server/nginx/logs/nginx.pid;\n   worker_rlimit_nofile 51200;\n   \n   events\n       {\n           use epoll;\n           worker_connections 51200;\n           multi_accept on;\n       }\n   \n   http\n   {\n           include       mime.types;\n   \t\t    #include luawaf.conf;\n   \n   \t    \tinclude proxy.conf;\n   \n           default_type  application/octet-stream;\n   \n           server_names_hash_bucket_size 512;\n           client_header_buffer_size 32k;\n           large_client_header_buffers 4 32k;\n           client_max_body_size 50m;\n   \n           sendfile   on;\n           tcp_nopush on;\n   \n           keepalive_timeout 60;\n   \n           tcp_nodelay on;\n   \n           fastcgi_connect_timeout 300;\n           fastcgi_send_timeout 300;\n           fastcgi_read_timeout 300;\n           fastcgi_buffer_size 64k;\n           fastcgi_buffers 4 64k;\n           fastcgi_busy_buffers_size 128k;\n           fastcgi_temp_file_write_size 256k;\n   \t\t    fastcgi_intercept_errors on;\n   \n           gzip on;\n           gzip_min_length  1k;\n           gzip_buffers     4 16k;\n           gzip_http_version 1.1;\n           gzip_comp_level 2;\n           gzip_types     text/plain application/javascript application/x-javascript text/javascript text/css application/xml;\n           gzip_vary on;\n           gzip_proxied   expired no-cache no-store private auth;\n           gzip_disable   \"MSIE [1-6]\\.\";\n   \n           limit_conn_zone $binary_remote_addr zone=perip:10m;\n   \t\t    limit_conn_zone $server_name zone=perserver:10m;\n   \n           server_tokens off;\n           access_log off;\n   \n   server\n       {\n           listen 888;\n           server_name phpmyadmin;\n           index index.html index.htm index.php;\n           root  /www/server/phpmyadmin;\n   \n           #error_page   404   /404.html;\n           include enable-php.conf;\n   \n           location ~ .*\\.(gif|jpg|jpeg|png|bmp|swf)$\n           {\n               expires      30d;\n           }\n   \n           location ~ .*\\.(js|css)?$\n           {\n               expires      12h;\n           }\n   \n           location ~ /\\.\n           {\n               deny all;\n           }\n   \n           access_log  /www/wwwlogs/access.log;\n       }\n   \n   server\n       {\n           listen 80;\n           server_name limeng.website;\n           index index.html index.htm index.php;\n           root  /www/server/nginx/html;\n   \n           #error_page   404   /404.html;\n        location / {\n            try_files $uri /index.html;\n        }\n          \n        location /api {\n            proxy_pass http://localhost:8088;\n            proxy_http_version 1.1;\n            proxy_set_header Upgrade $http_upgrade;\n            proxy_set_header Connection ‘upgrade’;\n            proxy_set_header Host $host;\n            proxy_cache_bypass $http_upgrade;\n        }\n        location /images {\n          root  /BLOG/static/files;\n          autoindex on;\n        }\n           access_log  /www/wwwlogs/access.log;\n       }\n   include /www/server/panel/vhost/nginx/*.conf;\n   }\n   ```\n\n   添加对应api 的转发，将api的请求转发到http://localhost:8088，8088端口即是 之前mongodb的listen端口。\n\n   ```js\n       location /api {\n            proxy_pass http://localhost:8088;\n            proxy_http_version 1.1;\n            proxy_set_header Upgrade $http_upgrade;\n            proxy_set_header Connection ‘upgrade’;\n            proxy_set_header Host $host;\n            proxy_cache_bypass $http_upgrade;\n        }\n   ```\n\n","slug":"使用node上传和下载文件","published":1,"updated":"2020-09-02T03:33:08.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl0uux6vs00107sufdh259pe2","content":"<meta name=\"referrer\" content=\"no-referrer\"/>\n\n<h2 id=\"使用node上传和下载文件\"><a href=\"#使用node上传和下载文件\" class=\"headerlink\" title=\"使用node上传和下载文件\"></a>使用node上传和下载文件</h2><p>前后端分离的情况下，如何上传和下载不同格式的文件，环境：node+vue+elementUI+press</p>\n<span id=\"more\"></span>\n\n<blockquote>\n<p>blob = new Blob([res.data], { type: ‘image/png’ });</p>\n<p>​    objectUrl = URL.createObjectURL(blob);</p>\n</blockquote>\n<p><code>Blob</code> 对象表示一个不可变、原始数据的类文件对象。它的数据可以按文本或二进制的格式进行读取，也可以转换成 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/ReadableStream\"><code>ReadableStream</code></a> 来用于数据操作</p>\n<h3 id=\"上传前端\"><a href=\"#上传前端\" class=\"headerlink\" title=\"上传前端\"></a>上传前端</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;el-upload</span><br><span class=\"line\">  class=&quot;upload-demo&quot;</span><br><span class=\"line\">  :action=&quot;uploadUrl&quot;</span><br><span class=\"line\">  :on-success=&quot;uploadSuccess&quot;</span><br><span class=\"line\">  :file-list=&quot;fileList&quot;</span><br><span class=\"line\">&gt;</span><br><span class=\"line\">  &lt;el-button size=&quot;small&quot; type=&quot;primary&quot;&gt;点击上传&lt;/el-button&gt;</span><br><span class=\"line\">&lt;/el-upload&gt;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">uploadUrl</span>: <span class=\"string\">&quot;/api/infor&quot;</span>,</span><br><span class=\"line\"><span class=\"title function_\">uploadSuccess</span>(<span class=\"params\">res, file, fileList</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (res.<span class=\"property\">code</span> == <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">fileList</span> = fileList;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">submitForm</span>.<span class=\"property\">fileName</span> = res.<span class=\"property\">rows</span>.<span class=\"property\">originalname</span>;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">submitForm</span>.<span class=\"property\">IDName</span> = res.<span class=\"property\">rows</span>.<span class=\"property\">IDName</span>;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">$message</span>.<span class=\"title function_\">success</span>(<span class=\"string\">&quot;上传成功&quot;</span>);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (res.<span class=\"property\">code</span> == <span class=\"number\">999</span>) &#123;</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">fileList</span> = [];</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">$message</span>.<span class=\"title function_\">error</span>(res.<span class=\"property\">msg</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n\n<ol>\n<li><p>elemengtUI上传组件，填写action，当上传成功后，回调函数中记录下文件<strong>”本身名称类型“</strong>和服务器中的<strong>”被更改后的文件名称“</strong></p>\n</li>\n<li><p>file list接收到赋值，用于回显</p>\n</li>\n</ol>\n<h3 id=\"上传后端\"><a href=\"#上传后端\" class=\"headerlink\" title=\"上传后端\"></a>上传后端</h3><p>安装multer</p>\n<blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install --save multer</span><br></pre></td></tr></table></figure>\n</blockquote>\n<p>引入multer</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> objMulter = <span class=\"title function_\">multer</span>(&#123; <span class=\"attr\">dest</span>: <span class=\"string\">&#x27;../static/files&#x27;</span> &#125;);<span class=\"comment\">//指定存放位置</span></span><br><span class=\"line\"></span><br><span class=\"line\">app.<span class=\"title function_\">use</span>(objMulter.<span class=\"title function_\">any</span>());</span><br></pre></td></tr></table></figure>\n\n<p>处理上传来的文件</p>\n<blockquote>\n<p>Multer 会添加一个 <code>body</code> 对象 以及 <code>file</code> 或 <code>files</code> 对象 到 express 的 <code>request</code> 对象中。 <code>body</code> 对象包含表单的文本域信息，<code>file</code> 或 <code>files</code> 对象包含对象表单上传的文件信息。</p>\n</blockquote>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//上传的文件</span></span><br><span class=\"line\">router.<span class=\"title function_\">post</span>(<span class=\"string\">&#x27;/api/infor&#x27;</span>, <span class=\"keyword\">function</span> (<span class=\"params\">req, res, next</span>) &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(req.<span class=\"property\">files</span>[<span class=\"number\">0</span>], <span class=\"string\">&#x27;传递来的数据&#x27;</span>)</span><br><span class=\"line\">  <span class=\"keyword\">const</span> newname = req.<span class=\"property\">files</span>[<span class=\"number\">0</span>].<span class=\"property\">path</span> + path.<span class=\"title function_\">parse</span>(req.<span class=\"property\">files</span>[<span class=\"number\">0</span>].<span class=\"property\">originalname</span>).<span class=\"property\">ext</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> fileName = req.<span class=\"property\">files</span>[<span class=\"number\">0</span>].<span class=\"property\">filename</span> + path.<span class=\"title function_\">parse</span>(req.<span class=\"property\">files</span>[<span class=\"number\">0</span>].<span class=\"property\">originalname</span>).<span class=\"property\">ext</span>;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> info = &#123;</span><br><span class=\"line\">    <span class=\"attr\">originalname</span>: req.<span class=\"property\">files</span>[<span class=\"number\">0</span>].<span class=\"property\">originalname</span>,</span><br><span class=\"line\">    <span class=\"title class_\">IDName</span>: fileName</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  fs.<span class=\"title function_\">rename</span>(req.<span class=\"property\">files</span>[<span class=\"number\">0</span>].<span class=\"property\">path</span>, newname, <span class=\"keyword\">function</span> (<span class=\"params\">err</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (err) &#123;</span><br><span class=\"line\">      res.<span class=\"title function_\">send</span>(&#123; <span class=\"attr\">code</span>: <span class=\"number\">999</span>, <span class=\"attr\">msg</span>: <span class=\"string\">&#x27;上传失败&#x27;</span> &#125;)</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      res.<span class=\"title function_\">send</span>(&#123; <span class=\"attr\">code</span>: <span class=\"number\">200</span>, <span class=\"attr\">msg</span>: <span class=\"string\">&#x27;上传成功&#x27;</span>, <span class=\"attr\">rows</span>: info &#125;)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<ol>\n<li>调用fs的rename方法，用来对文件进行重命名，保证文件的唯一性。</li>\n</ol>\n<h3 id=\"下载前端\"><a href=\"#下载前端\" class=\"headerlink\" title=\"下载前端\"></a>下载前端</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; exportInfo &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;../../../static/js/export.js&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">download</span>(<span class=\"params\">index, row</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">let</span> <span class=\"title class_\">Tem</span> = <span class=\"title class_\">JSON</span>.<span class=\"title function_\">parse</span>(<span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(row));</span><br><span class=\"line\">      <span class=\"keyword\">let</span> infoTem = <span class=\"title class_\">Tem</span>.<span class=\"property\">fileName</span>.<span class=\"title function_\">split</span>(<span class=\"string\">&quot;.&quot;</span>);</span><br><span class=\"line\">      <span class=\"keyword\">let</span> nameTem = infoTem.<span class=\"title function_\">reduce</span>(<span class=\"function\">(<span class=\"params\">a, b</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> a + <span class=\"string\">&quot;.&quot;</span> + b;</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">      <span class=\"keyword\">let</span> info = &#123;</span><br><span class=\"line\">        <span class=\"attr\">method</span>: <span class=\"string\">&quot;POST&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">url</span>: <span class=\"string\">&quot;/api/download/&quot;</span> + row.<span class=\"property\">_id</span>,</span><br><span class=\"line\">        <span class=\"attr\">responseType</span>: <span class=\"string\">&quot;blob&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">type</span>: infoTem[infoTem.<span class=\"property\">length</span> - <span class=\"number\">1</span>],</span><br><span class=\"line\">        <span class=\"attr\">name</span>: nameTem,</span><br><span class=\"line\">      &#125;;</span><br><span class=\"line\">      <span class=\"title function_\">exportInfo</span>(info)</span><br><span class=\"line\">        .<span class=\"title function_\">then</span>(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> &#123;&#125;)</span><br><span class=\"line\">        .<span class=\"title function_\">catch</span>(<span class=\"function\">() =&gt;</span> &#123;&#125;);</span><br><span class=\"line\">    &#125;,</span><br></pre></td></tr></table></figure>\n\n<p>export.js</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> axios <span class=\"keyword\">from</span> <span class=\"string\">&#x27;axios&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">setUrlParam</span>(<span class=\"params\">data</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> _str = <span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i <span class=\"keyword\">in</span> data) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!<span class=\"title function_\">isNull</span>(data[i])) &#123;</span><br><span class=\"line\">      _str += i + <span class=\"string\">&#x27;=&#x27;</span> + <span class=\"built_in\">encodeURIComponent</span>(data[i]) + <span class=\"string\">&#x27;&amp;&#x27;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">&#x27;?&#x27;</span> + _str.<span class=\"title function_\">substring</span>(<span class=\"number\">0</span>, _str.<span class=\"property\">length</span> - <span class=\"number\">1</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">isNull</span>(<span class=\"params\">e</span>) &#123; <span class=\"comment\">// 排除为0 或者其他情况</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> _ = <span class=\"title class_\">String</span>(e);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> (_ === <span class=\"string\">&#x27;null&#x27;</span> || _ === <span class=\"string\">&#x27;NaN&#x27;</span> || _ === <span class=\"string\">&#x27;undefined&#x27;</span> || _.<span class=\"property\">length</span> === <span class=\"number\">0</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">whatType</span>(<span class=\"params\">type</span>) &#123;<span class=\"comment\">//判断传过来的type类型</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> <span class=\"title class_\">TypeObject</span> = [</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      <span class=\"attr\">typeList</span>: [<span class=\"string\">&#x27;xlc&#x27;</span>, <span class=\"string\">&#x27;xll&#x27;</span>, <span class=\"string\">&#x27;xlm&#x27;</span>, <span class=\"string\">&#x27;xls&#x27;</span>, <span class=\"string\">&#x27;xlw&#x27;</span>, <span class=\"string\">&#x27;xlsx&#x27;</span>],</span><br><span class=\"line\">      <span class=\"attr\">typeOut</span>: <span class=\"string\">&#x27;excel&#x27;</span>,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      <span class=\"attr\">typeList</span>: [<span class=\"string\">&#x27;jpg&#x27;</span>, <span class=\"string\">&#x27;jpeg&#x27;</span>, <span class=\"string\">&#x27;png&#x27;</span>, <span class=\"string\">&#x27;gif&#x27;</span>],</span><br><span class=\"line\">      <span class=\"attr\">typeOut</span>: <span class=\"string\">&#x27;img&#x27;</span>,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      <span class=\"attr\">typeList</span>: [<span class=\"string\">&#x27;zip&#x27;</span>, <span class=\"string\">&#x27;.tar&#x27;</span>, <span class=\"string\">&#x27;.gz&#x27;</span>],</span><br><span class=\"line\">      <span class=\"attr\">typeOut</span>: <span class=\"string\">&#x27;zip&#x27;</span>,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      <span class=\"attr\">typeList</span>: [<span class=\"string\">&#x27;doc&#x27;</span>, <span class=\"string\">&#x27;docx&#x27;</span>],</span><br><span class=\"line\">      <span class=\"attr\">typeOut</span>: <span class=\"string\">&#x27;doc&#x27;</span>,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      <span class=\"attr\">typeList</span>: [<span class=\"string\">&#x27;ppt&#x27;</span>, <span class=\"string\">&#x27;pptx&#x27;</span>],</span><br><span class=\"line\">      <span class=\"attr\">typeOut</span>: <span class=\"string\">&#x27;ppt&#x27;</span>,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      <span class=\"attr\">typeList</span>: [<span class=\"string\">&#x27;tar&#x27;</span>],</span><br><span class=\"line\">      <span class=\"attr\">typeOut</span>: <span class=\"string\">&#x27;tar&#x27;</span>,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      <span class=\"attr\">typeList</span>: [<span class=\"string\">&#x27;gzip&#x27;</span>, <span class=\"string\">&#x27;gz&#x27;</span>],</span><br><span class=\"line\">      <span class=\"attr\">typeOut</span>: <span class=\"string\">&#x27;gz&#x27;</span>,</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  ]</span><br><span class=\"line\">  <span class=\"keyword\">let</span> currentType = <span class=\"literal\">null</span>;</span><br><span class=\"line\">  <span class=\"title class_\">TypeObject</span>.<span class=\"title function_\">forEach</span>(<span class=\"function\"><span class=\"params\">v</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> currentIndex = v[<span class=\"string\">&#x27;typeList&#x27;</span>].<span class=\"title function_\">findIndex</span>(<span class=\"function\"><span class=\"params\">e</span> =&gt;</span> e == type)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (currentIndex &gt; -<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">      currentType = v.<span class=\"property\">typeOut</span></span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  <span class=\"keyword\">return</span> currentType</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">function</span> <span class=\"title function_\">exportInfo</span>(<span class=\"params\">info</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"title function_\">axios</span>(&#123;</span><br><span class=\"line\">      <span class=\"attr\">method</span>: info.<span class=\"property\">method</span>,</span><br><span class=\"line\">      <span class=\"attr\">url</span>: info.<span class=\"property\">params</span> ? info.<span class=\"property\">url</span> + <span class=\"title function_\">setUrlParam</span>(info.<span class=\"property\">params</span>) : info.<span class=\"property\">url</span>,</span><br><span class=\"line\">      <span class=\"attr\">data</span>: info.<span class=\"property\">params</span>,</span><br><span class=\"line\">      <span class=\"attr\">responseType</span>: info.<span class=\"property\">responseType</span>, <span class=\"comment\">// 优先尝试 blob</span></span><br><span class=\"line\">      <span class=\"attr\">headers</span>: &#123; <span class=\"string\">&#x27;Authorization&#x27;</span>: sessionStorage.<span class=\"title function_\">getItem</span>(<span class=\"string\">&#x27;token&#x27;</span>) ? <span class=\"string\">&#x27;Bearer &#x27;</span> + sessionStorage.<span class=\"title function_\">getItem</span>(<span class=\"string\">&#x27;token&#x27;</span>) : <span class=\"string\">&#x27;&#x27;</span> &#125;</span><br><span class=\"line\">    &#125;).<span class=\"title function_\">then</span>(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(info.<span class=\"property\">type</span>, <span class=\"title function_\">whatType</span>(info.<span class=\"property\">type</span>), <span class=\"string\">&#x27;whatType(info.type)&#x27;</span>)</span><br><span class=\"line\">      <span class=\"keyword\">let</span> objectUrl = <span class=\"literal\">null</span>, blob = <span class=\"literal\">null</span>;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (<span class=\"title function_\">whatType</span>(info.<span class=\"property\">type</span>) === <span class=\"string\">&#x27;excel&#x27;</span>) &#123;</span><br><span class=\"line\">        blob = <span class=\"keyword\">new</span> <span class=\"title class_\">Blob</span>([res.<span class=\"property\">data</span>], &#123;</span><br><span class=\"line\">          <span class=\"attr\">type</span>: <span class=\"string\">&quot;application/vnd.ms-excel&quot;</span></span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">        objectUrl = <span class=\"variable constant_\">URL</span>.<span class=\"title function_\">createObjectURL</span>(blob);</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"title function_\">whatType</span>(info.<span class=\"property\">type</span>) === <span class=\"string\">&#x27;img&#x27;</span>) &#123;</span><br><span class=\"line\">        blob = <span class=\"keyword\">new</span> <span class=\"title class_\">Blob</span>([res.<span class=\"property\">data</span>], &#123; <span class=\"attr\">type</span>: <span class=\"string\">&#x27;image/png&#x27;</span> &#125;);</span><br><span class=\"line\">        objectUrl = <span class=\"variable constant_\">URL</span>.<span class=\"title function_\">createObjectURL</span>(blob);</span><br><span class=\"line\">        <span class=\"comment\">// objectUrl = &#x27;data:image/png;base64,&#x27; + btoa(new Uint8Array(res.data).reduce((data, byte) =&gt; data + String.fromCharCode(byte), &#x27;&#x27;));</span></span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"title function_\">whatType</span>(info.<span class=\"property\">type</span>) === <span class=\"string\">&#x27;zip&#x27;</span>) &#123;</span><br><span class=\"line\">        blob = <span class=\"keyword\">new</span> <span class=\"title class_\">Blob</span>([res.<span class=\"property\">data</span>], &#123; <span class=\"attr\">type</span>: <span class=\"string\">&#x27;application/zip&#x27;</span> &#125;);</span><br><span class=\"line\">        objectUrl = <span class=\"variable constant_\">URL</span>.<span class=\"title function_\">createObjectURL</span>(blob);</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"title function_\">whatType</span>(info.<span class=\"property\">type</span>) === <span class=\"string\">&#x27;doc&#x27;</span>) &#123;</span><br><span class=\"line\">        blob = <span class=\"keyword\">new</span> <span class=\"title class_\">Blob</span>([res.<span class=\"property\">data</span>], &#123;</span><br><span class=\"line\">          <span class=\"attr\">type</span>: <span class=\"string\">&quot;application/msword&quot;</span></span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">        objectUrl = <span class=\"variable constant_\">URL</span>.<span class=\"title function_\">createObjectURL</span>(blob);</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"title function_\">whatType</span>(info.<span class=\"property\">type</span>) === <span class=\"string\">&#x27;ppt&#x27;</span>) &#123;</span><br><span class=\"line\">        blob = <span class=\"keyword\">new</span> <span class=\"title class_\">Blob</span>([res.<span class=\"property\">data</span>], &#123;</span><br><span class=\"line\">          <span class=\"attr\">type</span>: <span class=\"string\">&quot;application/vnd.ms-powerpoint&quot;</span></span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">        objectUrl = <span class=\"variable constant_\">URL</span>.<span class=\"title function_\">createObjectURL</span>(blob);</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"title function_\">whatType</span>(info.<span class=\"property\">type</span>) === <span class=\"string\">&#x27;tar&#x27;</span>) &#123;</span><br><span class=\"line\">        blob = <span class=\"keyword\">new</span> <span class=\"title class_\">Blob</span>([res.<span class=\"property\">data</span>], &#123;</span><br><span class=\"line\">          <span class=\"attr\">type</span>: <span class=\"string\">&quot;application/x-tar&quot;</span></span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">        objectUrl = <span class=\"variable constant_\">URL</span>.<span class=\"title function_\">createObjectURL</span>(blob);</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"title function_\">whatType</span>(info.<span class=\"property\">type</span>) === <span class=\"string\">&#x27;gz&#x27;</span>) &#123;</span><br><span class=\"line\">        blob = <span class=\"keyword\">new</span> <span class=\"title class_\">Blob</span>([res.<span class=\"property\">data</span>], &#123;</span><br><span class=\"line\">          <span class=\"attr\">type</span>: <span class=\"string\">&quot;application/x-gzip&quot;</span></span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">        objectUrl = <span class=\"variable constant_\">URL</span>.<span class=\"title function_\">createObjectURL</span>(blob);</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        blob = <span class=\"keyword\">new</span> <span class=\"title class_\">Blob</span>([res.<span class=\"property\">data</span>], &#123;</span><br><span class=\"line\">          <span class=\"attr\">type</span>: <span class=\"string\">&quot;application/octet-stream&quot;</span></span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">        objectUrl = <span class=\"variable constant_\">URL</span>.<span class=\"title function_\">createObjectURL</span>(blob);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(objectUrl, <span class=\"string\">&#x27;下载地址&#x27;</span>)</span><br><span class=\"line\">      <span class=\"keyword\">let</span> a = <span class=\"variable language_\">document</span>.<span class=\"title function_\">createElement</span>(<span class=\"string\">&quot;a&quot;</span>);</span><br><span class=\"line\">      a.<span class=\"property\">href</span> = objectUrl;</span><br><span class=\"line\">      a.<span class=\"property\">download</span> = info.<span class=\"property\">name</span>;</span><br><span class=\"line\">      <span class=\"comment\">//a.click();</span></span><br><span class=\"line\">      <span class=\"comment\">//下面这个写法兼容火狐</span></span><br><span class=\"line\">      a.<span class=\"title function_\">dispatchEvent</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">MouseEvent</span>(<span class=\"string\">&#x27;click&#x27;</span>, &#123; <span class=\"attr\">bubbles</span>: <span class=\"literal\">true</span>, <span class=\"attr\">cancelable</span>: <span class=\"literal\">true</span>, <span class=\"attr\">view</span>: <span class=\"variable language_\">window</span> &#125;));</span><br><span class=\"line\">      <span class=\"variable language_\">window</span>.<span class=\"property\">URL</span>.<span class=\"title function_\">revokeObjectURL</span>(blob);</span><br><span class=\"line\">      <span class=\"title function_\">resolve</span>(res)</span><br><span class=\"line\">    &#125;).<span class=\"title function_\">catch</span>(<span class=\"function\"><span class=\"params\">error</span> =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;response: &quot;</span>, error);</span><br><span class=\"line\">      <span class=\"title function_\">reject</span>(error)</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<ol>\n<li><p>下载需要用特定的数据格式接收-blob和指定的type</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">blob = <span class=\"keyword\">new</span> <span class=\"title class_\">Blob</span>([res.<span class=\"property\">data</span>], &#123;</span><br><span class=\"line\">  <span class=\"attr\">type</span>: <span class=\"string\">&quot;application/x-gzip&quot;</span></span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">objectUrl = <span class=\"variable constant_\">URL</span>.<span class=\"title function_\">createObjectURL</span>(blob);</span><br></pre></td></tr></table></figure></li>\n<li><p>模拟 a 链接的行为</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> a = <span class=\"variable language_\">document</span>.<span class=\"title function_\">createElement</span>(<span class=\"string\">&quot;a&quot;</span>);</span><br><span class=\"line\">      a.<span class=\"property\">href</span> = objectUrl;</span><br><span class=\"line\">      a.<span class=\"property\">download</span> = info.<span class=\"property\">name</span>;</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h3 id=\"下载后端\"><a href=\"#下载后端\" class=\"headerlink\" title=\"下载后端\"></a>下载后端</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">router.<span class=\"title function_\">post</span>(<span class=\"string\">&#x27;/api/download/:id&#x27;</span>, <span class=\"keyword\">function</span> (<span class=\"params\">req, res</span>) &#123;</span><br><span class=\"line\">  db.<span class=\"property\">Demo</span>.<span class=\"title function_\">findOne</span>(&#123; <span class=\"attr\">_id</span>: req.<span class=\"property\">params</span>.<span class=\"property\">id</span> &#125;, <span class=\"keyword\">function</span> (<span class=\"params\">err, docs</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (err) &#123;</span><br><span class=\"line\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">error</span>(err)</span><br><span class=\"line\">      <span class=\"keyword\">return</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (docs) &#123;</span><br><span class=\"line\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(req.<span class=\"property\">params</span>.<span class=\"property\">id</span>, docs.<span class=\"property\">IDName</span>)</span><br><span class=\"line\">      <span class=\"keyword\">let</span> filePath = <span class=\"string\">&#x27;../static/files/&#x27;</span> + docs.<span class=\"property\">IDName</span></span><br><span class=\"line\">      <span class=\"keyword\">let</span> stats = fs.<span class=\"title function_\">statSync</span>(filePath);</span><br><span class=\"line\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(stats)</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (stats.<span class=\"title function_\">isFile</span>()) &#123;</span><br><span class=\"line\">        res.<span class=\"title function_\">set</span>(&#123;</span><br><span class=\"line\">          <span class=\"string\">&#x27;Content-Type&#x27;</span>: <span class=\"string\">&#x27;application/octet-stream&#x27;</span>,</span><br><span class=\"line\">          <span class=\"string\">&#x27;Content-Disposition&#x27;</span>: <span class=\"string\">&#x27;attachment; filename=&#x27;</span> + docs.<span class=\"property\">IDName</span>,</span><br><span class=\"line\">          <span class=\"string\">&#x27;Content-Length&#x27;</span>: stats.<span class=\"property\">size</span></span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">        fs.<span class=\"title function_\">createReadStream</span>(filePath).<span class=\"title function_\">pipe</span>(res);</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        res.<span class=\"title function_\">end</span>(<span class=\"number\">404</span>);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<ol>\n<li><p>数据库中查找服务器的唯一文件名称。以便拼接出filePath文件地址。</p>\n</li>\n<li><p>读取对应地址的文件流，流入到res中，返回给前端，前端使用blob接收</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fs.<span class=\"title function_\">createReadStream</span>(filePath).<span class=\"title function_\">pipe</span>(res);</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h3 id=\"部署到云服务器\"><a href=\"#部署到云服务器\" class=\"headerlink\" title=\"部署到云服务器\"></a>部署到云服务器</h3><ol>\n<li><p>使用宝塔安装mongodb，pm2，nginx。</p>\n</li>\n<li><p>nginx需要配置转发。conf文件如下</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">user  www www;</span><br><span class=\"line\">worker_processes auto;</span><br><span class=\"line\">error_log  /www/wwwlogs/nginx_error.<span class=\"property\">log</span>  crit;</span><br><span class=\"line\">pid        /www/server/nginx/logs/nginx.<span class=\"property\">pid</span>;</span><br><span class=\"line\">worker_rlimit_nofile <span class=\"number\">51200</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">events</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        use epoll;</span><br><span class=\"line\">        worker_connections <span class=\"number\">51200</span>;</span><br><span class=\"line\">        multi_accept on;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">http</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">        include       mime.<span class=\"property\">types</span>;</span><br><span class=\"line\">\t\t    #include luawaf.<span class=\"property\">conf</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t    \tinclude proxy.<span class=\"property\">conf</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        default_type  application/octet-stream;</span><br><span class=\"line\"></span><br><span class=\"line\">        server_names_hash_bucket_size <span class=\"number\">512</span>;</span><br><span class=\"line\">        client_header_buffer_size 32k;</span><br><span class=\"line\">        large_client_header_buffers <span class=\"number\">4</span> 32k;</span><br><span class=\"line\">        client_max_body_size 50m;</span><br><span class=\"line\"></span><br><span class=\"line\">        sendfile   on;</span><br><span class=\"line\">        tcp_nopush on;</span><br><span class=\"line\"></span><br><span class=\"line\">        keepalive_timeout <span class=\"number\">60</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        tcp_nodelay on;</span><br><span class=\"line\"></span><br><span class=\"line\">        fastcgi_connect_timeout <span class=\"number\">300</span>;</span><br><span class=\"line\">        fastcgi_send_timeout <span class=\"number\">300</span>;</span><br><span class=\"line\">        fastcgi_read_timeout <span class=\"number\">300</span>;</span><br><span class=\"line\">        fastcgi_buffer_size 64k;</span><br><span class=\"line\">        fastcgi_buffers <span class=\"number\">4</span> 64k;</span><br><span class=\"line\">        fastcgi_busy_buffers_size 128k;</span><br><span class=\"line\">        fastcgi_temp_file_write_size 256k;</span><br><span class=\"line\">\t\t    fastcgi_intercept_errors on;</span><br><span class=\"line\"></span><br><span class=\"line\">        gzip on;</span><br><span class=\"line\">        gzip_min_length  1k;</span><br><span class=\"line\">        gzip_buffers     <span class=\"number\">4</span> 16k;</span><br><span class=\"line\">        gzip_http_version <span class=\"number\">1.1</span>;</span><br><span class=\"line\">        gzip_comp_level <span class=\"number\">2</span>;</span><br><span class=\"line\">        gzip_types     text/plain application/javascript application/x-javascript text/javascript text/css application/xml;</span><br><span class=\"line\">        gzip_vary on;</span><br><span class=\"line\">        gzip_proxied   expired no-cache no-store private auth;</span><br><span class=\"line\">        gzip_disable   <span class=\"string\">&quot;MSIE [1-6]\\.&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        limit_conn_zone $binary_remote_addr zone=<span class=\"attr\">perip</span>:10m;</span><br><span class=\"line\">\t\t    limit_conn_zone $server_name zone=<span class=\"attr\">perserver</span>:10m;</span><br><span class=\"line\"></span><br><span class=\"line\">        server_tokens off;</span><br><span class=\"line\">        access_log off;</span><br><span class=\"line\"></span><br><span class=\"line\">server</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        listen <span class=\"number\">888</span>;</span><br><span class=\"line\">        server_name phpmyadmin;</span><br><span class=\"line\">        index index.<span class=\"property\">html</span> index.<span class=\"property\">htm</span> index.<span class=\"property\">php</span>;</span><br><span class=\"line\">        root  /www/server/phpmyadmin;</span><br><span class=\"line\"></span><br><span class=\"line\">        #error_page   <span class=\"number\">404</span>   /<span class=\"number\">404.</span>html;</span><br><span class=\"line\">        include enable-php.<span class=\"property\">conf</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        location ~ .*\\.(gif|jpg|jpeg|png|bmp|swf)$</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            expires      30d;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        location ~ .*\\.(js|css)?$</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            expires      12h;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        location ~ /\\.</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            deny all;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        access_log  /www/wwwlogs/access.<span class=\"property\">log</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">server</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        listen <span class=\"number\">80</span>;</span><br><span class=\"line\">        server_name limeng.<span class=\"property\">website</span>;</span><br><span class=\"line\">        index index.<span class=\"property\">html</span> index.<span class=\"property\">htm</span> index.<span class=\"property\">php</span>;</span><br><span class=\"line\">        root  /www/server/nginx/html;</span><br><span class=\"line\"></span><br><span class=\"line\">        #error_page   <span class=\"number\">404</span>   /<span class=\"number\">404.</span>html;</span><br><span class=\"line\">     location / &#123;</span><br><span class=\"line\">         try_files $uri /index.<span class=\"property\">html</span>;</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">       </span><br><span class=\"line\">     location /api &#123;</span><br><span class=\"line\">         proxy_pass <span class=\"attr\">http</span>:<span class=\"comment\">//localhost:8088;</span></span><br><span class=\"line\">         proxy_http_version <span class=\"number\">1.1</span>;</span><br><span class=\"line\">         proxy_set_header <span class=\"title class_\">Upgrade</span> $http_upgrade;</span><br><span class=\"line\">         proxy_set_header <span class=\"title class_\">Connection</span> ‘upgrade’;</span><br><span class=\"line\">         proxy_set_header <span class=\"title class_\">Host</span> $host;</span><br><span class=\"line\">         proxy_cache_bypass $http_upgrade;</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">     location /images &#123;</span><br><span class=\"line\">       root  /<span class=\"variable constant_\">BLOG</span>/<span class=\"keyword\">static</span>/files;</span><br><span class=\"line\">       autoindex on;</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">        access_log  /www/wwwlogs/access.<span class=\"property\">log</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">include /www/server/panel/vhost/nginx<span class=\"comment\">/*.conf;</span></span><br><span class=\"line\"><span class=\"comment\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p>添加对应api 的转发，将api的请求转发到<a href=\"http://localhost:8088，8088端口即是\">http://localhost:8088，8088端口即是</a> 之前mongodb的listen端口。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">location /api &#123;</span><br><span class=\"line\">     proxy_pass <span class=\"attr\">http</span>:<span class=\"comment\">//localhost:8088;</span></span><br><span class=\"line\">     proxy_http_version <span class=\"number\">1.1</span>;</span><br><span class=\"line\">     proxy_set_header <span class=\"title class_\">Upgrade</span> $http_upgrade;</span><br><span class=\"line\">     proxy_set_header <span class=\"title class_\">Connection</span> ‘upgrade’;</span><br><span class=\"line\">     proxy_set_header <span class=\"title class_\">Host</span> $host;</span><br><span class=\"line\">     proxy_cache_bypass $http_upgrade;</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure></li>\n</ol>\n","site":{"data":{}},"excerpt":"<meta name=\"referrer\" content=\"no-referrer\"/>\n\n<h2 id=\"使用node上传和下载文件\"><a href=\"#使用node上传和下载文件\" class=\"headerlink\" title=\"使用node上传和下载文件\"></a>使用node上传和下载文件</h2><p>前后端分离的情况下，如何上传和下载不同格式的文件，环境：node+vue+elementUI+press</p>","more":"<blockquote>\n<p>blob = new Blob([res.data], { type: ‘image/png’ });</p>\n<p>​    objectUrl = URL.createObjectURL(blob);</p>\n</blockquote>\n<p><code>Blob</code> 对象表示一个不可变、原始数据的类文件对象。它的数据可以按文本或二进制的格式进行读取，也可以转换成 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/ReadableStream\"><code>ReadableStream</code></a> 来用于数据操作</p>\n<h3 id=\"上传前端\"><a href=\"#上传前端\" class=\"headerlink\" title=\"上传前端\"></a>上传前端</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;el-upload</span><br><span class=\"line\">  class=&quot;upload-demo&quot;</span><br><span class=\"line\">  :action=&quot;uploadUrl&quot;</span><br><span class=\"line\">  :on-success=&quot;uploadSuccess&quot;</span><br><span class=\"line\">  :file-list=&quot;fileList&quot;</span><br><span class=\"line\">&gt;</span><br><span class=\"line\">  &lt;el-button size=&quot;small&quot; type=&quot;primary&quot;&gt;点击上传&lt;/el-button&gt;</span><br><span class=\"line\">&lt;/el-upload&gt;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">uploadUrl</span>: <span class=\"string\">&quot;/api/infor&quot;</span>,</span><br><span class=\"line\"><span class=\"title function_\">uploadSuccess</span>(<span class=\"params\">res, file, fileList</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (res.<span class=\"property\">code</span> == <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">fileList</span> = fileList;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">submitForm</span>.<span class=\"property\">fileName</span> = res.<span class=\"property\">rows</span>.<span class=\"property\">originalname</span>;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">submitForm</span>.<span class=\"property\">IDName</span> = res.<span class=\"property\">rows</span>.<span class=\"property\">IDName</span>;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">$message</span>.<span class=\"title function_\">success</span>(<span class=\"string\">&quot;上传成功&quot;</span>);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (res.<span class=\"property\">code</span> == <span class=\"number\">999</span>) &#123;</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">fileList</span> = [];</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">$message</span>.<span class=\"title function_\">error</span>(res.<span class=\"property\">msg</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n\n<ol>\n<li><p>elemengtUI上传组件，填写action，当上传成功后，回调函数中记录下文件<strong>”本身名称类型“</strong>和服务器中的<strong>”被更改后的文件名称“</strong></p>\n</li>\n<li><p>file list接收到赋值，用于回显</p>\n</li>\n</ol>\n<h3 id=\"上传后端\"><a href=\"#上传后端\" class=\"headerlink\" title=\"上传后端\"></a>上传后端</h3><p>安装multer</p>\n<blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install --save multer</span><br></pre></td></tr></table></figure>\n</blockquote>\n<p>引入multer</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> objMulter = <span class=\"title function_\">multer</span>(&#123; <span class=\"attr\">dest</span>: <span class=\"string\">&#x27;../static/files&#x27;</span> &#125;);<span class=\"comment\">//指定存放位置</span></span><br><span class=\"line\"></span><br><span class=\"line\">app.<span class=\"title function_\">use</span>(objMulter.<span class=\"title function_\">any</span>());</span><br></pre></td></tr></table></figure>\n\n<p>处理上传来的文件</p>\n<blockquote>\n<p>Multer 会添加一个 <code>body</code> 对象 以及 <code>file</code> 或 <code>files</code> 对象 到 express 的 <code>request</code> 对象中。 <code>body</code> 对象包含表单的文本域信息，<code>file</code> 或 <code>files</code> 对象包含对象表单上传的文件信息。</p>\n</blockquote>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//上传的文件</span></span><br><span class=\"line\">router.<span class=\"title function_\">post</span>(<span class=\"string\">&#x27;/api/infor&#x27;</span>, <span class=\"keyword\">function</span> (<span class=\"params\">req, res, next</span>) &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(req.<span class=\"property\">files</span>[<span class=\"number\">0</span>], <span class=\"string\">&#x27;传递来的数据&#x27;</span>)</span><br><span class=\"line\">  <span class=\"keyword\">const</span> newname = req.<span class=\"property\">files</span>[<span class=\"number\">0</span>].<span class=\"property\">path</span> + path.<span class=\"title function_\">parse</span>(req.<span class=\"property\">files</span>[<span class=\"number\">0</span>].<span class=\"property\">originalname</span>).<span class=\"property\">ext</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> fileName = req.<span class=\"property\">files</span>[<span class=\"number\">0</span>].<span class=\"property\">filename</span> + path.<span class=\"title function_\">parse</span>(req.<span class=\"property\">files</span>[<span class=\"number\">0</span>].<span class=\"property\">originalname</span>).<span class=\"property\">ext</span>;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> info = &#123;</span><br><span class=\"line\">    <span class=\"attr\">originalname</span>: req.<span class=\"property\">files</span>[<span class=\"number\">0</span>].<span class=\"property\">originalname</span>,</span><br><span class=\"line\">    <span class=\"title class_\">IDName</span>: fileName</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  fs.<span class=\"title function_\">rename</span>(req.<span class=\"property\">files</span>[<span class=\"number\">0</span>].<span class=\"property\">path</span>, newname, <span class=\"keyword\">function</span> (<span class=\"params\">err</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (err) &#123;</span><br><span class=\"line\">      res.<span class=\"title function_\">send</span>(&#123; <span class=\"attr\">code</span>: <span class=\"number\">999</span>, <span class=\"attr\">msg</span>: <span class=\"string\">&#x27;上传失败&#x27;</span> &#125;)</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      res.<span class=\"title function_\">send</span>(&#123; <span class=\"attr\">code</span>: <span class=\"number\">200</span>, <span class=\"attr\">msg</span>: <span class=\"string\">&#x27;上传成功&#x27;</span>, <span class=\"attr\">rows</span>: info &#125;)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<ol>\n<li>调用fs的rename方法，用来对文件进行重命名，保证文件的唯一性。</li>\n</ol>\n<h3 id=\"下载前端\"><a href=\"#下载前端\" class=\"headerlink\" title=\"下载前端\"></a>下载前端</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; exportInfo &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;../../../static/js/export.js&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">download</span>(<span class=\"params\">index, row</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">let</span> <span class=\"title class_\">Tem</span> = <span class=\"title class_\">JSON</span>.<span class=\"title function_\">parse</span>(<span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(row));</span><br><span class=\"line\">      <span class=\"keyword\">let</span> infoTem = <span class=\"title class_\">Tem</span>.<span class=\"property\">fileName</span>.<span class=\"title function_\">split</span>(<span class=\"string\">&quot;.&quot;</span>);</span><br><span class=\"line\">      <span class=\"keyword\">let</span> nameTem = infoTem.<span class=\"title function_\">reduce</span>(<span class=\"function\">(<span class=\"params\">a, b</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> a + <span class=\"string\">&quot;.&quot;</span> + b;</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">      <span class=\"keyword\">let</span> info = &#123;</span><br><span class=\"line\">        <span class=\"attr\">method</span>: <span class=\"string\">&quot;POST&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">url</span>: <span class=\"string\">&quot;/api/download/&quot;</span> + row.<span class=\"property\">_id</span>,</span><br><span class=\"line\">        <span class=\"attr\">responseType</span>: <span class=\"string\">&quot;blob&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">type</span>: infoTem[infoTem.<span class=\"property\">length</span> - <span class=\"number\">1</span>],</span><br><span class=\"line\">        <span class=\"attr\">name</span>: nameTem,</span><br><span class=\"line\">      &#125;;</span><br><span class=\"line\">      <span class=\"title function_\">exportInfo</span>(info)</span><br><span class=\"line\">        .<span class=\"title function_\">then</span>(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> &#123;&#125;)</span><br><span class=\"line\">        .<span class=\"title function_\">catch</span>(<span class=\"function\">() =&gt;</span> &#123;&#125;);</span><br><span class=\"line\">    &#125;,</span><br></pre></td></tr></table></figure>\n\n<p>export.js</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> axios <span class=\"keyword\">from</span> <span class=\"string\">&#x27;axios&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">setUrlParam</span>(<span class=\"params\">data</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> _str = <span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i <span class=\"keyword\">in</span> data) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!<span class=\"title function_\">isNull</span>(data[i])) &#123;</span><br><span class=\"line\">      _str += i + <span class=\"string\">&#x27;=&#x27;</span> + <span class=\"built_in\">encodeURIComponent</span>(data[i]) + <span class=\"string\">&#x27;&amp;&#x27;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">&#x27;?&#x27;</span> + _str.<span class=\"title function_\">substring</span>(<span class=\"number\">0</span>, _str.<span class=\"property\">length</span> - <span class=\"number\">1</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">isNull</span>(<span class=\"params\">e</span>) &#123; <span class=\"comment\">// 排除为0 或者其他情况</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> _ = <span class=\"title class_\">String</span>(e);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> (_ === <span class=\"string\">&#x27;null&#x27;</span> || _ === <span class=\"string\">&#x27;NaN&#x27;</span> || _ === <span class=\"string\">&#x27;undefined&#x27;</span> || _.<span class=\"property\">length</span> === <span class=\"number\">0</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">whatType</span>(<span class=\"params\">type</span>) &#123;<span class=\"comment\">//判断传过来的type类型</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> <span class=\"title class_\">TypeObject</span> = [</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      <span class=\"attr\">typeList</span>: [<span class=\"string\">&#x27;xlc&#x27;</span>, <span class=\"string\">&#x27;xll&#x27;</span>, <span class=\"string\">&#x27;xlm&#x27;</span>, <span class=\"string\">&#x27;xls&#x27;</span>, <span class=\"string\">&#x27;xlw&#x27;</span>, <span class=\"string\">&#x27;xlsx&#x27;</span>],</span><br><span class=\"line\">      <span class=\"attr\">typeOut</span>: <span class=\"string\">&#x27;excel&#x27;</span>,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      <span class=\"attr\">typeList</span>: [<span class=\"string\">&#x27;jpg&#x27;</span>, <span class=\"string\">&#x27;jpeg&#x27;</span>, <span class=\"string\">&#x27;png&#x27;</span>, <span class=\"string\">&#x27;gif&#x27;</span>],</span><br><span class=\"line\">      <span class=\"attr\">typeOut</span>: <span class=\"string\">&#x27;img&#x27;</span>,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      <span class=\"attr\">typeList</span>: [<span class=\"string\">&#x27;zip&#x27;</span>, <span class=\"string\">&#x27;.tar&#x27;</span>, <span class=\"string\">&#x27;.gz&#x27;</span>],</span><br><span class=\"line\">      <span class=\"attr\">typeOut</span>: <span class=\"string\">&#x27;zip&#x27;</span>,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      <span class=\"attr\">typeList</span>: [<span class=\"string\">&#x27;doc&#x27;</span>, <span class=\"string\">&#x27;docx&#x27;</span>],</span><br><span class=\"line\">      <span class=\"attr\">typeOut</span>: <span class=\"string\">&#x27;doc&#x27;</span>,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      <span class=\"attr\">typeList</span>: [<span class=\"string\">&#x27;ppt&#x27;</span>, <span class=\"string\">&#x27;pptx&#x27;</span>],</span><br><span class=\"line\">      <span class=\"attr\">typeOut</span>: <span class=\"string\">&#x27;ppt&#x27;</span>,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      <span class=\"attr\">typeList</span>: [<span class=\"string\">&#x27;tar&#x27;</span>],</span><br><span class=\"line\">      <span class=\"attr\">typeOut</span>: <span class=\"string\">&#x27;tar&#x27;</span>,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      <span class=\"attr\">typeList</span>: [<span class=\"string\">&#x27;gzip&#x27;</span>, <span class=\"string\">&#x27;gz&#x27;</span>],</span><br><span class=\"line\">      <span class=\"attr\">typeOut</span>: <span class=\"string\">&#x27;gz&#x27;</span>,</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  ]</span><br><span class=\"line\">  <span class=\"keyword\">let</span> currentType = <span class=\"literal\">null</span>;</span><br><span class=\"line\">  <span class=\"title class_\">TypeObject</span>.<span class=\"title function_\">forEach</span>(<span class=\"function\"><span class=\"params\">v</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> currentIndex = v[<span class=\"string\">&#x27;typeList&#x27;</span>].<span class=\"title function_\">findIndex</span>(<span class=\"function\"><span class=\"params\">e</span> =&gt;</span> e == type)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (currentIndex &gt; -<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">      currentType = v.<span class=\"property\">typeOut</span></span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  <span class=\"keyword\">return</span> currentType</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">function</span> <span class=\"title function_\">exportInfo</span>(<span class=\"params\">info</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"title function_\">axios</span>(&#123;</span><br><span class=\"line\">      <span class=\"attr\">method</span>: info.<span class=\"property\">method</span>,</span><br><span class=\"line\">      <span class=\"attr\">url</span>: info.<span class=\"property\">params</span> ? info.<span class=\"property\">url</span> + <span class=\"title function_\">setUrlParam</span>(info.<span class=\"property\">params</span>) : info.<span class=\"property\">url</span>,</span><br><span class=\"line\">      <span class=\"attr\">data</span>: info.<span class=\"property\">params</span>,</span><br><span class=\"line\">      <span class=\"attr\">responseType</span>: info.<span class=\"property\">responseType</span>, <span class=\"comment\">// 优先尝试 blob</span></span><br><span class=\"line\">      <span class=\"attr\">headers</span>: &#123; <span class=\"string\">&#x27;Authorization&#x27;</span>: sessionStorage.<span class=\"title function_\">getItem</span>(<span class=\"string\">&#x27;token&#x27;</span>) ? <span class=\"string\">&#x27;Bearer &#x27;</span> + sessionStorage.<span class=\"title function_\">getItem</span>(<span class=\"string\">&#x27;token&#x27;</span>) : <span class=\"string\">&#x27;&#x27;</span> &#125;</span><br><span class=\"line\">    &#125;).<span class=\"title function_\">then</span>(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(info.<span class=\"property\">type</span>, <span class=\"title function_\">whatType</span>(info.<span class=\"property\">type</span>), <span class=\"string\">&#x27;whatType(info.type)&#x27;</span>)</span><br><span class=\"line\">      <span class=\"keyword\">let</span> objectUrl = <span class=\"literal\">null</span>, blob = <span class=\"literal\">null</span>;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (<span class=\"title function_\">whatType</span>(info.<span class=\"property\">type</span>) === <span class=\"string\">&#x27;excel&#x27;</span>) &#123;</span><br><span class=\"line\">        blob = <span class=\"keyword\">new</span> <span class=\"title class_\">Blob</span>([res.<span class=\"property\">data</span>], &#123;</span><br><span class=\"line\">          <span class=\"attr\">type</span>: <span class=\"string\">&quot;application/vnd.ms-excel&quot;</span></span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">        objectUrl = <span class=\"variable constant_\">URL</span>.<span class=\"title function_\">createObjectURL</span>(blob);</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"title function_\">whatType</span>(info.<span class=\"property\">type</span>) === <span class=\"string\">&#x27;img&#x27;</span>) &#123;</span><br><span class=\"line\">        blob = <span class=\"keyword\">new</span> <span class=\"title class_\">Blob</span>([res.<span class=\"property\">data</span>], &#123; <span class=\"attr\">type</span>: <span class=\"string\">&#x27;image/png&#x27;</span> &#125;);</span><br><span class=\"line\">        objectUrl = <span class=\"variable constant_\">URL</span>.<span class=\"title function_\">createObjectURL</span>(blob);</span><br><span class=\"line\">        <span class=\"comment\">// objectUrl = &#x27;data:image/png;base64,&#x27; + btoa(new Uint8Array(res.data).reduce((data, byte) =&gt; data + String.fromCharCode(byte), &#x27;&#x27;));</span></span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"title function_\">whatType</span>(info.<span class=\"property\">type</span>) === <span class=\"string\">&#x27;zip&#x27;</span>) &#123;</span><br><span class=\"line\">        blob = <span class=\"keyword\">new</span> <span class=\"title class_\">Blob</span>([res.<span class=\"property\">data</span>], &#123; <span class=\"attr\">type</span>: <span class=\"string\">&#x27;application/zip&#x27;</span> &#125;);</span><br><span class=\"line\">        objectUrl = <span class=\"variable constant_\">URL</span>.<span class=\"title function_\">createObjectURL</span>(blob);</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"title function_\">whatType</span>(info.<span class=\"property\">type</span>) === <span class=\"string\">&#x27;doc&#x27;</span>) &#123;</span><br><span class=\"line\">        blob = <span class=\"keyword\">new</span> <span class=\"title class_\">Blob</span>([res.<span class=\"property\">data</span>], &#123;</span><br><span class=\"line\">          <span class=\"attr\">type</span>: <span class=\"string\">&quot;application/msword&quot;</span></span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">        objectUrl = <span class=\"variable constant_\">URL</span>.<span class=\"title function_\">createObjectURL</span>(blob);</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"title function_\">whatType</span>(info.<span class=\"property\">type</span>) === <span class=\"string\">&#x27;ppt&#x27;</span>) &#123;</span><br><span class=\"line\">        blob = <span class=\"keyword\">new</span> <span class=\"title class_\">Blob</span>([res.<span class=\"property\">data</span>], &#123;</span><br><span class=\"line\">          <span class=\"attr\">type</span>: <span class=\"string\">&quot;application/vnd.ms-powerpoint&quot;</span></span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">        objectUrl = <span class=\"variable constant_\">URL</span>.<span class=\"title function_\">createObjectURL</span>(blob);</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"title function_\">whatType</span>(info.<span class=\"property\">type</span>) === <span class=\"string\">&#x27;tar&#x27;</span>) &#123;</span><br><span class=\"line\">        blob = <span class=\"keyword\">new</span> <span class=\"title class_\">Blob</span>([res.<span class=\"property\">data</span>], &#123;</span><br><span class=\"line\">          <span class=\"attr\">type</span>: <span class=\"string\">&quot;application/x-tar&quot;</span></span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">        objectUrl = <span class=\"variable constant_\">URL</span>.<span class=\"title function_\">createObjectURL</span>(blob);</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"title function_\">whatType</span>(info.<span class=\"property\">type</span>) === <span class=\"string\">&#x27;gz&#x27;</span>) &#123;</span><br><span class=\"line\">        blob = <span class=\"keyword\">new</span> <span class=\"title class_\">Blob</span>([res.<span class=\"property\">data</span>], &#123;</span><br><span class=\"line\">          <span class=\"attr\">type</span>: <span class=\"string\">&quot;application/x-gzip&quot;</span></span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">        objectUrl = <span class=\"variable constant_\">URL</span>.<span class=\"title function_\">createObjectURL</span>(blob);</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        blob = <span class=\"keyword\">new</span> <span class=\"title class_\">Blob</span>([res.<span class=\"property\">data</span>], &#123;</span><br><span class=\"line\">          <span class=\"attr\">type</span>: <span class=\"string\">&quot;application/octet-stream&quot;</span></span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">        objectUrl = <span class=\"variable constant_\">URL</span>.<span class=\"title function_\">createObjectURL</span>(blob);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(objectUrl, <span class=\"string\">&#x27;下载地址&#x27;</span>)</span><br><span class=\"line\">      <span class=\"keyword\">let</span> a = <span class=\"variable language_\">document</span>.<span class=\"title function_\">createElement</span>(<span class=\"string\">&quot;a&quot;</span>);</span><br><span class=\"line\">      a.<span class=\"property\">href</span> = objectUrl;</span><br><span class=\"line\">      a.<span class=\"property\">download</span> = info.<span class=\"property\">name</span>;</span><br><span class=\"line\">      <span class=\"comment\">//a.click();</span></span><br><span class=\"line\">      <span class=\"comment\">//下面这个写法兼容火狐</span></span><br><span class=\"line\">      a.<span class=\"title function_\">dispatchEvent</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">MouseEvent</span>(<span class=\"string\">&#x27;click&#x27;</span>, &#123; <span class=\"attr\">bubbles</span>: <span class=\"literal\">true</span>, <span class=\"attr\">cancelable</span>: <span class=\"literal\">true</span>, <span class=\"attr\">view</span>: <span class=\"variable language_\">window</span> &#125;));</span><br><span class=\"line\">      <span class=\"variable language_\">window</span>.<span class=\"property\">URL</span>.<span class=\"title function_\">revokeObjectURL</span>(blob);</span><br><span class=\"line\">      <span class=\"title function_\">resolve</span>(res)</span><br><span class=\"line\">    &#125;).<span class=\"title function_\">catch</span>(<span class=\"function\"><span class=\"params\">error</span> =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;response: &quot;</span>, error);</span><br><span class=\"line\">      <span class=\"title function_\">reject</span>(error)</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<ol>\n<li><p>下载需要用特定的数据格式接收-blob和指定的type</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">blob = <span class=\"keyword\">new</span> <span class=\"title class_\">Blob</span>([res.<span class=\"property\">data</span>], &#123;</span><br><span class=\"line\">  <span class=\"attr\">type</span>: <span class=\"string\">&quot;application/x-gzip&quot;</span></span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">objectUrl = <span class=\"variable constant_\">URL</span>.<span class=\"title function_\">createObjectURL</span>(blob);</span><br></pre></td></tr></table></figure></li>\n<li><p>模拟 a 链接的行为</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> a = <span class=\"variable language_\">document</span>.<span class=\"title function_\">createElement</span>(<span class=\"string\">&quot;a&quot;</span>);</span><br><span class=\"line\">      a.<span class=\"property\">href</span> = objectUrl;</span><br><span class=\"line\">      a.<span class=\"property\">download</span> = info.<span class=\"property\">name</span>;</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h3 id=\"下载后端\"><a href=\"#下载后端\" class=\"headerlink\" title=\"下载后端\"></a>下载后端</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">router.<span class=\"title function_\">post</span>(<span class=\"string\">&#x27;/api/download/:id&#x27;</span>, <span class=\"keyword\">function</span> (<span class=\"params\">req, res</span>) &#123;</span><br><span class=\"line\">  db.<span class=\"property\">Demo</span>.<span class=\"title function_\">findOne</span>(&#123; <span class=\"attr\">_id</span>: req.<span class=\"property\">params</span>.<span class=\"property\">id</span> &#125;, <span class=\"keyword\">function</span> (<span class=\"params\">err, docs</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (err) &#123;</span><br><span class=\"line\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">error</span>(err)</span><br><span class=\"line\">      <span class=\"keyword\">return</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (docs) &#123;</span><br><span class=\"line\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(req.<span class=\"property\">params</span>.<span class=\"property\">id</span>, docs.<span class=\"property\">IDName</span>)</span><br><span class=\"line\">      <span class=\"keyword\">let</span> filePath = <span class=\"string\">&#x27;../static/files/&#x27;</span> + docs.<span class=\"property\">IDName</span></span><br><span class=\"line\">      <span class=\"keyword\">let</span> stats = fs.<span class=\"title function_\">statSync</span>(filePath);</span><br><span class=\"line\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(stats)</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (stats.<span class=\"title function_\">isFile</span>()) &#123;</span><br><span class=\"line\">        res.<span class=\"title function_\">set</span>(&#123;</span><br><span class=\"line\">          <span class=\"string\">&#x27;Content-Type&#x27;</span>: <span class=\"string\">&#x27;application/octet-stream&#x27;</span>,</span><br><span class=\"line\">          <span class=\"string\">&#x27;Content-Disposition&#x27;</span>: <span class=\"string\">&#x27;attachment; filename=&#x27;</span> + docs.<span class=\"property\">IDName</span>,</span><br><span class=\"line\">          <span class=\"string\">&#x27;Content-Length&#x27;</span>: stats.<span class=\"property\">size</span></span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">        fs.<span class=\"title function_\">createReadStream</span>(filePath).<span class=\"title function_\">pipe</span>(res);</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        res.<span class=\"title function_\">end</span>(<span class=\"number\">404</span>);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<ol>\n<li><p>数据库中查找服务器的唯一文件名称。以便拼接出filePath文件地址。</p>\n</li>\n<li><p>读取对应地址的文件流，流入到res中，返回给前端，前端使用blob接收</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fs.<span class=\"title function_\">createReadStream</span>(filePath).<span class=\"title function_\">pipe</span>(res);</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h3 id=\"部署到云服务器\"><a href=\"#部署到云服务器\" class=\"headerlink\" title=\"部署到云服务器\"></a>部署到云服务器</h3><ol>\n<li><p>使用宝塔安装mongodb，pm2，nginx。</p>\n</li>\n<li><p>nginx需要配置转发。conf文件如下</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">user  www www;</span><br><span class=\"line\">worker_processes auto;</span><br><span class=\"line\">error_log  /www/wwwlogs/nginx_error.<span class=\"property\">log</span>  crit;</span><br><span class=\"line\">pid        /www/server/nginx/logs/nginx.<span class=\"property\">pid</span>;</span><br><span class=\"line\">worker_rlimit_nofile <span class=\"number\">51200</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">events</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        use epoll;</span><br><span class=\"line\">        worker_connections <span class=\"number\">51200</span>;</span><br><span class=\"line\">        multi_accept on;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">http</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">        include       mime.<span class=\"property\">types</span>;</span><br><span class=\"line\">\t\t    #include luawaf.<span class=\"property\">conf</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t    \tinclude proxy.<span class=\"property\">conf</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        default_type  application/octet-stream;</span><br><span class=\"line\"></span><br><span class=\"line\">        server_names_hash_bucket_size <span class=\"number\">512</span>;</span><br><span class=\"line\">        client_header_buffer_size 32k;</span><br><span class=\"line\">        large_client_header_buffers <span class=\"number\">4</span> 32k;</span><br><span class=\"line\">        client_max_body_size 50m;</span><br><span class=\"line\"></span><br><span class=\"line\">        sendfile   on;</span><br><span class=\"line\">        tcp_nopush on;</span><br><span class=\"line\"></span><br><span class=\"line\">        keepalive_timeout <span class=\"number\">60</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        tcp_nodelay on;</span><br><span class=\"line\"></span><br><span class=\"line\">        fastcgi_connect_timeout <span class=\"number\">300</span>;</span><br><span class=\"line\">        fastcgi_send_timeout <span class=\"number\">300</span>;</span><br><span class=\"line\">        fastcgi_read_timeout <span class=\"number\">300</span>;</span><br><span class=\"line\">        fastcgi_buffer_size 64k;</span><br><span class=\"line\">        fastcgi_buffers <span class=\"number\">4</span> 64k;</span><br><span class=\"line\">        fastcgi_busy_buffers_size 128k;</span><br><span class=\"line\">        fastcgi_temp_file_write_size 256k;</span><br><span class=\"line\">\t\t    fastcgi_intercept_errors on;</span><br><span class=\"line\"></span><br><span class=\"line\">        gzip on;</span><br><span class=\"line\">        gzip_min_length  1k;</span><br><span class=\"line\">        gzip_buffers     <span class=\"number\">4</span> 16k;</span><br><span class=\"line\">        gzip_http_version <span class=\"number\">1.1</span>;</span><br><span class=\"line\">        gzip_comp_level <span class=\"number\">2</span>;</span><br><span class=\"line\">        gzip_types     text/plain application/javascript application/x-javascript text/javascript text/css application/xml;</span><br><span class=\"line\">        gzip_vary on;</span><br><span class=\"line\">        gzip_proxied   expired no-cache no-store private auth;</span><br><span class=\"line\">        gzip_disable   <span class=\"string\">&quot;MSIE [1-6]\\.&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        limit_conn_zone $binary_remote_addr zone=<span class=\"attr\">perip</span>:10m;</span><br><span class=\"line\">\t\t    limit_conn_zone $server_name zone=<span class=\"attr\">perserver</span>:10m;</span><br><span class=\"line\"></span><br><span class=\"line\">        server_tokens off;</span><br><span class=\"line\">        access_log off;</span><br><span class=\"line\"></span><br><span class=\"line\">server</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        listen <span class=\"number\">888</span>;</span><br><span class=\"line\">        server_name phpmyadmin;</span><br><span class=\"line\">        index index.<span class=\"property\">html</span> index.<span class=\"property\">htm</span> index.<span class=\"property\">php</span>;</span><br><span class=\"line\">        root  /www/server/phpmyadmin;</span><br><span class=\"line\"></span><br><span class=\"line\">        #error_page   <span class=\"number\">404</span>   /<span class=\"number\">404.</span>html;</span><br><span class=\"line\">        include enable-php.<span class=\"property\">conf</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        location ~ .*\\.(gif|jpg|jpeg|png|bmp|swf)$</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            expires      30d;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        location ~ .*\\.(js|css)?$</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            expires      12h;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        location ~ /\\.</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            deny all;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        access_log  /www/wwwlogs/access.<span class=\"property\">log</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">server</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        listen <span class=\"number\">80</span>;</span><br><span class=\"line\">        server_name limeng.<span class=\"property\">website</span>;</span><br><span class=\"line\">        index index.<span class=\"property\">html</span> index.<span class=\"property\">htm</span> index.<span class=\"property\">php</span>;</span><br><span class=\"line\">        root  /www/server/nginx/html;</span><br><span class=\"line\"></span><br><span class=\"line\">        #error_page   <span class=\"number\">404</span>   /<span class=\"number\">404.</span>html;</span><br><span class=\"line\">     location / &#123;</span><br><span class=\"line\">         try_files $uri /index.<span class=\"property\">html</span>;</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">       </span><br><span class=\"line\">     location /api &#123;</span><br><span class=\"line\">         proxy_pass <span class=\"attr\">http</span>:<span class=\"comment\">//localhost:8088;</span></span><br><span class=\"line\">         proxy_http_version <span class=\"number\">1.1</span>;</span><br><span class=\"line\">         proxy_set_header <span class=\"title class_\">Upgrade</span> $http_upgrade;</span><br><span class=\"line\">         proxy_set_header <span class=\"title class_\">Connection</span> ‘upgrade’;</span><br><span class=\"line\">         proxy_set_header <span class=\"title class_\">Host</span> $host;</span><br><span class=\"line\">         proxy_cache_bypass $http_upgrade;</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">     location /images &#123;</span><br><span class=\"line\">       root  /<span class=\"variable constant_\">BLOG</span>/<span class=\"keyword\">static</span>/files;</span><br><span class=\"line\">       autoindex on;</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">        access_log  /www/wwwlogs/access.<span class=\"property\">log</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">include /www/server/panel/vhost/nginx<span class=\"comment\">/*.conf;</span></span><br><span class=\"line\"><span class=\"comment\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p>添加对应api 的转发，将api的请求转发到<a href=\"http://localhost:8088，8088端口即是\">http://localhost:8088，8088端口即是</a> 之前mongodb的listen端口。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">location /api &#123;</span><br><span class=\"line\">     proxy_pass <span class=\"attr\">http</span>:<span class=\"comment\">//localhost:8088;</span></span><br><span class=\"line\">     proxy_http_version <span class=\"number\">1.1</span>;</span><br><span class=\"line\">     proxy_set_header <span class=\"title class_\">Upgrade</span> $http_upgrade;</span><br><span class=\"line\">     proxy_set_header <span class=\"title class_\">Connection</span> ‘upgrade’;</span><br><span class=\"line\">     proxy_set_header <span class=\"title class_\">Host</span> $host;</span><br><span class=\"line\">     proxy_cache_bypass $http_upgrade;</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure></li>\n</ol>"},{"title":"利用宝塔面板实现Https","date":"2020-07-12T09:16:26.000Z","_content":"\n<meta name=\"referrer\" content=\"no-referrer\"/>\n\n## 利用宝塔面板实现Https\n\n宝塔面板提供了极其方便的https部署功能，比之前部署上一个网站的https方便太多了，简单记录一下步骤\n\n1. 阿里云申请个免费证书，一个账号可以申请20个\n\n   下载证书 ，选择nginx版本，解压可以获取到两个文件\n\n   ![11](https://limengtupian.oss-cn-beijing.aliyuncs.com/%E5%AE%9D%E5%A1%94%E5%B8%83%E7%BD%AEHTTPS/downloadCRT.png) \n\n2. 打开宝塔面板，添加站点\n\n   站点名字直接用limeng.work，没有加www\n\n   ![](https://limengtupian.oss-cn-beijing.aliyuncs.com/%E5%AE%9D%E5%A1%94%E5%B8%83%E7%BD%AEHTTPS/addWebsite.png)\n\n3. 添加成功后，部署SSL证书\n\n   将之前下载的证书文件，复制到对应的位置\n\n   ![](https://limengtupian.oss-cn-beijing.aliyuncs.com/%E5%AE%9D%E5%A1%94%E5%B8%83%E7%BD%AEHTTPS/copySSL.png)\n\n4. 上传证书到nginx目录\n\n   1. /www/server/nginx/conf目录下，新增cert文件夹\n   2. 将之前解压的文件放进去\n\n5. 修改nginx配置\n\n   将以前的80端口监听，改为443端口监听\n\n   ```js\n   server\n       {\n       listen 443 ssl;\n       #配置HTTPS的默认访问端口为443。\n       #如果未在此处配置HTTPS的默认访问端口，可能会造成Nginx无法启动。\n       #如果您使用Nginx 1.15.0及以上版本，请使用listen 443 ssl代替listen 443和ssl on。\n       server_name limeng.work; #需要将yourdomain.com替换成证书绑定的域名。\n       root html;\n       index index.html index.htm;\n       ssl_certificate cert/5274483_www.limeng.work.pem;  #需要将cert-file-name.pem替换成已上传的证书文件的名称。\n       ssl_certificate_key cert/5274483_www.limeng.work.key; #需要将cert-file-name.key替换成已上传的证书密钥文件的名称。\n       ssl_session_timeout 5m;\n       ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;\n       #表示使用的加密套件的类型。\n       ssl_protocols TLSv1 TLSv1.1 TLSv1.2; #表示使用的TLS协议的类型。\n       ssl_prefer_server_ciphers on;\n       location / {\n           root html;  #站点目录。\n           index index.html index.htm;\n       }\n       location /api {\n            proxy_pass http://localhost:8088;\n            proxy_http_version 1.1;\n            proxy_set_header Upgrade $http_upgrade;\n            proxy_set_header Connection ‘upgrade’;\n            proxy_set_header Host $host;\n            proxy_cache_bypass $http_upgrade;\n       }\n       location /music {\n            proxy_pass http://localhost:3000;\n            proxy_http_version 1.1;\n            proxy_set_header Upgrade $http_upgrade;\n            proxy_set_header Connection ‘upgrade’;\n            proxy_set_header Host $host;\n            proxy_cache_bypass $http_upgrade;\n       }\n       location /images {\n          root  /BLOG/static/files;\n          autoindex on;\n       }\n           access_log  /www/wwwlogs/access.log;\n       }\n   ```\n\n### 存疑\n\nnginx配置conf文件中，有涉及到证书的配置，但是，在宝塔中的sll功能中，已经看到有对证书文件的配置，不知道是否还要单独在nginx中配置\n\n```js\n ssl_certificate cert/5274483_www.limeng.work.pem;  #需要将cert-file-name.pem替换成已上传的证书文件的名称。\n ssl_certificate_key cert/5274483_www.limeng.work.key; #需要将cert-file-name.key替换成已上传的证书密钥文件的名称。\n```\n\n","source":"_posts/利用宝塔面板实现Https.md","raw":"---\ntitle: 利用宝塔面板实现Https\ndate: 2020-07-12 17:16:26\ntags: [js,hexo]\n---\n\n<meta name=\"referrer\" content=\"no-referrer\"/>\n\n## 利用宝塔面板实现Https\n\n宝塔面板提供了极其方便的https部署功能，比之前部署上一个网站的https方便太多了，简单记录一下步骤\n\n1. 阿里云申请个免费证书，一个账号可以申请20个\n\n   下载证书 ，选择nginx版本，解压可以获取到两个文件\n\n   ![11](https://limengtupian.oss-cn-beijing.aliyuncs.com/%E5%AE%9D%E5%A1%94%E5%B8%83%E7%BD%AEHTTPS/downloadCRT.png) \n\n2. 打开宝塔面板，添加站点\n\n   站点名字直接用limeng.work，没有加www\n\n   ![](https://limengtupian.oss-cn-beijing.aliyuncs.com/%E5%AE%9D%E5%A1%94%E5%B8%83%E7%BD%AEHTTPS/addWebsite.png)\n\n3. 添加成功后，部署SSL证书\n\n   将之前下载的证书文件，复制到对应的位置\n\n   ![](https://limengtupian.oss-cn-beijing.aliyuncs.com/%E5%AE%9D%E5%A1%94%E5%B8%83%E7%BD%AEHTTPS/copySSL.png)\n\n4. 上传证书到nginx目录\n\n   1. /www/server/nginx/conf目录下，新增cert文件夹\n   2. 将之前解压的文件放进去\n\n5. 修改nginx配置\n\n   将以前的80端口监听，改为443端口监听\n\n   ```js\n   server\n       {\n       listen 443 ssl;\n       #配置HTTPS的默认访问端口为443。\n       #如果未在此处配置HTTPS的默认访问端口，可能会造成Nginx无法启动。\n       #如果您使用Nginx 1.15.0及以上版本，请使用listen 443 ssl代替listen 443和ssl on。\n       server_name limeng.work; #需要将yourdomain.com替换成证书绑定的域名。\n       root html;\n       index index.html index.htm;\n       ssl_certificate cert/5274483_www.limeng.work.pem;  #需要将cert-file-name.pem替换成已上传的证书文件的名称。\n       ssl_certificate_key cert/5274483_www.limeng.work.key; #需要将cert-file-name.key替换成已上传的证书密钥文件的名称。\n       ssl_session_timeout 5m;\n       ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;\n       #表示使用的加密套件的类型。\n       ssl_protocols TLSv1 TLSv1.1 TLSv1.2; #表示使用的TLS协议的类型。\n       ssl_prefer_server_ciphers on;\n       location / {\n           root html;  #站点目录。\n           index index.html index.htm;\n       }\n       location /api {\n            proxy_pass http://localhost:8088;\n            proxy_http_version 1.1;\n            proxy_set_header Upgrade $http_upgrade;\n            proxy_set_header Connection ‘upgrade’;\n            proxy_set_header Host $host;\n            proxy_cache_bypass $http_upgrade;\n       }\n       location /music {\n            proxy_pass http://localhost:3000;\n            proxy_http_version 1.1;\n            proxy_set_header Upgrade $http_upgrade;\n            proxy_set_header Connection ‘upgrade’;\n            proxy_set_header Host $host;\n            proxy_cache_bypass $http_upgrade;\n       }\n       location /images {\n          root  /BLOG/static/files;\n          autoindex on;\n       }\n           access_log  /www/wwwlogs/access.log;\n       }\n   ```\n\n### 存疑\n\nnginx配置conf文件中，有涉及到证书的配置，但是，在宝塔中的sll功能中，已经看到有对证书文件的配置，不知道是否还要单独在nginx中配置\n\n```js\n ssl_certificate cert/5274483_www.limeng.work.pem;  #需要将cert-file-name.pem替换成已上传的证书文件的名称。\n ssl_certificate_key cert/5274483_www.limeng.work.key; #需要将cert-file-name.key替换成已上传的证书密钥文件的名称。\n```\n\n","slug":"利用宝塔面板实现Https","published":1,"updated":"2021-03-05T08:18:18.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl0uux6vt00127suffnw83zej","content":"<meta name=\"referrer\" content=\"no-referrer\"/>\n\n<h2 id=\"利用宝塔面板实现Https\"><a href=\"#利用宝塔面板实现Https\" class=\"headerlink\" title=\"利用宝塔面板实现Https\"></a>利用宝塔面板实现Https</h2><p>宝塔面板提供了极其方便的https部署功能，比之前部署上一个网站的https方便太多了，简单记录一下步骤</p>\n<ol>\n<li><p>阿里云申请个免费证书，一个账号可以申请20个</p>\n<p>下载证书 ，选择nginx版本，解压可以获取到两个文件</p>\n<p><img src=\"https://limengtupian.oss-cn-beijing.aliyuncs.com/%E5%AE%9D%E5%A1%94%E5%B8%83%E7%BD%AEHTTPS/downloadCRT.png\" alt=\"11\"> </p>\n</li>\n<li><p>打开宝塔面板，添加站点</p>\n<p>站点名字直接用limeng.work，没有加www</p>\n<p><img src=\"https://limengtupian.oss-cn-beijing.aliyuncs.com/%E5%AE%9D%E5%A1%94%E5%B8%83%E7%BD%AEHTTPS/addWebsite.png\"></p>\n</li>\n<li><p>添加成功后，部署SSL证书</p>\n<p>将之前下载的证书文件，复制到对应的位置</p>\n<p><img src=\"https://limengtupian.oss-cn-beijing.aliyuncs.com/%E5%AE%9D%E5%A1%94%E5%B8%83%E7%BD%AEHTTPS/copySSL.png\"></p>\n</li>\n<li><p>上传证书到nginx目录</p>\n<ol>\n<li>/www/server/nginx/conf目录下，新增cert文件夹</li>\n<li>将之前解压的文件放进去</li>\n</ol>\n</li>\n<li><p>修改nginx配置</p>\n<p>将以前的80端口监听，改为443端口监听</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">    listen <span class=\"number\">443</span> ssl;</span><br><span class=\"line\">    #配置<span class=\"variable constant_\">HTTPS</span>的默认访问端口为<span class=\"number\">443</span>。</span><br><span class=\"line\">    #如果未在此处配置<span class=\"variable constant_\">HTTPS</span>的默认访问端口，可能会造成<span class=\"title class_\">Nginx</span>无法启动。</span><br><span class=\"line\">    #如果您使用<span class=\"title class_\">Nginx</span> <span class=\"number\">1.15</span><span class=\"number\">.0</span>及以上版本，请使用listen <span class=\"number\">443</span> ssl代替listen <span class=\"number\">443</span>和ssl on。</span><br><span class=\"line\">    server_name limeng.<span class=\"property\">work</span>; #需要将yourdomain.<span class=\"property\">com</span>替换成证书绑定的域名。</span><br><span class=\"line\">    root html;</span><br><span class=\"line\">    index index.<span class=\"property\">html</span> index.<span class=\"property\">htm</span>;</span><br><span class=\"line\">    ssl_certificate cert/5274483_www.<span class=\"property\">limeng</span>.<span class=\"property\">work</span>.<span class=\"property\">pem</span>;  #需要将cert-file-name.<span class=\"property\">pem</span>替换成已上传的证书文件的名称。</span><br><span class=\"line\">    ssl_certificate_key cert/5274483_www.<span class=\"property\">limeng</span>.<span class=\"property\">work</span>.<span class=\"property\">key</span>; #需要将cert-file-name.<span class=\"property\">key</span>替换成已上传的证书密钥文件的名称。</span><br><span class=\"line\">    ssl_session_timeout 5m;</span><br><span class=\"line\">    ssl_ciphers <span class=\"variable constant_\">ECDHE</span>-<span class=\"variable constant_\">RSA</span>-<span class=\"title class_\">AES128</span>-<span class=\"variable constant_\">GCM</span>-<span class=\"title class_\">SHA256</span>:<span class=\"attr\">ECDHE</span>:<span class=\"attr\">ECDH</span>:<span class=\"attr\">AES</span>:<span class=\"attr\">HIGH</span>:!<span class=\"attr\">NULL</span>:!<span class=\"attr\">aNULL</span>:!<span class=\"title class_\">MD5</span>:!<span class=\"attr\">ADH</span>:!<span class=\"title class_\">RC4</span>;</span><br><span class=\"line\">    #表示使用的加密套件的类型。</span><br><span class=\"line\">    ssl_protocols <span class=\"title class_\">TLSv1</span> <span class=\"title class_\">TLSv1</span><span class=\"number\">.1</span> <span class=\"title class_\">TLSv1</span><span class=\"number\">.2</span>; #表示使用的<span class=\"variable constant_\">TLS</span>协议的类型。</span><br><span class=\"line\">    ssl_prefer_server_ciphers on;</span><br><span class=\"line\">    location / &#123;</span><br><span class=\"line\">        root html;  #站点目录。</span><br><span class=\"line\">        index index.<span class=\"property\">html</span> index.<span class=\"property\">htm</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    location /api &#123;</span><br><span class=\"line\">         proxy_pass <span class=\"attr\">http</span>:<span class=\"comment\">//localhost:8088;</span></span><br><span class=\"line\">         proxy_http_version <span class=\"number\">1.1</span>;</span><br><span class=\"line\">         proxy_set_header <span class=\"title class_\">Upgrade</span> $http_upgrade;</span><br><span class=\"line\">         proxy_set_header <span class=\"title class_\">Connection</span> ‘upgrade’;</span><br><span class=\"line\">         proxy_set_header <span class=\"title class_\">Host</span> $host;</span><br><span class=\"line\">         proxy_cache_bypass $http_upgrade;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    location /music &#123;</span><br><span class=\"line\">         proxy_pass <span class=\"attr\">http</span>:<span class=\"comment\">//localhost:3000;</span></span><br><span class=\"line\">         proxy_http_version <span class=\"number\">1.1</span>;</span><br><span class=\"line\">         proxy_set_header <span class=\"title class_\">Upgrade</span> $http_upgrade;</span><br><span class=\"line\">         proxy_set_header <span class=\"title class_\">Connection</span> ‘upgrade’;</span><br><span class=\"line\">         proxy_set_header <span class=\"title class_\">Host</span> $host;</span><br><span class=\"line\">         proxy_cache_bypass $http_upgrade;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    location /images &#123;</span><br><span class=\"line\">       root  /<span class=\"variable constant_\">BLOG</span>/<span class=\"keyword\">static</span>/files;</span><br><span class=\"line\">       autoindex on;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">        access_log  /www/wwwlogs/access.<span class=\"property\">log</span>;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h3 id=\"存疑\"><a href=\"#存疑\" class=\"headerlink\" title=\"存疑\"></a>存疑</h3><p>nginx配置conf文件中，有涉及到证书的配置，但是，在宝塔中的sll功能中，已经看到有对证书文件的配置，不知道是否还要单独在nginx中配置</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssl_certificate cert/5274483_www.<span class=\"property\">limeng</span>.<span class=\"property\">work</span>.<span class=\"property\">pem</span>;  #需要将cert-file-name.<span class=\"property\">pem</span>替换成已上传的证书文件的名称。</span><br><span class=\"line\">ssl_certificate_key cert/5274483_www.<span class=\"property\">limeng</span>.<span class=\"property\">work</span>.<span class=\"property\">key</span>; #需要将cert-file-name.<span class=\"property\">key</span>替换成已上传的证书密钥文件的名称。</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"","more":"<meta name=\"referrer\" content=\"no-referrer\"/>\n\n<h2 id=\"利用宝塔面板实现Https\"><a href=\"#利用宝塔面板实现Https\" class=\"headerlink\" title=\"利用宝塔面板实现Https\"></a>利用宝塔面板实现Https</h2><p>宝塔面板提供了极其方便的https部署功能，比之前部署上一个网站的https方便太多了，简单记录一下步骤</p>\n<ol>\n<li><p>阿里云申请个免费证书，一个账号可以申请20个</p>\n<p>下载证书 ，选择nginx版本，解压可以获取到两个文件</p>\n<p><img src=\"https://limengtupian.oss-cn-beijing.aliyuncs.com/%E5%AE%9D%E5%A1%94%E5%B8%83%E7%BD%AEHTTPS/downloadCRT.png\" alt=\"11\"> </p>\n</li>\n<li><p>打开宝塔面板，添加站点</p>\n<p>站点名字直接用limeng.work，没有加www</p>\n<p><img src=\"https://limengtupian.oss-cn-beijing.aliyuncs.com/%E5%AE%9D%E5%A1%94%E5%B8%83%E7%BD%AEHTTPS/addWebsite.png\"></p>\n</li>\n<li><p>添加成功后，部署SSL证书</p>\n<p>将之前下载的证书文件，复制到对应的位置</p>\n<p><img src=\"https://limengtupian.oss-cn-beijing.aliyuncs.com/%E5%AE%9D%E5%A1%94%E5%B8%83%E7%BD%AEHTTPS/copySSL.png\"></p>\n</li>\n<li><p>上传证书到nginx目录</p>\n<ol>\n<li>/www/server/nginx/conf目录下，新增cert文件夹</li>\n<li>将之前解压的文件放进去</li>\n</ol>\n</li>\n<li><p>修改nginx配置</p>\n<p>将以前的80端口监听，改为443端口监听</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">    listen <span class=\"number\">443</span> ssl;</span><br><span class=\"line\">    #配置<span class=\"variable constant_\">HTTPS</span>的默认访问端口为<span class=\"number\">443</span>。</span><br><span class=\"line\">    #如果未在此处配置<span class=\"variable constant_\">HTTPS</span>的默认访问端口，可能会造成<span class=\"title class_\">Nginx</span>无法启动。</span><br><span class=\"line\">    #如果您使用<span class=\"title class_\">Nginx</span> <span class=\"number\">1.15</span><span class=\"number\">.0</span>及以上版本，请使用listen <span class=\"number\">443</span> ssl代替listen <span class=\"number\">443</span>和ssl on。</span><br><span class=\"line\">    server_name limeng.<span class=\"property\">work</span>; #需要将yourdomain.<span class=\"property\">com</span>替换成证书绑定的域名。</span><br><span class=\"line\">    root html;</span><br><span class=\"line\">    index index.<span class=\"property\">html</span> index.<span class=\"property\">htm</span>;</span><br><span class=\"line\">    ssl_certificate cert/5274483_www.<span class=\"property\">limeng</span>.<span class=\"property\">work</span>.<span class=\"property\">pem</span>;  #需要将cert-file-name.<span class=\"property\">pem</span>替换成已上传的证书文件的名称。</span><br><span class=\"line\">    ssl_certificate_key cert/5274483_www.<span class=\"property\">limeng</span>.<span class=\"property\">work</span>.<span class=\"property\">key</span>; #需要将cert-file-name.<span class=\"property\">key</span>替换成已上传的证书密钥文件的名称。</span><br><span class=\"line\">    ssl_session_timeout 5m;</span><br><span class=\"line\">    ssl_ciphers <span class=\"variable constant_\">ECDHE</span>-<span class=\"variable constant_\">RSA</span>-<span class=\"title class_\">AES128</span>-<span class=\"variable constant_\">GCM</span>-<span class=\"title class_\">SHA256</span>:<span class=\"attr\">ECDHE</span>:<span class=\"attr\">ECDH</span>:<span class=\"attr\">AES</span>:<span class=\"attr\">HIGH</span>:!<span class=\"attr\">NULL</span>:!<span class=\"attr\">aNULL</span>:!<span class=\"title class_\">MD5</span>:!<span class=\"attr\">ADH</span>:!<span class=\"title class_\">RC4</span>;</span><br><span class=\"line\">    #表示使用的加密套件的类型。</span><br><span class=\"line\">    ssl_protocols <span class=\"title class_\">TLSv1</span> <span class=\"title class_\">TLSv1</span><span class=\"number\">.1</span> <span class=\"title class_\">TLSv1</span><span class=\"number\">.2</span>; #表示使用的<span class=\"variable constant_\">TLS</span>协议的类型。</span><br><span class=\"line\">    ssl_prefer_server_ciphers on;</span><br><span class=\"line\">    location / &#123;</span><br><span class=\"line\">        root html;  #站点目录。</span><br><span class=\"line\">        index index.<span class=\"property\">html</span> index.<span class=\"property\">htm</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    location /api &#123;</span><br><span class=\"line\">         proxy_pass <span class=\"attr\">http</span>:<span class=\"comment\">//localhost:8088;</span></span><br><span class=\"line\">         proxy_http_version <span class=\"number\">1.1</span>;</span><br><span class=\"line\">         proxy_set_header <span class=\"title class_\">Upgrade</span> $http_upgrade;</span><br><span class=\"line\">         proxy_set_header <span class=\"title class_\">Connection</span> ‘upgrade’;</span><br><span class=\"line\">         proxy_set_header <span class=\"title class_\">Host</span> $host;</span><br><span class=\"line\">         proxy_cache_bypass $http_upgrade;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    location /music &#123;</span><br><span class=\"line\">         proxy_pass <span class=\"attr\">http</span>:<span class=\"comment\">//localhost:3000;</span></span><br><span class=\"line\">         proxy_http_version <span class=\"number\">1.1</span>;</span><br><span class=\"line\">         proxy_set_header <span class=\"title class_\">Upgrade</span> $http_upgrade;</span><br><span class=\"line\">         proxy_set_header <span class=\"title class_\">Connection</span> ‘upgrade’;</span><br><span class=\"line\">         proxy_set_header <span class=\"title class_\">Host</span> $host;</span><br><span class=\"line\">         proxy_cache_bypass $http_upgrade;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    location /images &#123;</span><br><span class=\"line\">       root  /<span class=\"variable constant_\">BLOG</span>/<span class=\"keyword\">static</span>/files;</span><br><span class=\"line\">       autoindex on;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">        access_log  /www/wwwlogs/access.<span class=\"property\">log</span>;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h3 id=\"存疑\"><a href=\"#存疑\" class=\"headerlink\" title=\"存疑\"></a>存疑</h3><p>nginx配置conf文件中，有涉及到证书的配置，但是，在宝塔中的sll功能中，已经看到有对证书文件的配置，不知道是否还要单独在nginx中配置</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssl_certificate cert/5274483_www.<span class=\"property\">limeng</span>.<span class=\"property\">work</span>.<span class=\"property\">pem</span>;  #需要将cert-file-name.<span class=\"property\">pem</span>替换成已上传的证书文件的名称。</span><br><span class=\"line\">ssl_certificate_key cert/5274483_www.<span class=\"property\">limeng</span>.<span class=\"property\">work</span>.<span class=\"property\">key</span>; #需要将cert-file-name.<span class=\"property\">key</span>替换成已上传的证书密钥文件的名称。</span><br></pre></td></tr></table></figure>\n\n"},{"title":"使用uniapp调用摄像头","date":"2020-07-12T09:16:26.000Z","_content":"\n<meta name=\"referrer\" content=\"no-referrer\"/>\n\n##  使用uniapp配合H5+调用摄像头进行核销\n\n团购优惠券类型app，有完整的券码生成、保存、校验、核销系统，使用uni开发的app需要提供核销界面的定制开发\n\n<!-- more -->\n\n> 需求：打开核销扫码页面，除了正常的摄像头、闪光灯和相册选项之外，还需要额外加上核销记录和手动核销文字和跳转功能\n\n### uni提供的摄像头核销接口\n\nuni已经封装好了摄像头扫码的接口，即\n\n```js\nuni.scanCode(OBJECT)\n\n// 允许从相机和相册扫码\nuni.scanCode({\n    success: function (res) {\n        console.log('条码类型：' + res.scanType);\n        console.log('条码内容：' + res.result);\n    }\n});\n\n// 只允许通过相机扫码\nuni.scanCode({\n    onlyFromCamera: true,\n    success: function (res) {\n        console.log('条码类型：' + res.scanType);\n        console.log('条码内容：' + res.result);\n    }\n});\n\n// 调起条码扫描\nuni.scanCode({\n    scanType: ['barCode'],\n    success: function (res) {\n        console.log('条码类型：' + res.scanType);\n        console.log('条码内容：' + res.result);\n    }\n});\n```\n\n接口本身回调用摄像头，分别对应不同的样式和功能，但是不提供添加文件和跳转功能的配置项，需要寻找自定义的扫码功能\n\n### 强大的H5+标准协议\n\nHTML5+可以实现绝大多数开发中需要的功能，宣传页中有提到过 HTML5+有超过40万+的api（doge），常用的如二维码、语音输入、摇一摇、摄像头、文件系统、微信分享等功能，\n\n1. 环境说明\n\n   ```js\n   uni-app,vue,开发app（不考虑H5、小程序等兼容）\n   ```\n\n2. 代码说明\n\n   1. 初始化\n\n      ```js\n      init方法：\n      var pages = getCurrentPages() //获取当前的页面\n      var page = pages[pages.length - 1] //获取当前的页面\n      \n       // #ifdef APP-PLUS\n            plus.navigator.setFullscreen(true) //全屏\n            var currentWebview = page.$getAppWebview()\n            this.createBarcode(currentWebview) //创建二维码窗口\n            this.createView(currentWebview) //创建操作按钮及tips界面\n      // #endif\n      ```\n\n      初始化的时候，首先获取当前页面，然后直接调用plus对象上的全屏方法设置全屏（plus对象即HTML5+提供的全局对象，当用uni开发app时，plus对象是可以默认直接调用的），创建二维码窗口，再创建操作按钮及tips界面\n\n   2. 创建二维码\n\n      ```js\n      plus.barcode.create\n      ```\n\n      也是plus提供的标准api，可以创建一个自定义大小和颜色等的二维码窗口，配置项比较多，可以通过手册去查看配置项\n\n      ```js\n       barcode.setFlash(this.flash)\n       currentWebview.append(barcode)\n       barcode.start()\n      ```\n\n      设置闪光灯、再将生成的二维码dom添加到当前页面上去、开始扫描二维码并作出动画等\n\n   3. 创建按钮和文字并绑定事件\n\n      第二步的时候，已经有扫码的界面的样式动画等功能了，但是我们需要定制相册的位置和icon、手电筒的样式和icon并需要添加两个对应的文字链接和跳转功能\n\n      ```js\n      createView(currentWebview) {\n         var toPhotoAlbum = new plus.nativeObj.View(\n              'toPhotoAlbum',\n              {\n                top: '70%',\n                left: '80%',\n                height: '10%',\n                width: '20%',\n              },\n              [\n                {\n                  tag: 'img',\n                  id: 'scanBar',\n                  src: 'static/2.0x/ic-picture@2x.png',\n                  position: {\n                    width: '40%',\n                    left: '30%',\n                    height: '36%',\n                  },\n                },\n                {\n                  tag: 'font',\n                  id: 'font',\n                  text: '相册',\n                  textStyles: {\n                    size: '16px',\n                    color: '#ffffff',\n                  },\n                  position: {\n                    width: '80%',\n                    left: '10%',\n                  },\n                },\n              ]\n            )\n      }\n      ```\n\n      以其中的一个相册功能举例，\n\n      首先，生成一个dom对象\n\n      ```js\n      new plus.nativeObj.View\n      ```\n\n      里面可以配置dom大小、图片、位置、字体等等\n\n      然后添加触摸穿透事件的拦截\n\n      ```js\n      interceptTouchEvent(true)\n      ```\n\n      1参考：[HTML5+中原生对象说明](https://www.dcloud.io/docs/api/zh_cn/nativeobj.html)\n\n      然后将dom添加到页面上去\n\n      ```js\n      currentWebview.append(toPhotoAlbum)\n      ```\n\n      并在dom上绑定对应的事件\n\n      ```js\n       toPhotoAlbum.addEventListener('click', (e) => {\n              plus.gallery.pick(\n                (path) => {\n                  console.log(path)\n                  plus.barcode.scan(\n                    path,\n                    (type, result) => {\n                      // console.log('本地相册的数据', result)\n                      this.getCouponInfo(result)\n                    },\n                    (e) => {\n                      console.log('Scan failed: ' + JSON.stringify(e))\n                    }\n                  )\n                },\n                (e) => {\n                  console.log('取消选择图片')\n                },\n                { filter: 'image' }\n              )\n            })\n      ```\n\n      至此，样式的功能已经梳理完毕，同理，可以添加手电筒功能、跳转功能等等。\n\n   4. 扫码成功的回调\n\n      当使用手机扫码后，需要根据二维码拿到对应扫码结果，即二维码代表的字符串\n\n      创建二维码时候，绑定了一个事件onmarked，即扫码的回调事件\n\n      ```js\n      barcode.onmarked = this.onmarked\n      ```\n\n      ```js\n      // 扫码成功回调\n          onmarked(type, result) {\n            console.log(result)\n          },\n      ```\n\n      拿到对应的扫码结果后，自然可以做下一步的跳转核销等功能\n\n   5. 完整代码如下：\n\n      ```js\n      <template>\n        <view class=\"warpBC\">\n        </view>\n      </template>\n      ```\n\n      ```js\n      var barcode = null\n      export default {\n        data() {\n          return {\n            name: '', //要在扫码界面自定义的内容\n            flash: false, //是否打开摄像头\n            type: '',\n            options: null, //传过来的配置\n          }\n        },\n        onLoad(d) {\n          console.log('出世法')\n          this.options = JSON.parse(JSON.stringify(d))\n            ? JSON.parse(JSON.stringify(d))\n            : { type: 'scan-listener' }\n          if (uni.getStorageSync('checkFirstHX')) {\n            console.log('已经初始化过了')\n          } else {\n          }\n          this.init(this.options)\n        },\n        onShow() {\n          console.log('onshow出世法')\n          if (uni.getStorageSync('checkFirstHX')) {\n            //   this.init(this.options)\n          } else {\n            console.log('要通过onshow来执行')\n          }\n        },\n        methods: {\n          toOtherPage() {\n            this.$u.toast('1秒后重新跳转至扫码页面，请稍等')\n            uni.redirectTo({\n              url: '/pages/HXassistant/HXassistant',\n            })\n          },\n          getCouponInfo() {\n          },\n          init(d) {\n            this.type = d.type ? d.type : 'scan-listener'\n            var pages = getCurrentPages()\n            var page = pages[pages.length - 1]\n            // #ifdef APP-PLUS\n            plus.navigator.setFullscreen(true) //全屏\n            var currentWebview = page.$getAppWebview()\n            this.createBarcode(currentWebview) //创建二维码窗口\n            this.createView(currentWebview) //创建操作按钮及tips界面\n            // #endif\n            uni.setStorageSync('checkFirstHX', true)\n          },\n          // 扫码成功回调\n          onmarked(type, result) {\n            console.log(result)\n            var text = '未知: '\n            switch (type) {\n              case plus.barcode.QR:\n                text = 'QR: '\n                break\n              case plus.barcode.EAN13:\n                text = 'EAN13: '\n                break\n              case plus.barcode.EAN8:\n                text = 'EAN8: '\n                break\n            }\n      \n            this.getCouponInfo(result)\n          },\n          // 创建二维码窗口\n          createBarcode(currentWebview) {\n            barcode = plus.barcode.create('barcode', [plus.barcode.QR], {\n              top: '0',\n              left: '0',\n              width: '100%',\n              height: '100%',\n              scanbarColor: '#1DA7FF',\n              position: 'static',\n              frameColor: '#1DA7FF',\n            })\n            barcode.onmarked = this.onmarked\n            barcode.setFlash(this.flash)\n            currentWebview.append(barcode)\n            barcode.start()\n          },\n          // 创建操作按钮及tips\n          createView(currentWebview) {\n            //相册\n            var toPhotoAlbum = new plus.nativeObj.View(\n              'toPhotoAlbum',\n              {\n                top: '70%',\n                left: '80%',\n                height: '10%',\n                width: '20%',\n              },\n              [\n                {\n                  tag: 'img',\n                  id: 'scanBar',\n                  src: 'static/2.0x/ic-picture@2x.png',\n                  position: {\n                    width: '40%',\n                    left: '30%',\n                    height: '36%',\n                  },\n                },\n                {\n                  tag: 'font',\n                  id: 'font',\n                  text: '相册',\n                  textStyles: {\n                    size: '16px',\n                    color: '#ffffff',\n                  },\n                  position: {\n                    width: '80%',\n                    left: '10%',\n                  },\n                },\n              ]\n            )\n            //创建下方的两个图标\n            var toHXrecoder = new plus.nativeObj.View(\n              'toHXrecoder',\n              {\n                top: '90%',\n                left: '30%',\n                height: '10%',\n                width: '30%',\n              },\n              [\n                {\n                  tag: 'font',\n                  id: 'font',\n                  text: '核销记录',\n                  textStyles: {\n                    size: '16px',\n                    color: '#ffffff',\n                  },\n                  position: {\n                    width: '80%',\n                    left: '10%',\n                  },\n                },\n              ]\n            )\n            var toHXByHand = new plus.nativeObj.View(\n              'toHXByHand',\n              {\n                top: '90%',\n                left: '0%',\n                height: '10%',\n                width: '30%',\n              },\n              [\n                {\n                  tag: 'font',\n                  id: 'font',\n                  text: '输码核销',\n                  textStyles: {\n                    size: '16px',\n                    color: '#ffffff',\n                  },\n                  position: {\n                    width: '100%',\n                    left: '10%',\n                  },\n                },\n              ]\n            )\n            // 创建返回原生按钮\n            var backVew = new plus.nativeObj.View(\n              'backVew',\n              {\n                top: '34px',\n                left: '5px',\n                height: '40px',\n                width: '20%',\n              },\n              [\n                {\n                  tag: 'img',\n                  id: 'backBar',\n                  src: 'static/2.0x/backBar.png',\n                  position: {\n                    top: '2px',\n                    left: '10px',\n                    width: '35px',\n                    height: '35px',\n                  },\n                },\n              ]\n            )\n            // 创建打开手电筒的按钮\n            var scanBarVew = new plus.nativeObj.View(\n              'scanBarVew',\n              {\n                top: '70%',\n                left: '40%',\n                height: '10%',\n                width: '20%',\n              },\n              [\n                {\n                  tag: 'img',\n                  id: 'scanBar',\n                  src: 'static/2.0x/scanBar.png',\n                  position: {\n                    width: '28%',\n                    left: '36%',\n                    height: '30%',\n                  },\n                },\n                {\n                  tag: 'font',\n                  id: 'font',\n                  text: '轻触照亮',\n                  textStyles: {\n                    size: '16px',\n                    color: '#ffffff',\n                  },\n                  position: {\n                    width: '80%',\n                    left: '10%',\n                  },\n                },\n              ]\n            )\n            // 创建展示类内容组件\n            var content = new plus.nativeObj.View(\n              'content',\n              {\n                top: '0px',\n                left: '0px',\n                height: '100%',\n                width: '100%',\n              },\n              [\n                {\n                  tag: 'font',\n                  id: 'scanTitle',\n                  text: '扫码',\n                  textStyles: {\n                    size: '20px',\n                    color: '#ffffff',\n                  },\n                  position: {\n                    top: '34px',\n                    left: '0px',\n                    width: '100%',\n                    height: '40px',\n                  },\n                },\n              ]\n            )\n            toPhotoAlbum.interceptTouchEvent(true)\n            toHXrecoder.interceptTouchEvent(true)\n            toHXByHand.interceptTouchEvent(true)\n            backVew.interceptTouchEvent(true)\n            scanBarVew.interceptTouchEvent(true)\n            currentWebview.append(content)\n            currentWebview.append(scanBarVew)\n            currentWebview.append(backVew)\n            currentWebview.append(toHXrecoder)\n            currentWebview.append(toHXByHand)\n            currentWebview.append(toPhotoAlbum)\n            toPhotoAlbum.addEventListener('click', (e) => {\n              plus.gallery.pick(\n                (path) => {\n                  console.log(path)\n                  plus.barcode.scan(\n                    path,\n                    (type, result) => {\n                      // console.log('本地相册的数据', result)\n                      this.getCouponInfo(result)\n                    },\n                    (e) => {\n                      console.log('Scan failed: ' + JSON.stringify(e))\n                    }\n                  )\n                },\n                (e) => {\n                  console.log('取消选择图片')\n                },\n                { filter: 'image' }\n              )\n            })\n            toHXrecoder.addEventListener(\n              'click',\n              (e) => {\n                let path = {\n                  path: 'HXrecoder',\n                }\n                uni.navigateTo({\n                  url: '/pages/HXassistant/temPage' + commonFun.joint(path),\n                })\n                barcode.close()\n                plus.navigator.setFullscreen(false)\n              },\n              false\n            )\n            toHXByHand.addEventListener(\n              'click',\n              (e) => {\n                uni.navigateTo({\n                  url: '/pages/HXassistant/HXByHand',\n                })\n                barcode.close()\n                plus.navigator.setFullscreen(false)\n              },\n              false\n            )\n            backVew.addEventListener(\n              'click',\n              (e) => {\n                console.log('1111111')\n                // 返回按钮\n                uni.switchTab({\n                  url: '/pages/index/index',\n                  success: (res) => {},\n                  fail: () => {},\n                  complete: () => {},\n                })\n                barcode.close()\n                plus.navigator.setFullscreen(false)\n              },\n              false\n            )\n            var temp = this\n            scanBarVew.addEventListener(\n              'click',\n              (e) => {\n                //点亮手电筒\n                temp.flash = !temp.flash\n                if (temp.flash) {\n                  scanBarVew.draw([\n                    {\n                      tag: 'img',\n                      id: 'scanBar',\n                      src: 'static/2.0x/yellow-scanBar.png',\n                      position: {\n                        width: '28%',\n                        left: '36%',\n                        height: '30%',\n                      },\n                    },\n                    {\n                      tag: 'font',\n                      id: 'font',\n                      text: '轻触照亮',\n                      textStyles: {\n                        size: '10px',\n                        color: '#ffffff',\n                      },\n                      position: {\n                        width: '80%',\n                        left: '10%',\n                      },\n                    },\n                  ])\n                } else {\n                  scanBarVew.draw([\n                    {\n                      tag: 'img',\n                      id: 'scanBar',\n                      src: 'static/2.0x/scanBar.png',\n                      position: {\n                        width: '28%',\n                        left: '36%',\n                        height: '30%',\n                      },\n                    },\n                    {\n                      tag: 'font',\n                      id: 'font',\n                      text: '轻触照亮',\n                      textStyles: {\n                        size: '10px',\n                        color: '#ffffff',\n                      },\n                      position: {\n                        width: '80%',\n                        left: '10%',\n                      },\n                    },\n                  ])\n                }\n                if (barcode) {\n                  barcode.setFlash(temp.flash)\n                }\n              },\n              false\n            )\n          },\n        },\n        onBackPress(options) {\n          // #ifdef APP-PLUS\n          // 返回时退出全屏\n          barcode.close()\n          plus.navigator.setFullscreen(false)\n          // #endif\n          console.log(options)\n          if (options.from == 'backbutton') {\n            uni.switchTab({\n              url: '/pages/index/index',\n              success: (res) => {},\n              fail: () => {},\n              complete: () => {},\n            })\n          }\n          return true\n        },\n        onUnload() {\n          plus.navigator.setFullscreen(false)\n        },\n      }\n      ```\n\n      ```js\n      <style scoped>\n      .warpBC {\n        background-color: white;\n        min-height: 100vh;\n        min-width: 100vw;\n      }\n      </style>\n      ```\n\n      \n\n      ","source":"_posts/使用uniapp调用摄像头.md","raw":"---\ntitle: 使用uniapp调用摄像头\ndate: 2020-07-12 17:16:26\ntags: [js,hexo]\n---\n\n<meta name=\"referrer\" content=\"no-referrer\"/>\n\n##  使用uniapp配合H5+调用摄像头进行核销\n\n团购优惠券类型app，有完整的券码生成、保存、校验、核销系统，使用uni开发的app需要提供核销界面的定制开发\n\n<!-- more -->\n\n> 需求：打开核销扫码页面，除了正常的摄像头、闪光灯和相册选项之外，还需要额外加上核销记录和手动核销文字和跳转功能\n\n### uni提供的摄像头核销接口\n\nuni已经封装好了摄像头扫码的接口，即\n\n```js\nuni.scanCode(OBJECT)\n\n// 允许从相机和相册扫码\nuni.scanCode({\n    success: function (res) {\n        console.log('条码类型：' + res.scanType);\n        console.log('条码内容：' + res.result);\n    }\n});\n\n// 只允许通过相机扫码\nuni.scanCode({\n    onlyFromCamera: true,\n    success: function (res) {\n        console.log('条码类型：' + res.scanType);\n        console.log('条码内容：' + res.result);\n    }\n});\n\n// 调起条码扫描\nuni.scanCode({\n    scanType: ['barCode'],\n    success: function (res) {\n        console.log('条码类型：' + res.scanType);\n        console.log('条码内容：' + res.result);\n    }\n});\n```\n\n接口本身回调用摄像头，分别对应不同的样式和功能，但是不提供添加文件和跳转功能的配置项，需要寻找自定义的扫码功能\n\n### 强大的H5+标准协议\n\nHTML5+可以实现绝大多数开发中需要的功能，宣传页中有提到过 HTML5+有超过40万+的api（doge），常用的如二维码、语音输入、摇一摇、摄像头、文件系统、微信分享等功能，\n\n1. 环境说明\n\n   ```js\n   uni-app,vue,开发app（不考虑H5、小程序等兼容）\n   ```\n\n2. 代码说明\n\n   1. 初始化\n\n      ```js\n      init方法：\n      var pages = getCurrentPages() //获取当前的页面\n      var page = pages[pages.length - 1] //获取当前的页面\n      \n       // #ifdef APP-PLUS\n            plus.navigator.setFullscreen(true) //全屏\n            var currentWebview = page.$getAppWebview()\n            this.createBarcode(currentWebview) //创建二维码窗口\n            this.createView(currentWebview) //创建操作按钮及tips界面\n      // #endif\n      ```\n\n      初始化的时候，首先获取当前页面，然后直接调用plus对象上的全屏方法设置全屏（plus对象即HTML5+提供的全局对象，当用uni开发app时，plus对象是可以默认直接调用的），创建二维码窗口，再创建操作按钮及tips界面\n\n   2. 创建二维码\n\n      ```js\n      plus.barcode.create\n      ```\n\n      也是plus提供的标准api，可以创建一个自定义大小和颜色等的二维码窗口，配置项比较多，可以通过手册去查看配置项\n\n      ```js\n       barcode.setFlash(this.flash)\n       currentWebview.append(barcode)\n       barcode.start()\n      ```\n\n      设置闪光灯、再将生成的二维码dom添加到当前页面上去、开始扫描二维码并作出动画等\n\n   3. 创建按钮和文字并绑定事件\n\n      第二步的时候，已经有扫码的界面的样式动画等功能了，但是我们需要定制相册的位置和icon、手电筒的样式和icon并需要添加两个对应的文字链接和跳转功能\n\n      ```js\n      createView(currentWebview) {\n         var toPhotoAlbum = new plus.nativeObj.View(\n              'toPhotoAlbum',\n              {\n                top: '70%',\n                left: '80%',\n                height: '10%',\n                width: '20%',\n              },\n              [\n                {\n                  tag: 'img',\n                  id: 'scanBar',\n                  src: 'static/2.0x/ic-picture@2x.png',\n                  position: {\n                    width: '40%',\n                    left: '30%',\n                    height: '36%',\n                  },\n                },\n                {\n                  tag: 'font',\n                  id: 'font',\n                  text: '相册',\n                  textStyles: {\n                    size: '16px',\n                    color: '#ffffff',\n                  },\n                  position: {\n                    width: '80%',\n                    left: '10%',\n                  },\n                },\n              ]\n            )\n      }\n      ```\n\n      以其中的一个相册功能举例，\n\n      首先，生成一个dom对象\n\n      ```js\n      new plus.nativeObj.View\n      ```\n\n      里面可以配置dom大小、图片、位置、字体等等\n\n      然后添加触摸穿透事件的拦截\n\n      ```js\n      interceptTouchEvent(true)\n      ```\n\n      1参考：[HTML5+中原生对象说明](https://www.dcloud.io/docs/api/zh_cn/nativeobj.html)\n\n      然后将dom添加到页面上去\n\n      ```js\n      currentWebview.append(toPhotoAlbum)\n      ```\n\n      并在dom上绑定对应的事件\n\n      ```js\n       toPhotoAlbum.addEventListener('click', (e) => {\n              plus.gallery.pick(\n                (path) => {\n                  console.log(path)\n                  plus.barcode.scan(\n                    path,\n                    (type, result) => {\n                      // console.log('本地相册的数据', result)\n                      this.getCouponInfo(result)\n                    },\n                    (e) => {\n                      console.log('Scan failed: ' + JSON.stringify(e))\n                    }\n                  )\n                },\n                (e) => {\n                  console.log('取消选择图片')\n                },\n                { filter: 'image' }\n              )\n            })\n      ```\n\n      至此，样式的功能已经梳理完毕，同理，可以添加手电筒功能、跳转功能等等。\n\n   4. 扫码成功的回调\n\n      当使用手机扫码后，需要根据二维码拿到对应扫码结果，即二维码代表的字符串\n\n      创建二维码时候，绑定了一个事件onmarked，即扫码的回调事件\n\n      ```js\n      barcode.onmarked = this.onmarked\n      ```\n\n      ```js\n      // 扫码成功回调\n          onmarked(type, result) {\n            console.log(result)\n          },\n      ```\n\n      拿到对应的扫码结果后，自然可以做下一步的跳转核销等功能\n\n   5. 完整代码如下：\n\n      ```js\n      <template>\n        <view class=\"warpBC\">\n        </view>\n      </template>\n      ```\n\n      ```js\n      var barcode = null\n      export default {\n        data() {\n          return {\n            name: '', //要在扫码界面自定义的内容\n            flash: false, //是否打开摄像头\n            type: '',\n            options: null, //传过来的配置\n          }\n        },\n        onLoad(d) {\n          console.log('出世法')\n          this.options = JSON.parse(JSON.stringify(d))\n            ? JSON.parse(JSON.stringify(d))\n            : { type: 'scan-listener' }\n          if (uni.getStorageSync('checkFirstHX')) {\n            console.log('已经初始化过了')\n          } else {\n          }\n          this.init(this.options)\n        },\n        onShow() {\n          console.log('onshow出世法')\n          if (uni.getStorageSync('checkFirstHX')) {\n            //   this.init(this.options)\n          } else {\n            console.log('要通过onshow来执行')\n          }\n        },\n        methods: {\n          toOtherPage() {\n            this.$u.toast('1秒后重新跳转至扫码页面，请稍等')\n            uni.redirectTo({\n              url: '/pages/HXassistant/HXassistant',\n            })\n          },\n          getCouponInfo() {\n          },\n          init(d) {\n            this.type = d.type ? d.type : 'scan-listener'\n            var pages = getCurrentPages()\n            var page = pages[pages.length - 1]\n            // #ifdef APP-PLUS\n            plus.navigator.setFullscreen(true) //全屏\n            var currentWebview = page.$getAppWebview()\n            this.createBarcode(currentWebview) //创建二维码窗口\n            this.createView(currentWebview) //创建操作按钮及tips界面\n            // #endif\n            uni.setStorageSync('checkFirstHX', true)\n          },\n          // 扫码成功回调\n          onmarked(type, result) {\n            console.log(result)\n            var text = '未知: '\n            switch (type) {\n              case plus.barcode.QR:\n                text = 'QR: '\n                break\n              case plus.barcode.EAN13:\n                text = 'EAN13: '\n                break\n              case plus.barcode.EAN8:\n                text = 'EAN8: '\n                break\n            }\n      \n            this.getCouponInfo(result)\n          },\n          // 创建二维码窗口\n          createBarcode(currentWebview) {\n            barcode = plus.barcode.create('barcode', [plus.barcode.QR], {\n              top: '0',\n              left: '0',\n              width: '100%',\n              height: '100%',\n              scanbarColor: '#1DA7FF',\n              position: 'static',\n              frameColor: '#1DA7FF',\n            })\n            barcode.onmarked = this.onmarked\n            barcode.setFlash(this.flash)\n            currentWebview.append(barcode)\n            barcode.start()\n          },\n          // 创建操作按钮及tips\n          createView(currentWebview) {\n            //相册\n            var toPhotoAlbum = new plus.nativeObj.View(\n              'toPhotoAlbum',\n              {\n                top: '70%',\n                left: '80%',\n                height: '10%',\n                width: '20%',\n              },\n              [\n                {\n                  tag: 'img',\n                  id: 'scanBar',\n                  src: 'static/2.0x/ic-picture@2x.png',\n                  position: {\n                    width: '40%',\n                    left: '30%',\n                    height: '36%',\n                  },\n                },\n                {\n                  tag: 'font',\n                  id: 'font',\n                  text: '相册',\n                  textStyles: {\n                    size: '16px',\n                    color: '#ffffff',\n                  },\n                  position: {\n                    width: '80%',\n                    left: '10%',\n                  },\n                },\n              ]\n            )\n            //创建下方的两个图标\n            var toHXrecoder = new plus.nativeObj.View(\n              'toHXrecoder',\n              {\n                top: '90%',\n                left: '30%',\n                height: '10%',\n                width: '30%',\n              },\n              [\n                {\n                  tag: 'font',\n                  id: 'font',\n                  text: '核销记录',\n                  textStyles: {\n                    size: '16px',\n                    color: '#ffffff',\n                  },\n                  position: {\n                    width: '80%',\n                    left: '10%',\n                  },\n                },\n              ]\n            )\n            var toHXByHand = new plus.nativeObj.View(\n              'toHXByHand',\n              {\n                top: '90%',\n                left: '0%',\n                height: '10%',\n                width: '30%',\n              },\n              [\n                {\n                  tag: 'font',\n                  id: 'font',\n                  text: '输码核销',\n                  textStyles: {\n                    size: '16px',\n                    color: '#ffffff',\n                  },\n                  position: {\n                    width: '100%',\n                    left: '10%',\n                  },\n                },\n              ]\n            )\n            // 创建返回原生按钮\n            var backVew = new plus.nativeObj.View(\n              'backVew',\n              {\n                top: '34px',\n                left: '5px',\n                height: '40px',\n                width: '20%',\n              },\n              [\n                {\n                  tag: 'img',\n                  id: 'backBar',\n                  src: 'static/2.0x/backBar.png',\n                  position: {\n                    top: '2px',\n                    left: '10px',\n                    width: '35px',\n                    height: '35px',\n                  },\n                },\n              ]\n            )\n            // 创建打开手电筒的按钮\n            var scanBarVew = new plus.nativeObj.View(\n              'scanBarVew',\n              {\n                top: '70%',\n                left: '40%',\n                height: '10%',\n                width: '20%',\n              },\n              [\n                {\n                  tag: 'img',\n                  id: 'scanBar',\n                  src: 'static/2.0x/scanBar.png',\n                  position: {\n                    width: '28%',\n                    left: '36%',\n                    height: '30%',\n                  },\n                },\n                {\n                  tag: 'font',\n                  id: 'font',\n                  text: '轻触照亮',\n                  textStyles: {\n                    size: '16px',\n                    color: '#ffffff',\n                  },\n                  position: {\n                    width: '80%',\n                    left: '10%',\n                  },\n                },\n              ]\n            )\n            // 创建展示类内容组件\n            var content = new plus.nativeObj.View(\n              'content',\n              {\n                top: '0px',\n                left: '0px',\n                height: '100%',\n                width: '100%',\n              },\n              [\n                {\n                  tag: 'font',\n                  id: 'scanTitle',\n                  text: '扫码',\n                  textStyles: {\n                    size: '20px',\n                    color: '#ffffff',\n                  },\n                  position: {\n                    top: '34px',\n                    left: '0px',\n                    width: '100%',\n                    height: '40px',\n                  },\n                },\n              ]\n            )\n            toPhotoAlbum.interceptTouchEvent(true)\n            toHXrecoder.interceptTouchEvent(true)\n            toHXByHand.interceptTouchEvent(true)\n            backVew.interceptTouchEvent(true)\n            scanBarVew.interceptTouchEvent(true)\n            currentWebview.append(content)\n            currentWebview.append(scanBarVew)\n            currentWebview.append(backVew)\n            currentWebview.append(toHXrecoder)\n            currentWebview.append(toHXByHand)\n            currentWebview.append(toPhotoAlbum)\n            toPhotoAlbum.addEventListener('click', (e) => {\n              plus.gallery.pick(\n                (path) => {\n                  console.log(path)\n                  plus.barcode.scan(\n                    path,\n                    (type, result) => {\n                      // console.log('本地相册的数据', result)\n                      this.getCouponInfo(result)\n                    },\n                    (e) => {\n                      console.log('Scan failed: ' + JSON.stringify(e))\n                    }\n                  )\n                },\n                (e) => {\n                  console.log('取消选择图片')\n                },\n                { filter: 'image' }\n              )\n            })\n            toHXrecoder.addEventListener(\n              'click',\n              (e) => {\n                let path = {\n                  path: 'HXrecoder',\n                }\n                uni.navigateTo({\n                  url: '/pages/HXassistant/temPage' + commonFun.joint(path),\n                })\n                barcode.close()\n                plus.navigator.setFullscreen(false)\n              },\n              false\n            )\n            toHXByHand.addEventListener(\n              'click',\n              (e) => {\n                uni.navigateTo({\n                  url: '/pages/HXassistant/HXByHand',\n                })\n                barcode.close()\n                plus.navigator.setFullscreen(false)\n              },\n              false\n            )\n            backVew.addEventListener(\n              'click',\n              (e) => {\n                console.log('1111111')\n                // 返回按钮\n                uni.switchTab({\n                  url: '/pages/index/index',\n                  success: (res) => {},\n                  fail: () => {},\n                  complete: () => {},\n                })\n                barcode.close()\n                plus.navigator.setFullscreen(false)\n              },\n              false\n            )\n            var temp = this\n            scanBarVew.addEventListener(\n              'click',\n              (e) => {\n                //点亮手电筒\n                temp.flash = !temp.flash\n                if (temp.flash) {\n                  scanBarVew.draw([\n                    {\n                      tag: 'img',\n                      id: 'scanBar',\n                      src: 'static/2.0x/yellow-scanBar.png',\n                      position: {\n                        width: '28%',\n                        left: '36%',\n                        height: '30%',\n                      },\n                    },\n                    {\n                      tag: 'font',\n                      id: 'font',\n                      text: '轻触照亮',\n                      textStyles: {\n                        size: '10px',\n                        color: '#ffffff',\n                      },\n                      position: {\n                        width: '80%',\n                        left: '10%',\n                      },\n                    },\n                  ])\n                } else {\n                  scanBarVew.draw([\n                    {\n                      tag: 'img',\n                      id: 'scanBar',\n                      src: 'static/2.0x/scanBar.png',\n                      position: {\n                        width: '28%',\n                        left: '36%',\n                        height: '30%',\n                      },\n                    },\n                    {\n                      tag: 'font',\n                      id: 'font',\n                      text: '轻触照亮',\n                      textStyles: {\n                        size: '10px',\n                        color: '#ffffff',\n                      },\n                      position: {\n                        width: '80%',\n                        left: '10%',\n                      },\n                    },\n                  ])\n                }\n                if (barcode) {\n                  barcode.setFlash(temp.flash)\n                }\n              },\n              false\n            )\n          },\n        },\n        onBackPress(options) {\n          // #ifdef APP-PLUS\n          // 返回时退出全屏\n          barcode.close()\n          plus.navigator.setFullscreen(false)\n          // #endif\n          console.log(options)\n          if (options.from == 'backbutton') {\n            uni.switchTab({\n              url: '/pages/index/index',\n              success: (res) => {},\n              fail: () => {},\n              complete: () => {},\n            })\n          }\n          return true\n        },\n        onUnload() {\n          plus.navigator.setFullscreen(false)\n        },\n      }\n      ```\n\n      ```js\n      <style scoped>\n      .warpBC {\n        background-color: white;\n        min-height: 100vh;\n        min-width: 100vw;\n      }\n      </style>\n      ```\n\n      \n\n      ","slug":"使用uniapp调用摄像头","published":1,"updated":"2021-01-18T09:34:00.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl0uux6vt00147sufhy4yfg65","content":"<meta name=\"referrer\" content=\"no-referrer\"/>\n\n<h2 id=\"使用uniapp配合H5-调用摄像头进行核销\"><a href=\"#使用uniapp配合H5-调用摄像头进行核销\" class=\"headerlink\" title=\"使用uniapp配合H5+调用摄像头进行核销\"></a>使用uniapp配合H5+调用摄像头进行核销</h2><p>团购优惠券类型app，有完整的券码生成、保存、校验、核销系统，使用uni开发的app需要提供核销界面的定制开发</p>\n<span id=\"more\"></span>\n\n<blockquote>\n<p>需求：打开核销扫码页面，除了正常的摄像头、闪光灯和相册选项之外，还需要额外加上核销记录和手动核销文字和跳转功能</p>\n</blockquote>\n<h3 id=\"uni提供的摄像头核销接口\"><a href=\"#uni提供的摄像头核销接口\" class=\"headerlink\" title=\"uni提供的摄像头核销接口\"></a>uni提供的摄像头核销接口</h3><p>uni已经封装好了摄像头扫码的接口，即</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">uni.<span class=\"title function_\">scanCode</span>(<span class=\"variable constant_\">OBJECT</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 允许从相机和相册扫码</span></span><br><span class=\"line\">uni.<span class=\"title function_\">scanCode</span>(&#123;</span><br><span class=\"line\">    <span class=\"attr\">success</span>: <span class=\"keyword\">function</span> (<span class=\"params\">res</span>) &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;条码类型：&#x27;</span> + res.<span class=\"property\">scanType</span>);</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;条码内容：&#x27;</span> + res.<span class=\"property\">result</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 只允许通过相机扫码</span></span><br><span class=\"line\">uni.<span class=\"title function_\">scanCode</span>(&#123;</span><br><span class=\"line\">    <span class=\"attr\">onlyFromCamera</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    <span class=\"attr\">success</span>: <span class=\"keyword\">function</span> (<span class=\"params\">res</span>) &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;条码类型：&#x27;</span> + res.<span class=\"property\">scanType</span>);</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;条码内容：&#x27;</span> + res.<span class=\"property\">result</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 调起条码扫描</span></span><br><span class=\"line\">uni.<span class=\"title function_\">scanCode</span>(&#123;</span><br><span class=\"line\">    <span class=\"attr\">scanType</span>: [<span class=\"string\">&#x27;barCode&#x27;</span>],</span><br><span class=\"line\">    <span class=\"attr\">success</span>: <span class=\"keyword\">function</span> (<span class=\"params\">res</span>) &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;条码类型：&#x27;</span> + res.<span class=\"property\">scanType</span>);</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;条码内容：&#x27;</span> + res.<span class=\"property\">result</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>接口本身回调用摄像头，分别对应不同的样式和功能，但是不提供添加文件和跳转功能的配置项，需要寻找自定义的扫码功能</p>\n<h3 id=\"强大的H5-标准协议\"><a href=\"#强大的H5-标准协议\" class=\"headerlink\" title=\"强大的H5+标准协议\"></a>强大的H5+标准协议</h3><p>HTML5+可以实现绝大多数开发中需要的功能，宣传页中有提到过 HTML5+有超过40万+的api（doge），常用的如二维码、语音输入、摇一摇、摄像头、文件系统、微信分享等功能，</p>\n<ol>\n<li><p>环境说明</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">uni-app,vue,开发app（不考虑<span class=\"variable constant_\">H5</span>、小程序等兼容）</span><br></pre></td></tr></table></figure></li>\n<li><p>代码说明</p>\n<ol>\n<li><p>初始化</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">init方法：</span><br><span class=\"line\"><span class=\"keyword\">var</span> pages = <span class=\"title function_\">getCurrentPages</span>() <span class=\"comment\">//获取当前的页面</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> page = pages[pages.<span class=\"property\">length</span> - <span class=\"number\">1</span>] <span class=\"comment\">//获取当前的页面</span></span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"comment\">// #ifdef APP-PLUS</span></span><br><span class=\"line\">      plus.<span class=\"property\">navigator</span>.<span class=\"title function_\">setFullscreen</span>(<span class=\"literal\">true</span>) <span class=\"comment\">//全屏</span></span><br><span class=\"line\">      <span class=\"keyword\">var</span> currentWebview = page.$getAppWebview()</span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"title function_\">createBarcode</span>(currentWebview) <span class=\"comment\">//创建二维码窗口</span></span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"title function_\">createView</span>(currentWebview) <span class=\"comment\">//创建操作按钮及tips界面</span></span><br><span class=\"line\"><span class=\"comment\">// #endif</span></span><br></pre></td></tr></table></figure>\n\n<p>初始化的时候，首先获取当前页面，然后直接调用plus对象上的全屏方法设置全屏（plus对象即HTML5+提供的全局对象，当用uni开发app时，plus对象是可以默认直接调用的），创建二维码窗口，再创建操作按钮及tips界面</p>\n</li>\n<li><p>创建二维码</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">plus.<span class=\"property\">barcode</span>.<span class=\"property\">create</span></span><br></pre></td></tr></table></figure>\n\n<p>也是plus提供的标准api，可以创建一个自定义大小和颜色等的二维码窗口，配置项比较多，可以通过手册去查看配置项</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">barcode.<span class=\"title function_\">setFlash</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">flash</span>)</span><br><span class=\"line\">currentWebview.<span class=\"title function_\">append</span>(barcode)</span><br><span class=\"line\">barcode.<span class=\"title function_\">start</span>()</span><br></pre></td></tr></table></figure>\n\n<p>设置闪光灯、再将生成的二维码dom添加到当前页面上去、开始扫描二维码并作出动画等</p>\n</li>\n<li><p>创建按钮和文字并绑定事件</p>\n<p>第二步的时候，已经有扫码的界面的样式动画等功能了，但是我们需要定制相册的位置和icon、手电筒的样式和icon并需要添加两个对应的文字链接和跳转功能</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">createView</span>(<span class=\"params\">currentWebview</span>) &#123;</span><br><span class=\"line\">   <span class=\"keyword\">var</span> toPhotoAlbum = <span class=\"keyword\">new</span> plus.<span class=\"property\">nativeObj</span>.<span class=\"title class_\">View</span>(</span><br><span class=\"line\">        <span class=\"string\">&#x27;toPhotoAlbum&#x27;</span>,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">          <span class=\"attr\">top</span>: <span class=\"string\">&#x27;70%&#x27;</span>,</span><br><span class=\"line\">          <span class=\"attr\">left</span>: <span class=\"string\">&#x27;80%&#x27;</span>,</span><br><span class=\"line\">          <span class=\"attr\">height</span>: <span class=\"string\">&#x27;10%&#x27;</span>,</span><br><span class=\"line\">          <span class=\"attr\">width</span>: <span class=\"string\">&#x27;20%&#x27;</span>,</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        [</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            <span class=\"attr\">tag</span>: <span class=\"string\">&#x27;img&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">id</span>: <span class=\"string\">&#x27;scanBar&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">src</span>: <span class=\"string\">&#x27;static/2.0x/ic-picture@2x.png&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">position</span>: &#123;</span><br><span class=\"line\">              <span class=\"attr\">width</span>: <span class=\"string\">&#x27;40%&#x27;</span>,</span><br><span class=\"line\">              <span class=\"attr\">left</span>: <span class=\"string\">&#x27;30%&#x27;</span>,</span><br><span class=\"line\">              <span class=\"attr\">height</span>: <span class=\"string\">&#x27;36%&#x27;</span>,</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            <span class=\"attr\">tag</span>: <span class=\"string\">&#x27;font&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">id</span>: <span class=\"string\">&#x27;font&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">text</span>: <span class=\"string\">&#x27;相册&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">textStyles</span>: &#123;</span><br><span class=\"line\">              <span class=\"attr\">size</span>: <span class=\"string\">&#x27;16px&#x27;</span>,</span><br><span class=\"line\">              <span class=\"attr\">color</span>: <span class=\"string\">&#x27;#ffffff&#x27;</span>,</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            <span class=\"attr\">position</span>: &#123;</span><br><span class=\"line\">              <span class=\"attr\">width</span>: <span class=\"string\">&#x27;80%&#x27;</span>,</span><br><span class=\"line\">              <span class=\"attr\">left</span>: <span class=\"string\">&#x27;10%&#x27;</span>,</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">        ]</span><br><span class=\"line\">      )</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>以其中的一个相册功能举例，</p>\n<p>首先，生成一个dom对象</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">new</span> plus.<span class=\"property\">nativeObj</span>.<span class=\"property\">View</span></span><br></pre></td></tr></table></figure>\n\n<p>里面可以配置dom大小、图片、位置、字体等等</p>\n<p>然后添加触摸穿透事件的拦截</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">interceptTouchEvent</span>(<span class=\"literal\">true</span>)</span><br></pre></td></tr></table></figure>\n\n<p>1参考：<a href=\"https://www.dcloud.io/docs/api/zh_cn/nativeobj.html\">HTML5+中原生对象说明</a></p>\n<p>然后将dom添加到页面上去</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">currentWebview.<span class=\"title function_\">append</span>(toPhotoAlbum)</span><br></pre></td></tr></table></figure>\n\n<p>并在dom上绑定对应的事件</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">toPhotoAlbum.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;click&#x27;</span>, <span class=\"function\">(<span class=\"params\">e</span>) =&gt;</span> &#123;</span><br><span class=\"line\">       plus.<span class=\"property\">gallery</span>.<span class=\"title function_\">pick</span>(</span><br><span class=\"line\">         <span class=\"function\">(<span class=\"params\">path</span>) =&gt;</span> &#123;</span><br><span class=\"line\">           <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(path)</span><br><span class=\"line\">           plus.<span class=\"property\">barcode</span>.<span class=\"title function_\">scan</span>(</span><br><span class=\"line\">             path,</span><br><span class=\"line\">             <span class=\"function\">(<span class=\"params\">type, result</span>) =&gt;</span> &#123;</span><br><span class=\"line\">               <span class=\"comment\">// console.log(&#x27;本地相册的数据&#x27;, result)</span></span><br><span class=\"line\">               <span class=\"variable language_\">this</span>.<span class=\"title function_\">getCouponInfo</span>(result)</span><br><span class=\"line\">             &#125;,</span><br><span class=\"line\">             <span class=\"function\">(<span class=\"params\">e</span>) =&gt;</span> &#123;</span><br><span class=\"line\">               <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;Scan failed: &#x27;</span> + <span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(e))</span><br><span class=\"line\">             &#125;</span><br><span class=\"line\">           )</span><br><span class=\"line\">         &#125;,</span><br><span class=\"line\">         <span class=\"function\">(<span class=\"params\">e</span>) =&gt;</span> &#123;</span><br><span class=\"line\">           <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;取消选择图片&#x27;</span>)</span><br><span class=\"line\">         &#125;,</span><br><span class=\"line\">         &#123; <span class=\"attr\">filter</span>: <span class=\"string\">&#x27;image&#x27;</span> &#125;</span><br><span class=\"line\">       )</span><br><span class=\"line\">     &#125;)</span><br></pre></td></tr></table></figure>\n\n<p>至此，样式的功能已经梳理完毕，同理，可以添加手电筒功能、跳转功能等等。</p>\n</li>\n<li><p>扫码成功的回调</p>\n<p>当使用手机扫码后，需要根据二维码拿到对应扫码结果，即二维码代表的字符串</p>\n<p>创建二维码时候，绑定了一个事件onmarked，即扫码的回调事件</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">barcode.<span class=\"property\">onmarked</span> = <span class=\"variable language_\">this</span>.<span class=\"property\">onmarked</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 扫码成功回调</span></span><br><span class=\"line\">    <span class=\"title function_\">onmarked</span>(<span class=\"params\">type, result</span>) &#123;</span><br><span class=\"line\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(result)</span><br><span class=\"line\">    &#125;,</span><br></pre></td></tr></table></figure>\n\n<p>拿到对应的扫码结果后，自然可以做下一步的跳转核销等功能</p>\n</li>\n<li><p>完整代码如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">view</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;warpBC&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">  <span class=\"tag\">&lt;/<span class=\"name\">view</span>&gt;</span></span></span><br><span class=\"line\">&lt;/template&gt;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br><span class=\"line\">350</span><br><span class=\"line\">351</span><br><span class=\"line\">352</span><br><span class=\"line\">353</span><br><span class=\"line\">354</span><br><span class=\"line\">355</span><br><span class=\"line\">356</span><br><span class=\"line\">357</span><br><span class=\"line\">358</span><br><span class=\"line\">359</span><br><span class=\"line\">360</span><br><span class=\"line\">361</span><br><span class=\"line\">362</span><br><span class=\"line\">363</span><br><span class=\"line\">364</span><br><span class=\"line\">365</span><br><span class=\"line\">366</span><br><span class=\"line\">367</span><br><span class=\"line\">368</span><br><span class=\"line\">369</span><br><span class=\"line\">370</span><br><span class=\"line\">371</span><br><span class=\"line\">372</span><br><span class=\"line\">373</span><br><span class=\"line\">374</span><br><span class=\"line\">375</span><br><span class=\"line\">376</span><br><span class=\"line\">377</span><br><span class=\"line\">378</span><br><span class=\"line\">379</span><br><span class=\"line\">380</span><br><span class=\"line\">381</span><br><span class=\"line\">382</span><br><span class=\"line\">383</span><br><span class=\"line\">384</span><br><span class=\"line\">385</span><br><span class=\"line\">386</span><br><span class=\"line\">387</span><br><span class=\"line\">388</span><br><span class=\"line\">389</span><br><span class=\"line\">390</span><br><span class=\"line\">391</span><br><span class=\"line\">392</span><br><span class=\"line\">393</span><br><span class=\"line\">394</span><br><span class=\"line\">395</span><br><span class=\"line\">396</span><br><span class=\"line\">397</span><br><span class=\"line\">398</span><br><span class=\"line\">399</span><br><span class=\"line\">400</span><br><span class=\"line\">401</span><br><span class=\"line\">402</span><br><span class=\"line\">403</span><br><span class=\"line\">404</span><br><span class=\"line\">405</span><br><span class=\"line\">406</span><br><span class=\"line\">407</span><br><span class=\"line\">408</span><br><span class=\"line\">409</span><br><span class=\"line\">410</span><br><span class=\"line\">411</span><br><span class=\"line\">412</span><br><span class=\"line\">413</span><br><span class=\"line\">414</span><br><span class=\"line\">415</span><br><span class=\"line\">416</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> barcode = <span class=\"literal\">null</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">  <span class=\"title function_\">data</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">      <span class=\"attr\">name</span>: <span class=\"string\">&#x27;&#x27;</span>, <span class=\"comment\">//要在扫码界面自定义的内容</span></span><br><span class=\"line\">      <span class=\"attr\">flash</span>: <span class=\"literal\">false</span>, <span class=\"comment\">//是否打开摄像头</span></span><br><span class=\"line\">      <span class=\"attr\">type</span>: <span class=\"string\">&#x27;&#x27;</span>,</span><br><span class=\"line\">      <span class=\"attr\">options</span>: <span class=\"literal\">null</span>, <span class=\"comment\">//传过来的配置</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"title function_\">onLoad</span>(<span class=\"params\">d</span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;出世法&#x27;</span>)</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">options</span> = <span class=\"title class_\">JSON</span>.<span class=\"title function_\">parse</span>(<span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(d))</span><br><span class=\"line\">      ? <span class=\"title class_\">JSON</span>.<span class=\"title function_\">parse</span>(<span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(d))</span><br><span class=\"line\">      : &#123; <span class=\"attr\">type</span>: <span class=\"string\">&#x27;scan-listener&#x27;</span> &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (uni.<span class=\"title function_\">getStorageSync</span>(<span class=\"string\">&#x27;checkFirstHX&#x27;</span>)) &#123;</span><br><span class=\"line\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;已经初始化过了&#x27;</span>)</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"title function_\">init</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">options</span>)</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"title function_\">onShow</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;onshow出世法&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (uni.<span class=\"title function_\">getStorageSync</span>(<span class=\"string\">&#x27;checkFirstHX&#x27;</span>)) &#123;</span><br><span class=\"line\">      <span class=\"comment\">//   this.init(this.options)</span></span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;要通过onshow来执行&#x27;</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">methods</span>: &#123;</span><br><span class=\"line\">    <span class=\"title function_\">toOtherPage</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"property\">$u</span>.<span class=\"title function_\">toast</span>(<span class=\"string\">&#x27;1秒后重新跳转至扫码页面，请稍等&#x27;</span>)</span><br><span class=\"line\">      uni.<span class=\"title function_\">redirectTo</span>(&#123;</span><br><span class=\"line\">        <span class=\"attr\">url</span>: <span class=\"string\">&#x27;/pages/HXassistant/HXassistant&#x27;</span>,</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"title function_\">getCouponInfo</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"title function_\">init</span>(<span class=\"params\">d</span>) &#123;</span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"property\">type</span> = d.<span class=\"property\">type</span> ? d.<span class=\"property\">type</span> : <span class=\"string\">&#x27;scan-listener&#x27;</span></span><br><span class=\"line\">      <span class=\"keyword\">var</span> pages = <span class=\"title function_\">getCurrentPages</span>()</span><br><span class=\"line\">      <span class=\"keyword\">var</span> page = pages[pages.<span class=\"property\">length</span> - <span class=\"number\">1</span>]</span><br><span class=\"line\">      <span class=\"comment\">// #ifdef APP-PLUS</span></span><br><span class=\"line\">      plus.<span class=\"property\">navigator</span>.<span class=\"title function_\">setFullscreen</span>(<span class=\"literal\">true</span>) <span class=\"comment\">//全屏</span></span><br><span class=\"line\">      <span class=\"keyword\">var</span> currentWebview = page.$getAppWebview()</span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"title function_\">createBarcode</span>(currentWebview) <span class=\"comment\">//创建二维码窗口</span></span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"title function_\">createView</span>(currentWebview) <span class=\"comment\">//创建操作按钮及tips界面</span></span><br><span class=\"line\">      <span class=\"comment\">// #endif</span></span><br><span class=\"line\">      uni.<span class=\"title function_\">setStorageSync</span>(<span class=\"string\">&#x27;checkFirstHX&#x27;</span>, <span class=\"literal\">true</span>)</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"comment\">// 扫码成功回调</span></span><br><span class=\"line\">    <span class=\"title function_\">onmarked</span>(<span class=\"params\">type, result</span>) &#123;</span><br><span class=\"line\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(result)</span><br><span class=\"line\">      <span class=\"keyword\">var</span> text = <span class=\"string\">&#x27;未知: &#x27;</span></span><br><span class=\"line\">      <span class=\"keyword\">switch</span> (type) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> plus.<span class=\"property\">barcode</span>.<span class=\"property\">QR</span>:</span><br><span class=\"line\">          text = <span class=\"string\">&#x27;QR: &#x27;</span></span><br><span class=\"line\">          <span class=\"keyword\">break</span></span><br><span class=\"line\">        <span class=\"keyword\">case</span> plus.<span class=\"property\">barcode</span>.<span class=\"property\">EAN13</span>:</span><br><span class=\"line\">          text = <span class=\"string\">&#x27;EAN13: &#x27;</span></span><br><span class=\"line\">          <span class=\"keyword\">break</span></span><br><span class=\"line\">        <span class=\"keyword\">case</span> plus.<span class=\"property\">barcode</span>.<span class=\"property\">EAN8</span>:</span><br><span class=\"line\">          text = <span class=\"string\">&#x27;EAN8: &#x27;</span></span><br><span class=\"line\">          <span class=\"keyword\">break</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"title function_\">getCouponInfo</span>(result)</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"comment\">// 创建二维码窗口</span></span><br><span class=\"line\">    <span class=\"title function_\">createBarcode</span>(<span class=\"params\">currentWebview</span>) &#123;</span><br><span class=\"line\">      barcode = plus.<span class=\"property\">barcode</span>.<span class=\"title function_\">create</span>(<span class=\"string\">&#x27;barcode&#x27;</span>, [plus.<span class=\"property\">barcode</span>.<span class=\"property\">QR</span>], &#123;</span><br><span class=\"line\">        <span class=\"attr\">top</span>: <span class=\"string\">&#x27;0&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">left</span>: <span class=\"string\">&#x27;0&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">width</span>: <span class=\"string\">&#x27;100%&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">height</span>: <span class=\"string\">&#x27;100%&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">scanbarColor</span>: <span class=\"string\">&#x27;#1DA7FF&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">position</span>: <span class=\"string\">&#x27;static&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">frameColor</span>: <span class=\"string\">&#x27;#1DA7FF&#x27;</span>,</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">      barcode.<span class=\"property\">onmarked</span> = <span class=\"variable language_\">this</span>.<span class=\"property\">onmarked</span></span><br><span class=\"line\">      barcode.<span class=\"title function_\">setFlash</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">flash</span>)</span><br><span class=\"line\">      currentWebview.<span class=\"title function_\">append</span>(barcode)</span><br><span class=\"line\">      barcode.<span class=\"title function_\">start</span>()</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"comment\">// 创建操作按钮及tips</span></span><br><span class=\"line\">    <span class=\"title function_\">createView</span>(<span class=\"params\">currentWebview</span>) &#123;</span><br><span class=\"line\">      <span class=\"comment\">//相册</span></span><br><span class=\"line\">      <span class=\"keyword\">var</span> toPhotoAlbum = <span class=\"keyword\">new</span> plus.<span class=\"property\">nativeObj</span>.<span class=\"title class_\">View</span>(</span><br><span class=\"line\">        <span class=\"string\">&#x27;toPhotoAlbum&#x27;</span>,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">          <span class=\"attr\">top</span>: <span class=\"string\">&#x27;70%&#x27;</span>,</span><br><span class=\"line\">          <span class=\"attr\">left</span>: <span class=\"string\">&#x27;80%&#x27;</span>,</span><br><span class=\"line\">          <span class=\"attr\">height</span>: <span class=\"string\">&#x27;10%&#x27;</span>,</span><br><span class=\"line\">          <span class=\"attr\">width</span>: <span class=\"string\">&#x27;20%&#x27;</span>,</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        [</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            <span class=\"attr\">tag</span>: <span class=\"string\">&#x27;img&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">id</span>: <span class=\"string\">&#x27;scanBar&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">src</span>: <span class=\"string\">&#x27;static/2.0x/ic-picture@2x.png&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">position</span>: &#123;</span><br><span class=\"line\">              <span class=\"attr\">width</span>: <span class=\"string\">&#x27;40%&#x27;</span>,</span><br><span class=\"line\">              <span class=\"attr\">left</span>: <span class=\"string\">&#x27;30%&#x27;</span>,</span><br><span class=\"line\">              <span class=\"attr\">height</span>: <span class=\"string\">&#x27;36%&#x27;</span>,</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            <span class=\"attr\">tag</span>: <span class=\"string\">&#x27;font&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">id</span>: <span class=\"string\">&#x27;font&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">text</span>: <span class=\"string\">&#x27;相册&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">textStyles</span>: &#123;</span><br><span class=\"line\">              <span class=\"attr\">size</span>: <span class=\"string\">&#x27;16px&#x27;</span>,</span><br><span class=\"line\">              <span class=\"attr\">color</span>: <span class=\"string\">&#x27;#ffffff&#x27;</span>,</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            <span class=\"attr\">position</span>: &#123;</span><br><span class=\"line\">              <span class=\"attr\">width</span>: <span class=\"string\">&#x27;80%&#x27;</span>,</span><br><span class=\"line\">              <span class=\"attr\">left</span>: <span class=\"string\">&#x27;10%&#x27;</span>,</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">        ]</span><br><span class=\"line\">      )</span><br><span class=\"line\">      <span class=\"comment\">//创建下方的两个图标</span></span><br><span class=\"line\">      <span class=\"keyword\">var</span> toHXrecoder = <span class=\"keyword\">new</span> plus.<span class=\"property\">nativeObj</span>.<span class=\"title class_\">View</span>(</span><br><span class=\"line\">        <span class=\"string\">&#x27;toHXrecoder&#x27;</span>,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">          <span class=\"attr\">top</span>: <span class=\"string\">&#x27;90%&#x27;</span>,</span><br><span class=\"line\">          <span class=\"attr\">left</span>: <span class=\"string\">&#x27;30%&#x27;</span>,</span><br><span class=\"line\">          <span class=\"attr\">height</span>: <span class=\"string\">&#x27;10%&#x27;</span>,</span><br><span class=\"line\">          <span class=\"attr\">width</span>: <span class=\"string\">&#x27;30%&#x27;</span>,</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        [</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            <span class=\"attr\">tag</span>: <span class=\"string\">&#x27;font&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">id</span>: <span class=\"string\">&#x27;font&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">text</span>: <span class=\"string\">&#x27;核销记录&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">textStyles</span>: &#123;</span><br><span class=\"line\">              <span class=\"attr\">size</span>: <span class=\"string\">&#x27;16px&#x27;</span>,</span><br><span class=\"line\">              <span class=\"attr\">color</span>: <span class=\"string\">&#x27;#ffffff&#x27;</span>,</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            <span class=\"attr\">position</span>: &#123;</span><br><span class=\"line\">              <span class=\"attr\">width</span>: <span class=\"string\">&#x27;80%&#x27;</span>,</span><br><span class=\"line\">              <span class=\"attr\">left</span>: <span class=\"string\">&#x27;10%&#x27;</span>,</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">        ]</span><br><span class=\"line\">      )</span><br><span class=\"line\">      <span class=\"keyword\">var</span> toHXByHand = <span class=\"keyword\">new</span> plus.<span class=\"property\">nativeObj</span>.<span class=\"title class_\">View</span>(</span><br><span class=\"line\">        <span class=\"string\">&#x27;toHXByHand&#x27;</span>,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">          <span class=\"attr\">top</span>: <span class=\"string\">&#x27;90%&#x27;</span>,</span><br><span class=\"line\">          <span class=\"attr\">left</span>: <span class=\"string\">&#x27;0%&#x27;</span>,</span><br><span class=\"line\">          <span class=\"attr\">height</span>: <span class=\"string\">&#x27;10%&#x27;</span>,</span><br><span class=\"line\">          <span class=\"attr\">width</span>: <span class=\"string\">&#x27;30%&#x27;</span>,</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        [</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            <span class=\"attr\">tag</span>: <span class=\"string\">&#x27;font&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">id</span>: <span class=\"string\">&#x27;font&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">text</span>: <span class=\"string\">&#x27;输码核销&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">textStyles</span>: &#123;</span><br><span class=\"line\">              <span class=\"attr\">size</span>: <span class=\"string\">&#x27;16px&#x27;</span>,</span><br><span class=\"line\">              <span class=\"attr\">color</span>: <span class=\"string\">&#x27;#ffffff&#x27;</span>,</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            <span class=\"attr\">position</span>: &#123;</span><br><span class=\"line\">              <span class=\"attr\">width</span>: <span class=\"string\">&#x27;100%&#x27;</span>,</span><br><span class=\"line\">              <span class=\"attr\">left</span>: <span class=\"string\">&#x27;10%&#x27;</span>,</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">        ]</span><br><span class=\"line\">      )</span><br><span class=\"line\">      <span class=\"comment\">// 创建返回原生按钮</span></span><br><span class=\"line\">      <span class=\"keyword\">var</span> backVew = <span class=\"keyword\">new</span> plus.<span class=\"property\">nativeObj</span>.<span class=\"title class_\">View</span>(</span><br><span class=\"line\">        <span class=\"string\">&#x27;backVew&#x27;</span>,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">          <span class=\"attr\">top</span>: <span class=\"string\">&#x27;34px&#x27;</span>,</span><br><span class=\"line\">          <span class=\"attr\">left</span>: <span class=\"string\">&#x27;5px&#x27;</span>,</span><br><span class=\"line\">          <span class=\"attr\">height</span>: <span class=\"string\">&#x27;40px&#x27;</span>,</span><br><span class=\"line\">          <span class=\"attr\">width</span>: <span class=\"string\">&#x27;20%&#x27;</span>,</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        [</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            <span class=\"attr\">tag</span>: <span class=\"string\">&#x27;img&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">id</span>: <span class=\"string\">&#x27;backBar&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">src</span>: <span class=\"string\">&#x27;static/2.0x/backBar.png&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">position</span>: &#123;</span><br><span class=\"line\">              <span class=\"attr\">top</span>: <span class=\"string\">&#x27;2px&#x27;</span>,</span><br><span class=\"line\">              <span class=\"attr\">left</span>: <span class=\"string\">&#x27;10px&#x27;</span>,</span><br><span class=\"line\">              <span class=\"attr\">width</span>: <span class=\"string\">&#x27;35px&#x27;</span>,</span><br><span class=\"line\">              <span class=\"attr\">height</span>: <span class=\"string\">&#x27;35px&#x27;</span>,</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">        ]</span><br><span class=\"line\">      )</span><br><span class=\"line\">      <span class=\"comment\">// 创建打开手电筒的按钮</span></span><br><span class=\"line\">      <span class=\"keyword\">var</span> scanBarVew = <span class=\"keyword\">new</span> plus.<span class=\"property\">nativeObj</span>.<span class=\"title class_\">View</span>(</span><br><span class=\"line\">        <span class=\"string\">&#x27;scanBarVew&#x27;</span>,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">          <span class=\"attr\">top</span>: <span class=\"string\">&#x27;70%&#x27;</span>,</span><br><span class=\"line\">          <span class=\"attr\">left</span>: <span class=\"string\">&#x27;40%&#x27;</span>,</span><br><span class=\"line\">          <span class=\"attr\">height</span>: <span class=\"string\">&#x27;10%&#x27;</span>,</span><br><span class=\"line\">          <span class=\"attr\">width</span>: <span class=\"string\">&#x27;20%&#x27;</span>,</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        [</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            <span class=\"attr\">tag</span>: <span class=\"string\">&#x27;img&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">id</span>: <span class=\"string\">&#x27;scanBar&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">src</span>: <span class=\"string\">&#x27;static/2.0x/scanBar.png&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">position</span>: &#123;</span><br><span class=\"line\">              <span class=\"attr\">width</span>: <span class=\"string\">&#x27;28%&#x27;</span>,</span><br><span class=\"line\">              <span class=\"attr\">left</span>: <span class=\"string\">&#x27;36%&#x27;</span>,</span><br><span class=\"line\">              <span class=\"attr\">height</span>: <span class=\"string\">&#x27;30%&#x27;</span>,</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            <span class=\"attr\">tag</span>: <span class=\"string\">&#x27;font&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">id</span>: <span class=\"string\">&#x27;font&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">text</span>: <span class=\"string\">&#x27;轻触照亮&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">textStyles</span>: &#123;</span><br><span class=\"line\">              <span class=\"attr\">size</span>: <span class=\"string\">&#x27;16px&#x27;</span>,</span><br><span class=\"line\">              <span class=\"attr\">color</span>: <span class=\"string\">&#x27;#ffffff&#x27;</span>,</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            <span class=\"attr\">position</span>: &#123;</span><br><span class=\"line\">              <span class=\"attr\">width</span>: <span class=\"string\">&#x27;80%&#x27;</span>,</span><br><span class=\"line\">              <span class=\"attr\">left</span>: <span class=\"string\">&#x27;10%&#x27;</span>,</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">        ]</span><br><span class=\"line\">      )</span><br><span class=\"line\">      <span class=\"comment\">// 创建展示类内容组件</span></span><br><span class=\"line\">      <span class=\"keyword\">var</span> content = <span class=\"keyword\">new</span> plus.<span class=\"property\">nativeObj</span>.<span class=\"title class_\">View</span>(</span><br><span class=\"line\">        <span class=\"string\">&#x27;content&#x27;</span>,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">          <span class=\"attr\">top</span>: <span class=\"string\">&#x27;0px&#x27;</span>,</span><br><span class=\"line\">          <span class=\"attr\">left</span>: <span class=\"string\">&#x27;0px&#x27;</span>,</span><br><span class=\"line\">          <span class=\"attr\">height</span>: <span class=\"string\">&#x27;100%&#x27;</span>,</span><br><span class=\"line\">          <span class=\"attr\">width</span>: <span class=\"string\">&#x27;100%&#x27;</span>,</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        [</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            <span class=\"attr\">tag</span>: <span class=\"string\">&#x27;font&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">id</span>: <span class=\"string\">&#x27;scanTitle&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">text</span>: <span class=\"string\">&#x27;扫码&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">textStyles</span>: &#123;</span><br><span class=\"line\">              <span class=\"attr\">size</span>: <span class=\"string\">&#x27;20px&#x27;</span>,</span><br><span class=\"line\">              <span class=\"attr\">color</span>: <span class=\"string\">&#x27;#ffffff&#x27;</span>,</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            <span class=\"attr\">position</span>: &#123;</span><br><span class=\"line\">              <span class=\"attr\">top</span>: <span class=\"string\">&#x27;34px&#x27;</span>,</span><br><span class=\"line\">              <span class=\"attr\">left</span>: <span class=\"string\">&#x27;0px&#x27;</span>,</span><br><span class=\"line\">              <span class=\"attr\">width</span>: <span class=\"string\">&#x27;100%&#x27;</span>,</span><br><span class=\"line\">              <span class=\"attr\">height</span>: <span class=\"string\">&#x27;40px&#x27;</span>,</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">        ]</span><br><span class=\"line\">      )</span><br><span class=\"line\">      toPhotoAlbum.<span class=\"title function_\">interceptTouchEvent</span>(<span class=\"literal\">true</span>)</span><br><span class=\"line\">      toHXrecoder.<span class=\"title function_\">interceptTouchEvent</span>(<span class=\"literal\">true</span>)</span><br><span class=\"line\">      toHXByHand.<span class=\"title function_\">interceptTouchEvent</span>(<span class=\"literal\">true</span>)</span><br><span class=\"line\">      backVew.<span class=\"title function_\">interceptTouchEvent</span>(<span class=\"literal\">true</span>)</span><br><span class=\"line\">      scanBarVew.<span class=\"title function_\">interceptTouchEvent</span>(<span class=\"literal\">true</span>)</span><br><span class=\"line\">      currentWebview.<span class=\"title function_\">append</span>(content)</span><br><span class=\"line\">      currentWebview.<span class=\"title function_\">append</span>(scanBarVew)</span><br><span class=\"line\">      currentWebview.<span class=\"title function_\">append</span>(backVew)</span><br><span class=\"line\">      currentWebview.<span class=\"title function_\">append</span>(toHXrecoder)</span><br><span class=\"line\">      currentWebview.<span class=\"title function_\">append</span>(toHXByHand)</span><br><span class=\"line\">      currentWebview.<span class=\"title function_\">append</span>(toPhotoAlbum)</span><br><span class=\"line\">      toPhotoAlbum.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;click&#x27;</span>, <span class=\"function\">(<span class=\"params\">e</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        plus.<span class=\"property\">gallery</span>.<span class=\"title function_\">pick</span>(</span><br><span class=\"line\">          <span class=\"function\">(<span class=\"params\">path</span>) =&gt;</span> &#123;</span><br><span class=\"line\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(path)</span><br><span class=\"line\">            plus.<span class=\"property\">barcode</span>.<span class=\"title function_\">scan</span>(</span><br><span class=\"line\">              path,</span><br><span class=\"line\">              <span class=\"function\">(<span class=\"params\">type, result</span>) =&gt;</span> &#123;</span><br><span class=\"line\">                <span class=\"comment\">// console.log(&#x27;本地相册的数据&#x27;, result)</span></span><br><span class=\"line\">                <span class=\"variable language_\">this</span>.<span class=\"title function_\">getCouponInfo</span>(result)</span><br><span class=\"line\">              &#125;,</span><br><span class=\"line\">              <span class=\"function\">(<span class=\"params\">e</span>) =&gt;</span> &#123;</span><br><span class=\"line\">                <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;Scan failed: &#x27;</span> + <span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(e))</span><br><span class=\"line\">              &#125;</span><br><span class=\"line\">            )</span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          <span class=\"function\">(<span class=\"params\">e</span>) =&gt;</span> &#123;</span><br><span class=\"line\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;取消选择图片&#x27;</span>)</span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          &#123; <span class=\"attr\">filter</span>: <span class=\"string\">&#x27;image&#x27;</span> &#125;</span><br><span class=\"line\">        )</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">      toHXrecoder.<span class=\"title function_\">addEventListener</span>(</span><br><span class=\"line\">        <span class=\"string\">&#x27;click&#x27;</span>,</span><br><span class=\"line\">        <span class=\"function\">(<span class=\"params\">e</span>) =&gt;</span> &#123;</span><br><span class=\"line\">          <span class=\"keyword\">let</span> path = &#123;</span><br><span class=\"line\">            <span class=\"attr\">path</span>: <span class=\"string\">&#x27;HXrecoder&#x27;</span>,</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">          uni.<span class=\"title function_\">navigateTo</span>(&#123;</span><br><span class=\"line\">            <span class=\"attr\">url</span>: <span class=\"string\">&#x27;/pages/HXassistant/temPage&#x27;</span> + commonFun.<span class=\"title function_\">joint</span>(path),</span><br><span class=\"line\">          &#125;)</span><br><span class=\"line\">          barcode.<span class=\"title function_\">close</span>()</span><br><span class=\"line\">          plus.<span class=\"property\">navigator</span>.<span class=\"title function_\">setFullscreen</span>(<span class=\"literal\">false</span>)</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        <span class=\"literal\">false</span></span><br><span class=\"line\">      )</span><br><span class=\"line\">      toHXByHand.<span class=\"title function_\">addEventListener</span>(</span><br><span class=\"line\">        <span class=\"string\">&#x27;click&#x27;</span>,</span><br><span class=\"line\">        <span class=\"function\">(<span class=\"params\">e</span>) =&gt;</span> &#123;</span><br><span class=\"line\">          uni.<span class=\"title function_\">navigateTo</span>(&#123;</span><br><span class=\"line\">            <span class=\"attr\">url</span>: <span class=\"string\">&#x27;/pages/HXassistant/HXByHand&#x27;</span>,</span><br><span class=\"line\">          &#125;)</span><br><span class=\"line\">          barcode.<span class=\"title function_\">close</span>()</span><br><span class=\"line\">          plus.<span class=\"property\">navigator</span>.<span class=\"title function_\">setFullscreen</span>(<span class=\"literal\">false</span>)</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        <span class=\"literal\">false</span></span><br><span class=\"line\">      )</span><br><span class=\"line\">      backVew.<span class=\"title function_\">addEventListener</span>(</span><br><span class=\"line\">        <span class=\"string\">&#x27;click&#x27;</span>,</span><br><span class=\"line\">        <span class=\"function\">(<span class=\"params\">e</span>) =&gt;</span> &#123;</span><br><span class=\"line\">          <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;1111111&#x27;</span>)</span><br><span class=\"line\">          <span class=\"comment\">// 返回按钮</span></span><br><span class=\"line\">          uni.<span class=\"title function_\">switchTab</span>(&#123;</span><br><span class=\"line\">            <span class=\"attr\">url</span>: <span class=\"string\">&#x27;/pages/index/index&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">success</span>: <span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> &#123;&#125;,</span><br><span class=\"line\">            <span class=\"attr\">fail</span>: <span class=\"function\">() =&gt;</span> &#123;&#125;,</span><br><span class=\"line\">            <span class=\"attr\">complete</span>: <span class=\"function\">() =&gt;</span> &#123;&#125;,</span><br><span class=\"line\">          &#125;)</span><br><span class=\"line\">          barcode.<span class=\"title function_\">close</span>()</span><br><span class=\"line\">          plus.<span class=\"property\">navigator</span>.<span class=\"title function_\">setFullscreen</span>(<span class=\"literal\">false</span>)</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        <span class=\"literal\">false</span></span><br><span class=\"line\">      )</span><br><span class=\"line\">      <span class=\"keyword\">var</span> temp = <span class=\"variable language_\">this</span></span><br><span class=\"line\">      scanBarVew.<span class=\"title function_\">addEventListener</span>(</span><br><span class=\"line\">        <span class=\"string\">&#x27;click&#x27;</span>,</span><br><span class=\"line\">        <span class=\"function\">(<span class=\"params\">e</span>) =&gt;</span> &#123;</span><br><span class=\"line\">          <span class=\"comment\">//点亮手电筒</span></span><br><span class=\"line\">          temp.<span class=\"property\">flash</span> = !temp.<span class=\"property\">flash</span></span><br><span class=\"line\">          <span class=\"keyword\">if</span> (temp.<span class=\"property\">flash</span>) &#123;</span><br><span class=\"line\">            scanBarVew.<span class=\"title function_\">draw</span>([</span><br><span class=\"line\">              &#123;</span><br><span class=\"line\">                <span class=\"attr\">tag</span>: <span class=\"string\">&#x27;img&#x27;</span>,</span><br><span class=\"line\">                <span class=\"attr\">id</span>: <span class=\"string\">&#x27;scanBar&#x27;</span>,</span><br><span class=\"line\">                <span class=\"attr\">src</span>: <span class=\"string\">&#x27;static/2.0x/yellow-scanBar.png&#x27;</span>,</span><br><span class=\"line\">                <span class=\"attr\">position</span>: &#123;</span><br><span class=\"line\">                  <span class=\"attr\">width</span>: <span class=\"string\">&#x27;28%&#x27;</span>,</span><br><span class=\"line\">                  <span class=\"attr\">left</span>: <span class=\"string\">&#x27;36%&#x27;</span>,</span><br><span class=\"line\">                  <span class=\"attr\">height</span>: <span class=\"string\">&#x27;30%&#x27;</span>,</span><br><span class=\"line\">                &#125;,</span><br><span class=\"line\">              &#125;,</span><br><span class=\"line\">              &#123;</span><br><span class=\"line\">                <span class=\"attr\">tag</span>: <span class=\"string\">&#x27;font&#x27;</span>,</span><br><span class=\"line\">                <span class=\"attr\">id</span>: <span class=\"string\">&#x27;font&#x27;</span>,</span><br><span class=\"line\">                <span class=\"attr\">text</span>: <span class=\"string\">&#x27;轻触照亮&#x27;</span>,</span><br><span class=\"line\">                <span class=\"attr\">textStyles</span>: &#123;</span><br><span class=\"line\">                  <span class=\"attr\">size</span>: <span class=\"string\">&#x27;10px&#x27;</span>,</span><br><span class=\"line\">                  <span class=\"attr\">color</span>: <span class=\"string\">&#x27;#ffffff&#x27;</span>,</span><br><span class=\"line\">                &#125;,</span><br><span class=\"line\">                <span class=\"attr\">position</span>: &#123;</span><br><span class=\"line\">                  <span class=\"attr\">width</span>: <span class=\"string\">&#x27;80%&#x27;</span>,</span><br><span class=\"line\">                  <span class=\"attr\">left</span>: <span class=\"string\">&#x27;10%&#x27;</span>,</span><br><span class=\"line\">                &#125;,</span><br><span class=\"line\">              &#125;,</span><br><span class=\"line\">            ])</span><br><span class=\"line\">          &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            scanBarVew.<span class=\"title function_\">draw</span>([</span><br><span class=\"line\">              &#123;</span><br><span class=\"line\">                <span class=\"attr\">tag</span>: <span class=\"string\">&#x27;img&#x27;</span>,</span><br><span class=\"line\">                <span class=\"attr\">id</span>: <span class=\"string\">&#x27;scanBar&#x27;</span>,</span><br><span class=\"line\">                <span class=\"attr\">src</span>: <span class=\"string\">&#x27;static/2.0x/scanBar.png&#x27;</span>,</span><br><span class=\"line\">                <span class=\"attr\">position</span>: &#123;</span><br><span class=\"line\">                  <span class=\"attr\">width</span>: <span class=\"string\">&#x27;28%&#x27;</span>,</span><br><span class=\"line\">                  <span class=\"attr\">left</span>: <span class=\"string\">&#x27;36%&#x27;</span>,</span><br><span class=\"line\">                  <span class=\"attr\">height</span>: <span class=\"string\">&#x27;30%&#x27;</span>,</span><br><span class=\"line\">                &#125;,</span><br><span class=\"line\">              &#125;,</span><br><span class=\"line\">              &#123;</span><br><span class=\"line\">                <span class=\"attr\">tag</span>: <span class=\"string\">&#x27;font&#x27;</span>,</span><br><span class=\"line\">                <span class=\"attr\">id</span>: <span class=\"string\">&#x27;font&#x27;</span>,</span><br><span class=\"line\">                <span class=\"attr\">text</span>: <span class=\"string\">&#x27;轻触照亮&#x27;</span>,</span><br><span class=\"line\">                <span class=\"attr\">textStyles</span>: &#123;</span><br><span class=\"line\">                  <span class=\"attr\">size</span>: <span class=\"string\">&#x27;10px&#x27;</span>,</span><br><span class=\"line\">                  <span class=\"attr\">color</span>: <span class=\"string\">&#x27;#ffffff&#x27;</span>,</span><br><span class=\"line\">                &#125;,</span><br><span class=\"line\">                <span class=\"attr\">position</span>: &#123;</span><br><span class=\"line\">                  <span class=\"attr\">width</span>: <span class=\"string\">&#x27;80%&#x27;</span>,</span><br><span class=\"line\">                  <span class=\"attr\">left</span>: <span class=\"string\">&#x27;10%&#x27;</span>,</span><br><span class=\"line\">                &#125;,</span><br><span class=\"line\">              &#125;,</span><br><span class=\"line\">            ])</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">          <span class=\"keyword\">if</span> (barcode) &#123;</span><br><span class=\"line\">            barcode.<span class=\"title function_\">setFlash</span>(temp.<span class=\"property\">flash</span>)</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        <span class=\"literal\">false</span></span><br><span class=\"line\">      )</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"title function_\">onBackPress</span>(<span class=\"params\">options</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// #ifdef APP-PLUS</span></span><br><span class=\"line\">    <span class=\"comment\">// 返回时退出全屏</span></span><br><span class=\"line\">    barcode.<span class=\"title function_\">close</span>()</span><br><span class=\"line\">    plus.<span class=\"property\">navigator</span>.<span class=\"title function_\">setFullscreen</span>(<span class=\"literal\">false</span>)</span><br><span class=\"line\">    <span class=\"comment\">// #endif</span></span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(options)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (options.<span class=\"property\">from</span> == <span class=\"string\">&#x27;backbutton&#x27;</span>) &#123;</span><br><span class=\"line\">      uni.<span class=\"title function_\">switchTab</span>(&#123;</span><br><span class=\"line\">        <span class=\"attr\">url</span>: <span class=\"string\">&#x27;/pages/index/index&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">success</span>: <span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> &#123;&#125;,</span><br><span class=\"line\">        <span class=\"attr\">fail</span>: <span class=\"function\">() =&gt;</span> &#123;&#125;,</span><br><span class=\"line\">        <span class=\"attr\">complete</span>: <span class=\"function\">() =&gt;</span> &#123;&#125;,</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"title function_\">onUnload</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    plus.<span class=\"property\">navigator</span>.<span class=\"title function_\">setFullscreen</span>(<span class=\"literal\">false</span>)</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;style scoped&gt;</span><br><span class=\"line\">.<span class=\"property\">warpBC</span> &#123;</span><br><span class=\"line\">  background-<span class=\"attr\">color</span>: white;</span><br><span class=\"line\">  min-<span class=\"attr\">height</span>: 100vh;</span><br><span class=\"line\">  min-<span class=\"attr\">width</span>: 100vw;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/style&gt;</span><br></pre></td></tr></table></figure></li>\n</ol>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"<meta name=\"referrer\" content=\"no-referrer\"/>\n\n<h2 id=\"使用uniapp配合H5-调用摄像头进行核销\"><a href=\"#使用uniapp配合H5-调用摄像头进行核销\" class=\"headerlink\" title=\"使用uniapp配合H5+调用摄像头进行核销\"></a>使用uniapp配合H5+调用摄像头进行核销</h2><p>团购优惠券类型app，有完整的券码生成、保存、校验、核销系统，使用uni开发的app需要提供核销界面的定制开发</p>","more":"<blockquote>\n<p>需求：打开核销扫码页面，除了正常的摄像头、闪光灯和相册选项之外，还需要额外加上核销记录和手动核销文字和跳转功能</p>\n</blockquote>\n<h3 id=\"uni提供的摄像头核销接口\"><a href=\"#uni提供的摄像头核销接口\" class=\"headerlink\" title=\"uni提供的摄像头核销接口\"></a>uni提供的摄像头核销接口</h3><p>uni已经封装好了摄像头扫码的接口，即</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">uni.<span class=\"title function_\">scanCode</span>(<span class=\"variable constant_\">OBJECT</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 允许从相机和相册扫码</span></span><br><span class=\"line\">uni.<span class=\"title function_\">scanCode</span>(&#123;</span><br><span class=\"line\">    <span class=\"attr\">success</span>: <span class=\"keyword\">function</span> (<span class=\"params\">res</span>) &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;条码类型：&#x27;</span> + res.<span class=\"property\">scanType</span>);</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;条码内容：&#x27;</span> + res.<span class=\"property\">result</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 只允许通过相机扫码</span></span><br><span class=\"line\">uni.<span class=\"title function_\">scanCode</span>(&#123;</span><br><span class=\"line\">    <span class=\"attr\">onlyFromCamera</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    <span class=\"attr\">success</span>: <span class=\"keyword\">function</span> (<span class=\"params\">res</span>) &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;条码类型：&#x27;</span> + res.<span class=\"property\">scanType</span>);</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;条码内容：&#x27;</span> + res.<span class=\"property\">result</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 调起条码扫描</span></span><br><span class=\"line\">uni.<span class=\"title function_\">scanCode</span>(&#123;</span><br><span class=\"line\">    <span class=\"attr\">scanType</span>: [<span class=\"string\">&#x27;barCode&#x27;</span>],</span><br><span class=\"line\">    <span class=\"attr\">success</span>: <span class=\"keyword\">function</span> (<span class=\"params\">res</span>) &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;条码类型：&#x27;</span> + res.<span class=\"property\">scanType</span>);</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;条码内容：&#x27;</span> + res.<span class=\"property\">result</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>接口本身回调用摄像头，分别对应不同的样式和功能，但是不提供添加文件和跳转功能的配置项，需要寻找自定义的扫码功能</p>\n<h3 id=\"强大的H5-标准协议\"><a href=\"#强大的H5-标准协议\" class=\"headerlink\" title=\"强大的H5+标准协议\"></a>强大的H5+标准协议</h3><p>HTML5+可以实现绝大多数开发中需要的功能，宣传页中有提到过 HTML5+有超过40万+的api（doge），常用的如二维码、语音输入、摇一摇、摄像头、文件系统、微信分享等功能，</p>\n<ol>\n<li><p>环境说明</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">uni-app,vue,开发app（不考虑<span class=\"variable constant_\">H5</span>、小程序等兼容）</span><br></pre></td></tr></table></figure></li>\n<li><p>代码说明</p>\n<ol>\n<li><p>初始化</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">init方法：</span><br><span class=\"line\"><span class=\"keyword\">var</span> pages = <span class=\"title function_\">getCurrentPages</span>() <span class=\"comment\">//获取当前的页面</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> page = pages[pages.<span class=\"property\">length</span> - <span class=\"number\">1</span>] <span class=\"comment\">//获取当前的页面</span></span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"comment\">// #ifdef APP-PLUS</span></span><br><span class=\"line\">      plus.<span class=\"property\">navigator</span>.<span class=\"title function_\">setFullscreen</span>(<span class=\"literal\">true</span>) <span class=\"comment\">//全屏</span></span><br><span class=\"line\">      <span class=\"keyword\">var</span> currentWebview = page.$getAppWebview()</span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"title function_\">createBarcode</span>(currentWebview) <span class=\"comment\">//创建二维码窗口</span></span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"title function_\">createView</span>(currentWebview) <span class=\"comment\">//创建操作按钮及tips界面</span></span><br><span class=\"line\"><span class=\"comment\">// #endif</span></span><br></pre></td></tr></table></figure>\n\n<p>初始化的时候，首先获取当前页面，然后直接调用plus对象上的全屏方法设置全屏（plus对象即HTML5+提供的全局对象，当用uni开发app时，plus对象是可以默认直接调用的），创建二维码窗口，再创建操作按钮及tips界面</p>\n</li>\n<li><p>创建二维码</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">plus.<span class=\"property\">barcode</span>.<span class=\"property\">create</span></span><br></pre></td></tr></table></figure>\n\n<p>也是plus提供的标准api，可以创建一个自定义大小和颜色等的二维码窗口，配置项比较多，可以通过手册去查看配置项</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">barcode.<span class=\"title function_\">setFlash</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">flash</span>)</span><br><span class=\"line\">currentWebview.<span class=\"title function_\">append</span>(barcode)</span><br><span class=\"line\">barcode.<span class=\"title function_\">start</span>()</span><br></pre></td></tr></table></figure>\n\n<p>设置闪光灯、再将生成的二维码dom添加到当前页面上去、开始扫描二维码并作出动画等</p>\n</li>\n<li><p>创建按钮和文字并绑定事件</p>\n<p>第二步的时候，已经有扫码的界面的样式动画等功能了，但是我们需要定制相册的位置和icon、手电筒的样式和icon并需要添加两个对应的文字链接和跳转功能</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">createView</span>(<span class=\"params\">currentWebview</span>) &#123;</span><br><span class=\"line\">   <span class=\"keyword\">var</span> toPhotoAlbum = <span class=\"keyword\">new</span> plus.<span class=\"property\">nativeObj</span>.<span class=\"title class_\">View</span>(</span><br><span class=\"line\">        <span class=\"string\">&#x27;toPhotoAlbum&#x27;</span>,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">          <span class=\"attr\">top</span>: <span class=\"string\">&#x27;70%&#x27;</span>,</span><br><span class=\"line\">          <span class=\"attr\">left</span>: <span class=\"string\">&#x27;80%&#x27;</span>,</span><br><span class=\"line\">          <span class=\"attr\">height</span>: <span class=\"string\">&#x27;10%&#x27;</span>,</span><br><span class=\"line\">          <span class=\"attr\">width</span>: <span class=\"string\">&#x27;20%&#x27;</span>,</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        [</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            <span class=\"attr\">tag</span>: <span class=\"string\">&#x27;img&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">id</span>: <span class=\"string\">&#x27;scanBar&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">src</span>: <span class=\"string\">&#x27;static/2.0x/ic-picture@2x.png&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">position</span>: &#123;</span><br><span class=\"line\">              <span class=\"attr\">width</span>: <span class=\"string\">&#x27;40%&#x27;</span>,</span><br><span class=\"line\">              <span class=\"attr\">left</span>: <span class=\"string\">&#x27;30%&#x27;</span>,</span><br><span class=\"line\">              <span class=\"attr\">height</span>: <span class=\"string\">&#x27;36%&#x27;</span>,</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            <span class=\"attr\">tag</span>: <span class=\"string\">&#x27;font&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">id</span>: <span class=\"string\">&#x27;font&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">text</span>: <span class=\"string\">&#x27;相册&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">textStyles</span>: &#123;</span><br><span class=\"line\">              <span class=\"attr\">size</span>: <span class=\"string\">&#x27;16px&#x27;</span>,</span><br><span class=\"line\">              <span class=\"attr\">color</span>: <span class=\"string\">&#x27;#ffffff&#x27;</span>,</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            <span class=\"attr\">position</span>: &#123;</span><br><span class=\"line\">              <span class=\"attr\">width</span>: <span class=\"string\">&#x27;80%&#x27;</span>,</span><br><span class=\"line\">              <span class=\"attr\">left</span>: <span class=\"string\">&#x27;10%&#x27;</span>,</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">        ]</span><br><span class=\"line\">      )</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>以其中的一个相册功能举例，</p>\n<p>首先，生成一个dom对象</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">new</span> plus.<span class=\"property\">nativeObj</span>.<span class=\"property\">View</span></span><br></pre></td></tr></table></figure>\n\n<p>里面可以配置dom大小、图片、位置、字体等等</p>\n<p>然后添加触摸穿透事件的拦截</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">interceptTouchEvent</span>(<span class=\"literal\">true</span>)</span><br></pre></td></tr></table></figure>\n\n<p>1参考：<a href=\"https://www.dcloud.io/docs/api/zh_cn/nativeobj.html\">HTML5+中原生对象说明</a></p>\n<p>然后将dom添加到页面上去</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">currentWebview.<span class=\"title function_\">append</span>(toPhotoAlbum)</span><br></pre></td></tr></table></figure>\n\n<p>并在dom上绑定对应的事件</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">toPhotoAlbum.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;click&#x27;</span>, <span class=\"function\">(<span class=\"params\">e</span>) =&gt;</span> &#123;</span><br><span class=\"line\">       plus.<span class=\"property\">gallery</span>.<span class=\"title function_\">pick</span>(</span><br><span class=\"line\">         <span class=\"function\">(<span class=\"params\">path</span>) =&gt;</span> &#123;</span><br><span class=\"line\">           <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(path)</span><br><span class=\"line\">           plus.<span class=\"property\">barcode</span>.<span class=\"title function_\">scan</span>(</span><br><span class=\"line\">             path,</span><br><span class=\"line\">             <span class=\"function\">(<span class=\"params\">type, result</span>) =&gt;</span> &#123;</span><br><span class=\"line\">               <span class=\"comment\">// console.log(&#x27;本地相册的数据&#x27;, result)</span></span><br><span class=\"line\">               <span class=\"variable language_\">this</span>.<span class=\"title function_\">getCouponInfo</span>(result)</span><br><span class=\"line\">             &#125;,</span><br><span class=\"line\">             <span class=\"function\">(<span class=\"params\">e</span>) =&gt;</span> &#123;</span><br><span class=\"line\">               <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;Scan failed: &#x27;</span> + <span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(e))</span><br><span class=\"line\">             &#125;</span><br><span class=\"line\">           )</span><br><span class=\"line\">         &#125;,</span><br><span class=\"line\">         <span class=\"function\">(<span class=\"params\">e</span>) =&gt;</span> &#123;</span><br><span class=\"line\">           <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;取消选择图片&#x27;</span>)</span><br><span class=\"line\">         &#125;,</span><br><span class=\"line\">         &#123; <span class=\"attr\">filter</span>: <span class=\"string\">&#x27;image&#x27;</span> &#125;</span><br><span class=\"line\">       )</span><br><span class=\"line\">     &#125;)</span><br></pre></td></tr></table></figure>\n\n<p>至此，样式的功能已经梳理完毕，同理，可以添加手电筒功能、跳转功能等等。</p>\n</li>\n<li><p>扫码成功的回调</p>\n<p>当使用手机扫码后，需要根据二维码拿到对应扫码结果，即二维码代表的字符串</p>\n<p>创建二维码时候，绑定了一个事件onmarked，即扫码的回调事件</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">barcode.<span class=\"property\">onmarked</span> = <span class=\"variable language_\">this</span>.<span class=\"property\">onmarked</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 扫码成功回调</span></span><br><span class=\"line\">    <span class=\"title function_\">onmarked</span>(<span class=\"params\">type, result</span>) &#123;</span><br><span class=\"line\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(result)</span><br><span class=\"line\">    &#125;,</span><br></pre></td></tr></table></figure>\n\n<p>拿到对应的扫码结果后，自然可以做下一步的跳转核销等功能</p>\n</li>\n<li><p>完整代码如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">view</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;warpBC&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">  <span class=\"tag\">&lt;/<span class=\"name\">view</span>&gt;</span></span></span><br><span class=\"line\">&lt;/template&gt;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br><span class=\"line\">350</span><br><span class=\"line\">351</span><br><span class=\"line\">352</span><br><span class=\"line\">353</span><br><span class=\"line\">354</span><br><span class=\"line\">355</span><br><span class=\"line\">356</span><br><span class=\"line\">357</span><br><span class=\"line\">358</span><br><span class=\"line\">359</span><br><span class=\"line\">360</span><br><span class=\"line\">361</span><br><span class=\"line\">362</span><br><span class=\"line\">363</span><br><span class=\"line\">364</span><br><span class=\"line\">365</span><br><span class=\"line\">366</span><br><span class=\"line\">367</span><br><span class=\"line\">368</span><br><span class=\"line\">369</span><br><span class=\"line\">370</span><br><span class=\"line\">371</span><br><span class=\"line\">372</span><br><span class=\"line\">373</span><br><span class=\"line\">374</span><br><span class=\"line\">375</span><br><span class=\"line\">376</span><br><span class=\"line\">377</span><br><span class=\"line\">378</span><br><span class=\"line\">379</span><br><span class=\"line\">380</span><br><span class=\"line\">381</span><br><span class=\"line\">382</span><br><span class=\"line\">383</span><br><span class=\"line\">384</span><br><span class=\"line\">385</span><br><span class=\"line\">386</span><br><span class=\"line\">387</span><br><span class=\"line\">388</span><br><span class=\"line\">389</span><br><span class=\"line\">390</span><br><span class=\"line\">391</span><br><span class=\"line\">392</span><br><span class=\"line\">393</span><br><span class=\"line\">394</span><br><span class=\"line\">395</span><br><span class=\"line\">396</span><br><span class=\"line\">397</span><br><span class=\"line\">398</span><br><span class=\"line\">399</span><br><span class=\"line\">400</span><br><span class=\"line\">401</span><br><span class=\"line\">402</span><br><span class=\"line\">403</span><br><span class=\"line\">404</span><br><span class=\"line\">405</span><br><span class=\"line\">406</span><br><span class=\"line\">407</span><br><span class=\"line\">408</span><br><span class=\"line\">409</span><br><span class=\"line\">410</span><br><span class=\"line\">411</span><br><span class=\"line\">412</span><br><span class=\"line\">413</span><br><span class=\"line\">414</span><br><span class=\"line\">415</span><br><span class=\"line\">416</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> barcode = <span class=\"literal\">null</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">  <span class=\"title function_\">data</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">      <span class=\"attr\">name</span>: <span class=\"string\">&#x27;&#x27;</span>, <span class=\"comment\">//要在扫码界面自定义的内容</span></span><br><span class=\"line\">      <span class=\"attr\">flash</span>: <span class=\"literal\">false</span>, <span class=\"comment\">//是否打开摄像头</span></span><br><span class=\"line\">      <span class=\"attr\">type</span>: <span class=\"string\">&#x27;&#x27;</span>,</span><br><span class=\"line\">      <span class=\"attr\">options</span>: <span class=\"literal\">null</span>, <span class=\"comment\">//传过来的配置</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"title function_\">onLoad</span>(<span class=\"params\">d</span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;出世法&#x27;</span>)</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">options</span> = <span class=\"title class_\">JSON</span>.<span class=\"title function_\">parse</span>(<span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(d))</span><br><span class=\"line\">      ? <span class=\"title class_\">JSON</span>.<span class=\"title function_\">parse</span>(<span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(d))</span><br><span class=\"line\">      : &#123; <span class=\"attr\">type</span>: <span class=\"string\">&#x27;scan-listener&#x27;</span> &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (uni.<span class=\"title function_\">getStorageSync</span>(<span class=\"string\">&#x27;checkFirstHX&#x27;</span>)) &#123;</span><br><span class=\"line\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;已经初始化过了&#x27;</span>)</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"title function_\">init</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">options</span>)</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"title function_\">onShow</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;onshow出世法&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (uni.<span class=\"title function_\">getStorageSync</span>(<span class=\"string\">&#x27;checkFirstHX&#x27;</span>)) &#123;</span><br><span class=\"line\">      <span class=\"comment\">//   this.init(this.options)</span></span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;要通过onshow来执行&#x27;</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">methods</span>: &#123;</span><br><span class=\"line\">    <span class=\"title function_\">toOtherPage</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"property\">$u</span>.<span class=\"title function_\">toast</span>(<span class=\"string\">&#x27;1秒后重新跳转至扫码页面，请稍等&#x27;</span>)</span><br><span class=\"line\">      uni.<span class=\"title function_\">redirectTo</span>(&#123;</span><br><span class=\"line\">        <span class=\"attr\">url</span>: <span class=\"string\">&#x27;/pages/HXassistant/HXassistant&#x27;</span>,</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"title function_\">getCouponInfo</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"title function_\">init</span>(<span class=\"params\">d</span>) &#123;</span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"property\">type</span> = d.<span class=\"property\">type</span> ? d.<span class=\"property\">type</span> : <span class=\"string\">&#x27;scan-listener&#x27;</span></span><br><span class=\"line\">      <span class=\"keyword\">var</span> pages = <span class=\"title function_\">getCurrentPages</span>()</span><br><span class=\"line\">      <span class=\"keyword\">var</span> page = pages[pages.<span class=\"property\">length</span> - <span class=\"number\">1</span>]</span><br><span class=\"line\">      <span class=\"comment\">// #ifdef APP-PLUS</span></span><br><span class=\"line\">      plus.<span class=\"property\">navigator</span>.<span class=\"title function_\">setFullscreen</span>(<span class=\"literal\">true</span>) <span class=\"comment\">//全屏</span></span><br><span class=\"line\">      <span class=\"keyword\">var</span> currentWebview = page.$getAppWebview()</span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"title function_\">createBarcode</span>(currentWebview) <span class=\"comment\">//创建二维码窗口</span></span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"title function_\">createView</span>(currentWebview) <span class=\"comment\">//创建操作按钮及tips界面</span></span><br><span class=\"line\">      <span class=\"comment\">// #endif</span></span><br><span class=\"line\">      uni.<span class=\"title function_\">setStorageSync</span>(<span class=\"string\">&#x27;checkFirstHX&#x27;</span>, <span class=\"literal\">true</span>)</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"comment\">// 扫码成功回调</span></span><br><span class=\"line\">    <span class=\"title function_\">onmarked</span>(<span class=\"params\">type, result</span>) &#123;</span><br><span class=\"line\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(result)</span><br><span class=\"line\">      <span class=\"keyword\">var</span> text = <span class=\"string\">&#x27;未知: &#x27;</span></span><br><span class=\"line\">      <span class=\"keyword\">switch</span> (type) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> plus.<span class=\"property\">barcode</span>.<span class=\"property\">QR</span>:</span><br><span class=\"line\">          text = <span class=\"string\">&#x27;QR: &#x27;</span></span><br><span class=\"line\">          <span class=\"keyword\">break</span></span><br><span class=\"line\">        <span class=\"keyword\">case</span> plus.<span class=\"property\">barcode</span>.<span class=\"property\">EAN13</span>:</span><br><span class=\"line\">          text = <span class=\"string\">&#x27;EAN13: &#x27;</span></span><br><span class=\"line\">          <span class=\"keyword\">break</span></span><br><span class=\"line\">        <span class=\"keyword\">case</span> plus.<span class=\"property\">barcode</span>.<span class=\"property\">EAN8</span>:</span><br><span class=\"line\">          text = <span class=\"string\">&#x27;EAN8: &#x27;</span></span><br><span class=\"line\">          <span class=\"keyword\">break</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"title function_\">getCouponInfo</span>(result)</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"comment\">// 创建二维码窗口</span></span><br><span class=\"line\">    <span class=\"title function_\">createBarcode</span>(<span class=\"params\">currentWebview</span>) &#123;</span><br><span class=\"line\">      barcode = plus.<span class=\"property\">barcode</span>.<span class=\"title function_\">create</span>(<span class=\"string\">&#x27;barcode&#x27;</span>, [plus.<span class=\"property\">barcode</span>.<span class=\"property\">QR</span>], &#123;</span><br><span class=\"line\">        <span class=\"attr\">top</span>: <span class=\"string\">&#x27;0&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">left</span>: <span class=\"string\">&#x27;0&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">width</span>: <span class=\"string\">&#x27;100%&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">height</span>: <span class=\"string\">&#x27;100%&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">scanbarColor</span>: <span class=\"string\">&#x27;#1DA7FF&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">position</span>: <span class=\"string\">&#x27;static&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">frameColor</span>: <span class=\"string\">&#x27;#1DA7FF&#x27;</span>,</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">      barcode.<span class=\"property\">onmarked</span> = <span class=\"variable language_\">this</span>.<span class=\"property\">onmarked</span></span><br><span class=\"line\">      barcode.<span class=\"title function_\">setFlash</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">flash</span>)</span><br><span class=\"line\">      currentWebview.<span class=\"title function_\">append</span>(barcode)</span><br><span class=\"line\">      barcode.<span class=\"title function_\">start</span>()</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"comment\">// 创建操作按钮及tips</span></span><br><span class=\"line\">    <span class=\"title function_\">createView</span>(<span class=\"params\">currentWebview</span>) &#123;</span><br><span class=\"line\">      <span class=\"comment\">//相册</span></span><br><span class=\"line\">      <span class=\"keyword\">var</span> toPhotoAlbum = <span class=\"keyword\">new</span> plus.<span class=\"property\">nativeObj</span>.<span class=\"title class_\">View</span>(</span><br><span class=\"line\">        <span class=\"string\">&#x27;toPhotoAlbum&#x27;</span>,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">          <span class=\"attr\">top</span>: <span class=\"string\">&#x27;70%&#x27;</span>,</span><br><span class=\"line\">          <span class=\"attr\">left</span>: <span class=\"string\">&#x27;80%&#x27;</span>,</span><br><span class=\"line\">          <span class=\"attr\">height</span>: <span class=\"string\">&#x27;10%&#x27;</span>,</span><br><span class=\"line\">          <span class=\"attr\">width</span>: <span class=\"string\">&#x27;20%&#x27;</span>,</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        [</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            <span class=\"attr\">tag</span>: <span class=\"string\">&#x27;img&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">id</span>: <span class=\"string\">&#x27;scanBar&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">src</span>: <span class=\"string\">&#x27;static/2.0x/ic-picture@2x.png&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">position</span>: &#123;</span><br><span class=\"line\">              <span class=\"attr\">width</span>: <span class=\"string\">&#x27;40%&#x27;</span>,</span><br><span class=\"line\">              <span class=\"attr\">left</span>: <span class=\"string\">&#x27;30%&#x27;</span>,</span><br><span class=\"line\">              <span class=\"attr\">height</span>: <span class=\"string\">&#x27;36%&#x27;</span>,</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            <span class=\"attr\">tag</span>: <span class=\"string\">&#x27;font&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">id</span>: <span class=\"string\">&#x27;font&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">text</span>: <span class=\"string\">&#x27;相册&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">textStyles</span>: &#123;</span><br><span class=\"line\">              <span class=\"attr\">size</span>: <span class=\"string\">&#x27;16px&#x27;</span>,</span><br><span class=\"line\">              <span class=\"attr\">color</span>: <span class=\"string\">&#x27;#ffffff&#x27;</span>,</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            <span class=\"attr\">position</span>: &#123;</span><br><span class=\"line\">              <span class=\"attr\">width</span>: <span class=\"string\">&#x27;80%&#x27;</span>,</span><br><span class=\"line\">              <span class=\"attr\">left</span>: <span class=\"string\">&#x27;10%&#x27;</span>,</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">        ]</span><br><span class=\"line\">      )</span><br><span class=\"line\">      <span class=\"comment\">//创建下方的两个图标</span></span><br><span class=\"line\">      <span class=\"keyword\">var</span> toHXrecoder = <span class=\"keyword\">new</span> plus.<span class=\"property\">nativeObj</span>.<span class=\"title class_\">View</span>(</span><br><span class=\"line\">        <span class=\"string\">&#x27;toHXrecoder&#x27;</span>,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">          <span class=\"attr\">top</span>: <span class=\"string\">&#x27;90%&#x27;</span>,</span><br><span class=\"line\">          <span class=\"attr\">left</span>: <span class=\"string\">&#x27;30%&#x27;</span>,</span><br><span class=\"line\">          <span class=\"attr\">height</span>: <span class=\"string\">&#x27;10%&#x27;</span>,</span><br><span class=\"line\">          <span class=\"attr\">width</span>: <span class=\"string\">&#x27;30%&#x27;</span>,</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        [</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            <span class=\"attr\">tag</span>: <span class=\"string\">&#x27;font&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">id</span>: <span class=\"string\">&#x27;font&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">text</span>: <span class=\"string\">&#x27;核销记录&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">textStyles</span>: &#123;</span><br><span class=\"line\">              <span class=\"attr\">size</span>: <span class=\"string\">&#x27;16px&#x27;</span>,</span><br><span class=\"line\">              <span class=\"attr\">color</span>: <span class=\"string\">&#x27;#ffffff&#x27;</span>,</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            <span class=\"attr\">position</span>: &#123;</span><br><span class=\"line\">              <span class=\"attr\">width</span>: <span class=\"string\">&#x27;80%&#x27;</span>,</span><br><span class=\"line\">              <span class=\"attr\">left</span>: <span class=\"string\">&#x27;10%&#x27;</span>,</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">        ]</span><br><span class=\"line\">      )</span><br><span class=\"line\">      <span class=\"keyword\">var</span> toHXByHand = <span class=\"keyword\">new</span> plus.<span class=\"property\">nativeObj</span>.<span class=\"title class_\">View</span>(</span><br><span class=\"line\">        <span class=\"string\">&#x27;toHXByHand&#x27;</span>,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">          <span class=\"attr\">top</span>: <span class=\"string\">&#x27;90%&#x27;</span>,</span><br><span class=\"line\">          <span class=\"attr\">left</span>: <span class=\"string\">&#x27;0%&#x27;</span>,</span><br><span class=\"line\">          <span class=\"attr\">height</span>: <span class=\"string\">&#x27;10%&#x27;</span>,</span><br><span class=\"line\">          <span class=\"attr\">width</span>: <span class=\"string\">&#x27;30%&#x27;</span>,</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        [</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            <span class=\"attr\">tag</span>: <span class=\"string\">&#x27;font&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">id</span>: <span class=\"string\">&#x27;font&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">text</span>: <span class=\"string\">&#x27;输码核销&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">textStyles</span>: &#123;</span><br><span class=\"line\">              <span class=\"attr\">size</span>: <span class=\"string\">&#x27;16px&#x27;</span>,</span><br><span class=\"line\">              <span class=\"attr\">color</span>: <span class=\"string\">&#x27;#ffffff&#x27;</span>,</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            <span class=\"attr\">position</span>: &#123;</span><br><span class=\"line\">              <span class=\"attr\">width</span>: <span class=\"string\">&#x27;100%&#x27;</span>,</span><br><span class=\"line\">              <span class=\"attr\">left</span>: <span class=\"string\">&#x27;10%&#x27;</span>,</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">        ]</span><br><span class=\"line\">      )</span><br><span class=\"line\">      <span class=\"comment\">// 创建返回原生按钮</span></span><br><span class=\"line\">      <span class=\"keyword\">var</span> backVew = <span class=\"keyword\">new</span> plus.<span class=\"property\">nativeObj</span>.<span class=\"title class_\">View</span>(</span><br><span class=\"line\">        <span class=\"string\">&#x27;backVew&#x27;</span>,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">          <span class=\"attr\">top</span>: <span class=\"string\">&#x27;34px&#x27;</span>,</span><br><span class=\"line\">          <span class=\"attr\">left</span>: <span class=\"string\">&#x27;5px&#x27;</span>,</span><br><span class=\"line\">          <span class=\"attr\">height</span>: <span class=\"string\">&#x27;40px&#x27;</span>,</span><br><span class=\"line\">          <span class=\"attr\">width</span>: <span class=\"string\">&#x27;20%&#x27;</span>,</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        [</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            <span class=\"attr\">tag</span>: <span class=\"string\">&#x27;img&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">id</span>: <span class=\"string\">&#x27;backBar&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">src</span>: <span class=\"string\">&#x27;static/2.0x/backBar.png&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">position</span>: &#123;</span><br><span class=\"line\">              <span class=\"attr\">top</span>: <span class=\"string\">&#x27;2px&#x27;</span>,</span><br><span class=\"line\">              <span class=\"attr\">left</span>: <span class=\"string\">&#x27;10px&#x27;</span>,</span><br><span class=\"line\">              <span class=\"attr\">width</span>: <span class=\"string\">&#x27;35px&#x27;</span>,</span><br><span class=\"line\">              <span class=\"attr\">height</span>: <span class=\"string\">&#x27;35px&#x27;</span>,</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">        ]</span><br><span class=\"line\">      )</span><br><span class=\"line\">      <span class=\"comment\">// 创建打开手电筒的按钮</span></span><br><span class=\"line\">      <span class=\"keyword\">var</span> scanBarVew = <span class=\"keyword\">new</span> plus.<span class=\"property\">nativeObj</span>.<span class=\"title class_\">View</span>(</span><br><span class=\"line\">        <span class=\"string\">&#x27;scanBarVew&#x27;</span>,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">          <span class=\"attr\">top</span>: <span class=\"string\">&#x27;70%&#x27;</span>,</span><br><span class=\"line\">          <span class=\"attr\">left</span>: <span class=\"string\">&#x27;40%&#x27;</span>,</span><br><span class=\"line\">          <span class=\"attr\">height</span>: <span class=\"string\">&#x27;10%&#x27;</span>,</span><br><span class=\"line\">          <span class=\"attr\">width</span>: <span class=\"string\">&#x27;20%&#x27;</span>,</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        [</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            <span class=\"attr\">tag</span>: <span class=\"string\">&#x27;img&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">id</span>: <span class=\"string\">&#x27;scanBar&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">src</span>: <span class=\"string\">&#x27;static/2.0x/scanBar.png&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">position</span>: &#123;</span><br><span class=\"line\">              <span class=\"attr\">width</span>: <span class=\"string\">&#x27;28%&#x27;</span>,</span><br><span class=\"line\">              <span class=\"attr\">left</span>: <span class=\"string\">&#x27;36%&#x27;</span>,</span><br><span class=\"line\">              <span class=\"attr\">height</span>: <span class=\"string\">&#x27;30%&#x27;</span>,</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            <span class=\"attr\">tag</span>: <span class=\"string\">&#x27;font&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">id</span>: <span class=\"string\">&#x27;font&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">text</span>: <span class=\"string\">&#x27;轻触照亮&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">textStyles</span>: &#123;</span><br><span class=\"line\">              <span class=\"attr\">size</span>: <span class=\"string\">&#x27;16px&#x27;</span>,</span><br><span class=\"line\">              <span class=\"attr\">color</span>: <span class=\"string\">&#x27;#ffffff&#x27;</span>,</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            <span class=\"attr\">position</span>: &#123;</span><br><span class=\"line\">              <span class=\"attr\">width</span>: <span class=\"string\">&#x27;80%&#x27;</span>,</span><br><span class=\"line\">              <span class=\"attr\">left</span>: <span class=\"string\">&#x27;10%&#x27;</span>,</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">        ]</span><br><span class=\"line\">      )</span><br><span class=\"line\">      <span class=\"comment\">// 创建展示类内容组件</span></span><br><span class=\"line\">      <span class=\"keyword\">var</span> content = <span class=\"keyword\">new</span> plus.<span class=\"property\">nativeObj</span>.<span class=\"title class_\">View</span>(</span><br><span class=\"line\">        <span class=\"string\">&#x27;content&#x27;</span>,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">          <span class=\"attr\">top</span>: <span class=\"string\">&#x27;0px&#x27;</span>,</span><br><span class=\"line\">          <span class=\"attr\">left</span>: <span class=\"string\">&#x27;0px&#x27;</span>,</span><br><span class=\"line\">          <span class=\"attr\">height</span>: <span class=\"string\">&#x27;100%&#x27;</span>,</span><br><span class=\"line\">          <span class=\"attr\">width</span>: <span class=\"string\">&#x27;100%&#x27;</span>,</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        [</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            <span class=\"attr\">tag</span>: <span class=\"string\">&#x27;font&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">id</span>: <span class=\"string\">&#x27;scanTitle&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">text</span>: <span class=\"string\">&#x27;扫码&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">textStyles</span>: &#123;</span><br><span class=\"line\">              <span class=\"attr\">size</span>: <span class=\"string\">&#x27;20px&#x27;</span>,</span><br><span class=\"line\">              <span class=\"attr\">color</span>: <span class=\"string\">&#x27;#ffffff&#x27;</span>,</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            <span class=\"attr\">position</span>: &#123;</span><br><span class=\"line\">              <span class=\"attr\">top</span>: <span class=\"string\">&#x27;34px&#x27;</span>,</span><br><span class=\"line\">              <span class=\"attr\">left</span>: <span class=\"string\">&#x27;0px&#x27;</span>,</span><br><span class=\"line\">              <span class=\"attr\">width</span>: <span class=\"string\">&#x27;100%&#x27;</span>,</span><br><span class=\"line\">              <span class=\"attr\">height</span>: <span class=\"string\">&#x27;40px&#x27;</span>,</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">        ]</span><br><span class=\"line\">      )</span><br><span class=\"line\">      toPhotoAlbum.<span class=\"title function_\">interceptTouchEvent</span>(<span class=\"literal\">true</span>)</span><br><span class=\"line\">      toHXrecoder.<span class=\"title function_\">interceptTouchEvent</span>(<span class=\"literal\">true</span>)</span><br><span class=\"line\">      toHXByHand.<span class=\"title function_\">interceptTouchEvent</span>(<span class=\"literal\">true</span>)</span><br><span class=\"line\">      backVew.<span class=\"title function_\">interceptTouchEvent</span>(<span class=\"literal\">true</span>)</span><br><span class=\"line\">      scanBarVew.<span class=\"title function_\">interceptTouchEvent</span>(<span class=\"literal\">true</span>)</span><br><span class=\"line\">      currentWebview.<span class=\"title function_\">append</span>(content)</span><br><span class=\"line\">      currentWebview.<span class=\"title function_\">append</span>(scanBarVew)</span><br><span class=\"line\">      currentWebview.<span class=\"title function_\">append</span>(backVew)</span><br><span class=\"line\">      currentWebview.<span class=\"title function_\">append</span>(toHXrecoder)</span><br><span class=\"line\">      currentWebview.<span class=\"title function_\">append</span>(toHXByHand)</span><br><span class=\"line\">      currentWebview.<span class=\"title function_\">append</span>(toPhotoAlbum)</span><br><span class=\"line\">      toPhotoAlbum.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;click&#x27;</span>, <span class=\"function\">(<span class=\"params\">e</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        plus.<span class=\"property\">gallery</span>.<span class=\"title function_\">pick</span>(</span><br><span class=\"line\">          <span class=\"function\">(<span class=\"params\">path</span>) =&gt;</span> &#123;</span><br><span class=\"line\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(path)</span><br><span class=\"line\">            plus.<span class=\"property\">barcode</span>.<span class=\"title function_\">scan</span>(</span><br><span class=\"line\">              path,</span><br><span class=\"line\">              <span class=\"function\">(<span class=\"params\">type, result</span>) =&gt;</span> &#123;</span><br><span class=\"line\">                <span class=\"comment\">// console.log(&#x27;本地相册的数据&#x27;, result)</span></span><br><span class=\"line\">                <span class=\"variable language_\">this</span>.<span class=\"title function_\">getCouponInfo</span>(result)</span><br><span class=\"line\">              &#125;,</span><br><span class=\"line\">              <span class=\"function\">(<span class=\"params\">e</span>) =&gt;</span> &#123;</span><br><span class=\"line\">                <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;Scan failed: &#x27;</span> + <span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(e))</span><br><span class=\"line\">              &#125;</span><br><span class=\"line\">            )</span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          <span class=\"function\">(<span class=\"params\">e</span>) =&gt;</span> &#123;</span><br><span class=\"line\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;取消选择图片&#x27;</span>)</span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          &#123; <span class=\"attr\">filter</span>: <span class=\"string\">&#x27;image&#x27;</span> &#125;</span><br><span class=\"line\">        )</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">      toHXrecoder.<span class=\"title function_\">addEventListener</span>(</span><br><span class=\"line\">        <span class=\"string\">&#x27;click&#x27;</span>,</span><br><span class=\"line\">        <span class=\"function\">(<span class=\"params\">e</span>) =&gt;</span> &#123;</span><br><span class=\"line\">          <span class=\"keyword\">let</span> path = &#123;</span><br><span class=\"line\">            <span class=\"attr\">path</span>: <span class=\"string\">&#x27;HXrecoder&#x27;</span>,</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">          uni.<span class=\"title function_\">navigateTo</span>(&#123;</span><br><span class=\"line\">            <span class=\"attr\">url</span>: <span class=\"string\">&#x27;/pages/HXassistant/temPage&#x27;</span> + commonFun.<span class=\"title function_\">joint</span>(path),</span><br><span class=\"line\">          &#125;)</span><br><span class=\"line\">          barcode.<span class=\"title function_\">close</span>()</span><br><span class=\"line\">          plus.<span class=\"property\">navigator</span>.<span class=\"title function_\">setFullscreen</span>(<span class=\"literal\">false</span>)</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        <span class=\"literal\">false</span></span><br><span class=\"line\">      )</span><br><span class=\"line\">      toHXByHand.<span class=\"title function_\">addEventListener</span>(</span><br><span class=\"line\">        <span class=\"string\">&#x27;click&#x27;</span>,</span><br><span class=\"line\">        <span class=\"function\">(<span class=\"params\">e</span>) =&gt;</span> &#123;</span><br><span class=\"line\">          uni.<span class=\"title function_\">navigateTo</span>(&#123;</span><br><span class=\"line\">            <span class=\"attr\">url</span>: <span class=\"string\">&#x27;/pages/HXassistant/HXByHand&#x27;</span>,</span><br><span class=\"line\">          &#125;)</span><br><span class=\"line\">          barcode.<span class=\"title function_\">close</span>()</span><br><span class=\"line\">          plus.<span class=\"property\">navigator</span>.<span class=\"title function_\">setFullscreen</span>(<span class=\"literal\">false</span>)</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        <span class=\"literal\">false</span></span><br><span class=\"line\">      )</span><br><span class=\"line\">      backVew.<span class=\"title function_\">addEventListener</span>(</span><br><span class=\"line\">        <span class=\"string\">&#x27;click&#x27;</span>,</span><br><span class=\"line\">        <span class=\"function\">(<span class=\"params\">e</span>) =&gt;</span> &#123;</span><br><span class=\"line\">          <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;1111111&#x27;</span>)</span><br><span class=\"line\">          <span class=\"comment\">// 返回按钮</span></span><br><span class=\"line\">          uni.<span class=\"title function_\">switchTab</span>(&#123;</span><br><span class=\"line\">            <span class=\"attr\">url</span>: <span class=\"string\">&#x27;/pages/index/index&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">success</span>: <span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> &#123;&#125;,</span><br><span class=\"line\">            <span class=\"attr\">fail</span>: <span class=\"function\">() =&gt;</span> &#123;&#125;,</span><br><span class=\"line\">            <span class=\"attr\">complete</span>: <span class=\"function\">() =&gt;</span> &#123;&#125;,</span><br><span class=\"line\">          &#125;)</span><br><span class=\"line\">          barcode.<span class=\"title function_\">close</span>()</span><br><span class=\"line\">          plus.<span class=\"property\">navigator</span>.<span class=\"title function_\">setFullscreen</span>(<span class=\"literal\">false</span>)</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        <span class=\"literal\">false</span></span><br><span class=\"line\">      )</span><br><span class=\"line\">      <span class=\"keyword\">var</span> temp = <span class=\"variable language_\">this</span></span><br><span class=\"line\">      scanBarVew.<span class=\"title function_\">addEventListener</span>(</span><br><span class=\"line\">        <span class=\"string\">&#x27;click&#x27;</span>,</span><br><span class=\"line\">        <span class=\"function\">(<span class=\"params\">e</span>) =&gt;</span> &#123;</span><br><span class=\"line\">          <span class=\"comment\">//点亮手电筒</span></span><br><span class=\"line\">          temp.<span class=\"property\">flash</span> = !temp.<span class=\"property\">flash</span></span><br><span class=\"line\">          <span class=\"keyword\">if</span> (temp.<span class=\"property\">flash</span>) &#123;</span><br><span class=\"line\">            scanBarVew.<span class=\"title function_\">draw</span>([</span><br><span class=\"line\">              &#123;</span><br><span class=\"line\">                <span class=\"attr\">tag</span>: <span class=\"string\">&#x27;img&#x27;</span>,</span><br><span class=\"line\">                <span class=\"attr\">id</span>: <span class=\"string\">&#x27;scanBar&#x27;</span>,</span><br><span class=\"line\">                <span class=\"attr\">src</span>: <span class=\"string\">&#x27;static/2.0x/yellow-scanBar.png&#x27;</span>,</span><br><span class=\"line\">                <span class=\"attr\">position</span>: &#123;</span><br><span class=\"line\">                  <span class=\"attr\">width</span>: <span class=\"string\">&#x27;28%&#x27;</span>,</span><br><span class=\"line\">                  <span class=\"attr\">left</span>: <span class=\"string\">&#x27;36%&#x27;</span>,</span><br><span class=\"line\">                  <span class=\"attr\">height</span>: <span class=\"string\">&#x27;30%&#x27;</span>,</span><br><span class=\"line\">                &#125;,</span><br><span class=\"line\">              &#125;,</span><br><span class=\"line\">              &#123;</span><br><span class=\"line\">                <span class=\"attr\">tag</span>: <span class=\"string\">&#x27;font&#x27;</span>,</span><br><span class=\"line\">                <span class=\"attr\">id</span>: <span class=\"string\">&#x27;font&#x27;</span>,</span><br><span class=\"line\">                <span class=\"attr\">text</span>: <span class=\"string\">&#x27;轻触照亮&#x27;</span>,</span><br><span class=\"line\">                <span class=\"attr\">textStyles</span>: &#123;</span><br><span class=\"line\">                  <span class=\"attr\">size</span>: <span class=\"string\">&#x27;10px&#x27;</span>,</span><br><span class=\"line\">                  <span class=\"attr\">color</span>: <span class=\"string\">&#x27;#ffffff&#x27;</span>,</span><br><span class=\"line\">                &#125;,</span><br><span class=\"line\">                <span class=\"attr\">position</span>: &#123;</span><br><span class=\"line\">                  <span class=\"attr\">width</span>: <span class=\"string\">&#x27;80%&#x27;</span>,</span><br><span class=\"line\">                  <span class=\"attr\">left</span>: <span class=\"string\">&#x27;10%&#x27;</span>,</span><br><span class=\"line\">                &#125;,</span><br><span class=\"line\">              &#125;,</span><br><span class=\"line\">            ])</span><br><span class=\"line\">          &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            scanBarVew.<span class=\"title function_\">draw</span>([</span><br><span class=\"line\">              &#123;</span><br><span class=\"line\">                <span class=\"attr\">tag</span>: <span class=\"string\">&#x27;img&#x27;</span>,</span><br><span class=\"line\">                <span class=\"attr\">id</span>: <span class=\"string\">&#x27;scanBar&#x27;</span>,</span><br><span class=\"line\">                <span class=\"attr\">src</span>: <span class=\"string\">&#x27;static/2.0x/scanBar.png&#x27;</span>,</span><br><span class=\"line\">                <span class=\"attr\">position</span>: &#123;</span><br><span class=\"line\">                  <span class=\"attr\">width</span>: <span class=\"string\">&#x27;28%&#x27;</span>,</span><br><span class=\"line\">                  <span class=\"attr\">left</span>: <span class=\"string\">&#x27;36%&#x27;</span>,</span><br><span class=\"line\">                  <span class=\"attr\">height</span>: <span class=\"string\">&#x27;30%&#x27;</span>,</span><br><span class=\"line\">                &#125;,</span><br><span class=\"line\">              &#125;,</span><br><span class=\"line\">              &#123;</span><br><span class=\"line\">                <span class=\"attr\">tag</span>: <span class=\"string\">&#x27;font&#x27;</span>,</span><br><span class=\"line\">                <span class=\"attr\">id</span>: <span class=\"string\">&#x27;font&#x27;</span>,</span><br><span class=\"line\">                <span class=\"attr\">text</span>: <span class=\"string\">&#x27;轻触照亮&#x27;</span>,</span><br><span class=\"line\">                <span class=\"attr\">textStyles</span>: &#123;</span><br><span class=\"line\">                  <span class=\"attr\">size</span>: <span class=\"string\">&#x27;10px&#x27;</span>,</span><br><span class=\"line\">                  <span class=\"attr\">color</span>: <span class=\"string\">&#x27;#ffffff&#x27;</span>,</span><br><span class=\"line\">                &#125;,</span><br><span class=\"line\">                <span class=\"attr\">position</span>: &#123;</span><br><span class=\"line\">                  <span class=\"attr\">width</span>: <span class=\"string\">&#x27;80%&#x27;</span>,</span><br><span class=\"line\">                  <span class=\"attr\">left</span>: <span class=\"string\">&#x27;10%&#x27;</span>,</span><br><span class=\"line\">                &#125;,</span><br><span class=\"line\">              &#125;,</span><br><span class=\"line\">            ])</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">          <span class=\"keyword\">if</span> (barcode) &#123;</span><br><span class=\"line\">            barcode.<span class=\"title function_\">setFlash</span>(temp.<span class=\"property\">flash</span>)</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        <span class=\"literal\">false</span></span><br><span class=\"line\">      )</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"title function_\">onBackPress</span>(<span class=\"params\">options</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// #ifdef APP-PLUS</span></span><br><span class=\"line\">    <span class=\"comment\">// 返回时退出全屏</span></span><br><span class=\"line\">    barcode.<span class=\"title function_\">close</span>()</span><br><span class=\"line\">    plus.<span class=\"property\">navigator</span>.<span class=\"title function_\">setFullscreen</span>(<span class=\"literal\">false</span>)</span><br><span class=\"line\">    <span class=\"comment\">// #endif</span></span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(options)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (options.<span class=\"property\">from</span> == <span class=\"string\">&#x27;backbutton&#x27;</span>) &#123;</span><br><span class=\"line\">      uni.<span class=\"title function_\">switchTab</span>(&#123;</span><br><span class=\"line\">        <span class=\"attr\">url</span>: <span class=\"string\">&#x27;/pages/index/index&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">success</span>: <span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> &#123;&#125;,</span><br><span class=\"line\">        <span class=\"attr\">fail</span>: <span class=\"function\">() =&gt;</span> &#123;&#125;,</span><br><span class=\"line\">        <span class=\"attr\">complete</span>: <span class=\"function\">() =&gt;</span> &#123;&#125;,</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"title function_\">onUnload</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    plus.<span class=\"property\">navigator</span>.<span class=\"title function_\">setFullscreen</span>(<span class=\"literal\">false</span>)</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;style scoped&gt;</span><br><span class=\"line\">.<span class=\"property\">warpBC</span> &#123;</span><br><span class=\"line\">  background-<span class=\"attr\">color</span>: white;</span><br><span class=\"line\">  min-<span class=\"attr\">height</span>: 100vh;</span><br><span class=\"line\">  min-<span class=\"attr\">width</span>: 100vw;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/style&gt;</span><br></pre></td></tr></table></figure></li>\n</ol>\n</li>\n</ol>"},{"title":"基础算法记录","date":"2020-07-12T09:16:26.000Z","_content":"\n<meta name=\"referrer\" content=\"no-referrer\"/>\n\n## 基础算法记录\n\n### 冒泡算法\n\n1. 原理：通过前后相邻的数据比较大小，大数交换小数，从而实现排序\n\n2. JS实现：\n\n   ```js\n   // 基础排序，count：144\n   let count = 0;\n   function basicSort(arr) {\n     for (let i = 0; i < arr.length; i++) {\n       for (let j = 0; j < arr.length; j++) {\n         count++;\n         let newTem = null;\n         if (arr[j] > arr[j + 1]) {\n           newTem = arr[j];\n           arr[j] = arr[j + 1];\n           arr[j + 1] = newTem;\n         }\n       }\n     }\n     return arr;\n   }\n   console.log(basicSort([10, 7, 9, 11, 22, 33, 4, 2, 0, 1000, 3, 18]), count);\n   // --------------------------------------------\n   ```\n\n   ```js\n   // 优化循环，count：66\n   let count = 0;\n   function slowlySort(arr) {\n     let itemTem = null;\n     let length = arr.length;\n     for (let j = 0; j < length - 1; j++) {\n       for (let i = j + 1; i < length; i++) {\n         count++;\n         if (arr[j] > arr[i]) {\n           itemTem = arr[j];\n           arr[j] = arr[i];\n           arr[i] = itemTem;\n         }\n       }\n     }\n     return arr;\n   }\n   console.log(slowlySort([10, 7, 9, 11, 22, 33, 4, 2, 0, 1000, 3, 18]), count);\n   ```\n\n   ```js\n   // 优化循环，count：56\n   let count = 0;\n   let booleCount = 0;\n   function BubbleSort(arr) {\n     let i, j, temp;\n     let flag = true; //flag进行标记\n     for (i = 0; i < arr.length - 1 && flag; i++) {\n       //若flag为false则退出循环\n       flag = false; //初始化为false\n       for (j = arr.length - 1; j > i; j--) {\n         count++;\n         if (arr[j] < arr[j - 1]) {\n           //j为从前往后循环\n           temp = arr[j - 1];\n           arr[j - 1] = arr[j];\n           arr[j] = temp;\n           booleCount++;\n           flag = true; //如果有数据交换则为true\n         }\n       }\n     }\n     return arr;\n   }\n   BubbleSort([10, 7, 9, 11, 22, 33, 4, 2, 0, 1000, 3, 18]);\n   console.log(arr, count, booleCount);\n   ```\n\n   \n\n3. 11\n\n4. 快排算法\n\n2. 111","source":"_posts/基础算法记录.md","raw":"---\n\ntitle: 基础算法记录\ndate: 2020-07-12 17:16:26\ntags: [js,hexo]\n---\n\n<meta name=\"referrer\" content=\"no-referrer\"/>\n\n## 基础算法记录\n\n### 冒泡算法\n\n1. 原理：通过前后相邻的数据比较大小，大数交换小数，从而实现排序\n\n2. JS实现：\n\n   ```js\n   // 基础排序，count：144\n   let count = 0;\n   function basicSort(arr) {\n     for (let i = 0; i < arr.length; i++) {\n       for (let j = 0; j < arr.length; j++) {\n         count++;\n         let newTem = null;\n         if (arr[j] > arr[j + 1]) {\n           newTem = arr[j];\n           arr[j] = arr[j + 1];\n           arr[j + 1] = newTem;\n         }\n       }\n     }\n     return arr;\n   }\n   console.log(basicSort([10, 7, 9, 11, 22, 33, 4, 2, 0, 1000, 3, 18]), count);\n   // --------------------------------------------\n   ```\n\n   ```js\n   // 优化循环，count：66\n   let count = 0;\n   function slowlySort(arr) {\n     let itemTem = null;\n     let length = arr.length;\n     for (let j = 0; j < length - 1; j++) {\n       for (let i = j + 1; i < length; i++) {\n         count++;\n         if (arr[j] > arr[i]) {\n           itemTem = arr[j];\n           arr[j] = arr[i];\n           arr[i] = itemTem;\n         }\n       }\n     }\n     return arr;\n   }\n   console.log(slowlySort([10, 7, 9, 11, 22, 33, 4, 2, 0, 1000, 3, 18]), count);\n   ```\n\n   ```js\n   // 优化循环，count：56\n   let count = 0;\n   let booleCount = 0;\n   function BubbleSort(arr) {\n     let i, j, temp;\n     let flag = true; //flag进行标记\n     for (i = 0; i < arr.length - 1 && flag; i++) {\n       //若flag为false则退出循环\n       flag = false; //初始化为false\n       for (j = arr.length - 1; j > i; j--) {\n         count++;\n         if (arr[j] < arr[j - 1]) {\n           //j为从前往后循环\n           temp = arr[j - 1];\n           arr[j - 1] = arr[j];\n           arr[j] = temp;\n           booleCount++;\n           flag = true; //如果有数据交换则为true\n         }\n       }\n     }\n     return arr;\n   }\n   BubbleSort([10, 7, 9, 11, 22, 33, 4, 2, 0, 1000, 3, 18]);\n   console.log(arr, count, booleCount);\n   ```\n\n   \n\n3. 11\n\n4. 快排算法\n\n2. 111","slug":"基础算法记录","published":1,"updated":"2021-03-17T09:23:48.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl0uux6vv00177suf7v009fs6","content":"<meta name=\"referrer\" content=\"no-referrer\"/>\n\n<h2 id=\"基础算法记录\"><a href=\"#基础算法记录\" class=\"headerlink\" title=\"基础算法记录\"></a>基础算法记录</h2><h3 id=\"冒泡算法\"><a href=\"#冒泡算法\" class=\"headerlink\" title=\"冒泡算法\"></a>冒泡算法</h3><ol>\n<li><p>原理：通过前后相邻的数据比较大小，大数交换小数，从而实现排序</p>\n</li>\n<li><p>JS实现：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 基础排序，count：144</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> count = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">basicSort</span>(<span class=\"params\">arr</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; arr.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = <span class=\"number\">0</span>; j &lt; arr.<span class=\"property\">length</span>; j++) &#123;</span><br><span class=\"line\">      count++;</span><br><span class=\"line\">      <span class=\"keyword\">let</span> newTem = <span class=\"literal\">null</span>;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (arr[j] &gt; arr[j + <span class=\"number\">1</span>]) &#123;</span><br><span class=\"line\">        newTem = arr[j];</span><br><span class=\"line\">        arr[j] = arr[j + <span class=\"number\">1</span>];</span><br><span class=\"line\">        arr[j + <span class=\"number\">1</span>] = newTem;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> arr;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">basicSort</span>([<span class=\"number\">10</span>, <span class=\"number\">7</span>, <span class=\"number\">9</span>, <span class=\"number\">11</span>, <span class=\"number\">22</span>, <span class=\"number\">33</span>, <span class=\"number\">4</span>, <span class=\"number\">2</span>, <span class=\"number\">0</span>, <span class=\"number\">1000</span>, <span class=\"number\">3</span>, <span class=\"number\">18</span>]), count);</span><br><span class=\"line\"><span class=\"comment\">// --------------------------------------------</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 优化循环，count：66</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> count = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">slowlySort</span>(<span class=\"params\">arr</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> itemTem = <span class=\"literal\">null</span>;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> length = arr.<span class=\"property\">length</span>;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = <span class=\"number\">0</span>; j &lt; length - <span class=\"number\">1</span>; j++) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = j + <span class=\"number\">1</span>; i &lt; length; i++) &#123;</span><br><span class=\"line\">      count++;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (arr[j] &gt; arr[i]) &#123;</span><br><span class=\"line\">        itemTem = arr[j];</span><br><span class=\"line\">        arr[j] = arr[i];</span><br><span class=\"line\">        arr[i] = itemTem;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> arr;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">slowlySort</span>([<span class=\"number\">10</span>, <span class=\"number\">7</span>, <span class=\"number\">9</span>, <span class=\"number\">11</span>, <span class=\"number\">22</span>, <span class=\"number\">33</span>, <span class=\"number\">4</span>, <span class=\"number\">2</span>, <span class=\"number\">0</span>, <span class=\"number\">1000</span>, <span class=\"number\">3</span>, <span class=\"number\">18</span>]), count);</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 优化循环，count：56</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> count = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> booleCount = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">BubbleSort</span>(<span class=\"params\">arr</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> i, j, temp;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> flag = <span class=\"literal\">true</span>; <span class=\"comment\">//flag进行标记</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt; arr.<span class=\"property\">length</span> - <span class=\"number\">1</span> &amp;&amp; flag; i++) &#123;</span><br><span class=\"line\">    <span class=\"comment\">//若flag为false则退出循环</span></span><br><span class=\"line\">    flag = <span class=\"literal\">false</span>; <span class=\"comment\">//初始化为false</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (j = arr.<span class=\"property\">length</span> - <span class=\"number\">1</span>; j &gt; i; j--) &#123;</span><br><span class=\"line\">      count++;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (arr[j] &lt; arr[j - <span class=\"number\">1</span>]) &#123;</span><br><span class=\"line\">        <span class=\"comment\">//j为从前往后循环</span></span><br><span class=\"line\">        temp = arr[j - <span class=\"number\">1</span>];</span><br><span class=\"line\">        arr[j - <span class=\"number\">1</span>] = arr[j];</span><br><span class=\"line\">        arr[j] = temp;</span><br><span class=\"line\">        booleCount++;</span><br><span class=\"line\">        flag = <span class=\"literal\">true</span>; <span class=\"comment\">//如果有数据交换则为true</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> arr;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"title class_\">BubbleSort</span>([<span class=\"number\">10</span>, <span class=\"number\">7</span>, <span class=\"number\">9</span>, <span class=\"number\">11</span>, <span class=\"number\">22</span>, <span class=\"number\">33</span>, <span class=\"number\">4</span>, <span class=\"number\">2</span>, <span class=\"number\">0</span>, <span class=\"number\">1000</span>, <span class=\"number\">3</span>, <span class=\"number\">18</span>]);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(arr, count, booleCount);</span><br></pre></td></tr></table></figure></li>\n<li><p>11</p>\n</li>\n<li><p>快排算法</p>\n</li>\n<li><p>111</p>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<meta name=\"referrer\" content=\"no-referrer\"/>\n\n<h2 id=\"基础算法记录\"><a href=\"#基础算法记录\" class=\"headerlink\" title=\"基础算法记录\"></a>基础算法记录</h2><h3 id=\"冒泡算法\"><a href=\"#冒泡算法\" class=\"headerlink\" title=\"冒泡算法\"></a>冒泡算法</h3><ol>\n<li><p>原理：通过前后相邻的数据比较大小，大数交换小数，从而实现排序</p>\n</li>\n<li><p>JS实现：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 基础排序，count：144</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> count = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">basicSort</span>(<span class=\"params\">arr</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; arr.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = <span class=\"number\">0</span>; j &lt; arr.<span class=\"property\">length</span>; j++) &#123;</span><br><span class=\"line\">      count++;</span><br><span class=\"line\">      <span class=\"keyword\">let</span> newTem = <span class=\"literal\">null</span>;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (arr[j] &gt; arr[j + <span class=\"number\">1</span>]) &#123;</span><br><span class=\"line\">        newTem = arr[j];</span><br><span class=\"line\">        arr[j] = arr[j + <span class=\"number\">1</span>];</span><br><span class=\"line\">        arr[j + <span class=\"number\">1</span>] = newTem;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> arr;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">basicSort</span>([<span class=\"number\">10</span>, <span class=\"number\">7</span>, <span class=\"number\">9</span>, <span class=\"number\">11</span>, <span class=\"number\">22</span>, <span class=\"number\">33</span>, <span class=\"number\">4</span>, <span class=\"number\">2</span>, <span class=\"number\">0</span>, <span class=\"number\">1000</span>, <span class=\"number\">3</span>, <span class=\"number\">18</span>]), count);</span><br><span class=\"line\"><span class=\"comment\">// --------------------------------------------</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 优化循环，count：66</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> count = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">slowlySort</span>(<span class=\"params\">arr</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> itemTem = <span class=\"literal\">null</span>;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> length = arr.<span class=\"property\">length</span>;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = <span class=\"number\">0</span>; j &lt; length - <span class=\"number\">1</span>; j++) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = j + <span class=\"number\">1</span>; i &lt; length; i++) &#123;</span><br><span class=\"line\">      count++;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (arr[j] &gt; arr[i]) &#123;</span><br><span class=\"line\">        itemTem = arr[j];</span><br><span class=\"line\">        arr[j] = arr[i];</span><br><span class=\"line\">        arr[i] = itemTem;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> arr;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">slowlySort</span>([<span class=\"number\">10</span>, <span class=\"number\">7</span>, <span class=\"number\">9</span>, <span class=\"number\">11</span>, <span class=\"number\">22</span>, <span class=\"number\">33</span>, <span class=\"number\">4</span>, <span class=\"number\">2</span>, <span class=\"number\">0</span>, <span class=\"number\">1000</span>, <span class=\"number\">3</span>, <span class=\"number\">18</span>]), count);</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 优化循环，count：56</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> count = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> booleCount = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">BubbleSort</span>(<span class=\"params\">arr</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> i, j, temp;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> flag = <span class=\"literal\">true</span>; <span class=\"comment\">//flag进行标记</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt; arr.<span class=\"property\">length</span> - <span class=\"number\">1</span> &amp;&amp; flag; i++) &#123;</span><br><span class=\"line\">    <span class=\"comment\">//若flag为false则退出循环</span></span><br><span class=\"line\">    flag = <span class=\"literal\">false</span>; <span class=\"comment\">//初始化为false</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (j = arr.<span class=\"property\">length</span> - <span class=\"number\">1</span>; j &gt; i; j--) &#123;</span><br><span class=\"line\">      count++;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (arr[j] &lt; arr[j - <span class=\"number\">1</span>]) &#123;</span><br><span class=\"line\">        <span class=\"comment\">//j为从前往后循环</span></span><br><span class=\"line\">        temp = arr[j - <span class=\"number\">1</span>];</span><br><span class=\"line\">        arr[j - <span class=\"number\">1</span>] = arr[j];</span><br><span class=\"line\">        arr[j] = temp;</span><br><span class=\"line\">        booleCount++;</span><br><span class=\"line\">        flag = <span class=\"literal\">true</span>; <span class=\"comment\">//如果有数据交换则为true</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> arr;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"title class_\">BubbleSort</span>([<span class=\"number\">10</span>, <span class=\"number\">7</span>, <span class=\"number\">9</span>, <span class=\"number\">11</span>, <span class=\"number\">22</span>, <span class=\"number\">33</span>, <span class=\"number\">4</span>, <span class=\"number\">2</span>, <span class=\"number\">0</span>, <span class=\"number\">1000</span>, <span class=\"number\">3</span>, <span class=\"number\">18</span>]);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(arr, count, booleCount);</span><br></pre></td></tr></table></figure></li>\n<li><p>11</p>\n</li>\n<li><p>快排算法</p>\n</li>\n<li><p>111</p>\n</li>\n</ol>\n"},{"title":"JSON.stringify参数","date":"2020-07-12T09:16:26.000Z","_content":"\n<meta name=\"referrer\" content=\"no-referrer\"/>\n\n## JSON.stringify参数、\n\n### JSON.stringify第二和第三参数\n\n#### 第二个参数用法\n\n第二个参数用法很简单，只不过很多朋友不知道这个知识点，这个用法在提交后端数据的时候，非常实用。\n\n例如：后端需要前端为空或者undefined的时候，字段也不要传入。那么我们就会用到了第二个参数的函数了。用法如下：\n\n```\n//前端传入后端参数数据：\nvar params = {\"name\":\"haorooms\", \"site\":\"http://www.haorooms.com\",text:'',data:undefined,age:null,child:''}\n\nJSON.stringify(params, (key, value) =>{\n    if(value){\n       return value\n     } else {\n       return undefined\n   }\n})\n\n// 返回的是：\"{\"name\":\"haorooms\",\"site\":\"http://www.haorooms.com\"}\"，然后再JSON.parse一下就可以了\n```\n\n上面的用法是用到了函数，还可以是数组，数组就比较好理解了，代表的是返回固定哪几个？\n\n例如如下：\n\n```\n var params = {\"name\":\"haorooms\", \"site\":\"http://www.haorooms.com\",text:'',data:undefined,age:null,child:''}\n\n    JSON.stringify(params, [\"name\"])\n\n// 输出：\"{\"name\":\"haorooms\"}\"\n```\n\n","source":"_posts/小技巧.md","raw":"---\ntitle: JSON.stringify参数\ndate: 2020-07-12 17:16:26\ntags: [js,hexo]\n---\n\n<meta name=\"referrer\" content=\"no-referrer\"/>\n\n## JSON.stringify参数、\n\n### JSON.stringify第二和第三参数\n\n#### 第二个参数用法\n\n第二个参数用法很简单，只不过很多朋友不知道这个知识点，这个用法在提交后端数据的时候，非常实用。\n\n例如：后端需要前端为空或者undefined的时候，字段也不要传入。那么我们就会用到了第二个参数的函数了。用法如下：\n\n```\n//前端传入后端参数数据：\nvar params = {\"name\":\"haorooms\", \"site\":\"http://www.haorooms.com\",text:'',data:undefined,age:null,child:''}\n\nJSON.stringify(params, (key, value) =>{\n    if(value){\n       return value\n     } else {\n       return undefined\n   }\n})\n\n// 返回的是：\"{\"name\":\"haorooms\",\"site\":\"http://www.haorooms.com\"}\"，然后再JSON.parse一下就可以了\n```\n\n上面的用法是用到了函数，还可以是数组，数组就比较好理解了，代表的是返回固定哪几个？\n\n例如如下：\n\n```\n var params = {\"name\":\"haorooms\", \"site\":\"http://www.haorooms.com\",text:'',data:undefined,age:null,child:''}\n\n    JSON.stringify(params, [\"name\"])\n\n// 输出：\"{\"name\":\"haorooms\"}\"\n```\n\n","slug":"小技巧","published":1,"updated":"2021-01-19T09:21:08.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl0uux6vw00197suf66am53xn","content":"<meta name=\"referrer\" content=\"no-referrer\"/>\n\n<h2 id=\"JSON-stringify参数、\"><a href=\"#JSON-stringify参数、\" class=\"headerlink\" title=\"JSON.stringify参数、\"></a>JSON.stringify参数、</h2><h3 id=\"JSON-stringify第二和第三参数\"><a href=\"#JSON-stringify第二和第三参数\" class=\"headerlink\" title=\"JSON.stringify第二和第三参数\"></a>JSON.stringify第二和第三参数</h3><h4 id=\"第二个参数用法\"><a href=\"#第二个参数用法\" class=\"headerlink\" title=\"第二个参数用法\"></a>第二个参数用法</h4><p>第二个参数用法很简单，只不过很多朋友不知道这个知识点，这个用法在提交后端数据的时候，非常实用。</p>\n<p>例如：后端需要前端为空或者undefined的时候，字段也不要传入。那么我们就会用到了第二个参数的函数了。用法如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//前端传入后端参数数据：</span><br><span class=\"line\">var params = &#123;&quot;name&quot;:&quot;haorooms&quot;, &quot;site&quot;:&quot;http://www.haorooms.com&quot;,text:&#x27;&#x27;,data:undefined,age:null,child:&#x27;&#x27;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">JSON.stringify(params, (key, value) =&gt;&#123;</span><br><span class=\"line\">    if(value)&#123;</span><br><span class=\"line\">       return value</span><br><span class=\"line\">     &#125; else &#123;</span><br><span class=\"line\">       return undefined</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">// 返回的是：&quot;&#123;&quot;name&quot;:&quot;haorooms&quot;,&quot;site&quot;:&quot;http://www.haorooms.com&quot;&#125;&quot;，然后再JSON.parse一下就可以了</span><br></pre></td></tr></table></figure>\n\n<p>上面的用法是用到了函数，还可以是数组，数组就比较好理解了，代表的是返回固定哪几个？</p>\n<p>例如如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> var params = &#123;&quot;name&quot;:&quot;haorooms&quot;, &quot;site&quot;:&quot;http://www.haorooms.com&quot;,text:&#x27;&#x27;,data:undefined,age:null,child:&#x27;&#x27;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    JSON.stringify(params, [&quot;name&quot;])</span><br><span class=\"line\"></span><br><span class=\"line\">// 输出：&quot;&#123;&quot;name&quot;:&quot;haorooms&quot;&#125;&quot;</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"","more":"<meta name=\"referrer\" content=\"no-referrer\"/>\n\n<h2 id=\"JSON-stringify参数、\"><a href=\"#JSON-stringify参数、\" class=\"headerlink\" title=\"JSON.stringify参数、\"></a>JSON.stringify参数、</h2><h3 id=\"JSON-stringify第二和第三参数\"><a href=\"#JSON-stringify第二和第三参数\" class=\"headerlink\" title=\"JSON.stringify第二和第三参数\"></a>JSON.stringify第二和第三参数</h3><h4 id=\"第二个参数用法\"><a href=\"#第二个参数用法\" class=\"headerlink\" title=\"第二个参数用法\"></a>第二个参数用法</h4><p>第二个参数用法很简单，只不过很多朋友不知道这个知识点，这个用法在提交后端数据的时候，非常实用。</p>\n<p>例如：后端需要前端为空或者undefined的时候，字段也不要传入。那么我们就会用到了第二个参数的函数了。用法如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//前端传入后端参数数据：</span><br><span class=\"line\">var params = &#123;&quot;name&quot;:&quot;haorooms&quot;, &quot;site&quot;:&quot;http://www.haorooms.com&quot;,text:&#x27;&#x27;,data:undefined,age:null,child:&#x27;&#x27;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">JSON.stringify(params, (key, value) =&gt;&#123;</span><br><span class=\"line\">    if(value)&#123;</span><br><span class=\"line\">       return value</span><br><span class=\"line\">     &#125; else &#123;</span><br><span class=\"line\">       return undefined</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">// 返回的是：&quot;&#123;&quot;name&quot;:&quot;haorooms&quot;,&quot;site&quot;:&quot;http://www.haorooms.com&quot;&#125;&quot;，然后再JSON.parse一下就可以了</span><br></pre></td></tr></table></figure>\n\n<p>上面的用法是用到了函数，还可以是数组，数组就比较好理解了，代表的是返回固定哪几个？</p>\n<p>例如如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> var params = &#123;&quot;name&quot;:&quot;haorooms&quot;, &quot;site&quot;:&quot;http://www.haorooms.com&quot;,text:&#x27;&#x27;,data:undefined,age:null,child:&#x27;&#x27;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    JSON.stringify(params, [&quot;name&quot;])</span><br><span class=\"line\"></span><br><span class=\"line\">// 输出：&quot;&#123;&quot;name&quot;:&quot;haorooms&quot;&#125;&quot;</span><br></pre></td></tr></table></figure>\n\n"},{"title":"可能用到的请求","date":"2020-07-12T09:16:26.000Z","_content":"\n<meta name=\"referrer\" content=\"no-referrer\"/>\n\n## 可能用到的请求和下载\n\n### vue中的axios请求\n\n```js\nimport axios from 'axios'\nconst host = require('./host')\nimport { Message } from 'element-ui'\n\nconst service = axios.create({\n  baseURL: host.host,\n  timeout: 60000000,\n})\n\nservice.interceptors.request.use(\n  (config) => {\n    const token = sessionStorage.getItem('token')\n\n    config.headers = token\n      ? { Authorization: 'Bearer ' + sessionStorage.getItem('token') }\n      : ''\n\n    if (config.ContentType) {\n      config.headers['Content-Type'] = config.ContentType\n      delete config.ContentType\n    }\n    if (\n      //本地环境情况下，需要把login的host写死。避免频繁的切换host\n      process.env.VUE_APP_DEBUG === 'development' &&\n      config.url.split('?')[0] == '/admin/login'\n    ) {\n      config.baseURL = process.env.VUE_APP_HOST\n    } else {\n      //测试环境或者正式环境，需要将所有的host改成环境文件中的host\n      switch (config.basicUrl) {\n        case '/mall':\n          config.baseURL = process.env.VUE_APP_HOST1\n          break\n        default:\n          config.baseURL = process.env.VUE_APP_HOST\n          break\n      }\n    }\n    return config\n  },\n  (error) => {\n    return Promise.reject()\n  }\n)\n\nservice.interceptors.response.use(\n  (response) => {\n    if (response.status === 200) {\n      if (response.data.code === 200) {\n        return response.data\n      } else {\n        Message({\n          message: response.data.msg,\n          type: 'error',\n          duration: 2 * 1000,\n        })\n        return Promise.reject()\n      }\n    } else {\n      return Promise.reject()\n    }\n  },\n  (error) => {\n    if (String(error).includes('Network Error')) {\n      Message({\n        message: '网络出错了,请检查网络',\n        type: 'error',\n        duration: 2 * 1000,\n      })\n      return Promise.reject(error)\n    } else if (error.response.status === 500 || error.response.status === 403) {\n      Message({\n        message: '登录已失效，请重新登录',\n        type: 'error',\n        duration: 2 * 1000,\n      })\n      setTimeout(function() {\n        sessionStorage.removeItem('resources')\n        sessionStorage.removeItem('token')\n        sessionStorage.removeItem('adminUserInfo')\n        window.location.href =\n          process.env.NODE_ENV === 'development'\n            ? window.location.protocol +\n              '//' +\n              window.location.host +\n              '/#/login'\n            : window.location.protocol +\n              '//' +\n              window.location.host +\n              process.env.VUE_APP_PUBLIC +\n              '#/login'\n      }, 2000)\n    } else if (\n      error.response.data.message === 'The service or item was not found.'\n    ) {\n      Message({\n        message: '平台升级中...',\n        type: 'error',\n        duration: 2 * 1000,\n      })\n      return Promise.reject(error)\n    } else {\n      Message({\n        message: error.response.data.message,\n        type: 'error',\n        duration: 2 * 1000,\n      })\n      return Promise.reject(error)\n    }\n  }\n)\n\nexport default service\n\n```\n\n### uni中的请求\n\n```js\nimport { browser, Phone } from '@/utils/net.js'\nconst request = async (config) => {\n  // ****************APP打包请求url配置****************\n  //   @当APP进行打包后，从process.env.NODE_ENV获取得到的总是'production'，需要新加一种手动控制url的字段，by:李蒙\n\n  // let currentEnv = 'development' //打包APP时使用测试地址\n  let currentEnv = 'production' //打包APP时使用正式地址\n  if (!uni.getStorageSync('currentEnv'))\n    uni.setStorageSync('currentEnv', currentEnv)\n  // ****************APP打包请求url配置****************\n\n  let baseUrlDev = 'http://wx.114family.cn/family-iface-dev' //默认请求\n  let bseUrlPro = 'https://wechat.114family.cn/family-iface' //默认请求\n  let WXbaseUrlDev = 'http://wx.114family.cn/family-iface-tiny-dev' //微店请求\n  let WXbaseUrlPro = 'https://wechat.114family.cn/family-iface-tiny' //微店请求\n  let isDev = currentEnv == 'production' //true为正式环境，false为测试环境\n\n  // 1.对基础url进行逻辑判断\n  if (config.isV) {\n    //是否是微店请求\n    config.url = isDev ? WXbaseUrlPro + config.url : WXbaseUrlDev + config.url\n    if (!uni.getStorageSync('__urlisV__')) {\n      uni.setStorageSync('__urlisV__', isDev ? WXbaseUrlPro : WXbaseUrlDev)\n    }\n  } else if (config.isPay) {\n    //是否是支付请求\n    config.url =\n      'https://share.qingmh.com/wechat-pay-common/wechatpay/hjt/create'\n  } else if (config.isPayQuery) {\n    // 是否是支付结果查询接口\n    config.url =\n      'https://share.qingmh.com/wechat-pay-common/wechatpay/order/query'\n  } else {\n    //默认请求\n    config.url = isDev ? bseUrlPro + config.url : baseUrlDev + config.url\n    if (!uni.getStorageSync('url')) {\n      uni.setStorageSync('url', isDev ? bseUrlPro : baseUrlDev)\n    }\n  }\n  config.header = {\n    region: '',\n    terminalcode: '', // 设备号,PC端传浏览器版本号\n    terminaltype: '', // 端口类型，例如 APP,XCX,WECHAT,WEB\n    stoken: '', // 授权\n    devicetype: '', //所属平台,例如 IOS,ANDROID,XCX,WECHAT,WEB(浏览器名称)\n  }\n\n  //region :lat\t是\tstring纬度,lng\t是\tstring经度,province\t是\tstring省,city\t是\tstring市,district\t否\tstring区县,\n  //street\t否\tstring街道,street_number\t否\tstring街道号\n  let platform = uni.getStorageSync('platform') // 机型\n  let stoken = uni.getStorageSync('stoken') // 获取后台反的token\n  let isfirstGetSysInfo = uni.getStorageSync('firstGetSysInfo') //判断是否已经获取了设备的信息(某些浏览器，无法在第一次打开时获取信息，所以额外的添加了字段)\n  // 2.对提供的options进行逻辑判断\n  if (config.needToken) {\n    //当前请求是否需要token\n    if (stoken == '' || stoken == null || stoken == undefined || !stoken) {\n      //当请求中没有token时，直接跳到登录页，by：李蒙\n      uni.reLaunch({\n        url: '/pages/Login/otherLogin',\n      })\n    } else {\n      const region = {\n        lat: '30.680905',\n        lng: '104.117462',\n        province: '四川省',\n        city: '成都市',\n      }\n      // if (uni.getStorageSync('region')) {\n      //   let regData = JSON.parse(uni.getStorageSync('region'))\n      //   region = { ...region, ...regData }\n      // }\n\n      // config.header.region = encodeURIComponent(JSON.stringify(region))\n      config.header.stoken = stoken\n    }\n  }\n  //新增请求头内的devicetype等信息\n  if (isfirstGetSysInfo == 'done') {\n    //获取了手机系统信息\n    config.header.terminalcode = uni.getStorageSync('model')\n    config.header.terminaltype = 'WAP'\n    config.header.devicetype = uni.getStorageSync('platform')\n  } else {\n    //未获取手机系统信息\n    let getSystemInfoSync = await uni.getSystemInfoSync()\n    uni.setStorageSync('firstGetSysInfo', 'done')\n    let devicetypeTem = 'android'\n    let modelTem = 'WAP'\n    console.log(getSystemInfoSync, '2222222')\n    if (getSystemInfoSync && getSystemInfoSync.platform == 'other') {\n      //当使用wap开发时，有可能获取不到系统信息，改用navigator.userAgent\n      let ua = browser()\n      let phone = Phone()\n      console.log(ua, phone, '获取的浏览器数据')\n      config.header.terminalcode = ua.split('/') && ua.split('/')[0]\n      config.header.terminaltype = 'WAP'\n      config.header.devicetype = phone\n    } else {\n      devicetypeTem =\n        getSystemInfoSync.platform == 'devtools'\n          ? 'ios'\n          : getSystemInfoSync.platform\n      modelTem = getSystemInfoSync.model ? getSystemInfoSync.model : 'android'\n    }\n    console.log(modelTem, '1111')\n    config.header.terminalcode = modelTem\n    config.header.terminaltype = 'WAP'\n    config.header.devicetype = devicetypeTem\n    //本地存储，后续可能会用到\n    uni.setStorageSync('model', modelTem)\n    uni.setStorageSync('platform', devicetypeTem)\n    uni.setStorageSync('windowWidth', getSystemInfoSync.windowWidth)\n    uni.setStorageSync('windowHeight', getSystemInfoSync.windowHeight)\n    uni.setStorageSync('safeAreaH', getSystemInfoSync.safeArea.height)\n    uni.setStorageSync('safeAreaT', getSystemInfoSync.safeArea.top)\n    uni.setStorageSync('statusBarHeight', getSystemInfoSync.statusBarHeight)\n  }\n  if (!config.data) {\n    config.data = {}\n  }\n  //存储一下configHeaderInfo,当你跳转到图文海报的h5的时候，需要将header做一个替换\n  if (!uni.getStorageSync('configHeaderInfo'))\n    uni.setStorageSync('configHeaderInfo', config.header)\n  //   console.log(config, '*****请求中携带的参数********')\n  // 3.将已经配置好的uni.request作为一个promise返回\n  let promise = new Promise((resolve, reject) => {\n    uni\n      .request(config)\n      .then((responses) => {\n        console.log(responses, '返回的数据')\n        if (responses[0]) {\n          //   if (uni.getStorageSync('firstLogin')) {\n          //     reject({ message: '网络超时' })\n          //   } else {\n          uni.clearStorageSync()\n          uni.reLaunch({\n            url: '/pages/Login/otherLogin',\n          })\n          //   }\n        } else {\n          let response = responses[1].data // 如果返回的结果是data.data的，嫌麻烦可以用这个，return res,这样只返回一个data\n          if (\n            (response.code === '0016' && response.message === '口令认证失败') ||\n            response.code === '00909' ||\n            response.message === '网络超时'\n          ) {\n            uni.clearStorageSync()\n            uni.reLaunch({\n              url: '/pages/Login/otherLogin',\n              fail(e) {\n                console.log(e)\n              },\n            })\n            console.log('触发认证失败', response)\n          } else {\n            resolve(response)\n          }\n        }\n      })\n      .catch((error) => {\n        reject(error)\n      })\n  })\n  return promise\n}\n\nexport default request\n\n```\n\n## 下载oss地址文件\n\n```js\ndownLoadFile(e) {\n      console.log(e, 'e')\n      let str = e.name.split('.')[0]\n      //   this.downloadByAxios(e.url, str)\n      let urlstr = e.url.replace('http', 'https')\n      console.log(urlstr, 'urlstr')\n      this.download(urlstr, str)\n    },\n```\n\n```js\n    download(url, filename) {\n      /**\n       * 下载\n       * @param  {String} url 目标文件地址\n       * @param  {String} filename 想要保存的文件名称\n       */\n      this.getBlob(url, (blob) => {\n        this.saveAs(blob, filename)\n      })\n    },\n    getBlob(url, cb) {\n      /**\n       * 获取 blob\n       * @param  {String} url 目标文件地址\n       * @return {cb}\n       */\n      var xhr = new XMLHttpRequest()\n      xhr.open('GET', url, true)\n      xhr.responseType = 'blob'\n      xhr.onload = function() {\n        if (xhr.status === 200) {\n          cb(xhr.response)\n        }\n      }\n      xhr.send()\n    },\n    saveAs(blob, filename) {\n      /**\n       * 保存\n       * @param  {Blob} blob\n       * @param  {String} filename 想要保存的文件名称\n       */\n      if (window.navigator.msSaveOrOpenBlob) {\n        navigator.msSaveBlob(blob, filename)\n      } else {\n        var link = document.createElement('a')\n        var body = document.querySelector('body')\n        link.href = window.URL.createObjectURL(blob)\n        link.download = filename\n        // fix Firefox\n        link.style.display = 'none'\n        body.appendChild(link)\n        link.click()\n        body.removeChild(link)\n        window.URL.revokeObjectURL(link.href)\n      }\n    },\n```\n\n## 下载服务器文件\n\n```js\nexport function exportInfo(info) {\n  return new Promise((resolve, reject)=>{\n    axios({\n      method:info.method,\n      url:info.params ? info.url+ setUrlParam(info.params) : info.url,\n      data:info.params,\n      responseType: info.responseType, // 优先尝试 blob\n      headers:{'Authorization':localStorage.getItem('token') ?'Bearer '+localStorage.getItem('token'):''}\n    }).then((res) => {\n      let objectUrl = null,blob = null;\n      if(info.type === 'excel'){\n        blob = new Blob([res.data], {\n          type: \"application/vnd.ms-excel\"\n        });\n        objectUrl = URL.createObjectURL(blob);\n      }else if(info.type === 'img'){\n        objectUrl = 'data:image/png;base64,' + btoa(new Uint8Array(res.data).reduce((data, byte) => data + String.fromCharCode(byte), ''));\n      }else if(info.type === 'zip'){\n        blob = new Blob([res.data], {type: 'application/zip'});\n        objectUrl = URL.createObjectURL(blob);\n      }else if(info.type === 'doc'){\n        blob = new Blob([res.data], {\n          type: \"application/msword\"\n        });\n        objectUrl = URL.createObjectURL(blob);\n      }\n      let a = document.createElement(\"a\");\n      a.href = objectUrl;\n      a.download = info.name;\n      //a.click();\n      //下面这个写法兼容火狐\n      a.dispatchEvent(new MouseEvent('click', {bubbles: true, cancelable: true, view: window}));\n      window.URL.revokeObjectURL(blob);\n      resolve(res)\n    }).catch(error => {\n      console.log(\"response: \", error);\n      reject(error)\n    })\n\n  })\n}\n```\n\n## 前端下载并打包zip\n\n```js\nrequire('script-loader!file-saver');\nimport JSZip from 'jszip'\nimport FileSaver from 'file-saver'\nconst getFile = (url) => {\n  return new Promise((resolve,reject)=>{\n    var xhr = new XMLHttpRequest();\n    xhr.open(\"GET\", url);\n    xhr.responseType = \"arraybuffer\";\n    xhr.onerror = function() {/* handle errors*/};\n    xhr.onload = function() {\n      if (xhr.status === 200) {\n        resolve(xhr.response)}\n      else {\n        reject({})\n      }\n    }\n    xhr.send();\n  })\n};\n\nexport async function exportZip( data,  zipName) {\n  const zip = new JSZip()\n  const cache = {}\n  const promises = []\n  await data.forEach(item => {\n      const promise = getFile(item.url).then(data => { // 下载文件, 并存成ArrayBuffer对象\n      zip.file(item.name+'.jpg', data, {\n        binary: true\n      }) // 逐个添加文件\n      cache[item.name] = data\n    })\n    promises.push(promise)\n  })\n  Promise.all(promises).then(() => {\n    zip.generateAsync({\n      type: \"blob\"\n    }).then(content => { // 生成二进制流\n      console.log(content)\n      saveAs(content, zipName+\".zip\") // 利用file-saver保存文件\n    })\n  })\n }\n```\n\n","source":"_posts/可能用到的请求.md","raw":"---\n\ntitle: 可能用到的请求\ndate: 2020-07-12 17:16:26\ntags: [js,hexo]\n---\n\n<meta name=\"referrer\" content=\"no-referrer\"/>\n\n## 可能用到的请求和下载\n\n### vue中的axios请求\n\n```js\nimport axios from 'axios'\nconst host = require('./host')\nimport { Message } from 'element-ui'\n\nconst service = axios.create({\n  baseURL: host.host,\n  timeout: 60000000,\n})\n\nservice.interceptors.request.use(\n  (config) => {\n    const token = sessionStorage.getItem('token')\n\n    config.headers = token\n      ? { Authorization: 'Bearer ' + sessionStorage.getItem('token') }\n      : ''\n\n    if (config.ContentType) {\n      config.headers['Content-Type'] = config.ContentType\n      delete config.ContentType\n    }\n    if (\n      //本地环境情况下，需要把login的host写死。避免频繁的切换host\n      process.env.VUE_APP_DEBUG === 'development' &&\n      config.url.split('?')[0] == '/admin/login'\n    ) {\n      config.baseURL = process.env.VUE_APP_HOST\n    } else {\n      //测试环境或者正式环境，需要将所有的host改成环境文件中的host\n      switch (config.basicUrl) {\n        case '/mall':\n          config.baseURL = process.env.VUE_APP_HOST1\n          break\n        default:\n          config.baseURL = process.env.VUE_APP_HOST\n          break\n      }\n    }\n    return config\n  },\n  (error) => {\n    return Promise.reject()\n  }\n)\n\nservice.interceptors.response.use(\n  (response) => {\n    if (response.status === 200) {\n      if (response.data.code === 200) {\n        return response.data\n      } else {\n        Message({\n          message: response.data.msg,\n          type: 'error',\n          duration: 2 * 1000,\n        })\n        return Promise.reject()\n      }\n    } else {\n      return Promise.reject()\n    }\n  },\n  (error) => {\n    if (String(error).includes('Network Error')) {\n      Message({\n        message: '网络出错了,请检查网络',\n        type: 'error',\n        duration: 2 * 1000,\n      })\n      return Promise.reject(error)\n    } else if (error.response.status === 500 || error.response.status === 403) {\n      Message({\n        message: '登录已失效，请重新登录',\n        type: 'error',\n        duration: 2 * 1000,\n      })\n      setTimeout(function() {\n        sessionStorage.removeItem('resources')\n        sessionStorage.removeItem('token')\n        sessionStorage.removeItem('adminUserInfo')\n        window.location.href =\n          process.env.NODE_ENV === 'development'\n            ? window.location.protocol +\n              '//' +\n              window.location.host +\n              '/#/login'\n            : window.location.protocol +\n              '//' +\n              window.location.host +\n              process.env.VUE_APP_PUBLIC +\n              '#/login'\n      }, 2000)\n    } else if (\n      error.response.data.message === 'The service or item was not found.'\n    ) {\n      Message({\n        message: '平台升级中...',\n        type: 'error',\n        duration: 2 * 1000,\n      })\n      return Promise.reject(error)\n    } else {\n      Message({\n        message: error.response.data.message,\n        type: 'error',\n        duration: 2 * 1000,\n      })\n      return Promise.reject(error)\n    }\n  }\n)\n\nexport default service\n\n```\n\n### uni中的请求\n\n```js\nimport { browser, Phone } from '@/utils/net.js'\nconst request = async (config) => {\n  // ****************APP打包请求url配置****************\n  //   @当APP进行打包后，从process.env.NODE_ENV获取得到的总是'production'，需要新加一种手动控制url的字段，by:李蒙\n\n  // let currentEnv = 'development' //打包APP时使用测试地址\n  let currentEnv = 'production' //打包APP时使用正式地址\n  if (!uni.getStorageSync('currentEnv'))\n    uni.setStorageSync('currentEnv', currentEnv)\n  // ****************APP打包请求url配置****************\n\n  let baseUrlDev = 'http://wx.114family.cn/family-iface-dev' //默认请求\n  let bseUrlPro = 'https://wechat.114family.cn/family-iface' //默认请求\n  let WXbaseUrlDev = 'http://wx.114family.cn/family-iface-tiny-dev' //微店请求\n  let WXbaseUrlPro = 'https://wechat.114family.cn/family-iface-tiny' //微店请求\n  let isDev = currentEnv == 'production' //true为正式环境，false为测试环境\n\n  // 1.对基础url进行逻辑判断\n  if (config.isV) {\n    //是否是微店请求\n    config.url = isDev ? WXbaseUrlPro + config.url : WXbaseUrlDev + config.url\n    if (!uni.getStorageSync('__urlisV__')) {\n      uni.setStorageSync('__urlisV__', isDev ? WXbaseUrlPro : WXbaseUrlDev)\n    }\n  } else if (config.isPay) {\n    //是否是支付请求\n    config.url =\n      'https://share.qingmh.com/wechat-pay-common/wechatpay/hjt/create'\n  } else if (config.isPayQuery) {\n    // 是否是支付结果查询接口\n    config.url =\n      'https://share.qingmh.com/wechat-pay-common/wechatpay/order/query'\n  } else {\n    //默认请求\n    config.url = isDev ? bseUrlPro + config.url : baseUrlDev + config.url\n    if (!uni.getStorageSync('url')) {\n      uni.setStorageSync('url', isDev ? bseUrlPro : baseUrlDev)\n    }\n  }\n  config.header = {\n    region: '',\n    terminalcode: '', // 设备号,PC端传浏览器版本号\n    terminaltype: '', // 端口类型，例如 APP,XCX,WECHAT,WEB\n    stoken: '', // 授权\n    devicetype: '', //所属平台,例如 IOS,ANDROID,XCX,WECHAT,WEB(浏览器名称)\n  }\n\n  //region :lat\t是\tstring纬度,lng\t是\tstring经度,province\t是\tstring省,city\t是\tstring市,district\t否\tstring区县,\n  //street\t否\tstring街道,street_number\t否\tstring街道号\n  let platform = uni.getStorageSync('platform') // 机型\n  let stoken = uni.getStorageSync('stoken') // 获取后台反的token\n  let isfirstGetSysInfo = uni.getStorageSync('firstGetSysInfo') //判断是否已经获取了设备的信息(某些浏览器，无法在第一次打开时获取信息，所以额外的添加了字段)\n  // 2.对提供的options进行逻辑判断\n  if (config.needToken) {\n    //当前请求是否需要token\n    if (stoken == '' || stoken == null || stoken == undefined || !stoken) {\n      //当请求中没有token时，直接跳到登录页，by：李蒙\n      uni.reLaunch({\n        url: '/pages/Login/otherLogin',\n      })\n    } else {\n      const region = {\n        lat: '30.680905',\n        lng: '104.117462',\n        province: '四川省',\n        city: '成都市',\n      }\n      // if (uni.getStorageSync('region')) {\n      //   let regData = JSON.parse(uni.getStorageSync('region'))\n      //   region = { ...region, ...regData }\n      // }\n\n      // config.header.region = encodeURIComponent(JSON.stringify(region))\n      config.header.stoken = stoken\n    }\n  }\n  //新增请求头内的devicetype等信息\n  if (isfirstGetSysInfo == 'done') {\n    //获取了手机系统信息\n    config.header.terminalcode = uni.getStorageSync('model')\n    config.header.terminaltype = 'WAP'\n    config.header.devicetype = uni.getStorageSync('platform')\n  } else {\n    //未获取手机系统信息\n    let getSystemInfoSync = await uni.getSystemInfoSync()\n    uni.setStorageSync('firstGetSysInfo', 'done')\n    let devicetypeTem = 'android'\n    let modelTem = 'WAP'\n    console.log(getSystemInfoSync, '2222222')\n    if (getSystemInfoSync && getSystemInfoSync.platform == 'other') {\n      //当使用wap开发时，有可能获取不到系统信息，改用navigator.userAgent\n      let ua = browser()\n      let phone = Phone()\n      console.log(ua, phone, '获取的浏览器数据')\n      config.header.terminalcode = ua.split('/') && ua.split('/')[0]\n      config.header.terminaltype = 'WAP'\n      config.header.devicetype = phone\n    } else {\n      devicetypeTem =\n        getSystemInfoSync.platform == 'devtools'\n          ? 'ios'\n          : getSystemInfoSync.platform\n      modelTem = getSystemInfoSync.model ? getSystemInfoSync.model : 'android'\n    }\n    console.log(modelTem, '1111')\n    config.header.terminalcode = modelTem\n    config.header.terminaltype = 'WAP'\n    config.header.devicetype = devicetypeTem\n    //本地存储，后续可能会用到\n    uni.setStorageSync('model', modelTem)\n    uni.setStorageSync('platform', devicetypeTem)\n    uni.setStorageSync('windowWidth', getSystemInfoSync.windowWidth)\n    uni.setStorageSync('windowHeight', getSystemInfoSync.windowHeight)\n    uni.setStorageSync('safeAreaH', getSystemInfoSync.safeArea.height)\n    uni.setStorageSync('safeAreaT', getSystemInfoSync.safeArea.top)\n    uni.setStorageSync('statusBarHeight', getSystemInfoSync.statusBarHeight)\n  }\n  if (!config.data) {\n    config.data = {}\n  }\n  //存储一下configHeaderInfo,当你跳转到图文海报的h5的时候，需要将header做一个替换\n  if (!uni.getStorageSync('configHeaderInfo'))\n    uni.setStorageSync('configHeaderInfo', config.header)\n  //   console.log(config, '*****请求中携带的参数********')\n  // 3.将已经配置好的uni.request作为一个promise返回\n  let promise = new Promise((resolve, reject) => {\n    uni\n      .request(config)\n      .then((responses) => {\n        console.log(responses, '返回的数据')\n        if (responses[0]) {\n          //   if (uni.getStorageSync('firstLogin')) {\n          //     reject({ message: '网络超时' })\n          //   } else {\n          uni.clearStorageSync()\n          uni.reLaunch({\n            url: '/pages/Login/otherLogin',\n          })\n          //   }\n        } else {\n          let response = responses[1].data // 如果返回的结果是data.data的，嫌麻烦可以用这个，return res,这样只返回一个data\n          if (\n            (response.code === '0016' && response.message === '口令认证失败') ||\n            response.code === '00909' ||\n            response.message === '网络超时'\n          ) {\n            uni.clearStorageSync()\n            uni.reLaunch({\n              url: '/pages/Login/otherLogin',\n              fail(e) {\n                console.log(e)\n              },\n            })\n            console.log('触发认证失败', response)\n          } else {\n            resolve(response)\n          }\n        }\n      })\n      .catch((error) => {\n        reject(error)\n      })\n  })\n  return promise\n}\n\nexport default request\n\n```\n\n## 下载oss地址文件\n\n```js\ndownLoadFile(e) {\n      console.log(e, 'e')\n      let str = e.name.split('.')[0]\n      //   this.downloadByAxios(e.url, str)\n      let urlstr = e.url.replace('http', 'https')\n      console.log(urlstr, 'urlstr')\n      this.download(urlstr, str)\n    },\n```\n\n```js\n    download(url, filename) {\n      /**\n       * 下载\n       * @param  {String} url 目标文件地址\n       * @param  {String} filename 想要保存的文件名称\n       */\n      this.getBlob(url, (blob) => {\n        this.saveAs(blob, filename)\n      })\n    },\n    getBlob(url, cb) {\n      /**\n       * 获取 blob\n       * @param  {String} url 目标文件地址\n       * @return {cb}\n       */\n      var xhr = new XMLHttpRequest()\n      xhr.open('GET', url, true)\n      xhr.responseType = 'blob'\n      xhr.onload = function() {\n        if (xhr.status === 200) {\n          cb(xhr.response)\n        }\n      }\n      xhr.send()\n    },\n    saveAs(blob, filename) {\n      /**\n       * 保存\n       * @param  {Blob} blob\n       * @param  {String} filename 想要保存的文件名称\n       */\n      if (window.navigator.msSaveOrOpenBlob) {\n        navigator.msSaveBlob(blob, filename)\n      } else {\n        var link = document.createElement('a')\n        var body = document.querySelector('body')\n        link.href = window.URL.createObjectURL(blob)\n        link.download = filename\n        // fix Firefox\n        link.style.display = 'none'\n        body.appendChild(link)\n        link.click()\n        body.removeChild(link)\n        window.URL.revokeObjectURL(link.href)\n      }\n    },\n```\n\n## 下载服务器文件\n\n```js\nexport function exportInfo(info) {\n  return new Promise((resolve, reject)=>{\n    axios({\n      method:info.method,\n      url:info.params ? info.url+ setUrlParam(info.params) : info.url,\n      data:info.params,\n      responseType: info.responseType, // 优先尝试 blob\n      headers:{'Authorization':localStorage.getItem('token') ?'Bearer '+localStorage.getItem('token'):''}\n    }).then((res) => {\n      let objectUrl = null,blob = null;\n      if(info.type === 'excel'){\n        blob = new Blob([res.data], {\n          type: \"application/vnd.ms-excel\"\n        });\n        objectUrl = URL.createObjectURL(blob);\n      }else if(info.type === 'img'){\n        objectUrl = 'data:image/png;base64,' + btoa(new Uint8Array(res.data).reduce((data, byte) => data + String.fromCharCode(byte), ''));\n      }else if(info.type === 'zip'){\n        blob = new Blob([res.data], {type: 'application/zip'});\n        objectUrl = URL.createObjectURL(blob);\n      }else if(info.type === 'doc'){\n        blob = new Blob([res.data], {\n          type: \"application/msword\"\n        });\n        objectUrl = URL.createObjectURL(blob);\n      }\n      let a = document.createElement(\"a\");\n      a.href = objectUrl;\n      a.download = info.name;\n      //a.click();\n      //下面这个写法兼容火狐\n      a.dispatchEvent(new MouseEvent('click', {bubbles: true, cancelable: true, view: window}));\n      window.URL.revokeObjectURL(blob);\n      resolve(res)\n    }).catch(error => {\n      console.log(\"response: \", error);\n      reject(error)\n    })\n\n  })\n}\n```\n\n## 前端下载并打包zip\n\n```js\nrequire('script-loader!file-saver');\nimport JSZip from 'jszip'\nimport FileSaver from 'file-saver'\nconst getFile = (url) => {\n  return new Promise((resolve,reject)=>{\n    var xhr = new XMLHttpRequest();\n    xhr.open(\"GET\", url);\n    xhr.responseType = \"arraybuffer\";\n    xhr.onerror = function() {/* handle errors*/};\n    xhr.onload = function() {\n      if (xhr.status === 200) {\n        resolve(xhr.response)}\n      else {\n        reject({})\n      }\n    }\n    xhr.send();\n  })\n};\n\nexport async function exportZip( data,  zipName) {\n  const zip = new JSZip()\n  const cache = {}\n  const promises = []\n  await data.forEach(item => {\n      const promise = getFile(item.url).then(data => { // 下载文件, 并存成ArrayBuffer对象\n      zip.file(item.name+'.jpg', data, {\n        binary: true\n      }) // 逐个添加文件\n      cache[item.name] = data\n    })\n    promises.push(promise)\n  })\n  Promise.all(promises).then(() => {\n    zip.generateAsync({\n      type: \"blob\"\n    }).then(content => { // 生成二进制流\n      console.log(content)\n      saveAs(content, zipName+\".zip\") // 利用file-saver保存文件\n    })\n  })\n }\n```\n\n","slug":"可能用到的请求","published":1,"updated":"2021-06-29T02:43:28.559Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl0uux6vx001c7sufc4pe62h0","content":"<meta name=\"referrer\" content=\"no-referrer\"/>\n\n<h2 id=\"可能用到的请求和下载\"><a href=\"#可能用到的请求和下载\" class=\"headerlink\" title=\"可能用到的请求和下载\"></a>可能用到的请求和下载</h2><h3 id=\"vue中的axios请求\"><a href=\"#vue中的axios请求\" class=\"headerlink\" title=\"vue中的axios请求\"></a>vue中的axios请求</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> axios <span class=\"keyword\">from</span> <span class=\"string\">&#x27;axios&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> host = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;./host&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; <span class=\"title class_\">Message</span> &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;element-ui&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> service = axios.<span class=\"title function_\">create</span>(&#123;</span><br><span class=\"line\">  <span class=\"attr\">baseURL</span>: host.<span class=\"property\">host</span>,</span><br><span class=\"line\">  <span class=\"attr\">timeout</span>: <span class=\"number\">60000000</span>,</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">service.<span class=\"property\">interceptors</span>.<span class=\"property\">request</span>.<span class=\"title function_\">use</span>(</span><br><span class=\"line\">  <span class=\"function\">(<span class=\"params\">config</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> token = sessionStorage.<span class=\"title function_\">getItem</span>(<span class=\"string\">&#x27;token&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    config.<span class=\"property\">headers</span> = token</span><br><span class=\"line\">      ? &#123; <span class=\"title class_\">Authorization</span>: <span class=\"string\">&#x27;Bearer &#x27;</span> + sessionStorage.<span class=\"title function_\">getItem</span>(<span class=\"string\">&#x27;token&#x27;</span>) &#125;</span><br><span class=\"line\">      : <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (config.<span class=\"property\">ContentType</span>) &#123;</span><br><span class=\"line\">      config.<span class=\"property\">headers</span>[<span class=\"string\">&#x27;Content-Type&#x27;</span>] = config.<span class=\"property\">ContentType</span></span><br><span class=\"line\">      <span class=\"keyword\">delete</span> config.<span class=\"property\">ContentType</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (</span><br><span class=\"line\">      <span class=\"comment\">//本地环境情况下，需要把login的host写死。避免频繁的切换host</span></span><br><span class=\"line\">      process.<span class=\"property\">env</span>.<span class=\"property\">VUE_APP_DEBUG</span> === <span class=\"string\">&#x27;development&#x27;</span> &amp;&amp;</span><br><span class=\"line\">      config.<span class=\"property\">url</span>.<span class=\"title function_\">split</span>(<span class=\"string\">&#x27;?&#x27;</span>)[<span class=\"number\">0</span>] == <span class=\"string\">&#x27;/admin/login&#x27;</span></span><br><span class=\"line\">    ) &#123;</span><br><span class=\"line\">      config.<span class=\"property\">baseURL</span> = process.<span class=\"property\">env</span>.<span class=\"property\">VUE_APP_HOST</span></span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"comment\">//测试环境或者正式环境，需要将所有的host改成环境文件中的host</span></span><br><span class=\"line\">      <span class=\"keyword\">switch</span> (config.<span class=\"property\">basicUrl</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"string\">&#x27;/mall&#x27;</span>:</span><br><span class=\"line\">          config.<span class=\"property\">baseURL</span> = process.<span class=\"property\">env</span>.<span class=\"property\">VUE_APP_HOST1</span></span><br><span class=\"line\">          <span class=\"keyword\">break</span></span><br><span class=\"line\">        <span class=\"attr\">default</span>:</span><br><span class=\"line\">          config.<span class=\"property\">baseURL</span> = process.<span class=\"property\">env</span>.<span class=\"property\">VUE_APP_HOST</span></span><br><span class=\"line\">          <span class=\"keyword\">break</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> config</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"function\">(<span class=\"params\">error</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"title class_\">Promise</span>.<span class=\"title function_\">reject</span>()</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\">service.<span class=\"property\">interceptors</span>.<span class=\"property\">response</span>.<span class=\"title function_\">use</span>(</span><br><span class=\"line\">  <span class=\"function\">(<span class=\"params\">response</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (response.<span class=\"property\">status</span> === <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (response.<span class=\"property\">data</span>.<span class=\"property\">code</span> === <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> response.<span class=\"property\">data</span></span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"title class_\">Message</span>(&#123;</span><br><span class=\"line\">          <span class=\"attr\">message</span>: response.<span class=\"property\">data</span>.<span class=\"property\">msg</span>,</span><br><span class=\"line\">          <span class=\"attr\">type</span>: <span class=\"string\">&#x27;error&#x27;</span>,</span><br><span class=\"line\">          <span class=\"attr\">duration</span>: <span class=\"number\">2</span> * <span class=\"number\">1000</span>,</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"title class_\">Promise</span>.<span class=\"title function_\">reject</span>()</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"title class_\">Promise</span>.<span class=\"title function_\">reject</span>()</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"function\">(<span class=\"params\">error</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"title class_\">String</span>(error).<span class=\"title function_\">includes</span>(<span class=\"string\">&#x27;Network Error&#x27;</span>)) &#123;</span><br><span class=\"line\">      <span class=\"title class_\">Message</span>(&#123;</span><br><span class=\"line\">        <span class=\"attr\">message</span>: <span class=\"string\">&#x27;网络出错了,请检查网络&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">type</span>: <span class=\"string\">&#x27;error&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">duration</span>: <span class=\"number\">2</span> * <span class=\"number\">1000</span>,</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"title class_\">Promise</span>.<span class=\"title function_\">reject</span>(error)</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (error.<span class=\"property\">response</span>.<span class=\"property\">status</span> === <span class=\"number\">500</span> || error.<span class=\"property\">response</span>.<span class=\"property\">status</span> === <span class=\"number\">403</span>) &#123;</span><br><span class=\"line\">      <span class=\"title class_\">Message</span>(&#123;</span><br><span class=\"line\">        <span class=\"attr\">message</span>: <span class=\"string\">&#x27;登录已失效，请重新登录&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">type</span>: <span class=\"string\">&#x27;error&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">duration</span>: <span class=\"number\">2</span> * <span class=\"number\">1000</span>,</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">      <span class=\"built_in\">setTimeout</span>(<span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">        sessionStorage.<span class=\"title function_\">removeItem</span>(<span class=\"string\">&#x27;resources&#x27;</span>)</span><br><span class=\"line\">        sessionStorage.<span class=\"title function_\">removeItem</span>(<span class=\"string\">&#x27;token&#x27;</span>)</span><br><span class=\"line\">        sessionStorage.<span class=\"title function_\">removeItem</span>(<span class=\"string\">&#x27;adminUserInfo&#x27;</span>)</span><br><span class=\"line\">        <span class=\"variable language_\">window</span>.<span class=\"property\">location</span>.<span class=\"property\">href</span> =</span><br><span class=\"line\">          process.<span class=\"property\">env</span>.<span class=\"property\">NODE_ENV</span> === <span class=\"string\">&#x27;development&#x27;</span></span><br><span class=\"line\">            ? <span class=\"variable language_\">window</span>.<span class=\"property\">location</span>.<span class=\"property\">protocol</span> +</span><br><span class=\"line\">              <span class=\"string\">&#x27;//&#x27;</span> +</span><br><span class=\"line\">              <span class=\"variable language_\">window</span>.<span class=\"property\">location</span>.<span class=\"property\">host</span> +</span><br><span class=\"line\">              <span class=\"string\">&#x27;/#/login&#x27;</span></span><br><span class=\"line\">            : <span class=\"variable language_\">window</span>.<span class=\"property\">location</span>.<span class=\"property\">protocol</span> +</span><br><span class=\"line\">              <span class=\"string\">&#x27;//&#x27;</span> +</span><br><span class=\"line\">              <span class=\"variable language_\">window</span>.<span class=\"property\">location</span>.<span class=\"property\">host</span> +</span><br><span class=\"line\">              process.<span class=\"property\">env</span>.<span class=\"property\">VUE_APP_PUBLIC</span> +</span><br><span class=\"line\">              <span class=\"string\">&#x27;#/login&#x27;</span></span><br><span class=\"line\">      &#125;, <span class=\"number\">2000</span>)</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (</span><br><span class=\"line\">      error.<span class=\"property\">response</span>.<span class=\"property\">data</span>.<span class=\"property\">message</span> === <span class=\"string\">&#x27;The service or item was not found.&#x27;</span></span><br><span class=\"line\">    ) &#123;</span><br><span class=\"line\">      <span class=\"title class_\">Message</span>(&#123;</span><br><span class=\"line\">        <span class=\"attr\">message</span>: <span class=\"string\">&#x27;平台升级中...&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">type</span>: <span class=\"string\">&#x27;error&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">duration</span>: <span class=\"number\">2</span> * <span class=\"number\">1000</span>,</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"title class_\">Promise</span>.<span class=\"title function_\">reject</span>(error)</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"title class_\">Message</span>(&#123;</span><br><span class=\"line\">        <span class=\"attr\">message</span>: error.<span class=\"property\">response</span>.<span class=\"property\">data</span>.<span class=\"property\">message</span>,</span><br><span class=\"line\">        <span class=\"attr\">type</span>: <span class=\"string\">&#x27;error&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">duration</span>: <span class=\"number\">2</span> * <span class=\"number\">1000</span>,</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"title class_\">Promise</span>.<span class=\"title function_\">reject</span>(error)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> service</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"uni中的请求\"><a href=\"#uni中的请求\" class=\"headerlink\" title=\"uni中的请求\"></a>uni中的请求</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; browser, <span class=\"title class_\">Phone</span> &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;@/utils/net.js&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">request</span> = <span class=\"keyword\">async</span> (<span class=\"params\">config</span>) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"comment\">// ****************APP打包请求url配置****************</span></span><br><span class=\"line\">  <span class=\"comment\">//   @当APP进行打包后，从process.env.NODE_ENV获取得到的总是&#x27;production&#x27;，需要新加一种手动控制url的字段，by:李蒙</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// let currentEnv = &#x27;development&#x27; //打包APP时使用测试地址</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> currentEnv = <span class=\"string\">&#x27;production&#x27;</span> <span class=\"comment\">//打包APP时使用正式地址</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (!uni.<span class=\"title function_\">getStorageSync</span>(<span class=\"string\">&#x27;currentEnv&#x27;</span>))</span><br><span class=\"line\">    uni.<span class=\"title function_\">setStorageSync</span>(<span class=\"string\">&#x27;currentEnv&#x27;</span>, currentEnv)</span><br><span class=\"line\">  <span class=\"comment\">// ****************APP打包请求url配置****************</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">let</span> baseUrlDev = <span class=\"string\">&#x27;http://wx.114family.cn/family-iface-dev&#x27;</span> <span class=\"comment\">//默认请求</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> bseUrlPro = <span class=\"string\">&#x27;https://wechat.114family.cn/family-iface&#x27;</span> <span class=\"comment\">//默认请求</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> <span class=\"title class_\">WXbaseUrlDev</span> = <span class=\"string\">&#x27;http://wx.114family.cn/family-iface-tiny-dev&#x27;</span> <span class=\"comment\">//微店请求</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> <span class=\"title class_\">WXbaseUrlPro</span> = <span class=\"string\">&#x27;https://wechat.114family.cn/family-iface-tiny&#x27;</span> <span class=\"comment\">//微店请求</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> isDev = currentEnv == <span class=\"string\">&#x27;production&#x27;</span> <span class=\"comment\">//true为正式环境，false为测试环境</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 1.对基础url进行逻辑判断</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (config.<span class=\"property\">isV</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">//是否是微店请求</span></span><br><span class=\"line\">    config.<span class=\"property\">url</span> = isDev ? <span class=\"title class_\">WXbaseUrlPro</span> + config.<span class=\"property\">url</span> : <span class=\"title class_\">WXbaseUrlDev</span> + config.<span class=\"property\">url</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!uni.<span class=\"title function_\">getStorageSync</span>(<span class=\"string\">&#x27;__urlisV__&#x27;</span>)) &#123;</span><br><span class=\"line\">      uni.<span class=\"title function_\">setStorageSync</span>(<span class=\"string\">&#x27;__urlisV__&#x27;</span>, isDev ? <span class=\"title class_\">WXbaseUrlPro</span> : <span class=\"title class_\">WXbaseUrlDev</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (config.<span class=\"property\">isPay</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">//是否是支付请求</span></span><br><span class=\"line\">    config.<span class=\"property\">url</span> =</span><br><span class=\"line\">      <span class=\"string\">&#x27;https://share.qingmh.com/wechat-pay-common/wechatpay/hjt/create&#x27;</span></span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (config.<span class=\"property\">isPayQuery</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 是否是支付结果查询接口</span></span><br><span class=\"line\">    config.<span class=\"property\">url</span> =</span><br><span class=\"line\">      <span class=\"string\">&#x27;https://share.qingmh.com/wechat-pay-common/wechatpay/order/query&#x27;</span></span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">//默认请求</span></span><br><span class=\"line\">    config.<span class=\"property\">url</span> = isDev ? bseUrlPro + config.<span class=\"property\">url</span> : baseUrlDev + config.<span class=\"property\">url</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!uni.<span class=\"title function_\">getStorageSync</span>(<span class=\"string\">&#x27;url&#x27;</span>)) &#123;</span><br><span class=\"line\">      uni.<span class=\"title function_\">setStorageSync</span>(<span class=\"string\">&#x27;url&#x27;</span>, isDev ? bseUrlPro : baseUrlDev)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  config.<span class=\"property\">header</span> = &#123;</span><br><span class=\"line\">    <span class=\"attr\">region</span>: <span class=\"string\">&#x27;&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">terminalcode</span>: <span class=\"string\">&#x27;&#x27;</span>, <span class=\"comment\">// 设备号,PC端传浏览器版本号</span></span><br><span class=\"line\">    <span class=\"attr\">terminaltype</span>: <span class=\"string\">&#x27;&#x27;</span>, <span class=\"comment\">// 端口类型，例如 APP,XCX,WECHAT,WEB</span></span><br><span class=\"line\">    <span class=\"attr\">stoken</span>: <span class=\"string\">&#x27;&#x27;</span>, <span class=\"comment\">// 授权</span></span><br><span class=\"line\">    <span class=\"attr\">devicetype</span>: <span class=\"string\">&#x27;&#x27;</span>, <span class=\"comment\">//所属平台,例如 IOS,ANDROID,XCX,WECHAT,WEB(浏览器名称)</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//region :lat\t是\tstring纬度,lng\t是\tstring经度,province\t是\tstring省,city\t是\tstring市,district\t否\tstring区县,</span></span><br><span class=\"line\">  <span class=\"comment\">//street\t否\tstring街道,street_number\t否\tstring街道号</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> platform = uni.<span class=\"title function_\">getStorageSync</span>(<span class=\"string\">&#x27;platform&#x27;</span>) <span class=\"comment\">// 机型</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> stoken = uni.<span class=\"title function_\">getStorageSync</span>(<span class=\"string\">&#x27;stoken&#x27;</span>) <span class=\"comment\">// 获取后台反的token</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> isfirstGetSysInfo = uni.<span class=\"title function_\">getStorageSync</span>(<span class=\"string\">&#x27;firstGetSysInfo&#x27;</span>) <span class=\"comment\">//判断是否已经获取了设备的信息(某些浏览器，无法在第一次打开时获取信息，所以额外的添加了字段)</span></span><br><span class=\"line\">  <span class=\"comment\">// 2.对提供的options进行逻辑判断</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (config.<span class=\"property\">needToken</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">//当前请求是否需要token</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (stoken == <span class=\"string\">&#x27;&#x27;</span> || stoken == <span class=\"literal\">null</span> || stoken == <span class=\"literal\">undefined</span> || !stoken) &#123;</span><br><span class=\"line\">      <span class=\"comment\">//当请求中没有token时，直接跳到登录页，by：李蒙</span></span><br><span class=\"line\">      uni.<span class=\"title function_\">reLaunch</span>(&#123;</span><br><span class=\"line\">        <span class=\"attr\">url</span>: <span class=\"string\">&#x27;/pages/Login/otherLogin&#x27;</span>,</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> region = &#123;</span><br><span class=\"line\">        <span class=\"attr\">lat</span>: <span class=\"string\">&#x27;30.680905&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">lng</span>: <span class=\"string\">&#x27;104.117462&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">province</span>: <span class=\"string\">&#x27;四川省&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">city</span>: <span class=\"string\">&#x27;成都市&#x27;</span>,</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"comment\">// if (uni.getStorageSync(&#x27;region&#x27;)) &#123;</span></span><br><span class=\"line\">      <span class=\"comment\">//   let regData = JSON.parse(uni.getStorageSync(&#x27;region&#x27;))</span></span><br><span class=\"line\">      <span class=\"comment\">//   region = &#123; ...region, ...regData &#125;</span></span><br><span class=\"line\">      <span class=\"comment\">// &#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">// config.header.region = encodeURIComponent(JSON.stringify(region))</span></span><br><span class=\"line\">      config.<span class=\"property\">header</span>.<span class=\"property\">stoken</span> = stoken</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">//新增请求头内的devicetype等信息</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (isfirstGetSysInfo == <span class=\"string\">&#x27;done&#x27;</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">//获取了手机系统信息</span></span><br><span class=\"line\">    config.<span class=\"property\">header</span>.<span class=\"property\">terminalcode</span> = uni.<span class=\"title function_\">getStorageSync</span>(<span class=\"string\">&#x27;model&#x27;</span>)</span><br><span class=\"line\">    config.<span class=\"property\">header</span>.<span class=\"property\">terminaltype</span> = <span class=\"string\">&#x27;WAP&#x27;</span></span><br><span class=\"line\">    config.<span class=\"property\">header</span>.<span class=\"property\">devicetype</span> = uni.<span class=\"title function_\">getStorageSync</span>(<span class=\"string\">&#x27;platform&#x27;</span>)</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">//未获取手机系统信息</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> getSystemInfoSync = <span class=\"keyword\">await</span> uni.<span class=\"title function_\">getSystemInfoSync</span>()</span><br><span class=\"line\">    uni.<span class=\"title function_\">setStorageSync</span>(<span class=\"string\">&#x27;firstGetSysInfo&#x27;</span>, <span class=\"string\">&#x27;done&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">let</span> devicetypeTem = <span class=\"string\">&#x27;android&#x27;</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> modelTem = <span class=\"string\">&#x27;WAP&#x27;</span></span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(getSystemInfoSync, <span class=\"string\">&#x27;2222222&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (getSystemInfoSync &amp;&amp; getSystemInfoSync.<span class=\"property\">platform</span> == <span class=\"string\">&#x27;other&#x27;</span>) &#123;</span><br><span class=\"line\">      <span class=\"comment\">//当使用wap开发时，有可能获取不到系统信息，改用navigator.userAgent</span></span><br><span class=\"line\">      <span class=\"keyword\">let</span> ua = <span class=\"title function_\">browser</span>()</span><br><span class=\"line\">      <span class=\"keyword\">let</span> phone = <span class=\"title class_\">Phone</span>()</span><br><span class=\"line\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(ua, phone, <span class=\"string\">&#x27;获取的浏览器数据&#x27;</span>)</span><br><span class=\"line\">      config.<span class=\"property\">header</span>.<span class=\"property\">terminalcode</span> = ua.<span class=\"title function_\">split</span>(<span class=\"string\">&#x27;/&#x27;</span>) &amp;&amp; ua.<span class=\"title function_\">split</span>(<span class=\"string\">&#x27;/&#x27;</span>)[<span class=\"number\">0</span>]</span><br><span class=\"line\">      config.<span class=\"property\">header</span>.<span class=\"property\">terminaltype</span> = <span class=\"string\">&#x27;WAP&#x27;</span></span><br><span class=\"line\">      config.<span class=\"property\">header</span>.<span class=\"property\">devicetype</span> = phone</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      devicetypeTem =</span><br><span class=\"line\">        getSystemInfoSync.<span class=\"property\">platform</span> == <span class=\"string\">&#x27;devtools&#x27;</span></span><br><span class=\"line\">          ? <span class=\"string\">&#x27;ios&#x27;</span></span><br><span class=\"line\">          : getSystemInfoSync.<span class=\"property\">platform</span></span><br><span class=\"line\">      modelTem = getSystemInfoSync.<span class=\"property\">model</span> ? getSystemInfoSync.<span class=\"property\">model</span> : <span class=\"string\">&#x27;android&#x27;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(modelTem, <span class=\"string\">&#x27;1111&#x27;</span>)</span><br><span class=\"line\">    config.<span class=\"property\">header</span>.<span class=\"property\">terminalcode</span> = modelTem</span><br><span class=\"line\">    config.<span class=\"property\">header</span>.<span class=\"property\">terminaltype</span> = <span class=\"string\">&#x27;WAP&#x27;</span></span><br><span class=\"line\">    config.<span class=\"property\">header</span>.<span class=\"property\">devicetype</span> = devicetypeTem</span><br><span class=\"line\">    <span class=\"comment\">//本地存储，后续可能会用到</span></span><br><span class=\"line\">    uni.<span class=\"title function_\">setStorageSync</span>(<span class=\"string\">&#x27;model&#x27;</span>, modelTem)</span><br><span class=\"line\">    uni.<span class=\"title function_\">setStorageSync</span>(<span class=\"string\">&#x27;platform&#x27;</span>, devicetypeTem)</span><br><span class=\"line\">    uni.<span class=\"title function_\">setStorageSync</span>(<span class=\"string\">&#x27;windowWidth&#x27;</span>, getSystemInfoSync.<span class=\"property\">windowWidth</span>)</span><br><span class=\"line\">    uni.<span class=\"title function_\">setStorageSync</span>(<span class=\"string\">&#x27;windowHeight&#x27;</span>, getSystemInfoSync.<span class=\"property\">windowHeight</span>)</span><br><span class=\"line\">    uni.<span class=\"title function_\">setStorageSync</span>(<span class=\"string\">&#x27;safeAreaH&#x27;</span>, getSystemInfoSync.<span class=\"property\">safeArea</span>.<span class=\"property\">height</span>)</span><br><span class=\"line\">    uni.<span class=\"title function_\">setStorageSync</span>(<span class=\"string\">&#x27;safeAreaT&#x27;</span>, getSystemInfoSync.<span class=\"property\">safeArea</span>.<span class=\"property\">top</span>)</span><br><span class=\"line\">    uni.<span class=\"title function_\">setStorageSync</span>(<span class=\"string\">&#x27;statusBarHeight&#x27;</span>, getSystemInfoSync.<span class=\"property\">statusBarHeight</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (!config.<span class=\"property\">data</span>) &#123;</span><br><span class=\"line\">    config.<span class=\"property\">data</span> = &#123;&#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">//存储一下configHeaderInfo,当你跳转到图文海报的h5的时候，需要将header做一个替换</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (!uni.<span class=\"title function_\">getStorageSync</span>(<span class=\"string\">&#x27;configHeaderInfo&#x27;</span>))</span><br><span class=\"line\">    uni.<span class=\"title function_\">setStorageSync</span>(<span class=\"string\">&#x27;configHeaderInfo&#x27;</span>, config.<span class=\"property\">header</span>)</span><br><span class=\"line\">  <span class=\"comment\">//   console.log(config, &#x27;*****请求中携带的参数********&#x27;)</span></span><br><span class=\"line\">  <span class=\"comment\">// 3.将已经配置好的uni.request作为一个promise返回</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> promise = <span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    uni</span><br><span class=\"line\">      .<span class=\"title function_\">request</span>(config)</span><br><span class=\"line\">      .<span class=\"title function_\">then</span>(<span class=\"function\">(<span class=\"params\">responses</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(responses, <span class=\"string\">&#x27;返回的数据&#x27;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (responses[<span class=\"number\">0</span>]) &#123;</span><br><span class=\"line\">          <span class=\"comment\">//   if (uni.getStorageSync(&#x27;firstLogin&#x27;)) &#123;</span></span><br><span class=\"line\">          <span class=\"comment\">//     reject(&#123; message: &#x27;网络超时&#x27; &#125;)</span></span><br><span class=\"line\">          <span class=\"comment\">//   &#125; else &#123;</span></span><br><span class=\"line\">          uni.<span class=\"title function_\">clearStorageSync</span>()</span><br><span class=\"line\">          uni.<span class=\"title function_\">reLaunch</span>(&#123;</span><br><span class=\"line\">            <span class=\"attr\">url</span>: <span class=\"string\">&#x27;/pages/Login/otherLogin&#x27;</span>,</span><br><span class=\"line\">          &#125;)</span><br><span class=\"line\">          <span class=\"comment\">//   &#125;</span></span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">          <span class=\"keyword\">let</span> response = responses[<span class=\"number\">1</span>].<span class=\"property\">data</span> <span class=\"comment\">// 如果返回的结果是data.data的，嫌麻烦可以用这个，return res,这样只返回一个data</span></span><br><span class=\"line\">          <span class=\"keyword\">if</span> (</span><br><span class=\"line\">            (response.<span class=\"property\">code</span> === <span class=\"string\">&#x27;0016&#x27;</span> &amp;&amp; response.<span class=\"property\">message</span> === <span class=\"string\">&#x27;口令认证失败&#x27;</span>) ||</span><br><span class=\"line\">            response.<span class=\"property\">code</span> === <span class=\"string\">&#x27;00909&#x27;</span> ||</span><br><span class=\"line\">            response.<span class=\"property\">message</span> === <span class=\"string\">&#x27;网络超时&#x27;</span></span><br><span class=\"line\">          ) &#123;</span><br><span class=\"line\">            uni.<span class=\"title function_\">clearStorageSync</span>()</span><br><span class=\"line\">            uni.<span class=\"title function_\">reLaunch</span>(&#123;</span><br><span class=\"line\">              <span class=\"attr\">url</span>: <span class=\"string\">&#x27;/pages/Login/otherLogin&#x27;</span>,</span><br><span class=\"line\">              <span class=\"title function_\">fail</span>(<span class=\"params\">e</span>) &#123;</span><br><span class=\"line\">                <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(e)</span><br><span class=\"line\">              &#125;,</span><br><span class=\"line\">            &#125;)</span><br><span class=\"line\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;触发认证失败&#x27;</span>, response)</span><br><span class=\"line\">          &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"title function_\">resolve</span>(response)</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">      .<span class=\"title function_\">catch</span>(<span class=\"function\">(<span class=\"params\">error</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"title function_\">reject</span>(error)</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  <span class=\"keyword\">return</span> promise</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> request</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"下载oss地址文件\"><a href=\"#下载oss地址文件\" class=\"headerlink\" title=\"下载oss地址文件\"></a>下载oss地址文件</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">downLoadFile</span>(<span class=\"params\">e</span>) &#123;</span><br><span class=\"line\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(e, <span class=\"string\">&#x27;e&#x27;</span>)</span><br><span class=\"line\">      <span class=\"keyword\">let</span> str = e.<span class=\"property\">name</span>.<span class=\"title function_\">split</span>(<span class=\"string\">&#x27;.&#x27;</span>)[<span class=\"number\">0</span>]</span><br><span class=\"line\">      <span class=\"comment\">//   this.downloadByAxios(e.url, str)</span></span><br><span class=\"line\">      <span class=\"keyword\">let</span> urlstr = e.<span class=\"property\">url</span>.<span class=\"title function_\">replace</span>(<span class=\"string\">&#x27;http&#x27;</span>, <span class=\"string\">&#x27;https&#x27;</span>)</span><br><span class=\"line\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(urlstr, <span class=\"string\">&#x27;urlstr&#x27;</span>)</span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"title function_\">download</span>(urlstr, str)</span><br><span class=\"line\">    &#125;,</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">download</span>(<span class=\"params\">url, filename</span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * 下载</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@param</span>  &#123;<span class=\"type\">String</span>&#125; url 目标文件地址</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@param</span>  &#123;<span class=\"type\">String</span>&#125; filename 想要保存的文件名称</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"variable language_\">this</span>.<span class=\"title function_\">getBlob</span>(url, <span class=\"function\">(<span class=\"params\">blob</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"title function_\">saveAs</span>(blob, filename)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\"><span class=\"title function_\">getBlob</span>(<span class=\"params\">url, cb</span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * 获取 blob</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@param</span>  &#123;<span class=\"type\">String</span>&#125; url 目标文件地址</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">cb</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> xhr = <span class=\"keyword\">new</span> <span class=\"title class_\">XMLHttpRequest</span>()</span><br><span class=\"line\">  xhr.<span class=\"title function_\">open</span>(<span class=\"string\">&#x27;GET&#x27;</span>, url, <span class=\"literal\">true</span>)</span><br><span class=\"line\">  xhr.<span class=\"property\">responseType</span> = <span class=\"string\">&#x27;blob&#x27;</span></span><br><span class=\"line\">  xhr.<span class=\"property\">onload</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (xhr.<span class=\"property\">status</span> === <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">      <span class=\"title function_\">cb</span>(xhr.<span class=\"property\">response</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  xhr.<span class=\"title function_\">send</span>()</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\"><span class=\"title function_\">saveAs</span>(<span class=\"params\">blob, filename</span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * 保存</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@param</span>  &#123;<span class=\"type\">Blob</span>&#125; <span class=\"variable\">blob</span></span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@param</span>  &#123;<span class=\"type\">String</span>&#125; filename 想要保存的文件名称</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"variable language_\">window</span>.<span class=\"property\">navigator</span>.<span class=\"property\">msSaveOrOpenBlob</span>) &#123;</span><br><span class=\"line\">    navigator.<span class=\"title function_\">msSaveBlob</span>(blob, filename)</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> link = <span class=\"variable language_\">document</span>.<span class=\"title function_\">createElement</span>(<span class=\"string\">&#x27;a&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">var</span> body = <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&#x27;body&#x27;</span>)</span><br><span class=\"line\">    link.<span class=\"property\">href</span> = <span class=\"variable language_\">window</span>.<span class=\"property\">URL</span>.<span class=\"title function_\">createObjectURL</span>(blob)</span><br><span class=\"line\">    link.<span class=\"property\">download</span> = filename</span><br><span class=\"line\">    <span class=\"comment\">// fix Firefox</span></span><br><span class=\"line\">    link.<span class=\"property\">style</span>.<span class=\"property\">display</span> = <span class=\"string\">&#x27;none&#x27;</span></span><br><span class=\"line\">    body.<span class=\"title function_\">appendChild</span>(link)</span><br><span class=\"line\">    link.<span class=\"title function_\">click</span>()</span><br><span class=\"line\">    body.<span class=\"title function_\">removeChild</span>(link)</span><br><span class=\"line\">    <span class=\"variable language_\">window</span>.<span class=\"property\">URL</span>.<span class=\"title function_\">revokeObjectURL</span>(link.<span class=\"property\">href</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"下载服务器文件\"><a href=\"#下载服务器文件\" class=\"headerlink\" title=\"下载服务器文件\"></a>下载服务器文件</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">function</span> <span class=\"title function_\">exportInfo</span>(<span class=\"params\">info</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>)=&gt;</span>&#123;</span><br><span class=\"line\">    <span class=\"title function_\">axios</span>(&#123;</span><br><span class=\"line\">      <span class=\"attr\">method</span>:info.<span class=\"property\">method</span>,</span><br><span class=\"line\">      <span class=\"attr\">url</span>:info.<span class=\"property\">params</span> ? info.<span class=\"property\">url</span>+ <span class=\"title function_\">setUrlParam</span>(info.<span class=\"property\">params</span>) : info.<span class=\"property\">url</span>,</span><br><span class=\"line\">      <span class=\"attr\">data</span>:info.<span class=\"property\">params</span>,</span><br><span class=\"line\">      <span class=\"attr\">responseType</span>: info.<span class=\"property\">responseType</span>, <span class=\"comment\">// 优先尝试 blob</span></span><br><span class=\"line\">      <span class=\"attr\">headers</span>:&#123;<span class=\"string\">&#x27;Authorization&#x27;</span>:<span class=\"variable language_\">localStorage</span>.<span class=\"title function_\">getItem</span>(<span class=\"string\">&#x27;token&#x27;</span>) ?<span class=\"string\">&#x27;Bearer &#x27;</span>+<span class=\"variable language_\">localStorage</span>.<span class=\"title function_\">getItem</span>(<span class=\"string\">&#x27;token&#x27;</span>):<span class=\"string\">&#x27;&#x27;</span>&#125;</span><br><span class=\"line\">    &#125;).<span class=\"title function_\">then</span>(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">let</span> objectUrl = <span class=\"literal\">null</span>,blob = <span class=\"literal\">null</span>;</span><br><span class=\"line\">      <span class=\"keyword\">if</span>(info.<span class=\"property\">type</span> === <span class=\"string\">&#x27;excel&#x27;</span>)&#123;</span><br><span class=\"line\">        blob = <span class=\"keyword\">new</span> <span class=\"title class_\">Blob</span>([res.<span class=\"property\">data</span>], &#123;</span><br><span class=\"line\">          <span class=\"attr\">type</span>: <span class=\"string\">&quot;application/vnd.ms-excel&quot;</span></span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">        objectUrl = <span class=\"variable constant_\">URL</span>.<span class=\"title function_\">createObjectURL</span>(blob);</span><br><span class=\"line\">      &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(info.<span class=\"property\">type</span> === <span class=\"string\">&#x27;img&#x27;</span>)&#123;</span><br><span class=\"line\">        objectUrl = <span class=\"string\">&#x27;data:image/png;base64,&#x27;</span> + <span class=\"title function_\">btoa</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">Uint8Array</span>(res.<span class=\"property\">data</span>).<span class=\"title function_\">reduce</span>(<span class=\"function\">(<span class=\"params\">data, byte</span>) =&gt;</span> data + <span class=\"title class_\">String</span>.<span class=\"title function_\">fromCharCode</span>(byte), <span class=\"string\">&#x27;&#x27;</span>));</span><br><span class=\"line\">      &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(info.<span class=\"property\">type</span> === <span class=\"string\">&#x27;zip&#x27;</span>)&#123;</span><br><span class=\"line\">        blob = <span class=\"keyword\">new</span> <span class=\"title class_\">Blob</span>([res.<span class=\"property\">data</span>], &#123;<span class=\"attr\">type</span>: <span class=\"string\">&#x27;application/zip&#x27;</span>&#125;);</span><br><span class=\"line\">        objectUrl = <span class=\"variable constant_\">URL</span>.<span class=\"title function_\">createObjectURL</span>(blob);</span><br><span class=\"line\">      &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(info.<span class=\"property\">type</span> === <span class=\"string\">&#x27;doc&#x27;</span>)&#123;</span><br><span class=\"line\">        blob = <span class=\"keyword\">new</span> <span class=\"title class_\">Blob</span>([res.<span class=\"property\">data</span>], &#123;</span><br><span class=\"line\">          <span class=\"attr\">type</span>: <span class=\"string\">&quot;application/msword&quot;</span></span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">        objectUrl = <span class=\"variable constant_\">URL</span>.<span class=\"title function_\">createObjectURL</span>(blob);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">let</span> a = <span class=\"variable language_\">document</span>.<span class=\"title function_\">createElement</span>(<span class=\"string\">&quot;a&quot;</span>);</span><br><span class=\"line\">      a.<span class=\"property\">href</span> = objectUrl;</span><br><span class=\"line\">      a.<span class=\"property\">download</span> = info.<span class=\"property\">name</span>;</span><br><span class=\"line\">      <span class=\"comment\">//a.click();</span></span><br><span class=\"line\">      <span class=\"comment\">//下面这个写法兼容火狐</span></span><br><span class=\"line\">      a.<span class=\"title function_\">dispatchEvent</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">MouseEvent</span>(<span class=\"string\">&#x27;click&#x27;</span>, &#123;<span class=\"attr\">bubbles</span>: <span class=\"literal\">true</span>, <span class=\"attr\">cancelable</span>: <span class=\"literal\">true</span>, <span class=\"attr\">view</span>: <span class=\"variable language_\">window</span>&#125;));</span><br><span class=\"line\">      <span class=\"variable language_\">window</span>.<span class=\"property\">URL</span>.<span class=\"title function_\">revokeObjectURL</span>(blob);</span><br><span class=\"line\">      <span class=\"title function_\">resolve</span>(res)</span><br><span class=\"line\">    &#125;).<span class=\"title function_\">catch</span>(<span class=\"function\"><span class=\"params\">error</span> =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;response: &quot;</span>, error);</span><br><span class=\"line\">      <span class=\"title function_\">reject</span>(error)</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"前端下载并打包zip\"><a href=\"#前端下载并打包zip\" class=\"headerlink\" title=\"前端下载并打包zip\"></a>前端下载并打包zip</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">require</span>(<span class=\"string\">&#x27;script-loader!file-saver&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">JSZip</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;jszip&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">FileSaver</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;file-saver&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">getFile</span> = (<span class=\"params\">url</span>) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve,reject</span>)=&gt;</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> xhr = <span class=\"keyword\">new</span> <span class=\"title class_\">XMLHttpRequest</span>();</span><br><span class=\"line\">    xhr.<span class=\"title function_\">open</span>(<span class=\"string\">&quot;GET&quot;</span>, url);</span><br><span class=\"line\">    xhr.<span class=\"property\">responseType</span> = <span class=\"string\">&quot;arraybuffer&quot;</span>;</span><br><span class=\"line\">    xhr.<span class=\"property\">onerror</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;<span class=\"comment\">/* handle errors*/</span>&#125;;</span><br><span class=\"line\">    xhr.<span class=\"property\">onload</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (xhr.<span class=\"property\">status</span> === <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">        <span class=\"title function_\">resolve</span>(xhr.<span class=\"property\">response</span>)&#125;</span><br><span class=\"line\">      <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"title function_\">reject</span>(&#123;&#125;)</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    xhr.<span class=\"title function_\">send</span>();</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">async</span> <span class=\"keyword\">function</span> <span class=\"title function_\">exportZip</span>(<span class=\"params\"> data,  zipName</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> zip = <span class=\"keyword\">new</span> <span class=\"title class_\">JSZip</span>()</span><br><span class=\"line\">  <span class=\"keyword\">const</span> cache = &#123;&#125;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> promises = []</span><br><span class=\"line\">  <span class=\"keyword\">await</span> data.<span class=\"title function_\">forEach</span>(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> promise = <span class=\"title function_\">getFile</span>(item.<span class=\"property\">url</span>).<span class=\"title function_\">then</span>(<span class=\"function\"><span class=\"params\">data</span> =&gt;</span> &#123; <span class=\"comment\">// 下载文件, 并存成ArrayBuffer对象</span></span><br><span class=\"line\">      zip.<span class=\"title function_\">file</span>(item.<span class=\"property\">name</span>+<span class=\"string\">&#x27;.jpg&#x27;</span>, data, &#123;</span><br><span class=\"line\">        <span class=\"attr\">binary</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">      &#125;) <span class=\"comment\">// 逐个添加文件</span></span><br><span class=\"line\">      cache[item.<span class=\"property\">name</span>] = data</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    promises.<span class=\"title function_\">push</span>(promise)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  <span class=\"title class_\">Promise</span>.<span class=\"title function_\">all</span>(promises).<span class=\"title function_\">then</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    zip.<span class=\"title function_\">generateAsync</span>(&#123;</span><br><span class=\"line\">      <span class=\"attr\">type</span>: <span class=\"string\">&quot;blob&quot;</span></span><br><span class=\"line\">    &#125;).<span class=\"title function_\">then</span>(<span class=\"function\"><span class=\"params\">content</span> =&gt;</span> &#123; <span class=\"comment\">// 生成二进制流</span></span><br><span class=\"line\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(content)</span><br><span class=\"line\">      <span class=\"title function_\">saveAs</span>(content, zipName+<span class=\"string\">&quot;.zip&quot;</span>) <span class=\"comment\">// 利用file-saver保存文件</span></span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"","more":"<meta name=\"referrer\" content=\"no-referrer\"/>\n\n<h2 id=\"可能用到的请求和下载\"><a href=\"#可能用到的请求和下载\" class=\"headerlink\" title=\"可能用到的请求和下载\"></a>可能用到的请求和下载</h2><h3 id=\"vue中的axios请求\"><a href=\"#vue中的axios请求\" class=\"headerlink\" title=\"vue中的axios请求\"></a>vue中的axios请求</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> axios <span class=\"keyword\">from</span> <span class=\"string\">&#x27;axios&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> host = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;./host&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; <span class=\"title class_\">Message</span> &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;element-ui&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> service = axios.<span class=\"title function_\">create</span>(&#123;</span><br><span class=\"line\">  <span class=\"attr\">baseURL</span>: host.<span class=\"property\">host</span>,</span><br><span class=\"line\">  <span class=\"attr\">timeout</span>: <span class=\"number\">60000000</span>,</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">service.<span class=\"property\">interceptors</span>.<span class=\"property\">request</span>.<span class=\"title function_\">use</span>(</span><br><span class=\"line\">  <span class=\"function\">(<span class=\"params\">config</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> token = sessionStorage.<span class=\"title function_\">getItem</span>(<span class=\"string\">&#x27;token&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    config.<span class=\"property\">headers</span> = token</span><br><span class=\"line\">      ? &#123; <span class=\"title class_\">Authorization</span>: <span class=\"string\">&#x27;Bearer &#x27;</span> + sessionStorage.<span class=\"title function_\">getItem</span>(<span class=\"string\">&#x27;token&#x27;</span>) &#125;</span><br><span class=\"line\">      : <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (config.<span class=\"property\">ContentType</span>) &#123;</span><br><span class=\"line\">      config.<span class=\"property\">headers</span>[<span class=\"string\">&#x27;Content-Type&#x27;</span>] = config.<span class=\"property\">ContentType</span></span><br><span class=\"line\">      <span class=\"keyword\">delete</span> config.<span class=\"property\">ContentType</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (</span><br><span class=\"line\">      <span class=\"comment\">//本地环境情况下，需要把login的host写死。避免频繁的切换host</span></span><br><span class=\"line\">      process.<span class=\"property\">env</span>.<span class=\"property\">VUE_APP_DEBUG</span> === <span class=\"string\">&#x27;development&#x27;</span> &amp;&amp;</span><br><span class=\"line\">      config.<span class=\"property\">url</span>.<span class=\"title function_\">split</span>(<span class=\"string\">&#x27;?&#x27;</span>)[<span class=\"number\">0</span>] == <span class=\"string\">&#x27;/admin/login&#x27;</span></span><br><span class=\"line\">    ) &#123;</span><br><span class=\"line\">      config.<span class=\"property\">baseURL</span> = process.<span class=\"property\">env</span>.<span class=\"property\">VUE_APP_HOST</span></span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"comment\">//测试环境或者正式环境，需要将所有的host改成环境文件中的host</span></span><br><span class=\"line\">      <span class=\"keyword\">switch</span> (config.<span class=\"property\">basicUrl</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"string\">&#x27;/mall&#x27;</span>:</span><br><span class=\"line\">          config.<span class=\"property\">baseURL</span> = process.<span class=\"property\">env</span>.<span class=\"property\">VUE_APP_HOST1</span></span><br><span class=\"line\">          <span class=\"keyword\">break</span></span><br><span class=\"line\">        <span class=\"attr\">default</span>:</span><br><span class=\"line\">          config.<span class=\"property\">baseURL</span> = process.<span class=\"property\">env</span>.<span class=\"property\">VUE_APP_HOST</span></span><br><span class=\"line\">          <span class=\"keyword\">break</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> config</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"function\">(<span class=\"params\">error</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"title class_\">Promise</span>.<span class=\"title function_\">reject</span>()</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\">service.<span class=\"property\">interceptors</span>.<span class=\"property\">response</span>.<span class=\"title function_\">use</span>(</span><br><span class=\"line\">  <span class=\"function\">(<span class=\"params\">response</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (response.<span class=\"property\">status</span> === <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (response.<span class=\"property\">data</span>.<span class=\"property\">code</span> === <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> response.<span class=\"property\">data</span></span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"title class_\">Message</span>(&#123;</span><br><span class=\"line\">          <span class=\"attr\">message</span>: response.<span class=\"property\">data</span>.<span class=\"property\">msg</span>,</span><br><span class=\"line\">          <span class=\"attr\">type</span>: <span class=\"string\">&#x27;error&#x27;</span>,</span><br><span class=\"line\">          <span class=\"attr\">duration</span>: <span class=\"number\">2</span> * <span class=\"number\">1000</span>,</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"title class_\">Promise</span>.<span class=\"title function_\">reject</span>()</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"title class_\">Promise</span>.<span class=\"title function_\">reject</span>()</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"function\">(<span class=\"params\">error</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"title class_\">String</span>(error).<span class=\"title function_\">includes</span>(<span class=\"string\">&#x27;Network Error&#x27;</span>)) &#123;</span><br><span class=\"line\">      <span class=\"title class_\">Message</span>(&#123;</span><br><span class=\"line\">        <span class=\"attr\">message</span>: <span class=\"string\">&#x27;网络出错了,请检查网络&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">type</span>: <span class=\"string\">&#x27;error&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">duration</span>: <span class=\"number\">2</span> * <span class=\"number\">1000</span>,</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"title class_\">Promise</span>.<span class=\"title function_\">reject</span>(error)</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (error.<span class=\"property\">response</span>.<span class=\"property\">status</span> === <span class=\"number\">500</span> || error.<span class=\"property\">response</span>.<span class=\"property\">status</span> === <span class=\"number\">403</span>) &#123;</span><br><span class=\"line\">      <span class=\"title class_\">Message</span>(&#123;</span><br><span class=\"line\">        <span class=\"attr\">message</span>: <span class=\"string\">&#x27;登录已失效，请重新登录&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">type</span>: <span class=\"string\">&#x27;error&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">duration</span>: <span class=\"number\">2</span> * <span class=\"number\">1000</span>,</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">      <span class=\"built_in\">setTimeout</span>(<span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">        sessionStorage.<span class=\"title function_\">removeItem</span>(<span class=\"string\">&#x27;resources&#x27;</span>)</span><br><span class=\"line\">        sessionStorage.<span class=\"title function_\">removeItem</span>(<span class=\"string\">&#x27;token&#x27;</span>)</span><br><span class=\"line\">        sessionStorage.<span class=\"title function_\">removeItem</span>(<span class=\"string\">&#x27;adminUserInfo&#x27;</span>)</span><br><span class=\"line\">        <span class=\"variable language_\">window</span>.<span class=\"property\">location</span>.<span class=\"property\">href</span> =</span><br><span class=\"line\">          process.<span class=\"property\">env</span>.<span class=\"property\">NODE_ENV</span> === <span class=\"string\">&#x27;development&#x27;</span></span><br><span class=\"line\">            ? <span class=\"variable language_\">window</span>.<span class=\"property\">location</span>.<span class=\"property\">protocol</span> +</span><br><span class=\"line\">              <span class=\"string\">&#x27;//&#x27;</span> +</span><br><span class=\"line\">              <span class=\"variable language_\">window</span>.<span class=\"property\">location</span>.<span class=\"property\">host</span> +</span><br><span class=\"line\">              <span class=\"string\">&#x27;/#/login&#x27;</span></span><br><span class=\"line\">            : <span class=\"variable language_\">window</span>.<span class=\"property\">location</span>.<span class=\"property\">protocol</span> +</span><br><span class=\"line\">              <span class=\"string\">&#x27;//&#x27;</span> +</span><br><span class=\"line\">              <span class=\"variable language_\">window</span>.<span class=\"property\">location</span>.<span class=\"property\">host</span> +</span><br><span class=\"line\">              process.<span class=\"property\">env</span>.<span class=\"property\">VUE_APP_PUBLIC</span> +</span><br><span class=\"line\">              <span class=\"string\">&#x27;#/login&#x27;</span></span><br><span class=\"line\">      &#125;, <span class=\"number\">2000</span>)</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (</span><br><span class=\"line\">      error.<span class=\"property\">response</span>.<span class=\"property\">data</span>.<span class=\"property\">message</span> === <span class=\"string\">&#x27;The service or item was not found.&#x27;</span></span><br><span class=\"line\">    ) &#123;</span><br><span class=\"line\">      <span class=\"title class_\">Message</span>(&#123;</span><br><span class=\"line\">        <span class=\"attr\">message</span>: <span class=\"string\">&#x27;平台升级中...&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">type</span>: <span class=\"string\">&#x27;error&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">duration</span>: <span class=\"number\">2</span> * <span class=\"number\">1000</span>,</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"title class_\">Promise</span>.<span class=\"title function_\">reject</span>(error)</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"title class_\">Message</span>(&#123;</span><br><span class=\"line\">        <span class=\"attr\">message</span>: error.<span class=\"property\">response</span>.<span class=\"property\">data</span>.<span class=\"property\">message</span>,</span><br><span class=\"line\">        <span class=\"attr\">type</span>: <span class=\"string\">&#x27;error&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">duration</span>: <span class=\"number\">2</span> * <span class=\"number\">1000</span>,</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"title class_\">Promise</span>.<span class=\"title function_\">reject</span>(error)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> service</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"uni中的请求\"><a href=\"#uni中的请求\" class=\"headerlink\" title=\"uni中的请求\"></a>uni中的请求</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; browser, <span class=\"title class_\">Phone</span> &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;@/utils/net.js&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">request</span> = <span class=\"keyword\">async</span> (<span class=\"params\">config</span>) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"comment\">// ****************APP打包请求url配置****************</span></span><br><span class=\"line\">  <span class=\"comment\">//   @当APP进行打包后，从process.env.NODE_ENV获取得到的总是&#x27;production&#x27;，需要新加一种手动控制url的字段，by:李蒙</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// let currentEnv = &#x27;development&#x27; //打包APP时使用测试地址</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> currentEnv = <span class=\"string\">&#x27;production&#x27;</span> <span class=\"comment\">//打包APP时使用正式地址</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (!uni.<span class=\"title function_\">getStorageSync</span>(<span class=\"string\">&#x27;currentEnv&#x27;</span>))</span><br><span class=\"line\">    uni.<span class=\"title function_\">setStorageSync</span>(<span class=\"string\">&#x27;currentEnv&#x27;</span>, currentEnv)</span><br><span class=\"line\">  <span class=\"comment\">// ****************APP打包请求url配置****************</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">let</span> baseUrlDev = <span class=\"string\">&#x27;http://wx.114family.cn/family-iface-dev&#x27;</span> <span class=\"comment\">//默认请求</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> bseUrlPro = <span class=\"string\">&#x27;https://wechat.114family.cn/family-iface&#x27;</span> <span class=\"comment\">//默认请求</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> <span class=\"title class_\">WXbaseUrlDev</span> = <span class=\"string\">&#x27;http://wx.114family.cn/family-iface-tiny-dev&#x27;</span> <span class=\"comment\">//微店请求</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> <span class=\"title class_\">WXbaseUrlPro</span> = <span class=\"string\">&#x27;https://wechat.114family.cn/family-iface-tiny&#x27;</span> <span class=\"comment\">//微店请求</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> isDev = currentEnv == <span class=\"string\">&#x27;production&#x27;</span> <span class=\"comment\">//true为正式环境，false为测试环境</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 1.对基础url进行逻辑判断</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (config.<span class=\"property\">isV</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">//是否是微店请求</span></span><br><span class=\"line\">    config.<span class=\"property\">url</span> = isDev ? <span class=\"title class_\">WXbaseUrlPro</span> + config.<span class=\"property\">url</span> : <span class=\"title class_\">WXbaseUrlDev</span> + config.<span class=\"property\">url</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!uni.<span class=\"title function_\">getStorageSync</span>(<span class=\"string\">&#x27;__urlisV__&#x27;</span>)) &#123;</span><br><span class=\"line\">      uni.<span class=\"title function_\">setStorageSync</span>(<span class=\"string\">&#x27;__urlisV__&#x27;</span>, isDev ? <span class=\"title class_\">WXbaseUrlPro</span> : <span class=\"title class_\">WXbaseUrlDev</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (config.<span class=\"property\">isPay</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">//是否是支付请求</span></span><br><span class=\"line\">    config.<span class=\"property\">url</span> =</span><br><span class=\"line\">      <span class=\"string\">&#x27;https://share.qingmh.com/wechat-pay-common/wechatpay/hjt/create&#x27;</span></span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (config.<span class=\"property\">isPayQuery</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 是否是支付结果查询接口</span></span><br><span class=\"line\">    config.<span class=\"property\">url</span> =</span><br><span class=\"line\">      <span class=\"string\">&#x27;https://share.qingmh.com/wechat-pay-common/wechatpay/order/query&#x27;</span></span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">//默认请求</span></span><br><span class=\"line\">    config.<span class=\"property\">url</span> = isDev ? bseUrlPro + config.<span class=\"property\">url</span> : baseUrlDev + config.<span class=\"property\">url</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!uni.<span class=\"title function_\">getStorageSync</span>(<span class=\"string\">&#x27;url&#x27;</span>)) &#123;</span><br><span class=\"line\">      uni.<span class=\"title function_\">setStorageSync</span>(<span class=\"string\">&#x27;url&#x27;</span>, isDev ? bseUrlPro : baseUrlDev)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  config.<span class=\"property\">header</span> = &#123;</span><br><span class=\"line\">    <span class=\"attr\">region</span>: <span class=\"string\">&#x27;&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">terminalcode</span>: <span class=\"string\">&#x27;&#x27;</span>, <span class=\"comment\">// 设备号,PC端传浏览器版本号</span></span><br><span class=\"line\">    <span class=\"attr\">terminaltype</span>: <span class=\"string\">&#x27;&#x27;</span>, <span class=\"comment\">// 端口类型，例如 APP,XCX,WECHAT,WEB</span></span><br><span class=\"line\">    <span class=\"attr\">stoken</span>: <span class=\"string\">&#x27;&#x27;</span>, <span class=\"comment\">// 授权</span></span><br><span class=\"line\">    <span class=\"attr\">devicetype</span>: <span class=\"string\">&#x27;&#x27;</span>, <span class=\"comment\">//所属平台,例如 IOS,ANDROID,XCX,WECHAT,WEB(浏览器名称)</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//region :lat\t是\tstring纬度,lng\t是\tstring经度,province\t是\tstring省,city\t是\tstring市,district\t否\tstring区县,</span></span><br><span class=\"line\">  <span class=\"comment\">//street\t否\tstring街道,street_number\t否\tstring街道号</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> platform = uni.<span class=\"title function_\">getStorageSync</span>(<span class=\"string\">&#x27;platform&#x27;</span>) <span class=\"comment\">// 机型</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> stoken = uni.<span class=\"title function_\">getStorageSync</span>(<span class=\"string\">&#x27;stoken&#x27;</span>) <span class=\"comment\">// 获取后台反的token</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> isfirstGetSysInfo = uni.<span class=\"title function_\">getStorageSync</span>(<span class=\"string\">&#x27;firstGetSysInfo&#x27;</span>) <span class=\"comment\">//判断是否已经获取了设备的信息(某些浏览器，无法在第一次打开时获取信息，所以额外的添加了字段)</span></span><br><span class=\"line\">  <span class=\"comment\">// 2.对提供的options进行逻辑判断</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (config.<span class=\"property\">needToken</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">//当前请求是否需要token</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (stoken == <span class=\"string\">&#x27;&#x27;</span> || stoken == <span class=\"literal\">null</span> || stoken == <span class=\"literal\">undefined</span> || !stoken) &#123;</span><br><span class=\"line\">      <span class=\"comment\">//当请求中没有token时，直接跳到登录页，by：李蒙</span></span><br><span class=\"line\">      uni.<span class=\"title function_\">reLaunch</span>(&#123;</span><br><span class=\"line\">        <span class=\"attr\">url</span>: <span class=\"string\">&#x27;/pages/Login/otherLogin&#x27;</span>,</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> region = &#123;</span><br><span class=\"line\">        <span class=\"attr\">lat</span>: <span class=\"string\">&#x27;30.680905&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">lng</span>: <span class=\"string\">&#x27;104.117462&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">province</span>: <span class=\"string\">&#x27;四川省&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">city</span>: <span class=\"string\">&#x27;成都市&#x27;</span>,</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"comment\">// if (uni.getStorageSync(&#x27;region&#x27;)) &#123;</span></span><br><span class=\"line\">      <span class=\"comment\">//   let regData = JSON.parse(uni.getStorageSync(&#x27;region&#x27;))</span></span><br><span class=\"line\">      <span class=\"comment\">//   region = &#123; ...region, ...regData &#125;</span></span><br><span class=\"line\">      <span class=\"comment\">// &#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">// config.header.region = encodeURIComponent(JSON.stringify(region))</span></span><br><span class=\"line\">      config.<span class=\"property\">header</span>.<span class=\"property\">stoken</span> = stoken</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">//新增请求头内的devicetype等信息</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (isfirstGetSysInfo == <span class=\"string\">&#x27;done&#x27;</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">//获取了手机系统信息</span></span><br><span class=\"line\">    config.<span class=\"property\">header</span>.<span class=\"property\">terminalcode</span> = uni.<span class=\"title function_\">getStorageSync</span>(<span class=\"string\">&#x27;model&#x27;</span>)</span><br><span class=\"line\">    config.<span class=\"property\">header</span>.<span class=\"property\">terminaltype</span> = <span class=\"string\">&#x27;WAP&#x27;</span></span><br><span class=\"line\">    config.<span class=\"property\">header</span>.<span class=\"property\">devicetype</span> = uni.<span class=\"title function_\">getStorageSync</span>(<span class=\"string\">&#x27;platform&#x27;</span>)</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">//未获取手机系统信息</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> getSystemInfoSync = <span class=\"keyword\">await</span> uni.<span class=\"title function_\">getSystemInfoSync</span>()</span><br><span class=\"line\">    uni.<span class=\"title function_\">setStorageSync</span>(<span class=\"string\">&#x27;firstGetSysInfo&#x27;</span>, <span class=\"string\">&#x27;done&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">let</span> devicetypeTem = <span class=\"string\">&#x27;android&#x27;</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> modelTem = <span class=\"string\">&#x27;WAP&#x27;</span></span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(getSystemInfoSync, <span class=\"string\">&#x27;2222222&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (getSystemInfoSync &amp;&amp; getSystemInfoSync.<span class=\"property\">platform</span> == <span class=\"string\">&#x27;other&#x27;</span>) &#123;</span><br><span class=\"line\">      <span class=\"comment\">//当使用wap开发时，有可能获取不到系统信息，改用navigator.userAgent</span></span><br><span class=\"line\">      <span class=\"keyword\">let</span> ua = <span class=\"title function_\">browser</span>()</span><br><span class=\"line\">      <span class=\"keyword\">let</span> phone = <span class=\"title class_\">Phone</span>()</span><br><span class=\"line\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(ua, phone, <span class=\"string\">&#x27;获取的浏览器数据&#x27;</span>)</span><br><span class=\"line\">      config.<span class=\"property\">header</span>.<span class=\"property\">terminalcode</span> = ua.<span class=\"title function_\">split</span>(<span class=\"string\">&#x27;/&#x27;</span>) &amp;&amp; ua.<span class=\"title function_\">split</span>(<span class=\"string\">&#x27;/&#x27;</span>)[<span class=\"number\">0</span>]</span><br><span class=\"line\">      config.<span class=\"property\">header</span>.<span class=\"property\">terminaltype</span> = <span class=\"string\">&#x27;WAP&#x27;</span></span><br><span class=\"line\">      config.<span class=\"property\">header</span>.<span class=\"property\">devicetype</span> = phone</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      devicetypeTem =</span><br><span class=\"line\">        getSystemInfoSync.<span class=\"property\">platform</span> == <span class=\"string\">&#x27;devtools&#x27;</span></span><br><span class=\"line\">          ? <span class=\"string\">&#x27;ios&#x27;</span></span><br><span class=\"line\">          : getSystemInfoSync.<span class=\"property\">platform</span></span><br><span class=\"line\">      modelTem = getSystemInfoSync.<span class=\"property\">model</span> ? getSystemInfoSync.<span class=\"property\">model</span> : <span class=\"string\">&#x27;android&#x27;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(modelTem, <span class=\"string\">&#x27;1111&#x27;</span>)</span><br><span class=\"line\">    config.<span class=\"property\">header</span>.<span class=\"property\">terminalcode</span> = modelTem</span><br><span class=\"line\">    config.<span class=\"property\">header</span>.<span class=\"property\">terminaltype</span> = <span class=\"string\">&#x27;WAP&#x27;</span></span><br><span class=\"line\">    config.<span class=\"property\">header</span>.<span class=\"property\">devicetype</span> = devicetypeTem</span><br><span class=\"line\">    <span class=\"comment\">//本地存储，后续可能会用到</span></span><br><span class=\"line\">    uni.<span class=\"title function_\">setStorageSync</span>(<span class=\"string\">&#x27;model&#x27;</span>, modelTem)</span><br><span class=\"line\">    uni.<span class=\"title function_\">setStorageSync</span>(<span class=\"string\">&#x27;platform&#x27;</span>, devicetypeTem)</span><br><span class=\"line\">    uni.<span class=\"title function_\">setStorageSync</span>(<span class=\"string\">&#x27;windowWidth&#x27;</span>, getSystemInfoSync.<span class=\"property\">windowWidth</span>)</span><br><span class=\"line\">    uni.<span class=\"title function_\">setStorageSync</span>(<span class=\"string\">&#x27;windowHeight&#x27;</span>, getSystemInfoSync.<span class=\"property\">windowHeight</span>)</span><br><span class=\"line\">    uni.<span class=\"title function_\">setStorageSync</span>(<span class=\"string\">&#x27;safeAreaH&#x27;</span>, getSystemInfoSync.<span class=\"property\">safeArea</span>.<span class=\"property\">height</span>)</span><br><span class=\"line\">    uni.<span class=\"title function_\">setStorageSync</span>(<span class=\"string\">&#x27;safeAreaT&#x27;</span>, getSystemInfoSync.<span class=\"property\">safeArea</span>.<span class=\"property\">top</span>)</span><br><span class=\"line\">    uni.<span class=\"title function_\">setStorageSync</span>(<span class=\"string\">&#x27;statusBarHeight&#x27;</span>, getSystemInfoSync.<span class=\"property\">statusBarHeight</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (!config.<span class=\"property\">data</span>) &#123;</span><br><span class=\"line\">    config.<span class=\"property\">data</span> = &#123;&#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">//存储一下configHeaderInfo,当你跳转到图文海报的h5的时候，需要将header做一个替换</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (!uni.<span class=\"title function_\">getStorageSync</span>(<span class=\"string\">&#x27;configHeaderInfo&#x27;</span>))</span><br><span class=\"line\">    uni.<span class=\"title function_\">setStorageSync</span>(<span class=\"string\">&#x27;configHeaderInfo&#x27;</span>, config.<span class=\"property\">header</span>)</span><br><span class=\"line\">  <span class=\"comment\">//   console.log(config, &#x27;*****请求中携带的参数********&#x27;)</span></span><br><span class=\"line\">  <span class=\"comment\">// 3.将已经配置好的uni.request作为一个promise返回</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> promise = <span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    uni</span><br><span class=\"line\">      .<span class=\"title function_\">request</span>(config)</span><br><span class=\"line\">      .<span class=\"title function_\">then</span>(<span class=\"function\">(<span class=\"params\">responses</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(responses, <span class=\"string\">&#x27;返回的数据&#x27;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (responses[<span class=\"number\">0</span>]) &#123;</span><br><span class=\"line\">          <span class=\"comment\">//   if (uni.getStorageSync(&#x27;firstLogin&#x27;)) &#123;</span></span><br><span class=\"line\">          <span class=\"comment\">//     reject(&#123; message: &#x27;网络超时&#x27; &#125;)</span></span><br><span class=\"line\">          <span class=\"comment\">//   &#125; else &#123;</span></span><br><span class=\"line\">          uni.<span class=\"title function_\">clearStorageSync</span>()</span><br><span class=\"line\">          uni.<span class=\"title function_\">reLaunch</span>(&#123;</span><br><span class=\"line\">            <span class=\"attr\">url</span>: <span class=\"string\">&#x27;/pages/Login/otherLogin&#x27;</span>,</span><br><span class=\"line\">          &#125;)</span><br><span class=\"line\">          <span class=\"comment\">//   &#125;</span></span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">          <span class=\"keyword\">let</span> response = responses[<span class=\"number\">1</span>].<span class=\"property\">data</span> <span class=\"comment\">// 如果返回的结果是data.data的，嫌麻烦可以用这个，return res,这样只返回一个data</span></span><br><span class=\"line\">          <span class=\"keyword\">if</span> (</span><br><span class=\"line\">            (response.<span class=\"property\">code</span> === <span class=\"string\">&#x27;0016&#x27;</span> &amp;&amp; response.<span class=\"property\">message</span> === <span class=\"string\">&#x27;口令认证失败&#x27;</span>) ||</span><br><span class=\"line\">            response.<span class=\"property\">code</span> === <span class=\"string\">&#x27;00909&#x27;</span> ||</span><br><span class=\"line\">            response.<span class=\"property\">message</span> === <span class=\"string\">&#x27;网络超时&#x27;</span></span><br><span class=\"line\">          ) &#123;</span><br><span class=\"line\">            uni.<span class=\"title function_\">clearStorageSync</span>()</span><br><span class=\"line\">            uni.<span class=\"title function_\">reLaunch</span>(&#123;</span><br><span class=\"line\">              <span class=\"attr\">url</span>: <span class=\"string\">&#x27;/pages/Login/otherLogin&#x27;</span>,</span><br><span class=\"line\">              <span class=\"title function_\">fail</span>(<span class=\"params\">e</span>) &#123;</span><br><span class=\"line\">                <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(e)</span><br><span class=\"line\">              &#125;,</span><br><span class=\"line\">            &#125;)</span><br><span class=\"line\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;触发认证失败&#x27;</span>, response)</span><br><span class=\"line\">          &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"title function_\">resolve</span>(response)</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">      .<span class=\"title function_\">catch</span>(<span class=\"function\">(<span class=\"params\">error</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"title function_\">reject</span>(error)</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  <span class=\"keyword\">return</span> promise</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> request</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"下载oss地址文件\"><a href=\"#下载oss地址文件\" class=\"headerlink\" title=\"下载oss地址文件\"></a>下载oss地址文件</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">downLoadFile</span>(<span class=\"params\">e</span>) &#123;</span><br><span class=\"line\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(e, <span class=\"string\">&#x27;e&#x27;</span>)</span><br><span class=\"line\">      <span class=\"keyword\">let</span> str = e.<span class=\"property\">name</span>.<span class=\"title function_\">split</span>(<span class=\"string\">&#x27;.&#x27;</span>)[<span class=\"number\">0</span>]</span><br><span class=\"line\">      <span class=\"comment\">//   this.downloadByAxios(e.url, str)</span></span><br><span class=\"line\">      <span class=\"keyword\">let</span> urlstr = e.<span class=\"property\">url</span>.<span class=\"title function_\">replace</span>(<span class=\"string\">&#x27;http&#x27;</span>, <span class=\"string\">&#x27;https&#x27;</span>)</span><br><span class=\"line\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(urlstr, <span class=\"string\">&#x27;urlstr&#x27;</span>)</span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"title function_\">download</span>(urlstr, str)</span><br><span class=\"line\">    &#125;,</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">download</span>(<span class=\"params\">url, filename</span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * 下载</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@param</span>  &#123;<span class=\"type\">String</span>&#125; url 目标文件地址</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@param</span>  &#123;<span class=\"type\">String</span>&#125; filename 想要保存的文件名称</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"variable language_\">this</span>.<span class=\"title function_\">getBlob</span>(url, <span class=\"function\">(<span class=\"params\">blob</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"title function_\">saveAs</span>(blob, filename)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\"><span class=\"title function_\">getBlob</span>(<span class=\"params\">url, cb</span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * 获取 blob</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@param</span>  &#123;<span class=\"type\">String</span>&#125; url 目标文件地址</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">cb</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> xhr = <span class=\"keyword\">new</span> <span class=\"title class_\">XMLHttpRequest</span>()</span><br><span class=\"line\">  xhr.<span class=\"title function_\">open</span>(<span class=\"string\">&#x27;GET&#x27;</span>, url, <span class=\"literal\">true</span>)</span><br><span class=\"line\">  xhr.<span class=\"property\">responseType</span> = <span class=\"string\">&#x27;blob&#x27;</span></span><br><span class=\"line\">  xhr.<span class=\"property\">onload</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (xhr.<span class=\"property\">status</span> === <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">      <span class=\"title function_\">cb</span>(xhr.<span class=\"property\">response</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  xhr.<span class=\"title function_\">send</span>()</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\"><span class=\"title function_\">saveAs</span>(<span class=\"params\">blob, filename</span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * 保存</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@param</span>  &#123;<span class=\"type\">Blob</span>&#125; <span class=\"variable\">blob</span></span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@param</span>  &#123;<span class=\"type\">String</span>&#125; filename 想要保存的文件名称</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"variable language_\">window</span>.<span class=\"property\">navigator</span>.<span class=\"property\">msSaveOrOpenBlob</span>) &#123;</span><br><span class=\"line\">    navigator.<span class=\"title function_\">msSaveBlob</span>(blob, filename)</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> link = <span class=\"variable language_\">document</span>.<span class=\"title function_\">createElement</span>(<span class=\"string\">&#x27;a&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">var</span> body = <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&#x27;body&#x27;</span>)</span><br><span class=\"line\">    link.<span class=\"property\">href</span> = <span class=\"variable language_\">window</span>.<span class=\"property\">URL</span>.<span class=\"title function_\">createObjectURL</span>(blob)</span><br><span class=\"line\">    link.<span class=\"property\">download</span> = filename</span><br><span class=\"line\">    <span class=\"comment\">// fix Firefox</span></span><br><span class=\"line\">    link.<span class=\"property\">style</span>.<span class=\"property\">display</span> = <span class=\"string\">&#x27;none&#x27;</span></span><br><span class=\"line\">    body.<span class=\"title function_\">appendChild</span>(link)</span><br><span class=\"line\">    link.<span class=\"title function_\">click</span>()</span><br><span class=\"line\">    body.<span class=\"title function_\">removeChild</span>(link)</span><br><span class=\"line\">    <span class=\"variable language_\">window</span>.<span class=\"property\">URL</span>.<span class=\"title function_\">revokeObjectURL</span>(link.<span class=\"property\">href</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"下载服务器文件\"><a href=\"#下载服务器文件\" class=\"headerlink\" title=\"下载服务器文件\"></a>下载服务器文件</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">function</span> <span class=\"title function_\">exportInfo</span>(<span class=\"params\">info</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>)=&gt;</span>&#123;</span><br><span class=\"line\">    <span class=\"title function_\">axios</span>(&#123;</span><br><span class=\"line\">      <span class=\"attr\">method</span>:info.<span class=\"property\">method</span>,</span><br><span class=\"line\">      <span class=\"attr\">url</span>:info.<span class=\"property\">params</span> ? info.<span class=\"property\">url</span>+ <span class=\"title function_\">setUrlParam</span>(info.<span class=\"property\">params</span>) : info.<span class=\"property\">url</span>,</span><br><span class=\"line\">      <span class=\"attr\">data</span>:info.<span class=\"property\">params</span>,</span><br><span class=\"line\">      <span class=\"attr\">responseType</span>: info.<span class=\"property\">responseType</span>, <span class=\"comment\">// 优先尝试 blob</span></span><br><span class=\"line\">      <span class=\"attr\">headers</span>:&#123;<span class=\"string\">&#x27;Authorization&#x27;</span>:<span class=\"variable language_\">localStorage</span>.<span class=\"title function_\">getItem</span>(<span class=\"string\">&#x27;token&#x27;</span>) ?<span class=\"string\">&#x27;Bearer &#x27;</span>+<span class=\"variable language_\">localStorage</span>.<span class=\"title function_\">getItem</span>(<span class=\"string\">&#x27;token&#x27;</span>):<span class=\"string\">&#x27;&#x27;</span>&#125;</span><br><span class=\"line\">    &#125;).<span class=\"title function_\">then</span>(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">let</span> objectUrl = <span class=\"literal\">null</span>,blob = <span class=\"literal\">null</span>;</span><br><span class=\"line\">      <span class=\"keyword\">if</span>(info.<span class=\"property\">type</span> === <span class=\"string\">&#x27;excel&#x27;</span>)&#123;</span><br><span class=\"line\">        blob = <span class=\"keyword\">new</span> <span class=\"title class_\">Blob</span>([res.<span class=\"property\">data</span>], &#123;</span><br><span class=\"line\">          <span class=\"attr\">type</span>: <span class=\"string\">&quot;application/vnd.ms-excel&quot;</span></span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">        objectUrl = <span class=\"variable constant_\">URL</span>.<span class=\"title function_\">createObjectURL</span>(blob);</span><br><span class=\"line\">      &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(info.<span class=\"property\">type</span> === <span class=\"string\">&#x27;img&#x27;</span>)&#123;</span><br><span class=\"line\">        objectUrl = <span class=\"string\">&#x27;data:image/png;base64,&#x27;</span> + <span class=\"title function_\">btoa</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">Uint8Array</span>(res.<span class=\"property\">data</span>).<span class=\"title function_\">reduce</span>(<span class=\"function\">(<span class=\"params\">data, byte</span>) =&gt;</span> data + <span class=\"title class_\">String</span>.<span class=\"title function_\">fromCharCode</span>(byte), <span class=\"string\">&#x27;&#x27;</span>));</span><br><span class=\"line\">      &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(info.<span class=\"property\">type</span> === <span class=\"string\">&#x27;zip&#x27;</span>)&#123;</span><br><span class=\"line\">        blob = <span class=\"keyword\">new</span> <span class=\"title class_\">Blob</span>([res.<span class=\"property\">data</span>], &#123;<span class=\"attr\">type</span>: <span class=\"string\">&#x27;application/zip&#x27;</span>&#125;);</span><br><span class=\"line\">        objectUrl = <span class=\"variable constant_\">URL</span>.<span class=\"title function_\">createObjectURL</span>(blob);</span><br><span class=\"line\">      &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(info.<span class=\"property\">type</span> === <span class=\"string\">&#x27;doc&#x27;</span>)&#123;</span><br><span class=\"line\">        blob = <span class=\"keyword\">new</span> <span class=\"title class_\">Blob</span>([res.<span class=\"property\">data</span>], &#123;</span><br><span class=\"line\">          <span class=\"attr\">type</span>: <span class=\"string\">&quot;application/msword&quot;</span></span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">        objectUrl = <span class=\"variable constant_\">URL</span>.<span class=\"title function_\">createObjectURL</span>(blob);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">let</span> a = <span class=\"variable language_\">document</span>.<span class=\"title function_\">createElement</span>(<span class=\"string\">&quot;a&quot;</span>);</span><br><span class=\"line\">      a.<span class=\"property\">href</span> = objectUrl;</span><br><span class=\"line\">      a.<span class=\"property\">download</span> = info.<span class=\"property\">name</span>;</span><br><span class=\"line\">      <span class=\"comment\">//a.click();</span></span><br><span class=\"line\">      <span class=\"comment\">//下面这个写法兼容火狐</span></span><br><span class=\"line\">      a.<span class=\"title function_\">dispatchEvent</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">MouseEvent</span>(<span class=\"string\">&#x27;click&#x27;</span>, &#123;<span class=\"attr\">bubbles</span>: <span class=\"literal\">true</span>, <span class=\"attr\">cancelable</span>: <span class=\"literal\">true</span>, <span class=\"attr\">view</span>: <span class=\"variable language_\">window</span>&#125;));</span><br><span class=\"line\">      <span class=\"variable language_\">window</span>.<span class=\"property\">URL</span>.<span class=\"title function_\">revokeObjectURL</span>(blob);</span><br><span class=\"line\">      <span class=\"title function_\">resolve</span>(res)</span><br><span class=\"line\">    &#125;).<span class=\"title function_\">catch</span>(<span class=\"function\"><span class=\"params\">error</span> =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;response: &quot;</span>, error);</span><br><span class=\"line\">      <span class=\"title function_\">reject</span>(error)</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"前端下载并打包zip\"><a href=\"#前端下载并打包zip\" class=\"headerlink\" title=\"前端下载并打包zip\"></a>前端下载并打包zip</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">require</span>(<span class=\"string\">&#x27;script-loader!file-saver&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">JSZip</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;jszip&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">FileSaver</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;file-saver&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">getFile</span> = (<span class=\"params\">url</span>) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve,reject</span>)=&gt;</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> xhr = <span class=\"keyword\">new</span> <span class=\"title class_\">XMLHttpRequest</span>();</span><br><span class=\"line\">    xhr.<span class=\"title function_\">open</span>(<span class=\"string\">&quot;GET&quot;</span>, url);</span><br><span class=\"line\">    xhr.<span class=\"property\">responseType</span> = <span class=\"string\">&quot;arraybuffer&quot;</span>;</span><br><span class=\"line\">    xhr.<span class=\"property\">onerror</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;<span class=\"comment\">/* handle errors*/</span>&#125;;</span><br><span class=\"line\">    xhr.<span class=\"property\">onload</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (xhr.<span class=\"property\">status</span> === <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">        <span class=\"title function_\">resolve</span>(xhr.<span class=\"property\">response</span>)&#125;</span><br><span class=\"line\">      <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"title function_\">reject</span>(&#123;&#125;)</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    xhr.<span class=\"title function_\">send</span>();</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">async</span> <span class=\"keyword\">function</span> <span class=\"title function_\">exportZip</span>(<span class=\"params\"> data,  zipName</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> zip = <span class=\"keyword\">new</span> <span class=\"title class_\">JSZip</span>()</span><br><span class=\"line\">  <span class=\"keyword\">const</span> cache = &#123;&#125;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> promises = []</span><br><span class=\"line\">  <span class=\"keyword\">await</span> data.<span class=\"title function_\">forEach</span>(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> promise = <span class=\"title function_\">getFile</span>(item.<span class=\"property\">url</span>).<span class=\"title function_\">then</span>(<span class=\"function\"><span class=\"params\">data</span> =&gt;</span> &#123; <span class=\"comment\">// 下载文件, 并存成ArrayBuffer对象</span></span><br><span class=\"line\">      zip.<span class=\"title function_\">file</span>(item.<span class=\"property\">name</span>+<span class=\"string\">&#x27;.jpg&#x27;</span>, data, &#123;</span><br><span class=\"line\">        <span class=\"attr\">binary</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">      &#125;) <span class=\"comment\">// 逐个添加文件</span></span><br><span class=\"line\">      cache[item.<span class=\"property\">name</span>] = data</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    promises.<span class=\"title function_\">push</span>(promise)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  <span class=\"title class_\">Promise</span>.<span class=\"title function_\">all</span>(promises).<span class=\"title function_\">then</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    zip.<span class=\"title function_\">generateAsync</span>(&#123;</span><br><span class=\"line\">      <span class=\"attr\">type</span>: <span class=\"string\">&quot;blob&quot;</span></span><br><span class=\"line\">    &#125;).<span class=\"title function_\">then</span>(<span class=\"function\"><span class=\"params\">content</span> =&gt;</span> &#123; <span class=\"comment\">// 生成二进制流</span></span><br><span class=\"line\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(content)</span><br><span class=\"line\">      <span class=\"title function_\">saveAs</span>(content, zipName+<span class=\"string\">&quot;.zip&quot;</span>) <span class=\"comment\">// 利用file-saver保存文件</span></span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure>\n\n"},{"title":"小程序常用组件","date":"2020-07-12T09:16:26.000Z","_content":"\n<meta name=\"referrer\" content=\"no-referrer\"/>\n\n## 小程序常用组件\n\n记录组件包含：1. picker,\n\n<!-- more -->\n\n> 记录小程序常用的组件和调用方法\n\n### 小程序本身封装的组件\n\n1. picker（从底部弹起的滚动选择器）\n\n   ```js\n    <picker bindchange=\"bindPickerChange\" value=\"{{selectList[index].name}}\" range=\"{{selectList}}\" range-key=\"{{'name'}}\">\n               <view class=\"picker\">\n                 {{currentType}}\n               </view>\n   </picker>\n   ```\n\n   外层用picker包裹，内部通过range设定滚动数据，range-key做渲染关键词，最后获得的是value的值。\n\n   bindPickerChange方法做赋值的操作（略。。。）\n\n2. scroll-view（可滚动视图区域)\n\n   ```js\n   <scroll-view scroll-x=\"true\" class=\"nav\" scroll-left=\"{{navScrollLeft}}\" scroll-with-animation=\"{{true}}\">\n   \t\t\t<block wx:for=\"{{classifyList}}\" wx:for-index=\"idx\" wx:for-item=\"item\" wx:key=\"idx\">\n   \t\t\t\t<view class=\"nav-item {{currentTab == idx ?'active':''}} flex_center_center\" data-current=\"{{idx}}\" data-id='{{item.classify_id}}' data-int='{{idx}}' data-name=\"{{item.name}}\" bindtap=\"switchNav\">\n   \t\t\t\t\t<text class=\"t_name\">{{item.name}}</text>\n   \t\t\t\t</view>\n   \t\t\t</block>\n   </scroll-view>\n   ```\n\n   scroll-left:设置横向滚动条位置\n\n   scroll-with-animation:在设置滚动条位置时使用动画过渡\n\n3. swiper (滑块视图容器)\n\n   ```js\n    <swiper class=\"swipers\" autoplay=\"{{false}}\" duration=\"0\" current=\"{{currentTab}}\" bindchange=\"swiperChange\">\n   \t\t<block wx:for=\"{{classifyList}}\" wx:for-index=\"idxs\" data-index=\"{{idxs}}\" wx:for-item=\"item\" wx:key=\"idx\">\n   \t\t\t<swiper-item catchtouchmove=\"stopTouchMove\">\n   \t\t\t</swiper-item>\n   \t\t</block>\n   \t</swiper>\n   ```\n\n   autoplay:是否自动切换(轮播图的形式)\n\n   duration:滑动动画时长\n\n   current：当前所在滑块的 index\n\n   catchtouchmove：禁止用户手动滑动页面\n\n4. cover-view（覆盖在原生组件之上的文本视图）cover-image（覆盖在原生组件之上的图片视图）\n\n   ```js\n   <cover-view hidden=\"{{!hidePause}}\" catchtap=\"pauseVideo\" class=\"pause-video\"></cover-view>\n   <cover-image hidden=\"{{hidePause}}\" catchtap=\"replayVideo\" src=\"/assets/pause@2x.png\" class=\"play-video\"></cover-image>\n   <cover-view style=\"padding-top:{{navTop}}px;height:{{navHeight}}px\" class=\"nav\">\n   \t<cover-image catchtap=\"gotoPrev\" src=\"/assets/ic_cancel_white@2x.png\" class=\"back-icon\"></cover-image>\n   </cover-view>\n   ```\n\n   \n\n### 手动封装的组件\n\n1. AlertBox(页面中间出现的弹框，中间为文字提示，拥有取消和确定按钮)\n\n   ```js\n   //父页面中使用\n   <AlertBox bind:getUserConfirmResult = \"getUserConfirmResult\" alert_title=\"{{alert_title}}\" is_show=\"{{is_show}}\"></AlertBox>\n   ```\n\n   ```js\n   //子页面的结构\n    <!--弹框-->\n     <view wx:if=\"{{is_show}}\" class=\"alert_box\">\n       <view class=\"clearfloat\">\n         <view bindtap=\"closeButton\" class=\"alert_close\">\n           <image src=\"../../assets/close@2x.png\" mode=\"widthFix\"></image>\n         </view>\n       </view>\n       \n       <view class=\"alert_title\">{{alert_title}}</view>\n       <view class=\"alert_button\">\n         <button class=\"confirm_button\" bindtap=\"confirmButton\">确定</button>\n       </view>\n     </view>\n   ```\n\n   涉及到父子组件传值的说明：\n\n   父组件中：bind:getUserConfirmResult = \"getUserConfirmResult\"相当于自定义事件。可以从子组件获取到用户对于取消和确定的值，从而选择不同的显示效果。\n\n   ```js\n   //父组件调用自定义方法\n   getUserConfirmResult(e) {\n       //console.info(\"e\", e)\n       let that = this;\n       that.setData({\n         is_show: false\n       });\n     },\n   ```\n\n   ```js\n   //子组件中调用的方法。通过this.triggerEvent()通知到父组件的自定义事件。类似于 vue 中 this.$emit。\n   confirmButton:function(){\n         console.info(\"1111111\")\n         let that = this;\n         \n         let myEventDetail = {\n           is_show:false,\n         };\n         let myEventOption = {bubbles:false};\n         that.triggerEvent('getUserConfirmResult', myEventDetail, myEventOption)\n       },\n   ```\n\n   自定义组件触发事件时，需要使用 `triggerEvent` 方法，指定事件名、detail对象和事件选项：\n\n   选项：bubbles ： 事件是否冒泡；composed：事件是否可以穿越组件边界；capturePhase： 事件是否拥有捕获阶段\n\n2. 撒辣椒粉\n\n3. 拉萨解放的了\n\n4. 萨加快递费","source":"_posts/小程序常用组件.md","raw":"---\ntitle: 小程序常用组件\ndate: 2020-07-12 17:16:26\ntags: [小程序]\n---\n\n<meta name=\"referrer\" content=\"no-referrer\"/>\n\n## 小程序常用组件\n\n记录组件包含：1. picker,\n\n<!-- more -->\n\n> 记录小程序常用的组件和调用方法\n\n### 小程序本身封装的组件\n\n1. picker（从底部弹起的滚动选择器）\n\n   ```js\n    <picker bindchange=\"bindPickerChange\" value=\"{{selectList[index].name}}\" range=\"{{selectList}}\" range-key=\"{{'name'}}\">\n               <view class=\"picker\">\n                 {{currentType}}\n               </view>\n   </picker>\n   ```\n\n   外层用picker包裹，内部通过range设定滚动数据，range-key做渲染关键词，最后获得的是value的值。\n\n   bindPickerChange方法做赋值的操作（略。。。）\n\n2. scroll-view（可滚动视图区域)\n\n   ```js\n   <scroll-view scroll-x=\"true\" class=\"nav\" scroll-left=\"{{navScrollLeft}}\" scroll-with-animation=\"{{true}}\">\n   \t\t\t<block wx:for=\"{{classifyList}}\" wx:for-index=\"idx\" wx:for-item=\"item\" wx:key=\"idx\">\n   \t\t\t\t<view class=\"nav-item {{currentTab == idx ?'active':''}} flex_center_center\" data-current=\"{{idx}}\" data-id='{{item.classify_id}}' data-int='{{idx}}' data-name=\"{{item.name}}\" bindtap=\"switchNav\">\n   \t\t\t\t\t<text class=\"t_name\">{{item.name}}</text>\n   \t\t\t\t</view>\n   \t\t\t</block>\n   </scroll-view>\n   ```\n\n   scroll-left:设置横向滚动条位置\n\n   scroll-with-animation:在设置滚动条位置时使用动画过渡\n\n3. swiper (滑块视图容器)\n\n   ```js\n    <swiper class=\"swipers\" autoplay=\"{{false}}\" duration=\"0\" current=\"{{currentTab}}\" bindchange=\"swiperChange\">\n   \t\t<block wx:for=\"{{classifyList}}\" wx:for-index=\"idxs\" data-index=\"{{idxs}}\" wx:for-item=\"item\" wx:key=\"idx\">\n   \t\t\t<swiper-item catchtouchmove=\"stopTouchMove\">\n   \t\t\t</swiper-item>\n   \t\t</block>\n   \t</swiper>\n   ```\n\n   autoplay:是否自动切换(轮播图的形式)\n\n   duration:滑动动画时长\n\n   current：当前所在滑块的 index\n\n   catchtouchmove：禁止用户手动滑动页面\n\n4. cover-view（覆盖在原生组件之上的文本视图）cover-image（覆盖在原生组件之上的图片视图）\n\n   ```js\n   <cover-view hidden=\"{{!hidePause}}\" catchtap=\"pauseVideo\" class=\"pause-video\"></cover-view>\n   <cover-image hidden=\"{{hidePause}}\" catchtap=\"replayVideo\" src=\"/assets/pause@2x.png\" class=\"play-video\"></cover-image>\n   <cover-view style=\"padding-top:{{navTop}}px;height:{{navHeight}}px\" class=\"nav\">\n   \t<cover-image catchtap=\"gotoPrev\" src=\"/assets/ic_cancel_white@2x.png\" class=\"back-icon\"></cover-image>\n   </cover-view>\n   ```\n\n   \n\n### 手动封装的组件\n\n1. AlertBox(页面中间出现的弹框，中间为文字提示，拥有取消和确定按钮)\n\n   ```js\n   //父页面中使用\n   <AlertBox bind:getUserConfirmResult = \"getUserConfirmResult\" alert_title=\"{{alert_title}}\" is_show=\"{{is_show}}\"></AlertBox>\n   ```\n\n   ```js\n   //子页面的结构\n    <!--弹框-->\n     <view wx:if=\"{{is_show}}\" class=\"alert_box\">\n       <view class=\"clearfloat\">\n         <view bindtap=\"closeButton\" class=\"alert_close\">\n           <image src=\"../../assets/close@2x.png\" mode=\"widthFix\"></image>\n         </view>\n       </view>\n       \n       <view class=\"alert_title\">{{alert_title}}</view>\n       <view class=\"alert_button\">\n         <button class=\"confirm_button\" bindtap=\"confirmButton\">确定</button>\n       </view>\n     </view>\n   ```\n\n   涉及到父子组件传值的说明：\n\n   父组件中：bind:getUserConfirmResult = \"getUserConfirmResult\"相当于自定义事件。可以从子组件获取到用户对于取消和确定的值，从而选择不同的显示效果。\n\n   ```js\n   //父组件调用自定义方法\n   getUserConfirmResult(e) {\n       //console.info(\"e\", e)\n       let that = this;\n       that.setData({\n         is_show: false\n       });\n     },\n   ```\n\n   ```js\n   //子组件中调用的方法。通过this.triggerEvent()通知到父组件的自定义事件。类似于 vue 中 this.$emit。\n   confirmButton:function(){\n         console.info(\"1111111\")\n         let that = this;\n         \n         let myEventDetail = {\n           is_show:false,\n         };\n         let myEventOption = {bubbles:false};\n         that.triggerEvent('getUserConfirmResult', myEventDetail, myEventOption)\n       },\n   ```\n\n   自定义组件触发事件时，需要使用 `triggerEvent` 方法，指定事件名、detail对象和事件选项：\n\n   选项：bubbles ： 事件是否冒泡；composed：事件是否可以穿越组件边界；capturePhase： 事件是否拥有捕获阶段\n\n2. 撒辣椒粉\n\n3. 拉萨解放的了\n\n4. 萨加快递费","slug":"小程序常用组件","published":1,"updated":"2020-10-15T09:07:46.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl0uux6vy001e7suf5ycabiyh","content":"<meta name=\"referrer\" content=\"no-referrer\"/>\n\n<h2 id=\"小程序常用组件\"><a href=\"#小程序常用组件\" class=\"headerlink\" title=\"小程序常用组件\"></a>小程序常用组件</h2><p>记录组件包含：1. picker,</p>\n<span id=\"more\"></span>\n\n<blockquote>\n<p>记录小程序常用的组件和调用方法</p>\n</blockquote>\n<h3 id=\"小程序本身封装的组件\"><a href=\"#小程序本身封装的组件\" class=\"headerlink\" title=\"小程序本身封装的组件\"></a>小程序本身封装的组件</h3><ol>\n<li><p>picker（从底部弹起的滚动选择器）</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> &lt;picker bindchange=<span class=\"string\">&quot;bindPickerChange&quot;</span> value=<span class=\"string\">&quot;&#123;&#123;selectList[index].name&#125;&#125;&quot;</span> range=<span class=\"string\">&quot;&#123;&#123;selectList&#125;&#125;&quot;</span> range-key=<span class=\"string\">&quot;&#123;&#123;&#x27;name&#x27;&#125;&#125;&quot;</span>&gt;</span><br><span class=\"line\">            <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">view</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;picker&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">              &#123;&#123;currentType&#125;&#125;</span></span><br><span class=\"line\"><span class=\"language-xml\">            <span class=\"tag\">&lt;/<span class=\"name\">view</span>&gt;</span></span></span><br><span class=\"line\">&lt;/picker&gt;</span><br></pre></td></tr></table></figure>\n\n<p>外层用picker包裹，内部通过range设定滚动数据，range-key做渲染关键词，最后获得的是value的值。</p>\n<p>bindPickerChange方法做赋值的操作（略。。。）</p>\n</li>\n<li><p>scroll-view（可滚动视图区域)</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;scroll-view scroll-x=<span class=\"string\">&quot;true&quot;</span> <span class=\"keyword\">class</span>=<span class=\"string\">&quot;nav&quot;</span> scroll-left=<span class=\"string\">&quot;&#123;&#123;navScrollLeft&#125;&#125;&quot;</span> scroll-<span class=\"keyword\">with</span>-animation=<span class=\"string\">&quot;&#123;&#123;true&#125;&#125;&quot;</span>&gt;</span><br><span class=\"line\">\t\t\t<span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">block</span> <span class=\"attr\">wx:for</span>=<span class=\"string\">&quot;&#123;&#123;classifyList&#125;&#125;&quot;</span> <span class=\"attr\">wx:for-index</span>=<span class=\"string\">&quot;idx&quot;</span> <span class=\"attr\">wx:for-item</span>=<span class=\"string\">&quot;item&quot;</span> <span class=\"attr\">wx:key</span>=<span class=\"string\">&quot;idx&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">view</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;nav-item &#123;&#123;currentTab == idx ?&#x27;active&#x27;:&#x27;&#x27;&#125;&#125; flex_center_center&quot;</span> <span class=\"attr\">data-current</span>=<span class=\"string\">&quot;&#123;&#123;idx&#125;&#125;&quot;</span> <span class=\"attr\">data-id</span>=<span class=\"string\">&#x27;&#123;&#123;item.classify_id&#125;&#125;&#x27;</span> <span class=\"attr\">data-int</span>=<span class=\"string\">&#x27;&#123;&#123;idx&#125;&#125;&#x27;</span> <span class=\"attr\">data-name</span>=<span class=\"string\">&quot;&#123;&#123;item.name&#125;&#125;&quot;</span> <span class=\"attr\">bindtap</span>=<span class=\"string\">&quot;switchNav&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">text</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;t_name&quot;</span>&gt;</span>&#123;&#123;item.name&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">text</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">view</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">block</span>&gt;</span></span></span><br><span class=\"line\">&lt;/scroll-view&gt;</span><br></pre></td></tr></table></figure>\n\n<p>scroll-left:设置横向滚动条位置</p>\n<p>scroll-with-animation:在设置滚动条位置时使用动画过渡</p>\n</li>\n<li><p>swiper (滑块视图容器)</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;swiper <span class=\"keyword\">class</span>=<span class=\"string\">&quot;swipers&quot;</span> autoplay=<span class=\"string\">&quot;&#123;&#123;false&#125;&#125;&quot;</span> duration=<span class=\"string\">&quot;0&quot;</span> current=<span class=\"string\">&quot;&#123;&#123;currentTab&#125;&#125;&quot;</span> bindchange=<span class=\"string\">&quot;swiperChange&quot;</span>&gt;</span><br><span class=\"line\">\t<span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">block</span> <span class=\"attr\">wx:for</span>=<span class=\"string\">&quot;&#123;&#123;classifyList&#125;&#125;&quot;</span> <span class=\"attr\">wx:for-index</span>=<span class=\"string\">&quot;idxs&quot;</span> <span class=\"attr\">data-index</span>=<span class=\"string\">&quot;&#123;&#123;idxs&#125;&#125;&quot;</span> <span class=\"attr\">wx:for-item</span>=<span class=\"string\">&quot;item&quot;</span> <span class=\"attr\">wx:key</span>=<span class=\"string\">&quot;idx&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">\t\t<span class=\"tag\">&lt;<span class=\"name\">swiper-item</span> <span class=\"attr\">catchtouchmove</span>=<span class=\"string\">&quot;stopTouchMove&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">swiper-item</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">\t<span class=\"tag\">&lt;/<span class=\"name\">block</span>&gt;</span></span></span><br><span class=\"line\">&lt;/swiper&gt;</span><br></pre></td></tr></table></figure>\n\n<p>autoplay:是否自动切换(轮播图的形式)</p>\n<p>duration:滑动动画时长</p>\n<p>current：当前所在滑块的 index</p>\n<p>catchtouchmove：禁止用户手动滑动页面</p>\n</li>\n<li><p>cover-view（覆盖在原生组件之上的文本视图）cover-image（覆盖在原生组件之上的图片视图）</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;cover-view hidden=<span class=\"string\">&quot;&#123;&#123;!hidePause&#125;&#125;&quot;</span> catchtap=<span class=\"string\">&quot;pauseVideo&quot;</span> <span class=\"keyword\">class</span>=<span class=\"string\">&quot;pause-video&quot;</span>&gt;&lt;/cover-view&gt;</span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">cover-image</span> <span class=\"attr\">hidden</span>=<span class=\"string\">&quot;&#123;&#123;hidePause&#125;&#125;&quot;</span> <span class=\"attr\">catchtap</span>=<span class=\"string\">&quot;replayVideo&quot;</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;/assets/pause@2x.png&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;play-video&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">cover-image</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">cover-view</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;padding-top:&#123;&#123;navTop&#125;&#125;px;height:&#123;&#123;navHeight&#125;&#125;px&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;nav&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">\t<span class=\"tag\">&lt;<span class=\"name\">cover-image</span> <span class=\"attr\">catchtap</span>=<span class=\"string\">&quot;gotoPrev&quot;</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;/assets/ic_cancel_white@2x.png&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;back-icon&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">cover-image</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;/<span class=\"name\">cover-view</span>&gt;</span></span></span><br></pre></td></tr></table></figure></li>\n</ol>\n<h3 id=\"手动封装的组件\"><a href=\"#手动封装的组件\" class=\"headerlink\" title=\"手动封装的组件\"></a>手动封装的组件</h3><ol>\n<li><p>AlertBox(页面中间出现的弹框，中间为文字提示，拥有取消和确定按钮)</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//父页面中使用</span></span><br><span class=\"line\">&lt;<span class=\"title class_\">AlertBox</span> <span class=\"attr\">bind</span>:getUserConfirmResult = <span class=\"string\">&quot;getUserConfirmResult&quot;</span> alert_title=<span class=\"string\">&quot;&#123;&#123;alert_title&#125;&#125;&quot;</span> is_show=<span class=\"string\">&quot;&#123;&#123;is_show&#125;&#125;&quot;</span>&gt;&lt;/<span class=\"title class_\">AlertBox</span>&gt;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//子页面的结构</span></span><br><span class=\"line\"> &lt;!--弹框--&gt;</span><br><span class=\"line\">  <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">view</span> <span class=\"attr\">wx:if</span>=<span class=\"string\">&quot;&#123;&#123;is_show&#125;&#125;&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;alert_box&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;<span class=\"name\">view</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;clearfloat&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">view</span> <span class=\"attr\">bindtap</span>=<span class=\"string\">&quot;closeButton&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;alert_close&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">image</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;../../assets/close@2x.png&quot;</span> <span class=\"attr\">mode</span>=<span class=\"string\">&quot;widthFix&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">image</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;/<span class=\"name\">view</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;/<span class=\"name\">view</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    </span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;<span class=\"name\">view</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;alert_title&quot;</span>&gt;</span>&#123;&#123;alert_title&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">view</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;<span class=\"name\">view</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;alert_button&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;confirm_button&quot;</span> <span class=\"attr\">bindtap</span>=<span class=\"string\">&quot;confirmButton&quot;</span>&gt;</span>确定<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;/<span class=\"name\">view</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">  <span class=\"tag\">&lt;/<span class=\"name\">view</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n\n<p>涉及到父子组件传值的说明：</p>\n<p>父组件中：bind:getUserConfirmResult = “getUserConfirmResult”相当于自定义事件。可以从子组件获取到用户对于取消和确定的值，从而选择不同的显示效果。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//父组件调用自定义方法</span></span><br><span class=\"line\"><span class=\"title function_\">getUserConfirmResult</span>(<span class=\"params\">e</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">//console.info(&quot;e&quot;, e)</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> that = <span class=\"variable language_\">this</span>;</span><br><span class=\"line\">    that.<span class=\"title function_\">setData</span>(&#123;</span><br><span class=\"line\">      <span class=\"attr\">is_show</span>: <span class=\"literal\">false</span></span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;,</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//子组件中调用的方法。通过this.triggerEvent()通知到父组件的自定义事件。类似于 vue 中 this.$emit。</span></span><br><span class=\"line\"><span class=\"attr\">confirmButton</span>:<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">info</span>(<span class=\"string\">&quot;1111111&quot;</span>)</span><br><span class=\"line\">      <span class=\"keyword\">let</span> that = <span class=\"variable language_\">this</span>;</span><br><span class=\"line\">      </span><br><span class=\"line\">      <span class=\"keyword\">let</span> myEventDetail = &#123;</span><br><span class=\"line\">        <span class=\"attr\">is_show</span>:<span class=\"literal\">false</span>,</span><br><span class=\"line\">      &#125;;</span><br><span class=\"line\">      <span class=\"keyword\">let</span> myEventOption = &#123;<span class=\"attr\">bubbles</span>:<span class=\"literal\">false</span>&#125;;</span><br><span class=\"line\">      that.<span class=\"title function_\">triggerEvent</span>(<span class=\"string\">&#x27;getUserConfirmResult&#x27;</span>, myEventDetail, myEventOption)</span><br><span class=\"line\">    &#125;,</span><br></pre></td></tr></table></figure>\n\n<p>自定义组件触发事件时，需要使用 <code>triggerEvent</code> 方法，指定事件名、detail对象和事件选项：</p>\n<p>选项：bubbles ： 事件是否冒泡；composed：事件是否可以穿越组件边界；capturePhase： 事件是否拥有捕获阶段</p>\n</li>\n<li><p>撒辣椒粉</p>\n</li>\n<li><p>拉萨解放的了</p>\n</li>\n<li><p>萨加快递费</p>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"<meta name=\"referrer\" content=\"no-referrer\"/>\n\n<h2 id=\"小程序常用组件\"><a href=\"#小程序常用组件\" class=\"headerlink\" title=\"小程序常用组件\"></a>小程序常用组件</h2><p>记录组件包含：1. picker,</p>","more":"<blockquote>\n<p>记录小程序常用的组件和调用方法</p>\n</blockquote>\n<h3 id=\"小程序本身封装的组件\"><a href=\"#小程序本身封装的组件\" class=\"headerlink\" title=\"小程序本身封装的组件\"></a>小程序本身封装的组件</h3><ol>\n<li><p>picker（从底部弹起的滚动选择器）</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> &lt;picker bindchange=<span class=\"string\">&quot;bindPickerChange&quot;</span> value=<span class=\"string\">&quot;&#123;&#123;selectList[index].name&#125;&#125;&quot;</span> range=<span class=\"string\">&quot;&#123;&#123;selectList&#125;&#125;&quot;</span> range-key=<span class=\"string\">&quot;&#123;&#123;&#x27;name&#x27;&#125;&#125;&quot;</span>&gt;</span><br><span class=\"line\">            <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">view</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;picker&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">              &#123;&#123;currentType&#125;&#125;</span></span><br><span class=\"line\"><span class=\"language-xml\">            <span class=\"tag\">&lt;/<span class=\"name\">view</span>&gt;</span></span></span><br><span class=\"line\">&lt;/picker&gt;</span><br></pre></td></tr></table></figure>\n\n<p>外层用picker包裹，内部通过range设定滚动数据，range-key做渲染关键词，最后获得的是value的值。</p>\n<p>bindPickerChange方法做赋值的操作（略。。。）</p>\n</li>\n<li><p>scroll-view（可滚动视图区域)</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;scroll-view scroll-x=<span class=\"string\">&quot;true&quot;</span> <span class=\"keyword\">class</span>=<span class=\"string\">&quot;nav&quot;</span> scroll-left=<span class=\"string\">&quot;&#123;&#123;navScrollLeft&#125;&#125;&quot;</span> scroll-<span class=\"keyword\">with</span>-animation=<span class=\"string\">&quot;&#123;&#123;true&#125;&#125;&quot;</span>&gt;</span><br><span class=\"line\">\t\t\t<span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">block</span> <span class=\"attr\">wx:for</span>=<span class=\"string\">&quot;&#123;&#123;classifyList&#125;&#125;&quot;</span> <span class=\"attr\">wx:for-index</span>=<span class=\"string\">&quot;idx&quot;</span> <span class=\"attr\">wx:for-item</span>=<span class=\"string\">&quot;item&quot;</span> <span class=\"attr\">wx:key</span>=<span class=\"string\">&quot;idx&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">view</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;nav-item &#123;&#123;currentTab == idx ?&#x27;active&#x27;:&#x27;&#x27;&#125;&#125; flex_center_center&quot;</span> <span class=\"attr\">data-current</span>=<span class=\"string\">&quot;&#123;&#123;idx&#125;&#125;&quot;</span> <span class=\"attr\">data-id</span>=<span class=\"string\">&#x27;&#123;&#123;item.classify_id&#125;&#125;&#x27;</span> <span class=\"attr\">data-int</span>=<span class=\"string\">&#x27;&#123;&#123;idx&#125;&#125;&#x27;</span> <span class=\"attr\">data-name</span>=<span class=\"string\">&quot;&#123;&#123;item.name&#125;&#125;&quot;</span> <span class=\"attr\">bindtap</span>=<span class=\"string\">&quot;switchNav&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">text</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;t_name&quot;</span>&gt;</span>&#123;&#123;item.name&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">text</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">view</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">block</span>&gt;</span></span></span><br><span class=\"line\">&lt;/scroll-view&gt;</span><br></pre></td></tr></table></figure>\n\n<p>scroll-left:设置横向滚动条位置</p>\n<p>scroll-with-animation:在设置滚动条位置时使用动画过渡</p>\n</li>\n<li><p>swiper (滑块视图容器)</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;swiper <span class=\"keyword\">class</span>=<span class=\"string\">&quot;swipers&quot;</span> autoplay=<span class=\"string\">&quot;&#123;&#123;false&#125;&#125;&quot;</span> duration=<span class=\"string\">&quot;0&quot;</span> current=<span class=\"string\">&quot;&#123;&#123;currentTab&#125;&#125;&quot;</span> bindchange=<span class=\"string\">&quot;swiperChange&quot;</span>&gt;</span><br><span class=\"line\">\t<span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">block</span> <span class=\"attr\">wx:for</span>=<span class=\"string\">&quot;&#123;&#123;classifyList&#125;&#125;&quot;</span> <span class=\"attr\">wx:for-index</span>=<span class=\"string\">&quot;idxs&quot;</span> <span class=\"attr\">data-index</span>=<span class=\"string\">&quot;&#123;&#123;idxs&#125;&#125;&quot;</span> <span class=\"attr\">wx:for-item</span>=<span class=\"string\">&quot;item&quot;</span> <span class=\"attr\">wx:key</span>=<span class=\"string\">&quot;idx&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">\t\t<span class=\"tag\">&lt;<span class=\"name\">swiper-item</span> <span class=\"attr\">catchtouchmove</span>=<span class=\"string\">&quot;stopTouchMove&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">swiper-item</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">\t<span class=\"tag\">&lt;/<span class=\"name\">block</span>&gt;</span></span></span><br><span class=\"line\">&lt;/swiper&gt;</span><br></pre></td></tr></table></figure>\n\n<p>autoplay:是否自动切换(轮播图的形式)</p>\n<p>duration:滑动动画时长</p>\n<p>current：当前所在滑块的 index</p>\n<p>catchtouchmove：禁止用户手动滑动页面</p>\n</li>\n<li><p>cover-view（覆盖在原生组件之上的文本视图）cover-image（覆盖在原生组件之上的图片视图）</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;cover-view hidden=<span class=\"string\">&quot;&#123;&#123;!hidePause&#125;&#125;&quot;</span> catchtap=<span class=\"string\">&quot;pauseVideo&quot;</span> <span class=\"keyword\">class</span>=<span class=\"string\">&quot;pause-video&quot;</span>&gt;&lt;/cover-view&gt;</span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">cover-image</span> <span class=\"attr\">hidden</span>=<span class=\"string\">&quot;&#123;&#123;hidePause&#125;&#125;&quot;</span> <span class=\"attr\">catchtap</span>=<span class=\"string\">&quot;replayVideo&quot;</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;/assets/pause@2x.png&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;play-video&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">cover-image</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">cover-view</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;padding-top:&#123;&#123;navTop&#125;&#125;px;height:&#123;&#123;navHeight&#125;&#125;px&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;nav&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">\t<span class=\"tag\">&lt;<span class=\"name\">cover-image</span> <span class=\"attr\">catchtap</span>=<span class=\"string\">&quot;gotoPrev&quot;</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;/assets/ic_cancel_white@2x.png&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;back-icon&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">cover-image</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;/<span class=\"name\">cover-view</span>&gt;</span></span></span><br></pre></td></tr></table></figure></li>\n</ol>\n<h3 id=\"手动封装的组件\"><a href=\"#手动封装的组件\" class=\"headerlink\" title=\"手动封装的组件\"></a>手动封装的组件</h3><ol>\n<li><p>AlertBox(页面中间出现的弹框，中间为文字提示，拥有取消和确定按钮)</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//父页面中使用</span></span><br><span class=\"line\">&lt;<span class=\"title class_\">AlertBox</span> <span class=\"attr\">bind</span>:getUserConfirmResult = <span class=\"string\">&quot;getUserConfirmResult&quot;</span> alert_title=<span class=\"string\">&quot;&#123;&#123;alert_title&#125;&#125;&quot;</span> is_show=<span class=\"string\">&quot;&#123;&#123;is_show&#125;&#125;&quot;</span>&gt;&lt;/<span class=\"title class_\">AlertBox</span>&gt;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//子页面的结构</span></span><br><span class=\"line\"> &lt;!--弹框--&gt;</span><br><span class=\"line\">  <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">view</span> <span class=\"attr\">wx:if</span>=<span class=\"string\">&quot;&#123;&#123;is_show&#125;&#125;&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;alert_box&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;<span class=\"name\">view</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;clearfloat&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">view</span> <span class=\"attr\">bindtap</span>=<span class=\"string\">&quot;closeButton&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;alert_close&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">image</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;../../assets/close@2x.png&quot;</span> <span class=\"attr\">mode</span>=<span class=\"string\">&quot;widthFix&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">image</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;/<span class=\"name\">view</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;/<span class=\"name\">view</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    </span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;<span class=\"name\">view</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;alert_title&quot;</span>&gt;</span>&#123;&#123;alert_title&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">view</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;<span class=\"name\">view</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;alert_button&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;confirm_button&quot;</span> <span class=\"attr\">bindtap</span>=<span class=\"string\">&quot;confirmButton&quot;</span>&gt;</span>确定<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;/<span class=\"name\">view</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">  <span class=\"tag\">&lt;/<span class=\"name\">view</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n\n<p>涉及到父子组件传值的说明：</p>\n<p>父组件中：bind:getUserConfirmResult = “getUserConfirmResult”相当于自定义事件。可以从子组件获取到用户对于取消和确定的值，从而选择不同的显示效果。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//父组件调用自定义方法</span></span><br><span class=\"line\"><span class=\"title function_\">getUserConfirmResult</span>(<span class=\"params\">e</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">//console.info(&quot;e&quot;, e)</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> that = <span class=\"variable language_\">this</span>;</span><br><span class=\"line\">    that.<span class=\"title function_\">setData</span>(&#123;</span><br><span class=\"line\">      <span class=\"attr\">is_show</span>: <span class=\"literal\">false</span></span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;,</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//子组件中调用的方法。通过this.triggerEvent()通知到父组件的自定义事件。类似于 vue 中 this.$emit。</span></span><br><span class=\"line\"><span class=\"attr\">confirmButton</span>:<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">info</span>(<span class=\"string\">&quot;1111111&quot;</span>)</span><br><span class=\"line\">      <span class=\"keyword\">let</span> that = <span class=\"variable language_\">this</span>;</span><br><span class=\"line\">      </span><br><span class=\"line\">      <span class=\"keyword\">let</span> myEventDetail = &#123;</span><br><span class=\"line\">        <span class=\"attr\">is_show</span>:<span class=\"literal\">false</span>,</span><br><span class=\"line\">      &#125;;</span><br><span class=\"line\">      <span class=\"keyword\">let</span> myEventOption = &#123;<span class=\"attr\">bubbles</span>:<span class=\"literal\">false</span>&#125;;</span><br><span class=\"line\">      that.<span class=\"title function_\">triggerEvent</span>(<span class=\"string\">&#x27;getUserConfirmResult&#x27;</span>, myEventDetail, myEventOption)</span><br><span class=\"line\">    &#125;,</span><br></pre></td></tr></table></figure>\n\n<p>自定义组件触发事件时，需要使用 <code>triggerEvent</code> 方法，指定事件名、detail对象和事件选项：</p>\n<p>选项：bubbles ： 事件是否冒泡；composed：事件是否可以穿越组件边界；capturePhase： 事件是否拥有捕获阶段</p>\n</li>\n<li><p>撒辣椒粉</p>\n</li>\n<li><p>拉萨解放的了</p>\n</li>\n<li><p>萨加快递费</p>\n</li>\n</ol>"},{"title":"原生JS方法记录","date":"2020-03-18T09:16:26.000Z","_content":"\n<meta name=\"referrer\" content=\"no-referrer\"/>\n\n## 原生JS方法记录\n\n### 记录原生JS实现的功能\n\n通过框架实现的功能，如何通过原生JS实现，记录遇到的实现代码\n\n<!-- more -->\n\n### js动态添加页面的icon图标\n\n```js\n(function() {\n    var link = document.createElement('link');\n    link.type = 'image/x-icon';\n    link.rel = 'shortcut icon';\n    link.href = '/images/366/favicon.ico';\n    document.getElementsByTagName('head')[0].appendChild(link);\n}());\n```\n\n<meta name=\"referrer\" content=\"no-referrer\"/>\n\n## 记录图片懒加载的实现\n\n### 图片懒加载\n\n如果是一个图片较多的网站，比如照片类网站，会涉及到打开网站后，一次性向服务器发送大量请求，所以有需求：当用户需要查看更多图片的时候再进行请求。\n\n### 原理\n\n1. 先将img标签的src链接设为同一张图片（比如空白图片），然后给img标签设置自定义属性（比如 data-src）,然后将真正的图片地址存储在data-src中。\n\n2. 当JS监听到该图片元素进入可视窗口时，将自定义属性中的地址存储到src属性中。达到懒加载的效果。\n\n<!-- more -->\n\n### 例子\n\n* HTML\n\n  img图片引入地址为统一的一张图片，真正的地址存储在data-src中\n\n``` html\n    <div class=\"container\">\n        <img src=\"http://s4.sinaimg.cn/mw690/006uWPTUgy72CNFYNjB93&690\" alt=\"1\" data-src=\"http://img4.imgtn.bdimg.com/it/u=951914923,777131061&fm=26&gp=0.jpg\">\n        <img src=\"http://s4.sinaimg.cn/mw690/006uWPTUgy72CNFYNjB93&690\" alt=\"1\" data-src=\"http://img1.imgtn.bdimg.com/it/u=637435809,3242058940&fm=26&gp=0.jpg\">\n        <img src=\"http://s4.sinaimg.cn/mw690/006uWPTUgy72CNFYNjB93&690\" alt=\"1\" data-src=\"http://img1.imgtn.bdimg.com/it/u=3990342075,2367006974&fm=200&gp=0.jpg\">\n        <img src=\"http://s4.sinaimg.cn/mw690/006uWPTUgy72CNFYNjB93&690\" alt=\"1\" data-src=\"http://img1.imgtn.bdimg.com/it/u=1813891576,1754763093&fm=26&gp=0.jpg\">\n        <img src=\"http://s4.sinaimg.cn/mw690/006uWPTUgy72CNFYNjB93&690\" alt=\"1\" data-src=\"http://img4.imgtn.bdimg.com/it/u=2539922263,2810970709&fm=200&gp=0.jpg\">\n    </div>\n```\n\n* CSS\n\n  ```CSS\n      <style>\n          .container{\n              max-width: 800px;\n              margin:0 auto;\n          }\n          .container:after{\n              content:\"\";\n              display: block;\n              clear:both;\n          }\n          .container img{\n              width:50%;\n              height:260px;\n              float:left;\n          }\n      </style>\n  ```\n\n* JS\n\n  ```JS\n          <script>\n  \n              // 一开始没有滚动的时候，出现在视窗中的图片也会加载\n              start();\n  \n              // 当页面开始滚动的时候，遍历图片，如果图片出现在视窗中，就加载图片\n              var clock; //函数节流\n              $(window).on('scroll',function(){\n                  if(clock){\n                      clearTimeout(clock);\n                  }\n                  clock = setTimeout(function(){\n                      start()\n                  },200)\n              })\n              \n              function start(){\n                   $('.container img').not('[data-isLoading]').each(function () {\n                      if (isShow($(this))) {\n                          loadImg($(this));\n                      }\n                  })\n              }\n  \n  \n              // 判断图片是否出现在视窗的函数\n              function isShow($node){\n                  return $node.offset().top <= $(window).height()+$(window).scrollTop();\n              }\n  \n              // 加载图片的函数，就是把自定义属性data-src 存储的真正的图片地址，赋值给src\n              function loadImg($img){\n                      $img.attr('src', $img.attr('data-src'));\n  \n                      // 已经加载的图片，我给它设置一个属性，值为1，作为标识\n                      // 弄这个的初衷是因为，每次滚动的时候，所有的图片都会遍历一遍，这样有点浪费，所以做个标识，滚动的时候只遍历哪些还没有加载的图片\n                      $img.attr('data-isLoading',1);\n              }\n  \n          </script>\n  ```\n\n  \n\n### js实现效果\n\n```js\t\n            var clock; //函数节流            \n            $(window).on('scroll',function(){\n                if(clock){\n                    clearTimeout(clock);\n                }\n                clock = setTimeout(function(){\n                    start()\n                },200)\n            })\n```\n\n这里有用到一个节流函数，200ms只执行一次加载图片函数，里面有if的判断条件是延迟函数本身，当settimeout执行时，判断为真，当settimeout不执行，为假。\n\n``` js\t\n            function start(){\n                 $('.container img').not('[data-isLoading]').each(function () {\n                    if (isShow($(this))) {\n                        loadImg($(this));\n                    }\n                })\n            }\n```\n\n.not 函数是jq的用法，是将对象循环，并且将符合条件的对象剔除出数组，这里data-isloading在图片的src改变后，后续有将其赋值为1了。\n\n<meta name=\"referrer\" content=\"no-referrer\"/>\n\n## 平滑上移到顶部 公共方法\n\n### 完美平滑实现一个“回到顶部\n\n在实际应用中，经常用到滚动到页面顶部或某个位置，一般简单用锚点处理或用js将document.body.scrollTop设置为0，结果是页面一闪而过滚到指定位置，不是特别友好。我们想要的效果是要有点缓冲效果。\n\n现代浏览器陆续意识到了这种需求，scrollIntoView意思是滚动到可视，css中提供了scroll-behavior属性，js有Element.scrollIntoView()方法。\n\n<!-- more -->\n\n### scroll-behavior 纯CSS实现\n\n**现在css支持了新的功能，scroll-behavior属性可取值auto|smooth|inherit|unset**\n\nscroll-behavior: smooth;是我们想要的缓冲效果。在PC浏览器中，页面默认滚动是在<html>标签上，移动端大多数在<body>标签上，在我们想要实现平滑“回到顶部”，只需在这两个标签上都加上：\n\n```css\nhtml, body {\n  scroll-behavior: smooth;\n}\n```\n\n> 当然，这个实现方法现在支持度比较不友好\n\n### Element.scrollIntoView() 新的方法\n\nElement.scrollIntoView() 方法让当前的元素滚动到浏览器窗口的可视区域内。\n\n**语法**\n\n```js\nelement.scrollIntoView(); // 等同于element.scrollIntoView(true) \nelement.scrollIntoView(alignToTop); // Boolean型参数 \nelement.scrollIntoView(scrollIntoViewOptions); // Object型参数\n```\n\n**参数** \n\n`alignToTop`可选\n\n一个[`Boolean`](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Boolean)值：\n\n- 如果为`true`，元素的顶端将和其所在滚动区的可视区域的顶端对齐。相应的 `scrollIntoViewOptions: {block: \"start\", inline: \"nearest\"}`。这是这个参数的默认值。\n- 如果为`false`，元素的底端将和其所在滚动区的可视区域的底端对齐。相应的`scrollIntoViewOptions: {block: \"end\", inline: \"nearest\"}`。\n\n`scrollIntoViewOptions` 可选 \n\n一个包含下列属性的对象：\n\n- `behavior` 可选\n\n  定义动画过渡效果， `\"auto\"`或 `\"smooth\"` 之一。默认为 `\"auto\"`。\n\n- `block` 可选\n\n  定义垂直方向的对齐， `\"start\"`, `\"center\"`, `\"end\"`, 或 `\"nearest\"`之一。默认为 `\"start\"`。\n\n- `inline` 可选\n\n  定义水平方向的对齐， `\"start\"`, `\"center\"`, `\"end\"`, 或 `\"nearest\"`之一。默认为 `\"nearest\"`。\n\n**例子**\n\n```js\t\nvar element = document.getElementById(\"box\");\n\nelement.scrollIntoView();\nelement.scrollIntoView(false);\nelement.scrollIntoView({block: \"end\"});\nelement.scrollIntoView({behavior: \"instant\", block: \"end\", inline: \"nearest\"});\n```\n\n> 当然，兼容性也是有问题的。\n\n### 向下兼容\n\n要达到所有浏览器都有相同（类似）效果，那就要把剩余不支持scroll-behavior属性的浏览器揪出来，用js去完成使命了。\n\n**注意点**\n\n1. 判断是否支持scroll-behavior属性\n\n   ```js\n   if(typeof window.getComputedStyle(document.body).scrollBehavior === 'undefined') {\n     // 兼容js代码\n   } else {\n     // 原生滚动api\n     // Element.scrollIntoView()\n   }\n   ```\n\n2. 缓冲功能的实现\n\n   原理：\n\n   ```js\t\n   var position = position + (destination - position) / n;\n   ```\n\n3. 贴上代码\n\n   ```js\n   <script type=\"javascript\">\n     var scrollTopSmooth = function (position) {\n     // 不存在原生`requestAnimationFrame`，用`setTimeout`模拟替代\n     if (!window.requestAnimationFrame) {\n       window.requestAnimationFrame = function (cb) {\n         return setTimeout(cb, 17);\n       };\n     }\n     // 当前滚动高度\n     var scrollTop = document.documentElement.scrollTop || document.body.scrollTop;\n     // step\n     var step = function () {\n       var distance = position - scrollTop;\n       scrollTop = scrollTop + distance / 5;\n       if (Math.abs(distance) < 1) {\n         window.scrollTo(0, position);\n       } else {\n         window.scrollTo(0, scrollTop);\n         requestAnimationFrame(step);\n       }\n     };\n     step();\n   }\n   $backToTop = document.querySelector('.back-to-top')\n   $backToTop.addEventListener('click', function () {\n     scrollTopSmooth(0);\n   }, false);   \n   </script>\n   ```\n\n   ### 简单封装\n\n   上面缓冲算法和当前滚动业务代码耦合在一起了，下面单独拆解出单独一个函数。\n\n   ```js\n   /**\n   * 缓冲函数\n   * @param {Number} position 当前滚动位置\n   * @param {Number} destination 目标位置\n   * @param {Number} rate 缓动率\n   * @param {Function} callback 缓动结束回调函数 两个参数分别是当前位置和是否结束\n   */\n   \n   var easeout = function (position, destination, rate, callback) {\n     if (position === destination || typeof destination !== 'number') {\n       return false;\n     }\n     destination = destination || 0;\n     rate = rate || 2;\n     // 不存在原生`requestAnimationFrame`，用`setTimeout`模拟替代\n     if (!window.requestAnimationFrame) {\n       window.requestAnimationFrame = function (fn) {\n         return setTimeout(fn, 17);\n       }\n     }\n     var step = function () {\n       position = position + (destination - position) / rate;\n       if (Math.abs(destination - position) < 1) {\n         callback(destination, true);\n         return;\n       }\n       callback(position, false);\n       requestAnimationFrame(step);\n     };\n     step();\n   }\n   ```\n\n   拆分后，这个小缓冲算法就可以被重复调用啦，而且，适用于滚动到指定位置（不仅仅是到顶部）和缓冲率（控制滚动快慢），当前小demo调用：\n\n   ```js\n   var scrollTopSmooth = function (position) {\n     // 当前滚动高度\n     var scrollTop = document.documentElement.scrollTop || document.body.scrollTop;\n     easeout(scrollTop, position, 5, function (val) {\n       window.scrollTo(0, val);\n     });\n   }\n   $backToTop = document.querySelector('.back-to-top')\n   $backToTop.addEventListener('click', function () {\n     scrollTopSmooth(200);\n   }, false);\n   ```\n\n   \n\n**需要放入公共方法中去：**\n\n在main.js中，可以将公共方法添加到vue的原型上去，从而在所有的页面都可以实现调用：\n\n```html\nimport common from '@/comF/common.js'\nVue.prototype.common = common\n\nimport axios from 'axios'\nVue.prototype.axios = axios\n```\n\n\n\n## 函数防抖和节流/闭包\n\n### 函数节流和防抖\n\n函数节流：**所谓节流，就是指连续触发事件但是在 n 秒中只执行一次函数**\n\n函数防抖：**所谓防抖，就是指触发事件后在 n 秒内函数只能执行一次，如果在 n 秒内又触发了事件，则会重新计算函数执行时间**\n\n<!-- more -->\n\n### 防抖例子\n\n防抖函数分为非立即执行版和立即执行版。\n\n**主要实现方式就是通过执行settimeout这个函数，每次触发延迟对应时间后再执行内部函数**\n\n* 非立即执行防抖函数\n\n```js\nfunction debounce(func, wait) {\n    let timeout;\n    return function () {\n        let context = this;\n        let args = arguments;\n\n        if (timeout) clearTimeout(timeout);\n        \n        timeout = setTimeout(() => {\n            func.apply(context, args)\n        }, wait);\n    }\n}\ncontent.onmousemove = debounce(count,1000); //调用函数\n```\n\n* 立即执行防抖函数\n\n```js\nfunction debounce(func,wait) {\n    let timeout;\n    return function () {\n        let context = this;\n        let args = arguments;\n\n        if (timeout) clearTimeout(timeout);\n\n        let callNow = !timeout;\n        timeout = setTimeout(() => {\n            timeout = null;\n        }, wait)\n\n        if (callNow) func.apply(context, args)\n    }\n}\ncontent.onmousemove = debounce(count,1000); //调用函数\n```\n\n* 双剑合璧版：\n\n```js\nfunction debounce(func,wait,immediate) {\n    let timeout;\n\n    return function () {\n        let context = this;\n        let args = arguments;\n\n        if (timeout) clearTimeout(timeout);\n        if (immediate) {\n            var callNow = !timeout;\n            timeout = setTimeout(() => {\n                timeout = null;\n            }, wait)\n            if (callNow) func.apply(context, args)\n        }\n        else {\n            timeout = setTimeout(function(){\n                func.apply(context, args)\n            }, wait);\n        }\n    }\n}\n```\n\n### 节流例子\n\n对于节流，一般有两种方式可以实现，分别是时间戳版和定时器版\n\n**主要实现是通过定位时间差来判断是否执行函数**\n\n* 时间戳\n\n  ```js\t\n  function throttle(func, wait) {\n      let previous = 0;\n      return function() {\n          let now = Date.now();\n          let context = this;\n          let args = arguments;\n          if (now - previous > wait) {\n              func.apply(context, args);\n              previous = now;\n          }\n      }\n  }\n  content.onmousemove = throttle(count,1000);\n  ```\n\n* 定时器\n\n  ```js\t\n  function throttle(func, wait) {\n      let timeout;\n      return function() {\n          let context = this;\n          let args = arguments;\n          if (!timeout) {\n              timeout = setTimeout(() => {\n                  timeout = null;\n                  func.apply(context, args)\n              }, wait)\n          }\n  \n      }\n  }\n  content.onmousemove = throttle(count,1000);\n  ```\n\n* 合并版本\n\n  ```js\t\n  function throttle(func, wait ,type) {\n      if(type===1){\n          let previous = 0;\n      }else if(type===2){\n          let timeout;\n      }\n      return function() {\n          let context = this;\n          let args = arguments;\n          if(type===1){\n              let now = Date.now();\n  \n              if (now - previous > wait) {\n                  func.apply(context, args);\n                  previous = now;\n              }\n          }else if(type===2){\n              if (!timeout) {\n                  timeout = setTimeout(() => {\n                      timeout = null;\n                      func.apply(context, args)\n                  }, wait)\n              }\n          }\n      }\n  }\n  ```\n\n### 区别\n\n可以看到 ：**非立即执行防抖函数** 和 **定时器版节流函数** 比较相似。\n\n> 主要区别是其中的判断条件：\n>\n> 1. 节流函数是**判断执行settime函数没有执行，则让settime函数执行，达到一定时间内只执行一次的目的**。\n> 2. 防抖函数是**判断settime函数执行，则让settime函数再执行一次，达到每次触发都延迟**\n\n### 原理\n\n防抖是维护一个计时器，规定在delay时间后触发函数，但是在delay时间内再次触发的话，都会清除当前的 timer 然后重新设置超时调用，即重新计时。这样一来，只有最后一次操作能被触发。\n\n节流是通过判断是否到达一定时间来触发函数，若没到规定时间则使用计时器延后，而下一次事件则会重新设定计时器。\n\n## 防抖函数中的闭包\n\n复制一份防止丢失\n\n### debounce函数\n\ndebounce函数，俗称防抖函数，专治input、resize、scroll等频繁操作打爆浏览器或其他资源。前端面试几乎必考，当然肯定会做一些变化。\n\n```js\n  <script>\n    var handler = function () {\n      console.log(this, Date.now());\n    }\n    document.getElementById('input').addEventListener('input', handler);\n  </script>\n```\n\n### 现状\n\n用户每次输入操作都会触发handler调用，性能浪费。\n\n### 目标\n\n用户一直输入并不触发handler，直到用户停止输入500ms以上，才触发一次handler。\n\n前提是，不修改原有的业务代码，且尽量通用。\n\n### 思路\n\nsetTimeout实现计时\n高阶函数，即function作为参数并且返回function\n代码实现过程\n\n### 第一版\n\n```js\nfunction debounce(fn, delay) {\n  return function () {\n    setTimeout(function () {\n      fn();\n    }, delay);\n  }\n}\n```\n\n给handler包上试试\n\ndocument.getElementById('input').addEventListener('input', debounce(handler, 500));\n明显不可以！！这样写只不过将每次触发都延时了500ms，并没有减少触发次数。不过我们至少实现了高阶函数，不会破坏原有的业务代码了。那么接下来就试着减少触发次数。\n\n思路就是每次触发先clearTimeout把之前的计时器清掉，再重新setTimout。那么问题来了，第2次进来时，怎么获取到第1次的计时器，并清除呢？\n\n### 第二版\n\n```js\t\nfunction debounce(fn, delay) {\n  var timer;\n  return function () { // 闭包\n    clearTimeout(timer);\n    timer = setTimeout(function () {\n      fn();\n    }, delay);\n  }\n}\n```\n\n试来试去，发现把timer放到“外面”最好（为什么不放到更外面？），每次调用进来，大家用的都是一个timer，完美。同时，我们的第一个主角登场了——闭包。\n\n**闭包**\n闭包就是能够读取其他函数内部变量的函数。例如在javascript中，只有函数内部的子函数才能读取局部变量，所以闭包可以理解成“定义在一个函数内部的函数“。在本质上，闭包是将函数内部和函数外部连接起来的桥梁。——百度百科\n\n网上可以找个很多关于闭包的概念与解释，估计越看越蒙。认识事物需要一个从具象到抽象的过程，以目前的情况来看，我们只要知道，“定义在一个函数（外函数）内部的函数（内函数），并且内函数访问了外函数的变量，这个内函数就叫做闭包”。\n\n最关键的问题，闭包有什么用？从debounce这个例子，我们可以看到，闭包可以让每次触发的handler共享一个变量，通常用到高阶函数的地方，就会用到闭包。再举几个闭包的应用场景，比如给ajax请求加缓存、加锁，为一系列回调设置初始值，防止污染全局或局部变量等。可能这么说大家还是若有若无的，没关系，实践出真知，现实当中肯定会碰到能够应用闭包的地方的。我们继续debounce。\n\n终于解决了触发频率的问题了。但是！细心的同学肯定发现了。我们handler里的console打印出来的this，是不一样的！！！之前的this是input结点，现在的this是window对象。这绝对是不行的，比如我想要在handler里打印input的value，现在怎么做呢？\n\n### 第三版\n\n```js\t\nfunction debounce(fn, delay) {\n  // 1\n  var timer;\n  return function () { // 闭包\n    // 2\n    var ctx = this; // this上下文\n    clearTimeout(timer);\n    timer = setTimeout(function () {\n      // 3\n      fn.apply(ctx); // this上下文调用\n    }, delay);\n  }\n}\n```\n\n解决思路也简单，就是先把正确的this保存起来，我们在这里把this称为“上下文”，大家可以细细品味一下这个词。然后用apply（或call）重新制定一下fn的上下文即可。\n\n**上下文this**\njs的this是很善变的，谁调用它，它就指向谁，所以“上下文”这个词还是很贴切的。那么，为什么在2处能够得到正确的this呢？涉及到上下文切换的地方，一共有3处，已在上面代码中标了出来。我总结了一个三步定位this法：\n\n第一步，是否立即执行？如果是，跳过第二步！\n\n第二步，如果不是立即执行，它一定会被转交给某个对象保管，看它被挂在了哪，或者说转交给了谁！\n\n第三步，这个执行函数挂在谁身上，谁就是this！\n\n我们来实践一下。\n\n第1处：\n\n我们需要先简单处理一下，debounce其实是挂在window全局上的，写全应该是window.debounce(handler, 500)。第一步，是立即执行的！跳过第二步！第三步，debounce挂在window上！所以this指向是window。\n\n第2处：\n\n先简单处理下，debounce(handler, 500)的执行结果是返回一个函数，所以下面两段代码基本上可以视为等价的\n\n```js\ndocument.getElementById('input').addEventListener('input', debounce(handler, 500));\n\ndocument.getElementById('input').addEventListener('input', function () { // 闭包\n  // 2\n  var ctx = this; // this上下文\n  clearTimeout(timer);\n  timer = setTimeout(function () {\n    // 3\n    fn.apply(ctx); // this上下文调用\n  }, delay);\n});\n```\n\n\n\n这么一看，就具体多了。第一步，不是立即执行；第二步，addEventListener是挂在dom上的方法，所以addEventListener只能把回调挂在dom上，可以理解成input.handler = function(){}，等行为被触发时才执行。所以它被转交给了input；第三步，handler挂在input上，所以this指向了input！\n\n第3处：\n\nsetTimeout是挂在window上的，所以在执行的时候，实际上是window.setTimeout()。我们用伪代码模拟下setTimeout的实现\n\n```js\nwindow.setTimeout = function(fn, delay){\n  // 因为不能立即执行，所以要找个地方挂fn，就只能把fn转交给它的主子window\n  // 假设window存fn的属性叫setTimeoutHandler，与input.handler类似\n  window.setTimeoutHandler = fn;\n  // 等待delay毫秒……\n  window.setTimeoutHandler(); // 执行\n}\n```\n\n仔细理解一下，可以发现这里跟dom的回调非常像。第一步，不是立即执行；第二步，setTimeout是挂在window上的方法，所以只能转交给window的某个方法保管（假设叫setTimeoutHandler，名字不重要）；第三步，setTimeoutHandler挂在window上，所以this指向window。\n\n稳妥起见，我们再加一个例子\n\n```js\nvar obj = {\n  test: function(){\n    console.log(this);\n  }\n}\nobj.test(); // obj\nsetTimeout(obj.test,1000); // window\n```\n\n第一个很简单，立即执行，不用转交。直接可以定位this指向了obj！\n\n第二个非立即执行，虽然传进去的是obj.test，实际上需要转交给window.setTimeoutHandler保管，即window.setTimeoutHandler = obj.test。所以this指向的是window！\n\n总之，碰到非立即执行的函数，需要仔细分析一下。\n\n**debounce最终版**\n\n```js\nfunction debounce(fn, delay) {\n  var timer;\n  return function () { // 闭包\n    var ctx = this; // this上下文\n    var args = arguments;\n    clearTimeout(timer);\n    timer = setTimeout(function () {\n      fn.apply(ctx, args); // this上下文调用\n    }, delay);\n  }\n}\n```\n\n最后，我们再把传参也解决一下（arguments是默认的存储所有传参的类数组对象，时间关系这里就不展开了），完成。\n\n### 总结\n\ndebounce是一个很实用也很经典的功能函数，每一行代码都有丰富的内涵。与其类似的还有throttle，可以查查巩固一下。本文主要是想借debounce这个实用的函数引出js当中的两个比较难理解，的点this和闭包。说实话，这两个点想讲明白很难，更靠谱的办法是用大量的实践来消化。本文算是给各位同学种下一颗种子，以后碰到类似的情况时，能够很快的想起本文的内容，帮助自己更好的理解与感悟。\n\n<meta name=\"referrer\" content=\"no-referrer\"/>\n\n## 冒泡，捕获与其阻止\n\n### js addEventListener事件捕获与冒泡,第三个参数详解,阻止事件传播\n\n**关键点**\n\n> element.addEventListener(event, function[, useCapture])\n\n1. event:事件名称,如click\n\n2. function:指定要事件触发时执行的函数,可以传入事件参数\n\n3. useCapture:可选。布尔值，指定事件是否在捕获或冒泡阶段执行。\n\n   * 默认false:在冒泡阶段执行指定事件\n\n   * true:在捕获阶段执行事件\n\n4. event.stopPropagation():阻止事件传播,用于function(event){}中\n\n   <!-- more -->\n\n### 捕获与冒泡\n\n图示：\n\n![](https://img-blog.csdnimg.cn/20190122115236901.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2x5dF9hbmd1bGFyanM=,size_16,color_FFFFFF,t_70)\n\n冒泡js代码：\n\n```js\nfunction print(e){\n     console.log(this.id);\n   }\n   aa.addEventListener('click',print);//第三个参数默认为false\n   bb.addEventListener('click',print);\n   cc.addEventListener('click',print);\n```\n\n输出结果：\n\n```js\ncc\nbb\naa\n```\n\n这个结果明显是从内到外去执行的，是冒泡阶段执行，因为默认的是false。\n\n捕获js代码：\n\n```js\n function print(e){\n    console.log(this.id);\n  }\n  aa.addEventListener('click',print,true);//第三个参数默认为false\n  bb.addEventListener('click',print,true);\n  cc.addEventListener('click',print,true);\n```\n\n输出结果：\n\n```js\naa\nbb\ncc\n```\n\n当改为true时，则要执行捕获阶段，从外到内去执行。\n\n### 阻止传播行为\n\n当有时候不需要点击激活所有的行为时，可以采用对应的方法阻止\n\njs代码如下：\n\n```js\n function print(e){\n \te.stopPropagation();//执行完此函数后,该事件不再继续传播\n    console.log(this.id);\n  }\n  aa.addEventListener('click',print,true);//第三个参数默认为false\n  bb.addEventListener('click',print,true);\n  cc.addEventListener('click',print,true);\n```\n\n输出结果：\n\n```js\naa\n```\n\n再点击cc时,捕获cc,执行cc的click函数, 因为print函数中有`e.stopPropagation()`,所以执行完该函数后,click事件不再传播.\n\n### 取消默认事件\n\n除了冒泡行为，有的时候还会遇到默认事件\n\n什么元素有默认行为呢？如链接<a>，提交按钮<input type=\"submit\">等。\n\n**阻止默认事件**\n\n```js\n//假定有链接<a href=\"http://caibaojian.com/\" id=\"testA\" >caibaojian.com</a>\nvar a = document.getElementById(\"testA\");\na.onclick =function(e){\nif(e.preventDefault){\ne.preventDefault();\n}else{\nwindow.event.returnValue == false;\n}\n}\n```\n\n### 总结\n\n当需要停止冒泡行为时，可以使用：\n\n```js\nfunction stopBubble(e) { \n//如果提供了事件对象，则这是一个非IE浏览器 \nif ( e && e.stopPropagation ) \n    //因此它支持W3C的stopPropagation()方法 \n    e.stopPropagation(); \nelse \n    //否则，我们需要使用IE的方式来取消事件冒泡 \n    window.event.cancelBubble = true; \n}\n```\n\n当需要阻止默认行为时，可以使用:\n\n```js\n//阻止浏览器的默认行为 \nfunction stopDefault( e ) { \n    //阻止默认浏览器动作(W3C) \n    if ( e && e.preventDefault ) \n        e.preventDefault(); \n    //IE中阻止函数器默认动作的方式 \n    else \n        window.event.returnValue = false; \n    return false; \n}\n```\n\n<meta name=\"referrer\" content=\"no-referrer\"/>\n\n## 浮动\n\nfloat 属性定义元素在哪个方向浮动。以往这个属性总应用于图像，使文本围绕在图像周围，不过在 CSS 中，任何元素都可以浮动。\n浮动元素会生成一个块级框，而不论它本身是何种元素。\n\n```html\nimg\n  {\n  float:right;\n  }\n```\n\n如果浮动非替换元素，则要指定一个明确的宽度；否则，它们会尽可能地窄。\n***注释***：假如在一行之上只有极少的空间可供浮动元素，那么这个元素会跳至下一行，这个过程会持续到某一行拥有足够的空间为止。\n\n## 清除浮动\n\n### 浮动会带来什么影响？\n\n浮动主要会影响页面的布局，给元素加上浮动后，元素会脱离文档流，从而导致以下的几个现象：\n\n* 外层父级元素边框不能撑开;\n* 外层父级元素背景不能显示;\n* margin值不能正确显示;\n  <!-- more -->\n  图片如下:\n  ![float](https://limengtupian.oss-cn-beijing.aliyuncs.com/float.jpg)\n  代码如下：\n  HTML\n\n```html\n<div class=\"outer\">\n    <div class=\"div1\">1</div>\n    <div class=\"div2\">2</div>\n    <div class=\"div3\">3</div>\n</div>\n```\n\nCSS\n\n```css\n.outer{border: 1px solid #ccc;background: #fc9;color: #fff; margin: 50px auto;padding: 50px;}\n.div1{width: 80px;height: 80px;background: red;float: left;}\n.div2{width: 80px;height: 80px;background: blue;float: left;}\n.div3{width: 80px;height: 80px;background: sienna;float: left;}\n```\n\n### 如何清除浮动？\n\n1. 添加新的元素 、应用 clear：both\n   HTML\n\n```html\n<div class=\"outer\">\n    <div class=\"div1\">1</div>\n    <div class=\"div2\">2</div>\n    <div class=\"div3\">3</div>\n    <div class=\"clear\"></div>\n</div>\n```\n\nCSS\n\n```css\n.clear{clear:both; height: 0; line-height: 0; font-size: 0}\n```\n\n2. 父级div定义 overflow: auto（注意：是父级div也就是这里的  div.outer）\n   HTML\n\n```html\n<div class=\"outer over-flow\"> //这里添加了一个class\n    <div class=\"div1\">1</div>\n    <div class=\"div2\">2</div>\n    <div class=\"div3\">3</div>\n    <!--<div class=\"clear\"></div>-->\n</div>\n```\n\nCSS\n\n```css\n.over-flow{\n    overflow: auto; zoom: 1; //zoom: 1; 是在处理兼容性问题\n}\n```\n\n***注意***:使用overflow属性来清除浮动有一点需要注意，overflow属性共有三个属性值：hidden,auto,visible。\n我们可以使用hiddent和auto值来清除浮动，但切记不能使用visible值，如果使用这个值将无法达到清除浮动效果，其他两个值都可以，其区据说在于一个对seo比较友好，另个hidden对seo不是太友好，其他区别我就说不上了，也不浪费时间。\n\n3. :after 方法：（注意：作用于浮动元素的父亲）\n   HTML\n\n```html\n<div class=\"outer\"> //这里添加了一个class\n    <div class=\"div1\">1</div>\n    <div class=\"div2\">2</div>\n    <div class=\"div3\">3</div>\n    <!--<div class=\"clear\"></div>-->\n</div>\n```\n\nCSS\n\n```css\n.outer {zoom:1;}    /*==for IE6/7 Maxthon2==*/\n.outer :after {clear:both;content:'.';display:block;width: 0;height: 0;visibility:hidden;}   /*==for FF/chrome/opera/IE8==*/\n}\n```\n\n1) display:block 使生成的元素以块级元素显示,占满剩余空间;\n\n2) height:0 避免生成内容破坏原有布局的高度。\n\n3) visibility:hidden 使生成的内容不可见，并允许可能被生成内容盖住的内容可以进行点击和交互;\n\n4）通过 content:\".\"生成内容作为最后一个元素，至于content里面是点还是其他都是可以的，例如oocss里面就有经典的 content:\"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\",有些版本可能content 里面内容为空,一丝冰凉是不推荐这样做的,firefox直到7.0 content:”\" 仍然会产生额外的空隙；\n\n5）zoom：1 触发IE hasLayout。\n\n通过分析发现，除了clear：both用来闭合浮动的，其他代码无非都是为了隐藏掉content生成的内容，这也就是其他版本的闭合浮动为什么会有font-size：0，line-height：0。\n\n---\n\nOVER......\n\n<meta name=\"referrer\" content=\"no-referrer\"/>\n\n## What is this？\n\n你可能遇到过这样的 JS 面试题：\n\n> ```html\n> var obj = {\n> foo: function(){\n>  console.log(this)\n> }\n> }\n> \n> var bar = obj.foo\n> obj.foo() // 打印出的 this 是 obj\n> bar() // 打印出的 this 是 window\n> ```\n\n<!-- more -->\n\nJS（ES5）里面有三种函数调用形式：\n\n```html\nfunc(p1, p2) \nobj.child.method(p1, p2)\nfunc.call(context, p1, p2) // 先不讲 apply\n```\n\n从看到这篇文章起，你一定要记住，第三种调用形式，才是正常调用形式：\n\n> ```text\n> func.call(context, p1, p2)\n> ```\n\n## 这样，this 就好解释了\n\nthis，就是上面代码中的 context。就这么简单。\n\nthis 是你 call 一个函数时传的 context，由于你从来不用 call 形式的函数调用，所以你一直不知道。\n\n```html\nvar obj = {\n  foo: function(){\n    console.log(this)\n  }\n}\n\nvar bar = obj.foo\nobj.foo() // 转换为 obj.foo.call(obj)，this 就是 obj\nbar() \n// 转换为 bar.call()\n// 由于没有传 context\n// 所以 this 就是 undefined\n// 最后浏览器给你一个默认的 this —— window 对象\n```\n\n## 更多的情况\n\n1. Event Handler 中的 this“\n\n   ```html\n   btn.addEventListener('click' ,function handler(){\n     console.log(this) // 请问这里的 this 是什么\n   })\n   ```\n\n   > 通常来说this的值是触发事件的元素的引用，这种特性在多个相似的元素使用同一个通用事件监听器时非常让人满意。\n   >\n   > 当使用 addEventListener() 为一个元素注册事件的时候，句柄里的 this 值是该元素的引用。其与传递给句柄的 event 参数的 currentTarget 属性的值一样。\n\n   > ```text\n   > // 当事件被触发时\n   > handler.call(event.currentTarget, event) \n   > // 那么 this 是什么不言而喻\n   > ```\n\n   **this**指向btn。\n\n2. jQuery Event Handler 中的 this：\n\n   ```html\n   $ul.on(&#39;click&#39;, &#39;li&#39; , function(){\n     console.log(this)\n   })we\n   ```\n\n   文档：\n\n   > 当jQuery的调用处理程序时，this关键字指向的是当前正在执行事件的元素。对于直接事件而言，this 代表绑定事件的元素。**对于代理事件而言，****this 则代表了与 selector** **相匹配的元素。**(注意，如果事件是从后代元素冒泡上来的话，那么 this 就有可能不等于 event.target。)若要使用 jQuery 的相关方法，可以根据当前元素创建一个 jQuery 对象，即使用 $(this)。\n\n##  强制指定this的指向\n\n```html\nfunction handlerWrapper(event){\n  function handler(){\n    console.log(this) // 请问这里的 this 是什么\n  }\n\n  handler.call({name:'饥人谷'}, event)\n}\nbtn.addEventListener('click', handlerWrapper)\n```\n\n## 内部函数的this指向\n\n**构造函数版this：**\n\n```\nfunction Fn(){\n    this.user = \"追梦子\";\n}\nvar a = new Fn();\nconsole.log(a.user); //追梦子\n```\n\n构造函数生成的this指向实例化的对象。\n\n**setTimeOut()或setInterval()中的this**：\n\n在setTimeOut()或setInterval()这样的方法中，如果传入的函数包含this, 那么，默认情况下，函数中的this会指向window对象。\n\n改变的三种方式：\n\n1. 将当前对象的this存为一个变量\n\n   ```html\n   function doClick(){\n       var that = this;\n       setInterval(function() {\n         console.log(that.msg);\n        }, 1000);\n   }\n   ```\n\n2. 利用bind()方法\n\n   ```html\n   function doClick(){\n       setInterval(function() {\n         console.log(this.msg);\n        }.bind(this), 1000);  //利用bind()将this绑定到这个函数上\n   }\n   ```\n\n3. ES6的箭头函数\n\n   ```html\n   function doClick(){\n        setInterval(() => {\n          console.log(this.msg);\n        }, 100);\n    },\n   ```\n\n## 总结\n\n**如何准确判断 this 指向的是什么？**\n\n1 . 函数是否在 new 中调用 (new 绑定)，如果是，那么 this 绑定的是新创建的对象。\n\n2 . 函数是否通过 call,apply 调用，或者使用了 bind(即硬绑定)，如果是，那么 this 绑定的就是指定的对象。\n\n3 . 函数是否在某个上下文对象中调用 (隐式绑定)，如果是的话，this 绑定的是那个上下文对象。一般是 obj.foo()。\n\n4 . 如果以上都不是，那么使用默认绑定。如果在严格模式下，则绑定到 undefined，否则绑定到全局对象。\n\n5 . 如果把 Null 或者 undefined 作为 this 的绑定对象传入 call、apply 或者 bind，这些值在调用时会被忽略，实际应用的是默认绑定规则。\n\n6 . 如果是箭头函数，箭头函数的 this 继承的是外层代码块的 this。","source":"_posts/原生JS方法记录.md","raw":"---\ntitle: 原生JS方法记录\ndate: 2020-03-018 17:16:26\ntags: [原生,JavaScript]\n---\n\n<meta name=\"referrer\" content=\"no-referrer\"/>\n\n## 原生JS方法记录\n\n### 记录原生JS实现的功能\n\n通过框架实现的功能，如何通过原生JS实现，记录遇到的实现代码\n\n<!-- more -->\n\n### js动态添加页面的icon图标\n\n```js\n(function() {\n    var link = document.createElement('link');\n    link.type = 'image/x-icon';\n    link.rel = 'shortcut icon';\n    link.href = '/images/366/favicon.ico';\n    document.getElementsByTagName('head')[0].appendChild(link);\n}());\n```\n\n<meta name=\"referrer\" content=\"no-referrer\"/>\n\n## 记录图片懒加载的实现\n\n### 图片懒加载\n\n如果是一个图片较多的网站，比如照片类网站，会涉及到打开网站后，一次性向服务器发送大量请求，所以有需求：当用户需要查看更多图片的时候再进行请求。\n\n### 原理\n\n1. 先将img标签的src链接设为同一张图片（比如空白图片），然后给img标签设置自定义属性（比如 data-src）,然后将真正的图片地址存储在data-src中。\n\n2. 当JS监听到该图片元素进入可视窗口时，将自定义属性中的地址存储到src属性中。达到懒加载的效果。\n\n<!-- more -->\n\n### 例子\n\n* HTML\n\n  img图片引入地址为统一的一张图片，真正的地址存储在data-src中\n\n``` html\n    <div class=\"container\">\n        <img src=\"http://s4.sinaimg.cn/mw690/006uWPTUgy72CNFYNjB93&690\" alt=\"1\" data-src=\"http://img4.imgtn.bdimg.com/it/u=951914923,777131061&fm=26&gp=0.jpg\">\n        <img src=\"http://s4.sinaimg.cn/mw690/006uWPTUgy72CNFYNjB93&690\" alt=\"1\" data-src=\"http://img1.imgtn.bdimg.com/it/u=637435809,3242058940&fm=26&gp=0.jpg\">\n        <img src=\"http://s4.sinaimg.cn/mw690/006uWPTUgy72CNFYNjB93&690\" alt=\"1\" data-src=\"http://img1.imgtn.bdimg.com/it/u=3990342075,2367006974&fm=200&gp=0.jpg\">\n        <img src=\"http://s4.sinaimg.cn/mw690/006uWPTUgy72CNFYNjB93&690\" alt=\"1\" data-src=\"http://img1.imgtn.bdimg.com/it/u=1813891576,1754763093&fm=26&gp=0.jpg\">\n        <img src=\"http://s4.sinaimg.cn/mw690/006uWPTUgy72CNFYNjB93&690\" alt=\"1\" data-src=\"http://img4.imgtn.bdimg.com/it/u=2539922263,2810970709&fm=200&gp=0.jpg\">\n    </div>\n```\n\n* CSS\n\n  ```CSS\n      <style>\n          .container{\n              max-width: 800px;\n              margin:0 auto;\n          }\n          .container:after{\n              content:\"\";\n              display: block;\n              clear:both;\n          }\n          .container img{\n              width:50%;\n              height:260px;\n              float:left;\n          }\n      </style>\n  ```\n\n* JS\n\n  ```JS\n          <script>\n  \n              // 一开始没有滚动的时候，出现在视窗中的图片也会加载\n              start();\n  \n              // 当页面开始滚动的时候，遍历图片，如果图片出现在视窗中，就加载图片\n              var clock; //函数节流\n              $(window).on('scroll',function(){\n                  if(clock){\n                      clearTimeout(clock);\n                  }\n                  clock = setTimeout(function(){\n                      start()\n                  },200)\n              })\n              \n              function start(){\n                   $('.container img').not('[data-isLoading]').each(function () {\n                      if (isShow($(this))) {\n                          loadImg($(this));\n                      }\n                  })\n              }\n  \n  \n              // 判断图片是否出现在视窗的函数\n              function isShow($node){\n                  return $node.offset().top <= $(window).height()+$(window).scrollTop();\n              }\n  \n              // 加载图片的函数，就是把自定义属性data-src 存储的真正的图片地址，赋值给src\n              function loadImg($img){\n                      $img.attr('src', $img.attr('data-src'));\n  \n                      // 已经加载的图片，我给它设置一个属性，值为1，作为标识\n                      // 弄这个的初衷是因为，每次滚动的时候，所有的图片都会遍历一遍，这样有点浪费，所以做个标识，滚动的时候只遍历哪些还没有加载的图片\n                      $img.attr('data-isLoading',1);\n              }\n  \n          </script>\n  ```\n\n  \n\n### js实现效果\n\n```js\t\n            var clock; //函数节流            \n            $(window).on('scroll',function(){\n                if(clock){\n                    clearTimeout(clock);\n                }\n                clock = setTimeout(function(){\n                    start()\n                },200)\n            })\n```\n\n这里有用到一个节流函数，200ms只执行一次加载图片函数，里面有if的判断条件是延迟函数本身，当settimeout执行时，判断为真，当settimeout不执行，为假。\n\n``` js\t\n            function start(){\n                 $('.container img').not('[data-isLoading]').each(function () {\n                    if (isShow($(this))) {\n                        loadImg($(this));\n                    }\n                })\n            }\n```\n\n.not 函数是jq的用法，是将对象循环，并且将符合条件的对象剔除出数组，这里data-isloading在图片的src改变后，后续有将其赋值为1了。\n\n<meta name=\"referrer\" content=\"no-referrer\"/>\n\n## 平滑上移到顶部 公共方法\n\n### 完美平滑实现一个“回到顶部\n\n在实际应用中，经常用到滚动到页面顶部或某个位置，一般简单用锚点处理或用js将document.body.scrollTop设置为0，结果是页面一闪而过滚到指定位置，不是特别友好。我们想要的效果是要有点缓冲效果。\n\n现代浏览器陆续意识到了这种需求，scrollIntoView意思是滚动到可视，css中提供了scroll-behavior属性，js有Element.scrollIntoView()方法。\n\n<!-- more -->\n\n### scroll-behavior 纯CSS实现\n\n**现在css支持了新的功能，scroll-behavior属性可取值auto|smooth|inherit|unset**\n\nscroll-behavior: smooth;是我们想要的缓冲效果。在PC浏览器中，页面默认滚动是在<html>标签上，移动端大多数在<body>标签上，在我们想要实现平滑“回到顶部”，只需在这两个标签上都加上：\n\n```css\nhtml, body {\n  scroll-behavior: smooth;\n}\n```\n\n> 当然，这个实现方法现在支持度比较不友好\n\n### Element.scrollIntoView() 新的方法\n\nElement.scrollIntoView() 方法让当前的元素滚动到浏览器窗口的可视区域内。\n\n**语法**\n\n```js\nelement.scrollIntoView(); // 等同于element.scrollIntoView(true) \nelement.scrollIntoView(alignToTop); // Boolean型参数 \nelement.scrollIntoView(scrollIntoViewOptions); // Object型参数\n```\n\n**参数** \n\n`alignToTop`可选\n\n一个[`Boolean`](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Boolean)值：\n\n- 如果为`true`，元素的顶端将和其所在滚动区的可视区域的顶端对齐。相应的 `scrollIntoViewOptions: {block: \"start\", inline: \"nearest\"}`。这是这个参数的默认值。\n- 如果为`false`，元素的底端将和其所在滚动区的可视区域的底端对齐。相应的`scrollIntoViewOptions: {block: \"end\", inline: \"nearest\"}`。\n\n`scrollIntoViewOptions` 可选 \n\n一个包含下列属性的对象：\n\n- `behavior` 可选\n\n  定义动画过渡效果， `\"auto\"`或 `\"smooth\"` 之一。默认为 `\"auto\"`。\n\n- `block` 可选\n\n  定义垂直方向的对齐， `\"start\"`, `\"center\"`, `\"end\"`, 或 `\"nearest\"`之一。默认为 `\"start\"`。\n\n- `inline` 可选\n\n  定义水平方向的对齐， `\"start\"`, `\"center\"`, `\"end\"`, 或 `\"nearest\"`之一。默认为 `\"nearest\"`。\n\n**例子**\n\n```js\t\nvar element = document.getElementById(\"box\");\n\nelement.scrollIntoView();\nelement.scrollIntoView(false);\nelement.scrollIntoView({block: \"end\"});\nelement.scrollIntoView({behavior: \"instant\", block: \"end\", inline: \"nearest\"});\n```\n\n> 当然，兼容性也是有问题的。\n\n### 向下兼容\n\n要达到所有浏览器都有相同（类似）效果，那就要把剩余不支持scroll-behavior属性的浏览器揪出来，用js去完成使命了。\n\n**注意点**\n\n1. 判断是否支持scroll-behavior属性\n\n   ```js\n   if(typeof window.getComputedStyle(document.body).scrollBehavior === 'undefined') {\n     // 兼容js代码\n   } else {\n     // 原生滚动api\n     // Element.scrollIntoView()\n   }\n   ```\n\n2. 缓冲功能的实现\n\n   原理：\n\n   ```js\t\n   var position = position + (destination - position) / n;\n   ```\n\n3. 贴上代码\n\n   ```js\n   <script type=\"javascript\">\n     var scrollTopSmooth = function (position) {\n     // 不存在原生`requestAnimationFrame`，用`setTimeout`模拟替代\n     if (!window.requestAnimationFrame) {\n       window.requestAnimationFrame = function (cb) {\n         return setTimeout(cb, 17);\n       };\n     }\n     // 当前滚动高度\n     var scrollTop = document.documentElement.scrollTop || document.body.scrollTop;\n     // step\n     var step = function () {\n       var distance = position - scrollTop;\n       scrollTop = scrollTop + distance / 5;\n       if (Math.abs(distance) < 1) {\n         window.scrollTo(0, position);\n       } else {\n         window.scrollTo(0, scrollTop);\n         requestAnimationFrame(step);\n       }\n     };\n     step();\n   }\n   $backToTop = document.querySelector('.back-to-top')\n   $backToTop.addEventListener('click', function () {\n     scrollTopSmooth(0);\n   }, false);   \n   </script>\n   ```\n\n   ### 简单封装\n\n   上面缓冲算法和当前滚动业务代码耦合在一起了，下面单独拆解出单独一个函数。\n\n   ```js\n   /**\n   * 缓冲函数\n   * @param {Number} position 当前滚动位置\n   * @param {Number} destination 目标位置\n   * @param {Number} rate 缓动率\n   * @param {Function} callback 缓动结束回调函数 两个参数分别是当前位置和是否结束\n   */\n   \n   var easeout = function (position, destination, rate, callback) {\n     if (position === destination || typeof destination !== 'number') {\n       return false;\n     }\n     destination = destination || 0;\n     rate = rate || 2;\n     // 不存在原生`requestAnimationFrame`，用`setTimeout`模拟替代\n     if (!window.requestAnimationFrame) {\n       window.requestAnimationFrame = function (fn) {\n         return setTimeout(fn, 17);\n       }\n     }\n     var step = function () {\n       position = position + (destination - position) / rate;\n       if (Math.abs(destination - position) < 1) {\n         callback(destination, true);\n         return;\n       }\n       callback(position, false);\n       requestAnimationFrame(step);\n     };\n     step();\n   }\n   ```\n\n   拆分后，这个小缓冲算法就可以被重复调用啦，而且，适用于滚动到指定位置（不仅仅是到顶部）和缓冲率（控制滚动快慢），当前小demo调用：\n\n   ```js\n   var scrollTopSmooth = function (position) {\n     // 当前滚动高度\n     var scrollTop = document.documentElement.scrollTop || document.body.scrollTop;\n     easeout(scrollTop, position, 5, function (val) {\n       window.scrollTo(0, val);\n     });\n   }\n   $backToTop = document.querySelector('.back-to-top')\n   $backToTop.addEventListener('click', function () {\n     scrollTopSmooth(200);\n   }, false);\n   ```\n\n   \n\n**需要放入公共方法中去：**\n\n在main.js中，可以将公共方法添加到vue的原型上去，从而在所有的页面都可以实现调用：\n\n```html\nimport common from '@/comF/common.js'\nVue.prototype.common = common\n\nimport axios from 'axios'\nVue.prototype.axios = axios\n```\n\n\n\n## 函数防抖和节流/闭包\n\n### 函数节流和防抖\n\n函数节流：**所谓节流，就是指连续触发事件但是在 n 秒中只执行一次函数**\n\n函数防抖：**所谓防抖，就是指触发事件后在 n 秒内函数只能执行一次，如果在 n 秒内又触发了事件，则会重新计算函数执行时间**\n\n<!-- more -->\n\n### 防抖例子\n\n防抖函数分为非立即执行版和立即执行版。\n\n**主要实现方式就是通过执行settimeout这个函数，每次触发延迟对应时间后再执行内部函数**\n\n* 非立即执行防抖函数\n\n```js\nfunction debounce(func, wait) {\n    let timeout;\n    return function () {\n        let context = this;\n        let args = arguments;\n\n        if (timeout) clearTimeout(timeout);\n        \n        timeout = setTimeout(() => {\n            func.apply(context, args)\n        }, wait);\n    }\n}\ncontent.onmousemove = debounce(count,1000); //调用函数\n```\n\n* 立即执行防抖函数\n\n```js\nfunction debounce(func,wait) {\n    let timeout;\n    return function () {\n        let context = this;\n        let args = arguments;\n\n        if (timeout) clearTimeout(timeout);\n\n        let callNow = !timeout;\n        timeout = setTimeout(() => {\n            timeout = null;\n        }, wait)\n\n        if (callNow) func.apply(context, args)\n    }\n}\ncontent.onmousemove = debounce(count,1000); //调用函数\n```\n\n* 双剑合璧版：\n\n```js\nfunction debounce(func,wait,immediate) {\n    let timeout;\n\n    return function () {\n        let context = this;\n        let args = arguments;\n\n        if (timeout) clearTimeout(timeout);\n        if (immediate) {\n            var callNow = !timeout;\n            timeout = setTimeout(() => {\n                timeout = null;\n            }, wait)\n            if (callNow) func.apply(context, args)\n        }\n        else {\n            timeout = setTimeout(function(){\n                func.apply(context, args)\n            }, wait);\n        }\n    }\n}\n```\n\n### 节流例子\n\n对于节流，一般有两种方式可以实现，分别是时间戳版和定时器版\n\n**主要实现是通过定位时间差来判断是否执行函数**\n\n* 时间戳\n\n  ```js\t\n  function throttle(func, wait) {\n      let previous = 0;\n      return function() {\n          let now = Date.now();\n          let context = this;\n          let args = arguments;\n          if (now - previous > wait) {\n              func.apply(context, args);\n              previous = now;\n          }\n      }\n  }\n  content.onmousemove = throttle(count,1000);\n  ```\n\n* 定时器\n\n  ```js\t\n  function throttle(func, wait) {\n      let timeout;\n      return function() {\n          let context = this;\n          let args = arguments;\n          if (!timeout) {\n              timeout = setTimeout(() => {\n                  timeout = null;\n                  func.apply(context, args)\n              }, wait)\n          }\n  \n      }\n  }\n  content.onmousemove = throttle(count,1000);\n  ```\n\n* 合并版本\n\n  ```js\t\n  function throttle(func, wait ,type) {\n      if(type===1){\n          let previous = 0;\n      }else if(type===2){\n          let timeout;\n      }\n      return function() {\n          let context = this;\n          let args = arguments;\n          if(type===1){\n              let now = Date.now();\n  \n              if (now - previous > wait) {\n                  func.apply(context, args);\n                  previous = now;\n              }\n          }else if(type===2){\n              if (!timeout) {\n                  timeout = setTimeout(() => {\n                      timeout = null;\n                      func.apply(context, args)\n                  }, wait)\n              }\n          }\n      }\n  }\n  ```\n\n### 区别\n\n可以看到 ：**非立即执行防抖函数** 和 **定时器版节流函数** 比较相似。\n\n> 主要区别是其中的判断条件：\n>\n> 1. 节流函数是**判断执行settime函数没有执行，则让settime函数执行，达到一定时间内只执行一次的目的**。\n> 2. 防抖函数是**判断settime函数执行，则让settime函数再执行一次，达到每次触发都延迟**\n\n### 原理\n\n防抖是维护一个计时器，规定在delay时间后触发函数，但是在delay时间内再次触发的话，都会清除当前的 timer 然后重新设置超时调用，即重新计时。这样一来，只有最后一次操作能被触发。\n\n节流是通过判断是否到达一定时间来触发函数，若没到规定时间则使用计时器延后，而下一次事件则会重新设定计时器。\n\n## 防抖函数中的闭包\n\n复制一份防止丢失\n\n### debounce函数\n\ndebounce函数，俗称防抖函数，专治input、resize、scroll等频繁操作打爆浏览器或其他资源。前端面试几乎必考，当然肯定会做一些变化。\n\n```js\n  <script>\n    var handler = function () {\n      console.log(this, Date.now());\n    }\n    document.getElementById('input').addEventListener('input', handler);\n  </script>\n```\n\n### 现状\n\n用户每次输入操作都会触发handler调用，性能浪费。\n\n### 目标\n\n用户一直输入并不触发handler，直到用户停止输入500ms以上，才触发一次handler。\n\n前提是，不修改原有的业务代码，且尽量通用。\n\n### 思路\n\nsetTimeout实现计时\n高阶函数，即function作为参数并且返回function\n代码实现过程\n\n### 第一版\n\n```js\nfunction debounce(fn, delay) {\n  return function () {\n    setTimeout(function () {\n      fn();\n    }, delay);\n  }\n}\n```\n\n给handler包上试试\n\ndocument.getElementById('input').addEventListener('input', debounce(handler, 500));\n明显不可以！！这样写只不过将每次触发都延时了500ms，并没有减少触发次数。不过我们至少实现了高阶函数，不会破坏原有的业务代码了。那么接下来就试着减少触发次数。\n\n思路就是每次触发先clearTimeout把之前的计时器清掉，再重新setTimout。那么问题来了，第2次进来时，怎么获取到第1次的计时器，并清除呢？\n\n### 第二版\n\n```js\t\nfunction debounce(fn, delay) {\n  var timer;\n  return function () { // 闭包\n    clearTimeout(timer);\n    timer = setTimeout(function () {\n      fn();\n    }, delay);\n  }\n}\n```\n\n试来试去，发现把timer放到“外面”最好（为什么不放到更外面？），每次调用进来，大家用的都是一个timer，完美。同时，我们的第一个主角登场了——闭包。\n\n**闭包**\n闭包就是能够读取其他函数内部变量的函数。例如在javascript中，只有函数内部的子函数才能读取局部变量，所以闭包可以理解成“定义在一个函数内部的函数“。在本质上，闭包是将函数内部和函数外部连接起来的桥梁。——百度百科\n\n网上可以找个很多关于闭包的概念与解释，估计越看越蒙。认识事物需要一个从具象到抽象的过程，以目前的情况来看，我们只要知道，“定义在一个函数（外函数）内部的函数（内函数），并且内函数访问了外函数的变量，这个内函数就叫做闭包”。\n\n最关键的问题，闭包有什么用？从debounce这个例子，我们可以看到，闭包可以让每次触发的handler共享一个变量，通常用到高阶函数的地方，就会用到闭包。再举几个闭包的应用场景，比如给ajax请求加缓存、加锁，为一系列回调设置初始值，防止污染全局或局部变量等。可能这么说大家还是若有若无的，没关系，实践出真知，现实当中肯定会碰到能够应用闭包的地方的。我们继续debounce。\n\n终于解决了触发频率的问题了。但是！细心的同学肯定发现了。我们handler里的console打印出来的this，是不一样的！！！之前的this是input结点，现在的this是window对象。这绝对是不行的，比如我想要在handler里打印input的value，现在怎么做呢？\n\n### 第三版\n\n```js\t\nfunction debounce(fn, delay) {\n  // 1\n  var timer;\n  return function () { // 闭包\n    // 2\n    var ctx = this; // this上下文\n    clearTimeout(timer);\n    timer = setTimeout(function () {\n      // 3\n      fn.apply(ctx); // this上下文调用\n    }, delay);\n  }\n}\n```\n\n解决思路也简单，就是先把正确的this保存起来，我们在这里把this称为“上下文”，大家可以细细品味一下这个词。然后用apply（或call）重新制定一下fn的上下文即可。\n\n**上下文this**\njs的this是很善变的，谁调用它，它就指向谁，所以“上下文”这个词还是很贴切的。那么，为什么在2处能够得到正确的this呢？涉及到上下文切换的地方，一共有3处，已在上面代码中标了出来。我总结了一个三步定位this法：\n\n第一步，是否立即执行？如果是，跳过第二步！\n\n第二步，如果不是立即执行，它一定会被转交给某个对象保管，看它被挂在了哪，或者说转交给了谁！\n\n第三步，这个执行函数挂在谁身上，谁就是this！\n\n我们来实践一下。\n\n第1处：\n\n我们需要先简单处理一下，debounce其实是挂在window全局上的，写全应该是window.debounce(handler, 500)。第一步，是立即执行的！跳过第二步！第三步，debounce挂在window上！所以this指向是window。\n\n第2处：\n\n先简单处理下，debounce(handler, 500)的执行结果是返回一个函数，所以下面两段代码基本上可以视为等价的\n\n```js\ndocument.getElementById('input').addEventListener('input', debounce(handler, 500));\n\ndocument.getElementById('input').addEventListener('input', function () { // 闭包\n  // 2\n  var ctx = this; // this上下文\n  clearTimeout(timer);\n  timer = setTimeout(function () {\n    // 3\n    fn.apply(ctx); // this上下文调用\n  }, delay);\n});\n```\n\n\n\n这么一看，就具体多了。第一步，不是立即执行；第二步，addEventListener是挂在dom上的方法，所以addEventListener只能把回调挂在dom上，可以理解成input.handler = function(){}，等行为被触发时才执行。所以它被转交给了input；第三步，handler挂在input上，所以this指向了input！\n\n第3处：\n\nsetTimeout是挂在window上的，所以在执行的时候，实际上是window.setTimeout()。我们用伪代码模拟下setTimeout的实现\n\n```js\nwindow.setTimeout = function(fn, delay){\n  // 因为不能立即执行，所以要找个地方挂fn，就只能把fn转交给它的主子window\n  // 假设window存fn的属性叫setTimeoutHandler，与input.handler类似\n  window.setTimeoutHandler = fn;\n  // 等待delay毫秒……\n  window.setTimeoutHandler(); // 执行\n}\n```\n\n仔细理解一下，可以发现这里跟dom的回调非常像。第一步，不是立即执行；第二步，setTimeout是挂在window上的方法，所以只能转交给window的某个方法保管（假设叫setTimeoutHandler，名字不重要）；第三步，setTimeoutHandler挂在window上，所以this指向window。\n\n稳妥起见，我们再加一个例子\n\n```js\nvar obj = {\n  test: function(){\n    console.log(this);\n  }\n}\nobj.test(); // obj\nsetTimeout(obj.test,1000); // window\n```\n\n第一个很简单，立即执行，不用转交。直接可以定位this指向了obj！\n\n第二个非立即执行，虽然传进去的是obj.test，实际上需要转交给window.setTimeoutHandler保管，即window.setTimeoutHandler = obj.test。所以this指向的是window！\n\n总之，碰到非立即执行的函数，需要仔细分析一下。\n\n**debounce最终版**\n\n```js\nfunction debounce(fn, delay) {\n  var timer;\n  return function () { // 闭包\n    var ctx = this; // this上下文\n    var args = arguments;\n    clearTimeout(timer);\n    timer = setTimeout(function () {\n      fn.apply(ctx, args); // this上下文调用\n    }, delay);\n  }\n}\n```\n\n最后，我们再把传参也解决一下（arguments是默认的存储所有传参的类数组对象，时间关系这里就不展开了），完成。\n\n### 总结\n\ndebounce是一个很实用也很经典的功能函数，每一行代码都有丰富的内涵。与其类似的还有throttle，可以查查巩固一下。本文主要是想借debounce这个实用的函数引出js当中的两个比较难理解，的点this和闭包。说实话，这两个点想讲明白很难，更靠谱的办法是用大量的实践来消化。本文算是给各位同学种下一颗种子，以后碰到类似的情况时，能够很快的想起本文的内容，帮助自己更好的理解与感悟。\n\n<meta name=\"referrer\" content=\"no-referrer\"/>\n\n## 冒泡，捕获与其阻止\n\n### js addEventListener事件捕获与冒泡,第三个参数详解,阻止事件传播\n\n**关键点**\n\n> element.addEventListener(event, function[, useCapture])\n\n1. event:事件名称,如click\n\n2. function:指定要事件触发时执行的函数,可以传入事件参数\n\n3. useCapture:可选。布尔值，指定事件是否在捕获或冒泡阶段执行。\n\n   * 默认false:在冒泡阶段执行指定事件\n\n   * true:在捕获阶段执行事件\n\n4. event.stopPropagation():阻止事件传播,用于function(event){}中\n\n   <!-- more -->\n\n### 捕获与冒泡\n\n图示：\n\n![](https://img-blog.csdnimg.cn/20190122115236901.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2x5dF9hbmd1bGFyanM=,size_16,color_FFFFFF,t_70)\n\n冒泡js代码：\n\n```js\nfunction print(e){\n     console.log(this.id);\n   }\n   aa.addEventListener('click',print);//第三个参数默认为false\n   bb.addEventListener('click',print);\n   cc.addEventListener('click',print);\n```\n\n输出结果：\n\n```js\ncc\nbb\naa\n```\n\n这个结果明显是从内到外去执行的，是冒泡阶段执行，因为默认的是false。\n\n捕获js代码：\n\n```js\n function print(e){\n    console.log(this.id);\n  }\n  aa.addEventListener('click',print,true);//第三个参数默认为false\n  bb.addEventListener('click',print,true);\n  cc.addEventListener('click',print,true);\n```\n\n输出结果：\n\n```js\naa\nbb\ncc\n```\n\n当改为true时，则要执行捕获阶段，从外到内去执行。\n\n### 阻止传播行为\n\n当有时候不需要点击激活所有的行为时，可以采用对应的方法阻止\n\njs代码如下：\n\n```js\n function print(e){\n \te.stopPropagation();//执行完此函数后,该事件不再继续传播\n    console.log(this.id);\n  }\n  aa.addEventListener('click',print,true);//第三个参数默认为false\n  bb.addEventListener('click',print,true);\n  cc.addEventListener('click',print,true);\n```\n\n输出结果：\n\n```js\naa\n```\n\n再点击cc时,捕获cc,执行cc的click函数, 因为print函数中有`e.stopPropagation()`,所以执行完该函数后,click事件不再传播.\n\n### 取消默认事件\n\n除了冒泡行为，有的时候还会遇到默认事件\n\n什么元素有默认行为呢？如链接<a>，提交按钮<input type=\"submit\">等。\n\n**阻止默认事件**\n\n```js\n//假定有链接<a href=\"http://caibaojian.com/\" id=\"testA\" >caibaojian.com</a>\nvar a = document.getElementById(\"testA\");\na.onclick =function(e){\nif(e.preventDefault){\ne.preventDefault();\n}else{\nwindow.event.returnValue == false;\n}\n}\n```\n\n### 总结\n\n当需要停止冒泡行为时，可以使用：\n\n```js\nfunction stopBubble(e) { \n//如果提供了事件对象，则这是一个非IE浏览器 \nif ( e && e.stopPropagation ) \n    //因此它支持W3C的stopPropagation()方法 \n    e.stopPropagation(); \nelse \n    //否则，我们需要使用IE的方式来取消事件冒泡 \n    window.event.cancelBubble = true; \n}\n```\n\n当需要阻止默认行为时，可以使用:\n\n```js\n//阻止浏览器的默认行为 \nfunction stopDefault( e ) { \n    //阻止默认浏览器动作(W3C) \n    if ( e && e.preventDefault ) \n        e.preventDefault(); \n    //IE中阻止函数器默认动作的方式 \n    else \n        window.event.returnValue = false; \n    return false; \n}\n```\n\n<meta name=\"referrer\" content=\"no-referrer\"/>\n\n## 浮动\n\nfloat 属性定义元素在哪个方向浮动。以往这个属性总应用于图像，使文本围绕在图像周围，不过在 CSS 中，任何元素都可以浮动。\n浮动元素会生成一个块级框，而不论它本身是何种元素。\n\n```html\nimg\n  {\n  float:right;\n  }\n```\n\n如果浮动非替换元素，则要指定一个明确的宽度；否则，它们会尽可能地窄。\n***注释***：假如在一行之上只有极少的空间可供浮动元素，那么这个元素会跳至下一行，这个过程会持续到某一行拥有足够的空间为止。\n\n## 清除浮动\n\n### 浮动会带来什么影响？\n\n浮动主要会影响页面的布局，给元素加上浮动后，元素会脱离文档流，从而导致以下的几个现象：\n\n* 外层父级元素边框不能撑开;\n* 外层父级元素背景不能显示;\n* margin值不能正确显示;\n  <!-- more -->\n  图片如下:\n  ![float](https://limengtupian.oss-cn-beijing.aliyuncs.com/float.jpg)\n  代码如下：\n  HTML\n\n```html\n<div class=\"outer\">\n    <div class=\"div1\">1</div>\n    <div class=\"div2\">2</div>\n    <div class=\"div3\">3</div>\n</div>\n```\n\nCSS\n\n```css\n.outer{border: 1px solid #ccc;background: #fc9;color: #fff; margin: 50px auto;padding: 50px;}\n.div1{width: 80px;height: 80px;background: red;float: left;}\n.div2{width: 80px;height: 80px;background: blue;float: left;}\n.div3{width: 80px;height: 80px;background: sienna;float: left;}\n```\n\n### 如何清除浮动？\n\n1. 添加新的元素 、应用 clear：both\n   HTML\n\n```html\n<div class=\"outer\">\n    <div class=\"div1\">1</div>\n    <div class=\"div2\">2</div>\n    <div class=\"div3\">3</div>\n    <div class=\"clear\"></div>\n</div>\n```\n\nCSS\n\n```css\n.clear{clear:both; height: 0; line-height: 0; font-size: 0}\n```\n\n2. 父级div定义 overflow: auto（注意：是父级div也就是这里的  div.outer）\n   HTML\n\n```html\n<div class=\"outer over-flow\"> //这里添加了一个class\n    <div class=\"div1\">1</div>\n    <div class=\"div2\">2</div>\n    <div class=\"div3\">3</div>\n    <!--<div class=\"clear\"></div>-->\n</div>\n```\n\nCSS\n\n```css\n.over-flow{\n    overflow: auto; zoom: 1; //zoom: 1; 是在处理兼容性问题\n}\n```\n\n***注意***:使用overflow属性来清除浮动有一点需要注意，overflow属性共有三个属性值：hidden,auto,visible。\n我们可以使用hiddent和auto值来清除浮动，但切记不能使用visible值，如果使用这个值将无法达到清除浮动效果，其他两个值都可以，其区据说在于一个对seo比较友好，另个hidden对seo不是太友好，其他区别我就说不上了，也不浪费时间。\n\n3. :after 方法：（注意：作用于浮动元素的父亲）\n   HTML\n\n```html\n<div class=\"outer\"> //这里添加了一个class\n    <div class=\"div1\">1</div>\n    <div class=\"div2\">2</div>\n    <div class=\"div3\">3</div>\n    <!--<div class=\"clear\"></div>-->\n</div>\n```\n\nCSS\n\n```css\n.outer {zoom:1;}    /*==for IE6/7 Maxthon2==*/\n.outer :after {clear:both;content:'.';display:block;width: 0;height: 0;visibility:hidden;}   /*==for FF/chrome/opera/IE8==*/\n}\n```\n\n1) display:block 使生成的元素以块级元素显示,占满剩余空间;\n\n2) height:0 避免生成内容破坏原有布局的高度。\n\n3) visibility:hidden 使生成的内容不可见，并允许可能被生成内容盖住的内容可以进行点击和交互;\n\n4）通过 content:\".\"生成内容作为最后一个元素，至于content里面是点还是其他都是可以的，例如oocss里面就有经典的 content:\"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\",有些版本可能content 里面内容为空,一丝冰凉是不推荐这样做的,firefox直到7.0 content:”\" 仍然会产生额外的空隙；\n\n5）zoom：1 触发IE hasLayout。\n\n通过分析发现，除了clear：both用来闭合浮动的，其他代码无非都是为了隐藏掉content生成的内容，这也就是其他版本的闭合浮动为什么会有font-size：0，line-height：0。\n\n---\n\nOVER......\n\n<meta name=\"referrer\" content=\"no-referrer\"/>\n\n## What is this？\n\n你可能遇到过这样的 JS 面试题：\n\n> ```html\n> var obj = {\n> foo: function(){\n>  console.log(this)\n> }\n> }\n> \n> var bar = obj.foo\n> obj.foo() // 打印出的 this 是 obj\n> bar() // 打印出的 this 是 window\n> ```\n\n<!-- more -->\n\nJS（ES5）里面有三种函数调用形式：\n\n```html\nfunc(p1, p2) \nobj.child.method(p1, p2)\nfunc.call(context, p1, p2) // 先不讲 apply\n```\n\n从看到这篇文章起，你一定要记住，第三种调用形式，才是正常调用形式：\n\n> ```text\n> func.call(context, p1, p2)\n> ```\n\n## 这样，this 就好解释了\n\nthis，就是上面代码中的 context。就这么简单。\n\nthis 是你 call 一个函数时传的 context，由于你从来不用 call 形式的函数调用，所以你一直不知道。\n\n```html\nvar obj = {\n  foo: function(){\n    console.log(this)\n  }\n}\n\nvar bar = obj.foo\nobj.foo() // 转换为 obj.foo.call(obj)，this 就是 obj\nbar() \n// 转换为 bar.call()\n// 由于没有传 context\n// 所以 this 就是 undefined\n// 最后浏览器给你一个默认的 this —— window 对象\n```\n\n## 更多的情况\n\n1. Event Handler 中的 this“\n\n   ```html\n   btn.addEventListener('click' ,function handler(){\n     console.log(this) // 请问这里的 this 是什么\n   })\n   ```\n\n   > 通常来说this的值是触发事件的元素的引用，这种特性在多个相似的元素使用同一个通用事件监听器时非常让人满意。\n   >\n   > 当使用 addEventListener() 为一个元素注册事件的时候，句柄里的 this 值是该元素的引用。其与传递给句柄的 event 参数的 currentTarget 属性的值一样。\n\n   > ```text\n   > // 当事件被触发时\n   > handler.call(event.currentTarget, event) \n   > // 那么 this 是什么不言而喻\n   > ```\n\n   **this**指向btn。\n\n2. jQuery Event Handler 中的 this：\n\n   ```html\n   $ul.on(&#39;click&#39;, &#39;li&#39; , function(){\n     console.log(this)\n   })we\n   ```\n\n   文档：\n\n   > 当jQuery的调用处理程序时，this关键字指向的是当前正在执行事件的元素。对于直接事件而言，this 代表绑定事件的元素。**对于代理事件而言，****this 则代表了与 selector** **相匹配的元素。**(注意，如果事件是从后代元素冒泡上来的话，那么 this 就有可能不等于 event.target。)若要使用 jQuery 的相关方法，可以根据当前元素创建一个 jQuery 对象，即使用 $(this)。\n\n##  强制指定this的指向\n\n```html\nfunction handlerWrapper(event){\n  function handler(){\n    console.log(this) // 请问这里的 this 是什么\n  }\n\n  handler.call({name:'饥人谷'}, event)\n}\nbtn.addEventListener('click', handlerWrapper)\n```\n\n## 内部函数的this指向\n\n**构造函数版this：**\n\n```\nfunction Fn(){\n    this.user = \"追梦子\";\n}\nvar a = new Fn();\nconsole.log(a.user); //追梦子\n```\n\n构造函数生成的this指向实例化的对象。\n\n**setTimeOut()或setInterval()中的this**：\n\n在setTimeOut()或setInterval()这样的方法中，如果传入的函数包含this, 那么，默认情况下，函数中的this会指向window对象。\n\n改变的三种方式：\n\n1. 将当前对象的this存为一个变量\n\n   ```html\n   function doClick(){\n       var that = this;\n       setInterval(function() {\n         console.log(that.msg);\n        }, 1000);\n   }\n   ```\n\n2. 利用bind()方法\n\n   ```html\n   function doClick(){\n       setInterval(function() {\n         console.log(this.msg);\n        }.bind(this), 1000);  //利用bind()将this绑定到这个函数上\n   }\n   ```\n\n3. ES6的箭头函数\n\n   ```html\n   function doClick(){\n        setInterval(() => {\n          console.log(this.msg);\n        }, 100);\n    },\n   ```\n\n## 总结\n\n**如何准确判断 this 指向的是什么？**\n\n1 . 函数是否在 new 中调用 (new 绑定)，如果是，那么 this 绑定的是新创建的对象。\n\n2 . 函数是否通过 call,apply 调用，或者使用了 bind(即硬绑定)，如果是，那么 this 绑定的就是指定的对象。\n\n3 . 函数是否在某个上下文对象中调用 (隐式绑定)，如果是的话，this 绑定的是那个上下文对象。一般是 obj.foo()。\n\n4 . 如果以上都不是，那么使用默认绑定。如果在严格模式下，则绑定到 undefined，否则绑定到全局对象。\n\n5 . 如果把 Null 或者 undefined 作为 this 的绑定对象传入 call、apply 或者 bind，这些值在调用时会被忽略，实际应用的是默认绑定规则。\n\n6 . 如果是箭头函数，箭头函数的 this 继承的是外层代码块的 this。","slug":"原生JS方法记录","published":1,"updated":"2020-07-03T08:01:22.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl0uux6vz001h7suf4l0ihfj3","content":"<meta name=\"referrer\" content=\"no-referrer\"/>\n\n<h2 id=\"原生JS方法记录\"><a href=\"#原生JS方法记录\" class=\"headerlink\" title=\"原生JS方法记录\"></a>原生JS方法记录</h2><h3 id=\"记录原生JS实现的功能\"><a href=\"#记录原生JS实现的功能\" class=\"headerlink\" title=\"记录原生JS实现的功能\"></a>记录原生JS实现的功能</h3><p>通过框架实现的功能，如何通过原生JS实现，记录遇到的实现代码</p>\n<span id=\"more\"></span>\n\n<h3 id=\"js动态添加页面的icon图标\"><a href=\"#js动态添加页面的icon图标\" class=\"headerlink\" title=\"js动态添加页面的icon图标\"></a>js动态添加页面的icon图标</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(<span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> link = <span class=\"variable language_\">document</span>.<span class=\"title function_\">createElement</span>(<span class=\"string\">&#x27;link&#x27;</span>);</span><br><span class=\"line\">    link.<span class=\"property\">type</span> = <span class=\"string\">&#x27;image/x-icon&#x27;</span>;</span><br><span class=\"line\">    link.<span class=\"property\">rel</span> = <span class=\"string\">&#x27;shortcut icon&#x27;</span>;</span><br><span class=\"line\">    link.<span class=\"property\">href</span> = <span class=\"string\">&#x27;/images/366/favicon.ico&#x27;</span>;</span><br><span class=\"line\">    <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementsByTagName</span>(<span class=\"string\">&#x27;head&#x27;</span>)[<span class=\"number\">0</span>].<span class=\"title function_\">appendChild</span>(link);</span><br><span class=\"line\">&#125;());</span><br></pre></td></tr></table></figure>\n\n<meta name=\"referrer\" content=\"no-referrer\"/>\n\n<h2 id=\"记录图片懒加载的实现\"><a href=\"#记录图片懒加载的实现\" class=\"headerlink\" title=\"记录图片懒加载的实现\"></a>记录图片懒加载的实现</h2><h3 id=\"图片懒加载\"><a href=\"#图片懒加载\" class=\"headerlink\" title=\"图片懒加载\"></a>图片懒加载</h3><p>如果是一个图片较多的网站，比如照片类网站，会涉及到打开网站后，一次性向服务器发送大量请求，所以有需求：当用户需要查看更多图片的时候再进行请求。</p>\n<h3 id=\"原理\"><a href=\"#原理\" class=\"headerlink\" title=\"原理\"></a>原理</h3><ol>\n<li><p>先将img标签的src链接设为同一张图片（比如空白图片），然后给img标签设置自定义属性（比如 data-src）,然后将真正的图片地址存储在data-src中。</p>\n</li>\n<li><p>当JS监听到该图片元素进入可视窗口时，将自定义属性中的地址存储到src属性中。达到懒加载的效果。</p>\n</li>\n</ol>\n<!-- more -->\n\n<h3 id=\"例子\"><a href=\"#例子\" class=\"headerlink\" title=\"例子\"></a>例子</h3><ul>\n<li><p>HTML</p>\n<p>img图片引入地址为统一的一张图片，真正的地址存储在data-src中</p>\n</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;container&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;http://s4.sinaimg.cn/mw690/006uWPTUgy72CNFYNjB93&amp;690&quot;</span> <span class=\"attr\">alt</span>=<span class=\"string\">&quot;1&quot;</span> <span class=\"attr\">data-src</span>=<span class=\"string\">&quot;http://img4.imgtn.bdimg.com/it/u=951914923,777131061&amp;fm=26&amp;gp=0.jpg&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;http://s4.sinaimg.cn/mw690/006uWPTUgy72CNFYNjB93&amp;690&quot;</span> <span class=\"attr\">alt</span>=<span class=\"string\">&quot;1&quot;</span> <span class=\"attr\">data-src</span>=<span class=\"string\">&quot;http://img1.imgtn.bdimg.com/it/u=637435809,3242058940&amp;fm=26&amp;gp=0.jpg&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;http://s4.sinaimg.cn/mw690/006uWPTUgy72CNFYNjB93&amp;690&quot;</span> <span class=\"attr\">alt</span>=<span class=\"string\">&quot;1&quot;</span> <span class=\"attr\">data-src</span>=<span class=\"string\">&quot;http://img1.imgtn.bdimg.com/it/u=3990342075,2367006974&amp;fm=200&amp;gp=0.jpg&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;http://s4.sinaimg.cn/mw690/006uWPTUgy72CNFYNjB93&amp;690&quot;</span> <span class=\"attr\">alt</span>=<span class=\"string\">&quot;1&quot;</span> <span class=\"attr\">data-src</span>=<span class=\"string\">&quot;http://img1.imgtn.bdimg.com/it/u=1813891576,1754763093&amp;fm=26&amp;gp=0.jpg&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;http://s4.sinaimg.cn/mw690/006uWPTUgy72CNFYNjB93&amp;690&quot;</span> <span class=\"attr\">alt</span>=<span class=\"string\">&quot;1&quot;</span> <span class=\"attr\">data-src</span>=<span class=\"string\">&quot;http://img4.imgtn.bdimg.com/it/u=2539922263,2810970709&amp;fm=200&amp;gp=0.jpg&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p>CSS</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;style&gt;</span><br><span class=\"line\">    <span class=\"selector-class\">.container</span>&#123;</span><br><span class=\"line\">        <span class=\"attribute\">max-width</span>: <span class=\"number\">800px</span>;</span><br><span class=\"line\">        <span class=\"attribute\">margin</span>:<span class=\"number\">0</span> auto;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-class\">.container</span><span class=\"selector-pseudo\">:after</span>&#123;</span><br><span class=\"line\">        <span class=\"attribute\">content</span>:<span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">        <span class=\"attribute\">display</span>: block;</span><br><span class=\"line\">        <span class=\"attribute\">clear</span>:both;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-class\">.container</span> <span class=\"selector-tag\">img</span>&#123;</span><br><span class=\"line\">        <span class=\"attribute\">width</span>:<span class=\"number\">50%</span>;</span><br><span class=\"line\">        <span class=\"attribute\">height</span>:<span class=\"number\">260px</span>;</span><br><span class=\"line\">        <span class=\"attribute\">float</span><span class=\"selector-pseudo\">:left</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&lt;/style&gt;</span><br></pre></td></tr></table></figure></li>\n<li><p>JS</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"comment\">// 一开始没有滚动的时候，出现在视窗中的图片也会加载</span></span><br><span class=\"line\">    <span class=\"title function_\">start</span>();</span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"comment\">// 当页面开始滚动的时候，遍历图片，如果图片出现在视窗中，就加载图片</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> clock; <span class=\"comment\">//函数节流</span></span><br><span class=\"line\">    $(<span class=\"variable language_\">window</span>).<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;scroll&#x27;</span>,<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(clock)&#123;</span><br><span class=\"line\">            <span class=\"built_in\">clearTimeout</span>(clock);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        clock = <span class=\"built_in\">setTimeout</span>(<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">            <span class=\"title function_\">start</span>()</span><br><span class=\"line\">        &#125;,<span class=\"number\">200</span>)</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">function</span> <span class=\"title function_\">start</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">         $(<span class=\"string\">&#x27;.container img&#x27;</span>).<span class=\"title function_\">not</span>(<span class=\"string\">&#x27;[data-isLoading]&#x27;</span>).<span class=\"title function_\">each</span>(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (<span class=\"title function_\">isShow</span>($(<span class=\"variable language_\">this</span>))) &#123;</span><br><span class=\"line\">                <span class=\"title function_\">loadImg</span>($(<span class=\"variable language_\">this</span>));</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"comment\">// 判断图片是否出现在视窗的函数</span></span><br><span class=\"line\">    <span class=\"keyword\">function</span> <span class=\"title function_\">isShow</span>(<span class=\"params\">$node</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> $node.<span class=\"title function_\">offset</span>().<span class=\"property\">top</span> &lt;= $(<span class=\"variable language_\">window</span>).<span class=\"title function_\">height</span>()+$(<span class=\"variable language_\">window</span>).<span class=\"title function_\">scrollTop</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"comment\">// 加载图片的函数，就是把自定义属性data-src 存储的真正的图片地址，赋值给src</span></span><br><span class=\"line\">    <span class=\"keyword\">function</span> <span class=\"title function_\">loadImg</span>(<span class=\"params\">$img</span>)&#123;</span><br><span class=\"line\">            $img.<span class=\"title function_\">attr</span>(<span class=\"string\">&#x27;src&#x27;</span>, $img.<span class=\"title function_\">attr</span>(<span class=\"string\">&#x27;data-src&#x27;</span>));</span><br><span class=\"line\">  </span><br><span class=\"line\">            <span class=\"comment\">// 已经加载的图片，我给它设置一个属性，值为1，作为标识</span></span><br><span class=\"line\">            <span class=\"comment\">// 弄这个的初衷是因为，每次滚动的时候，所有的图片都会遍历一遍，这样有点浪费，所以做个标识，滚动的时候只遍历哪些还没有加载的图片</span></span><br><span class=\"line\">            $img.<span class=\"title function_\">attr</span>(<span class=\"string\">&#x27;data-isLoading&#x27;</span>,<span class=\"number\">1</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"js实现效果\"><a href=\"#js实现效果\" class=\"headerlink\" title=\"js实现效果\"></a>js实现效果</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> clock; <span class=\"comment\">//函数节流            </span></span><br><span class=\"line\">$(<span class=\"variable language_\">window</span>).<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;scroll&#x27;</span>,<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(clock)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">clearTimeout</span>(clock);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    clock = <span class=\"built_in\">setTimeout</span>(<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">        <span class=\"title function_\">start</span>()</span><br><span class=\"line\">    &#125;,<span class=\"number\">200</span>)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<p>这里有用到一个节流函数，200ms只执行一次加载图片函数，里面有if的判断条件是延迟函数本身，当settimeout执行时，判断为真，当settimeout不执行，为假。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">start</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">     $(<span class=\"string\">&#x27;.container img&#x27;</span>).<span class=\"title function_\">not</span>(<span class=\"string\">&#x27;[data-isLoading]&#x27;</span>).<span class=\"title function_\">each</span>(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"title function_\">isShow</span>($(<span class=\"variable language_\">this</span>))) &#123;</span><br><span class=\"line\">            <span class=\"title function_\">loadImg</span>($(<span class=\"variable language_\">this</span>));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>.not 函数是jq的用法，是将对象循环，并且将符合条件的对象剔除出数组，这里data-isloading在图片的src改变后，后续有将其赋值为1了。</p>\n<meta name=\"referrer\" content=\"no-referrer\"/>\n\n<h2 id=\"平滑上移到顶部-公共方法\"><a href=\"#平滑上移到顶部-公共方法\" class=\"headerlink\" title=\"平滑上移到顶部 公共方法\"></a>平滑上移到顶部 公共方法</h2><h3 id=\"完美平滑实现一个“回到顶部\"><a href=\"#完美平滑实现一个“回到顶部\" class=\"headerlink\" title=\"完美平滑实现一个“回到顶部\"></a>完美平滑实现一个“回到顶部</h3><p>在实际应用中，经常用到滚动到页面顶部或某个位置，一般简单用锚点处理或用js将document.body.scrollTop设置为0，结果是页面一闪而过滚到指定位置，不是特别友好。我们想要的效果是要有点缓冲效果。</p>\n<p>现代浏览器陆续意识到了这种需求，scrollIntoView意思是滚动到可视，css中提供了scroll-behavior属性，js有Element.scrollIntoView()方法。</p>\n<!-- more -->\n\n<h3 id=\"scroll-behavior-纯CSS实现\"><a href=\"#scroll-behavior-纯CSS实现\" class=\"headerlink\" title=\"scroll-behavior 纯CSS实现\"></a>scroll-behavior 纯CSS实现</h3><p><strong>现在css支持了新的功能，scroll-behavior属性可取值auto|smooth|inherit|unset</strong></p>\n<p>scroll-behavior: smooth;是我们想要的缓冲效果。在PC浏览器中，页面默认滚动是在<html>标签上，移动端大多数在<body>标签上，在我们想要实现平滑“回到顶部”，只需在这两个标签上都加上：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">html</span>, <span class=\"selector-tag\">body</span> &#123;</span><br><span class=\"line\">  scroll-behavior: smooth;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>当然，这个实现方法现在支持度比较不友好</p>\n</blockquote>\n<h3 id=\"Element-scrollIntoView-新的方法\"><a href=\"#Element-scrollIntoView-新的方法\" class=\"headerlink\" title=\"Element.scrollIntoView() 新的方法\"></a>Element.scrollIntoView() 新的方法</h3><p>Element.scrollIntoView() 方法让当前的元素滚动到浏览器窗口的可视区域内。</p>\n<p><strong>语法</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">element.<span class=\"title function_\">scrollIntoView</span>(); <span class=\"comment\">// 等同于element.scrollIntoView(true) </span></span><br><span class=\"line\">element.<span class=\"title function_\">scrollIntoView</span>(alignToTop); <span class=\"comment\">// Boolean型参数 </span></span><br><span class=\"line\">element.<span class=\"title function_\">scrollIntoView</span>(scrollIntoViewOptions); <span class=\"comment\">// Object型参数</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>参数</strong> </p>\n<p><code>alignToTop</code>可选</p>\n<p>一个<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Boolean\"><code>Boolean</code></a>值：</p>\n<ul>\n<li>如果为<code>true</code>，元素的顶端将和其所在滚动区的可视区域的顶端对齐。相应的 <code>scrollIntoViewOptions: &#123;block: &quot;start&quot;, inline: &quot;nearest&quot;&#125;</code>。这是这个参数的默认值。</li>\n<li>如果为<code>false</code>，元素的底端将和其所在滚动区的可视区域的底端对齐。相应的<code>scrollIntoViewOptions: &#123;block: &quot;end&quot;, inline: &quot;nearest&quot;&#125;</code>。</li>\n</ul>\n<p><code>scrollIntoViewOptions</code> 可选 </p>\n<p>一个包含下列属性的对象：</p>\n<ul>\n<li><p><code>behavior</code> 可选</p>\n<p>定义动画过渡效果， <code>&quot;auto&quot;</code>或 <code>&quot;smooth&quot;</code> 之一。默认为 <code>&quot;auto&quot;</code>。</p>\n</li>\n<li><p><code>block</code> 可选</p>\n<p>定义垂直方向的对齐， <code>&quot;start&quot;</code>, <code>&quot;center&quot;</code>, <code>&quot;end&quot;</code>, 或 <code>&quot;nearest&quot;</code>之一。默认为 <code>&quot;start&quot;</code>。</p>\n</li>\n<li><p><code>inline</code> 可选</p>\n<p>定义水平方向的对齐， <code>&quot;start&quot;</code>, <code>&quot;center&quot;</code>, <code>&quot;end&quot;</code>, 或 <code>&quot;nearest&quot;</code>之一。默认为 <code>&quot;nearest&quot;</code>。</p>\n</li>\n</ul>\n<p><strong>例子</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> element = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&quot;box&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">element.<span class=\"title function_\">scrollIntoView</span>();</span><br><span class=\"line\">element.<span class=\"title function_\">scrollIntoView</span>(<span class=\"literal\">false</span>);</span><br><span class=\"line\">element.<span class=\"title function_\">scrollIntoView</span>(&#123;<span class=\"attr\">block</span>: <span class=\"string\">&quot;end&quot;</span>&#125;);</span><br><span class=\"line\">element.<span class=\"title function_\">scrollIntoView</span>(&#123;<span class=\"attr\">behavior</span>: <span class=\"string\">&quot;instant&quot;</span>, <span class=\"attr\">block</span>: <span class=\"string\">&quot;end&quot;</span>, <span class=\"attr\">inline</span>: <span class=\"string\">&quot;nearest&quot;</span>&#125;);</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>当然，兼容性也是有问题的。</p>\n</blockquote>\n<h3 id=\"向下兼容\"><a href=\"#向下兼容\" class=\"headerlink\" title=\"向下兼容\"></a>向下兼容</h3><p>要达到所有浏览器都有相同（类似）效果，那就要把剩余不支持scroll-behavior属性的浏览器揪出来，用js去完成使命了。</p>\n<p><strong>注意点</strong></p>\n<ol>\n<li><p>判断是否支持scroll-behavior属性</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"keyword\">typeof</span> <span class=\"variable language_\">window</span>.<span class=\"title function_\">getComputedStyle</span>(<span class=\"variable language_\">document</span>.<span class=\"property\">body</span>).<span class=\"property\">scrollBehavior</span> === <span class=\"string\">&#x27;undefined&#x27;</span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 兼容js代码</span></span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 原生滚动api</span></span><br><span class=\"line\">  <span class=\"comment\">// Element.scrollIntoView()</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li><p>缓冲功能的实现</p>\n<p>原理：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> position = position + (destination - position) / n;</span><br></pre></td></tr></table></figure></li>\n<li><p>贴上代码</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script type=<span class=\"string\">&quot;javascript&quot;</span>&gt;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> scrollTopSmooth = <span class=\"keyword\">function</span> (<span class=\"params\">position</span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 不存在原生`requestAnimationFrame`，用`setTimeout`模拟替代</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (!<span class=\"variable language_\">window</span>.<span class=\"property\">requestAnimationFrame</span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">window</span>.<span class=\"property\">requestAnimationFrame</span> = <span class=\"keyword\">function</span> (<span class=\"params\">cb</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"built_in\">setTimeout</span>(cb, <span class=\"number\">17</span>);</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">// 当前滚动高度</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> scrollTop = <span class=\"variable language_\">document</span>.<span class=\"property\">documentElement</span>.<span class=\"property\">scrollTop</span> || <span class=\"variable language_\">document</span>.<span class=\"property\">body</span>.<span class=\"property\">scrollTop</span>;</span><br><span class=\"line\">  <span class=\"comment\">// step</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> step = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> distance = position - scrollTop;</span><br><span class=\"line\">    scrollTop = scrollTop + distance / <span class=\"number\">5</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"title class_\">Math</span>.<span class=\"title function_\">abs</span>(distance) &lt; <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">      <span class=\"variable language_\">window</span>.<span class=\"title function_\">scrollTo</span>(<span class=\"number\">0</span>, position);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"variable language_\">window</span>.<span class=\"title function_\">scrollTo</span>(<span class=\"number\">0</span>, scrollTop);</span><br><span class=\"line\">      <span class=\"title function_\">requestAnimationFrame</span>(step);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">  <span class=\"title function_\">step</span>();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">$backToTop = <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&#x27;.back-to-top&#x27;</span>)</span><br><span class=\"line\">$backToTop.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;click&#x27;</span>, <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"title function_\">scrollTopSmooth</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">&#125;, <span class=\"literal\">false</span>);   </span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"简单封装\"><a href=\"#简单封装\" class=\"headerlink\" title=\"简单封装\"></a>简单封装</h3><p>上面缓冲算法和当前滚动业务代码耦合在一起了，下面单独拆解出单独一个函数。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">* 缓冲函数</span></span><br><span class=\"line\"><span class=\"comment\">* <span class=\"doctag\">@param</span> &#123;<span class=\"type\">Number</span>&#125; position 当前滚动位置</span></span><br><span class=\"line\"><span class=\"comment\">* <span class=\"doctag\">@param</span> &#123;<span class=\"type\">Number</span>&#125; destination 目标位置</span></span><br><span class=\"line\"><span class=\"comment\">* <span class=\"doctag\">@param</span> &#123;<span class=\"type\">Number</span>&#125; rate 缓动率</span></span><br><span class=\"line\"><span class=\"comment\">* <span class=\"doctag\">@param</span> &#123;<span class=\"type\">Function</span>&#125; callback 缓动结束回调函数 两个参数分别是当前位置和是否结束</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> easeout = <span class=\"keyword\">function</span> (<span class=\"params\">position, destination, rate, callback</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (position === destination || <span class=\"keyword\">typeof</span> destination !== <span class=\"string\">&#x27;number&#x27;</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  destination = destination || <span class=\"number\">0</span>;</span><br><span class=\"line\">  rate = rate || <span class=\"number\">2</span>;</span><br><span class=\"line\">  <span class=\"comment\">// 不存在原生`requestAnimationFrame`，用`setTimeout`模拟替代</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (!<span class=\"variable language_\">window</span>.<span class=\"property\">requestAnimationFrame</span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">window</span>.<span class=\"property\">requestAnimationFrame</span> = <span class=\"keyword\">function</span> (<span class=\"params\">fn</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"built_in\">setTimeout</span>(fn, <span class=\"number\">17</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> step = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    position = position + (destination - position) / rate;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"title class_\">Math</span>.<span class=\"title function_\">abs</span>(destination - position) &lt; <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">      <span class=\"title function_\">callback</span>(destination, <span class=\"literal\">true</span>);</span><br><span class=\"line\">      <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"title function_\">callback</span>(position, <span class=\"literal\">false</span>);</span><br><span class=\"line\">    <span class=\"title function_\">requestAnimationFrame</span>(step);</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">  <span class=\"title function_\">step</span>();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>拆分后，这个小缓冲算法就可以被重复调用啦，而且，适用于滚动到指定位置（不仅仅是到顶部）和缓冲率（控制滚动快慢），当前小demo调用：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> scrollTopSmooth = <span class=\"keyword\">function</span> (<span class=\"params\">position</span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 当前滚动高度</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> scrollTop = <span class=\"variable language_\">document</span>.<span class=\"property\">documentElement</span>.<span class=\"property\">scrollTop</span> || <span class=\"variable language_\">document</span>.<span class=\"property\">body</span>.<span class=\"property\">scrollTop</span>;</span><br><span class=\"line\">  <span class=\"title function_\">easeout</span>(scrollTop, position, <span class=\"number\">5</span>, <span class=\"keyword\">function</span> (<span class=\"params\">val</span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">window</span>.<span class=\"title function_\">scrollTo</span>(<span class=\"number\">0</span>, val);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">$backToTop = <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&#x27;.back-to-top&#x27;</span>)</span><br><span class=\"line\">$backToTop.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;click&#x27;</span>, <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"title function_\">scrollTopSmooth</span>(<span class=\"number\">200</span>);</span><br><span class=\"line\">&#125;, <span class=\"literal\">false</span>);</span><br></pre></td></tr></table></figure></li>\n</ol>\n<p><strong>需要放入公共方法中去：</strong></p>\n<p>在main.js中，可以将公共方法添加到vue的原型上去，从而在所有的页面都可以实现调用：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import common from &#x27;@/comF/common.js&#x27;</span><br><span class=\"line\">Vue.prototype.common = common</span><br><span class=\"line\"></span><br><span class=\"line\">import axios from &#x27;axios&#x27;</span><br><span class=\"line\">Vue.prototype.axios = axios</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"函数防抖和节流-闭包\"><a href=\"#函数防抖和节流-闭包\" class=\"headerlink\" title=\"函数防抖和节流/闭包\"></a>函数防抖和节流/闭包</h2><h3 id=\"函数节流和防抖\"><a href=\"#函数节流和防抖\" class=\"headerlink\" title=\"函数节流和防抖\"></a>函数节流和防抖</h3><p>函数节流：<strong>所谓节流，就是指连续触发事件但是在 n 秒中只执行一次函数</strong></p>\n<p>函数防抖：<strong>所谓防抖，就是指触发事件后在 n 秒内函数只能执行一次，如果在 n 秒内又触发了事件，则会重新计算函数执行时间</strong></p>\n<!-- more -->\n\n<h3 id=\"防抖例子\"><a href=\"#防抖例子\" class=\"headerlink\" title=\"防抖例子\"></a>防抖例子</h3><p>防抖函数分为非立即执行版和立即执行版。</p>\n<p><strong>主要实现方式就是通过执行settimeout这个函数，每次触发延迟对应时间后再执行内部函数</strong></p>\n<ul>\n<li>非立即执行防抖函数</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">debounce</span>(<span class=\"params\">func, wait</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> timeout;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> context = <span class=\"variable language_\">this</span>;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> args = <span class=\"variable language_\">arguments</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (timeout) <span class=\"built_in\">clearTimeout</span>(timeout);</span><br><span class=\"line\">        </span><br><span class=\"line\">        timeout = <span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">            func.<span class=\"title function_\">apply</span>(context, args)</span><br><span class=\"line\">        &#125;, wait);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">content.<span class=\"property\">onmousemove</span> = <span class=\"title function_\">debounce</span>(count,<span class=\"number\">1000</span>); <span class=\"comment\">//调用函数</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>立即执行防抖函数</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">debounce</span>(<span class=\"params\">func,wait</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> timeout;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> context = <span class=\"variable language_\">this</span>;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> args = <span class=\"variable language_\">arguments</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (timeout) <span class=\"built_in\">clearTimeout</span>(timeout);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">let</span> callNow = !timeout;</span><br><span class=\"line\">        timeout = <span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">            timeout = <span class=\"literal\">null</span>;</span><br><span class=\"line\">        &#125;, wait)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (callNow) func.<span class=\"title function_\">apply</span>(context, args)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">content.<span class=\"property\">onmousemove</span> = <span class=\"title function_\">debounce</span>(count,<span class=\"number\">1000</span>); <span class=\"comment\">//调用函数</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>双剑合璧版：</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">debounce</span>(<span class=\"params\">func,wait,immediate</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> timeout;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> context = <span class=\"variable language_\">this</span>;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> args = <span class=\"variable language_\">arguments</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (timeout) <span class=\"built_in\">clearTimeout</span>(timeout);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (immediate) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> callNow = !timeout;</span><br><span class=\"line\">            timeout = <span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">                timeout = <span class=\"literal\">null</span>;</span><br><span class=\"line\">            &#125;, wait)</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (callNow) func.<span class=\"title function_\">apply</span>(context, args)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            timeout = <span class=\"built_in\">setTimeout</span>(<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">                func.<span class=\"title function_\">apply</span>(context, args)</span><br><span class=\"line\">            &#125;, wait);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"节流例子\"><a href=\"#节流例子\" class=\"headerlink\" title=\"节流例子\"></a>节流例子</h3><p>对于节流，一般有两种方式可以实现，分别是时间戳版和定时器版</p>\n<p><strong>主要实现是通过定位时间差来判断是否执行函数</strong></p>\n<ul>\n<li><p>时间戳</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">throttle</span>(<span class=\"params\">func, wait</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> previous = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> now = <span class=\"title class_\">Date</span>.<span class=\"title function_\">now</span>();</span><br><span class=\"line\">        <span class=\"keyword\">let</span> context = <span class=\"variable language_\">this</span>;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> args = <span class=\"variable language_\">arguments</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (now - previous &gt; wait) &#123;</span><br><span class=\"line\">            func.<span class=\"title function_\">apply</span>(context, args);</span><br><span class=\"line\">            previous = now;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">content.<span class=\"property\">onmousemove</span> = <span class=\"title function_\">throttle</span>(count,<span class=\"number\">1000</span>);</span><br></pre></td></tr></table></figure></li>\n<li><p>定时器</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">throttle</span>(<span class=\"params\">func, wait</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> timeout;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> context = <span class=\"variable language_\">this</span>;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> args = <span class=\"variable language_\">arguments</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!timeout) &#123;</span><br><span class=\"line\">            timeout = <span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">                timeout = <span class=\"literal\">null</span>;</span><br><span class=\"line\">                func.<span class=\"title function_\">apply</span>(context, args)</span><br><span class=\"line\">            &#125;, wait)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">content.<span class=\"property\">onmousemove</span> = <span class=\"title function_\">throttle</span>(count,<span class=\"number\">1000</span>);</span><br></pre></td></tr></table></figure></li>\n<li><p>合并版本</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">throttle</span>(<span class=\"params\">func, wait ,type</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(type===<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> previous = <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(type===<span class=\"number\">2</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> timeout;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> context = <span class=\"variable language_\">this</span>;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> args = <span class=\"variable language_\">arguments</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(type===<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">let</span> now = <span class=\"title class_\">Date</span>.<span class=\"title function_\">now</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (now - previous &gt; wait) &#123;</span><br><span class=\"line\">                func.<span class=\"title function_\">apply</span>(context, args);</span><br><span class=\"line\">                previous = now;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(type===<span class=\"number\">2</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!timeout) &#123;</span><br><span class=\"line\">                timeout = <span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">                    timeout = <span class=\"literal\">null</span>;</span><br><span class=\"line\">                    func.<span class=\"title function_\">apply</span>(context, args)</span><br><span class=\"line\">                &#125;, wait)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"区别\"><a href=\"#区别\" class=\"headerlink\" title=\"区别\"></a>区别</h3><p>可以看到 ：<strong>非立即执行防抖函数</strong> 和 <strong>定时器版节流函数</strong> 比较相似。</p>\n<blockquote>\n<p>主要区别是其中的判断条件：</p>\n<ol>\n<li>节流函数是<strong>判断执行settime函数没有执行，则让settime函数执行，达到一定时间内只执行一次的目的</strong>。</li>\n<li>防抖函数是<strong>判断settime函数执行，则让settime函数再执行一次，达到每次触发都延迟</strong></li>\n</ol>\n</blockquote>\n<h3 id=\"原理-1\"><a href=\"#原理-1\" class=\"headerlink\" title=\"原理\"></a>原理</h3><p>防抖是维护一个计时器，规定在delay时间后触发函数，但是在delay时间内再次触发的话，都会清除当前的 timer 然后重新设置超时调用，即重新计时。这样一来，只有最后一次操作能被触发。</p>\n<p>节流是通过判断是否到达一定时间来触发函数，若没到规定时间则使用计时器延后，而下一次事件则会重新设定计时器。</p>\n<h2 id=\"防抖函数中的闭包\"><a href=\"#防抖函数中的闭包\" class=\"headerlink\" title=\"防抖函数中的闭包\"></a>防抖函数中的闭包</h2><p>复制一份防止丢失</p>\n<h3 id=\"debounce函数\"><a href=\"#debounce函数\" class=\"headerlink\" title=\"debounce函数\"></a>debounce函数</h3><p>debounce函数，俗称防抖函数，专治input、resize、scroll等频繁操作打爆浏览器或其他资源。前端面试几乎必考，当然肯定会做一些变化。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> handler = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">this</span>, <span class=\"title class_\">Date</span>.<span class=\"title function_\">now</span>());</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;input&#x27;</span>).<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;input&#x27;</span>, handler);</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"现状\"><a href=\"#现状\" class=\"headerlink\" title=\"现状\"></a>现状</h3><p>用户每次输入操作都会触发handler调用，性能浪费。</p>\n<h3 id=\"目标\"><a href=\"#目标\" class=\"headerlink\" title=\"目标\"></a>目标</h3><p>用户一直输入并不触发handler，直到用户停止输入500ms以上，才触发一次handler。</p>\n<p>前提是，不修改原有的业务代码，且尽量通用。</p>\n<h3 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h3><p>setTimeout实现计时<br>高阶函数，即function作为参数并且返回function<br>代码实现过程</p>\n<h3 id=\"第一版\"><a href=\"#第一版\" class=\"headerlink\" title=\"第一版\"></a>第一版</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">debounce</span>(<span class=\"params\">fn, delay</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">setTimeout</span>(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">      <span class=\"title function_\">fn</span>();</span><br><span class=\"line\">    &#125;, delay);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>给handler包上试试</p>\n<p>document.getElementById(‘input’).addEventListener(‘input’, debounce(handler, 500));<br>明显不可以！！这样写只不过将每次触发都延时了500ms，并没有减少触发次数。不过我们至少实现了高阶函数，不会破坏原有的业务代码了。那么接下来就试着减少触发次数。</p>\n<p>思路就是每次触发先clearTimeout把之前的计时器清掉，再重新setTimout。那么问题来了，第2次进来时，怎么获取到第1次的计时器，并清除呢？</p>\n<h3 id=\"第二版\"><a href=\"#第二版\" class=\"headerlink\" title=\"第二版\"></a>第二版</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">debounce</span>(<span class=\"params\">fn, delay</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> timer;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123; <span class=\"comment\">// 闭包</span></span><br><span class=\"line\">    <span class=\"built_in\">clearTimeout</span>(timer);</span><br><span class=\"line\">    timer = <span class=\"built_in\">setTimeout</span>(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">      <span class=\"title function_\">fn</span>();</span><br><span class=\"line\">    &#125;, delay);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>试来试去，发现把timer放到“外面”最好（为什么不放到更外面？），每次调用进来，大家用的都是一个timer，完美。同时，我们的第一个主角登场了——闭包。</p>\n<p><strong>闭包</strong><br>闭包就是能够读取其他函数内部变量的函数。例如在javascript中，只有函数内部的子函数才能读取局部变量，所以闭包可以理解成“定义在一个函数内部的函数“。在本质上，闭包是将函数内部和函数外部连接起来的桥梁。——百度百科</p>\n<p>网上可以找个很多关于闭包的概念与解释，估计越看越蒙。认识事物需要一个从具象到抽象的过程，以目前的情况来看，我们只要知道，“定义在一个函数（外函数）内部的函数（内函数），并且内函数访问了外函数的变量，这个内函数就叫做闭包”。</p>\n<p>最关键的问题，闭包有什么用？从debounce这个例子，我们可以看到，闭包可以让每次触发的handler共享一个变量，通常用到高阶函数的地方，就会用到闭包。再举几个闭包的应用场景，比如给ajax请求加缓存、加锁，为一系列回调设置初始值，防止污染全局或局部变量等。可能这么说大家还是若有若无的，没关系，实践出真知，现实当中肯定会碰到能够应用闭包的地方的。我们继续debounce。</p>\n<p>终于解决了触发频率的问题了。但是！细心的同学肯定发现了。我们handler里的console打印出来的this，是不一样的！！！之前的this是input结点，现在的this是window对象。这绝对是不行的，比如我想要在handler里打印input的value，现在怎么做呢？</p>\n<h3 id=\"第三版\"><a href=\"#第三版\" class=\"headerlink\" title=\"第三版\"></a>第三版</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">debounce</span>(<span class=\"params\">fn, delay</span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 1</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> timer;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123; <span class=\"comment\">// 闭包</span></span><br><span class=\"line\">    <span class=\"comment\">// 2</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> ctx = <span class=\"variable language_\">this</span>; <span class=\"comment\">// this上下文</span></span><br><span class=\"line\">    <span class=\"built_in\">clearTimeout</span>(timer);</span><br><span class=\"line\">    timer = <span class=\"built_in\">setTimeout</span>(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 3</span></span><br><span class=\"line\">      fn.<span class=\"title function_\">apply</span>(ctx); <span class=\"comment\">// this上下文调用</span></span><br><span class=\"line\">    &#125;, delay);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>解决思路也简单，就是先把正确的this保存起来，我们在这里把this称为“上下文”，大家可以细细品味一下这个词。然后用apply（或call）重新制定一下fn的上下文即可。</p>\n<p><strong>上下文this</strong><br>js的this是很善变的，谁调用它，它就指向谁，所以“上下文”这个词还是很贴切的。那么，为什么在2处能够得到正确的this呢？涉及到上下文切换的地方，一共有3处，已在上面代码中标了出来。我总结了一个三步定位this法：</p>\n<p>第一步，是否立即执行？如果是，跳过第二步！</p>\n<p>第二步，如果不是立即执行，它一定会被转交给某个对象保管，看它被挂在了哪，或者说转交给了谁！</p>\n<p>第三步，这个执行函数挂在谁身上，谁就是this！</p>\n<p>我们来实践一下。</p>\n<p>第1处：</p>\n<p>我们需要先简单处理一下，debounce其实是挂在window全局上的，写全应该是window.debounce(handler, 500)。第一步，是立即执行的！跳过第二步！第三步，debounce挂在window上！所以this指向是window。</p>\n<p>第2处：</p>\n<p>先简单处理下，debounce(handler, 500)的执行结果是返回一个函数，所以下面两段代码基本上可以视为等价的</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;input&#x27;</span>).<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;input&#x27;</span>, <span class=\"title function_\">debounce</span>(handler, <span class=\"number\">500</span>));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;input&#x27;</span>).<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;input&#x27;</span>, <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123; <span class=\"comment\">// 闭包</span></span><br><span class=\"line\">  <span class=\"comment\">// 2</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> ctx = <span class=\"variable language_\">this</span>; <span class=\"comment\">// this上下文</span></span><br><span class=\"line\">  <span class=\"built_in\">clearTimeout</span>(timer);</span><br><span class=\"line\">  timer = <span class=\"built_in\">setTimeout</span>(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 3</span></span><br><span class=\"line\">    fn.<span class=\"title function_\">apply</span>(ctx); <span class=\"comment\">// this上下文调用</span></span><br><span class=\"line\">  &#125;, delay);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n\n\n<p>这么一看，就具体多了。第一步，不是立即执行；第二步，addEventListener是挂在dom上的方法，所以addEventListener只能把回调挂在dom上，可以理解成input.handler = function(){}，等行为被触发时才执行。所以它被转交给了input；第三步，handler挂在input上，所以this指向了input！</p>\n<p>第3处：</p>\n<p>setTimeout是挂在window上的，所以在执行的时候，实际上是window.setTimeout()。我们用伪代码模拟下setTimeout的实现</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">window</span>.<span class=\"property\">setTimeout</span> = <span class=\"keyword\">function</span>(<span class=\"params\">fn, delay</span>)&#123;</span><br><span class=\"line\">  <span class=\"comment\">// 因为不能立即执行，所以要找个地方挂fn，就只能把fn转交给它的主子window</span></span><br><span class=\"line\">  <span class=\"comment\">// 假设window存fn的属性叫setTimeoutHandler，与input.handler类似</span></span><br><span class=\"line\">  <span class=\"variable language_\">window</span>.<span class=\"property\">setTimeoutHandler</span> = fn;</span><br><span class=\"line\">  <span class=\"comment\">// 等待delay毫秒……</span></span><br><span class=\"line\">  <span class=\"variable language_\">window</span>.setTimeoutHandler(); <span class=\"comment\">// 执行</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>仔细理解一下，可以发现这里跟dom的回调非常像。第一步，不是立即执行；第二步，setTimeout是挂在window上的方法，所以只能转交给window的某个方法保管（假设叫setTimeoutHandler，名字不重要）；第三步，setTimeoutHandler挂在window上，所以this指向window。</p>\n<p>稳妥起见，我们再加一个例子</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123;</span><br><span class=\"line\">  <span class=\"attr\">test</span>: <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">this</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">obj.<span class=\"title function_\">test</span>(); <span class=\"comment\">// obj</span></span><br><span class=\"line\"><span class=\"built_in\">setTimeout</span>(obj.<span class=\"property\">test</span>,<span class=\"number\">1000</span>); <span class=\"comment\">// window</span></span><br></pre></td></tr></table></figure>\n\n<p>第一个很简单，立即执行，不用转交。直接可以定位this指向了obj！</p>\n<p>第二个非立即执行，虽然传进去的是obj.test，实际上需要转交给window.setTimeoutHandler保管，即window.setTimeoutHandler = obj.test。所以this指向的是window！</p>\n<p>总之，碰到非立即执行的函数，需要仔细分析一下。</p>\n<p><strong>debounce最终版</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">debounce</span>(<span class=\"params\">fn, delay</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> timer;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123; <span class=\"comment\">// 闭包</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> ctx = <span class=\"variable language_\">this</span>; <span class=\"comment\">// this上下文</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> args = <span class=\"variable language_\">arguments</span>;</span><br><span class=\"line\">    <span class=\"built_in\">clearTimeout</span>(timer);</span><br><span class=\"line\">    timer = <span class=\"built_in\">setTimeout</span>(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">      fn.<span class=\"title function_\">apply</span>(ctx, args); <span class=\"comment\">// this上下文调用</span></span><br><span class=\"line\">    &#125;, delay);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>最后，我们再把传参也解决一下（arguments是默认的存储所有传参的类数组对象，时间关系这里就不展开了），完成。</p>\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><p>debounce是一个很实用也很经典的功能函数，每一行代码都有丰富的内涵。与其类似的还有throttle，可以查查巩固一下。本文主要是想借debounce这个实用的函数引出js当中的两个比较难理解，的点this和闭包。说实话，这两个点想讲明白很难，更靠谱的办法是用大量的实践来消化。本文算是给各位同学种下一颗种子，以后碰到类似的情况时，能够很快的想起本文的内容，帮助自己更好的理解与感悟。</p>\n<meta name=\"referrer\" content=\"no-referrer\"/>\n\n<h2 id=\"冒泡，捕获与其阻止\"><a href=\"#冒泡，捕获与其阻止\" class=\"headerlink\" title=\"冒泡，捕获与其阻止\"></a>冒泡，捕获与其阻止</h2><h3 id=\"js-addEventListener事件捕获与冒泡-第三个参数详解-阻止事件传播\"><a href=\"#js-addEventListener事件捕获与冒泡-第三个参数详解-阻止事件传播\" class=\"headerlink\" title=\"js addEventListener事件捕获与冒泡,第三个参数详解,阻止事件传播\"></a>js addEventListener事件捕获与冒泡,第三个参数详解,阻止事件传播</h3><p><strong>关键点</strong></p>\n<blockquote>\n<p>element.addEventListener(event, function[, useCapture])</p>\n</blockquote>\n<ol>\n<li><p>event:事件名称,如click</p>\n</li>\n<li><p>function:指定要事件触发时执行的函数,可以传入事件参数</p>\n</li>\n<li><p>useCapture:可选。布尔值，指定事件是否在捕获或冒泡阶段执行。</p>\n<ul>\n<li><p>默认false:在冒泡阶段执行指定事件</p>\n</li>\n<li><p>true:在捕获阶段执行事件</p>\n</li>\n</ul>\n</li>\n<li><p>event.stopPropagation():阻止事件传播,用于function(event){}中</p>\n<!-- more --></li>\n</ol>\n<h3 id=\"捕获与冒泡\"><a href=\"#捕获与冒泡\" class=\"headerlink\" title=\"捕获与冒泡\"></a>捕获与冒泡</h3><p>图示：</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20190122115236901.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2x5dF9hbmd1bGFyanM=,size_16,color_FFFFFF,t_70\"></p>\n<p>冒泡js代码：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">print</span>(<span class=\"params\">e</span>)&#123;</span><br><span class=\"line\">     <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">id</span>);</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   aa.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;click&#x27;</span>,print);<span class=\"comment\">//第三个参数默认为false</span></span><br><span class=\"line\">   bb.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;click&#x27;</span>,print);</span><br><span class=\"line\">   cc.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;click&#x27;</span>,print);</span><br></pre></td></tr></table></figure>\n\n<p>输出结果：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cc</span><br><span class=\"line\">bb</span><br><span class=\"line\">aa</span><br></pre></td></tr></table></figure>\n\n<p>这个结果明显是从内到外去执行的，是冒泡阶段执行，因为默认的是false。</p>\n<p>捕获js代码：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">print</span>(<span class=\"params\">e</span>)&#123;</span><br><span class=\"line\">   <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">id</span>);</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"> aa.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;click&#x27;</span>,print,<span class=\"literal\">true</span>);<span class=\"comment\">//第三个参数默认为false</span></span><br><span class=\"line\"> bb.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;click&#x27;</span>,print,<span class=\"literal\">true</span>);</span><br><span class=\"line\"> cc.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;click&#x27;</span>,print,<span class=\"literal\">true</span>);</span><br></pre></td></tr></table></figure>\n\n<p>输出结果：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">aa</span><br><span class=\"line\">bb</span><br><span class=\"line\">cc</span><br></pre></td></tr></table></figure>\n\n<p>当改为true时，则要执行捕获阶段，从外到内去执行。</p>\n<h3 id=\"阻止传播行为\"><a href=\"#阻止传播行为\" class=\"headerlink\" title=\"阻止传播行为\"></a>阻止传播行为</h3><p>当有时候不需要点击激活所有的行为时，可以采用对应的方法阻止</p>\n<p>js代码如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">print</span>(<span class=\"params\">e</span>)&#123;</span><br><span class=\"line\">\te.<span class=\"title function_\">stopPropagation</span>();<span class=\"comment\">//执行完此函数后,该事件不再继续传播</span></span><br><span class=\"line\">   <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">id</span>);</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"> aa.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;click&#x27;</span>,print,<span class=\"literal\">true</span>);<span class=\"comment\">//第三个参数默认为false</span></span><br><span class=\"line\"> bb.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;click&#x27;</span>,print,<span class=\"literal\">true</span>);</span><br><span class=\"line\"> cc.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;click&#x27;</span>,print,<span class=\"literal\">true</span>);</span><br></pre></td></tr></table></figure>\n\n<p>输出结果：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">aa</span><br></pre></td></tr></table></figure>\n\n<p>再点击cc时,捕获cc,执行cc的click函数, 因为print函数中有<code>e.stopPropagation()</code>,所以执行完该函数后,click事件不再传播.</p>\n<h3 id=\"取消默认事件\"><a href=\"#取消默认事件\" class=\"headerlink\" title=\"取消默认事件\"></a>取消默认事件</h3><p>除了冒泡行为，有的时候还会遇到默认事件</p>\n<p>什么元素有默认行为呢？如链接<a>，提交按钮<input type=\"submit\">等。</p>\n<p><strong>阻止默认事件</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//假定有链接&lt;a href=&quot;http://caibaojian.com/&quot; id=&quot;testA&quot; &gt;caibaojian.com&lt;/a&gt;</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&quot;testA&quot;</span>);</span><br><span class=\"line\">a.<span class=\"property\">onclick</span> =<span class=\"keyword\">function</span>(<span class=\"params\">e</span>)&#123;</span><br><span class=\"line\"><span class=\"keyword\">if</span>(e.<span class=\"property\">preventDefault</span>)&#123;</span><br><span class=\"line\">e.<span class=\"title function_\">preventDefault</span>();</span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\"><span class=\"variable language_\">window</span>.<span class=\"property\">event</span>.<span class=\"property\">returnValue</span> == <span class=\"literal\">false</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"总结-1\"><a href=\"#总结-1\" class=\"headerlink\" title=\"总结\"></a>总结</h3><p>当需要停止冒泡行为时，可以使用：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">stopBubble</span>(<span class=\"params\">e</span>) &#123; </span><br><span class=\"line\"><span class=\"comment\">//如果提供了事件对象，则这是一个非IE浏览器 </span></span><br><span class=\"line\"><span class=\"keyword\">if</span> ( e &amp;&amp; e.<span class=\"property\">stopPropagation</span> ) </span><br><span class=\"line\">    <span class=\"comment\">//因此它支持W3C的stopPropagation()方法 </span></span><br><span class=\"line\">    e.<span class=\"title function_\">stopPropagation</span>(); </span><br><span class=\"line\"><span class=\"keyword\">else</span> </span><br><span class=\"line\">    <span class=\"comment\">//否则，我们需要使用IE的方式来取消事件冒泡 </span></span><br><span class=\"line\">    <span class=\"variable language_\">window</span>.<span class=\"property\">event</span>.<span class=\"property\">cancelBubble</span> = <span class=\"literal\">true</span>; </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>当需要阻止默认行为时，可以使用:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//阻止浏览器的默认行为 </span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">stopDefault</span>(<span class=\"params\"> e </span>) &#123; </span><br><span class=\"line\">    <span class=\"comment\">//阻止默认浏览器动作(W3C) </span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( e &amp;&amp; e.<span class=\"property\">preventDefault</span> ) </span><br><span class=\"line\">        e.<span class=\"title function_\">preventDefault</span>(); </span><br><span class=\"line\">    <span class=\"comment\">//IE中阻止函数器默认动作的方式 </span></span><br><span class=\"line\">    <span class=\"keyword\">else</span> </span><br><span class=\"line\">        <span class=\"variable language_\">window</span>.<span class=\"property\">event</span>.<span class=\"property\">returnValue</span> = <span class=\"literal\">false</span>; </span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">false</span>; </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<meta name=\"referrer\" content=\"no-referrer\"/>\n\n<h2 id=\"浮动\"><a href=\"#浮动\" class=\"headerlink\" title=\"浮动\"></a>浮动</h2><p>float 属性定义元素在哪个方向浮动。以往这个属性总应用于图像，使文本围绕在图像周围，不过在 CSS 中，任何元素都可以浮动。<br>浮动元素会生成一个块级框，而不论它本身是何种元素。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">img</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">  float:right;</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n\n<p>如果浮动非替换元素，则要指定一个明确的宽度；否则，它们会尽可能地窄。<br><em><strong>注释</strong></em>：假如在一行之上只有极少的空间可供浮动元素，那么这个元素会跳至下一行，这个过程会持续到某一行拥有足够的空间为止。</p>\n<h2 id=\"清除浮动\"><a href=\"#清除浮动\" class=\"headerlink\" title=\"清除浮动\"></a>清除浮动</h2><h3 id=\"浮动会带来什么影响？\"><a href=\"#浮动会带来什么影响？\" class=\"headerlink\" title=\"浮动会带来什么影响？\"></a>浮动会带来什么影响？</h3><p>浮动主要会影响页面的布局，给元素加上浮动后，元素会脱离文档流，从而导致以下的几个现象：</p>\n<ul>\n<li>外层父级元素边框不能撑开;</li>\n<li>外层父级元素背景不能显示;</li>\n<li>margin值不能正确显示;<!-- more -->\n图片如下:<br><img src=\"https://limengtupian.oss-cn-beijing.aliyuncs.com/float.jpg\" alt=\"float\"><br>代码如下：<br>HTML</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;outer&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;div1&quot;</span>&gt;</span>1<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;div2&quot;</span>&gt;</span>2<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;div3&quot;</span>&gt;</span>3<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>CSS</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.outer</span>&#123;<span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid <span class=\"number\">#ccc</span>;<span class=\"attribute\">background</span>: <span class=\"number\">#fc9</span>;<span class=\"attribute\">color</span>: <span class=\"number\">#fff</span>; <span class=\"attribute\">margin</span>: <span class=\"number\">50px</span> auto;<span class=\"attribute\">padding</span>: <span class=\"number\">50px</span>;&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.div1</span>&#123;<span class=\"attribute\">width</span>: <span class=\"number\">80px</span>;<span class=\"attribute\">height</span>: <span class=\"number\">80px</span>;<span class=\"attribute\">background</span>: red;<span class=\"attribute\">float</span>: left;&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.div2</span>&#123;<span class=\"attribute\">width</span>: <span class=\"number\">80px</span>;<span class=\"attribute\">height</span>: <span class=\"number\">80px</span>;<span class=\"attribute\">background</span>: blue;<span class=\"attribute\">float</span>: left;&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.div3</span>&#123;<span class=\"attribute\">width</span>: <span class=\"number\">80px</span>;<span class=\"attribute\">height</span>: <span class=\"number\">80px</span>;<span class=\"attribute\">background</span>: sienna;<span class=\"attribute\">float</span>: left;&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"如何清除浮动？\"><a href=\"#如何清除浮动？\" class=\"headerlink\" title=\"如何清除浮动？\"></a>如何清除浮动？</h3><ol>\n<li>添加新的元素 、应用 clear：both<br>HTML</li>\n</ol>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;outer&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;div1&quot;</span>&gt;</span>1<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;div2&quot;</span>&gt;</span>2<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;div3&quot;</span>&gt;</span>3<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;clear&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>CSS</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.clear</span>&#123;<span class=\"attribute\">clear</span>:both; <span class=\"attribute\">height</span>: <span class=\"number\">0</span>; <span class=\"attribute\">line-height</span>: <span class=\"number\">0</span>; <span class=\"attribute\">font-size</span>: <span class=\"number\">0</span>&#125;</span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>父级div定义 overflow: auto（注意：是父级div也就是这里的  div.outer）<br>HTML</li>\n</ol>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;outer over-flow&quot;</span>&gt;</span> //这里添加了一个class</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;div1&quot;</span>&gt;</span>1<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;div2&quot;</span>&gt;</span>2<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;div3&quot;</span>&gt;</span>3<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--&lt;div class=&quot;clear&quot;&gt;&lt;/div&gt;--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>CSS</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.over-flow</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">overflow</span>: auto; zoom: <span class=\"number\">1</span>; //zoom: <span class=\"number\">1</span>; 是在处理兼容性问题</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><em><strong>注意</strong></em>:使用overflow属性来清除浮动有一点需要注意，overflow属性共有三个属性值：hidden,auto,visible。<br>我们可以使用hiddent和auto值来清除浮动，但切记不能使用visible值，如果使用这个值将无法达到清除浮动效果，其他两个值都可以，其区据说在于一个对seo比较友好，另个hidden对seo不是太友好，其他区别我就说不上了，也不浪费时间。</p>\n<ol start=\"3\">\n<li>:after 方法：（注意：作用于浮动元素的父亲）<br>HTML</li>\n</ol>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;outer&quot;</span>&gt;</span> //这里添加了一个class</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;div1&quot;</span>&gt;</span>1<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;div2&quot;</span>&gt;</span>2<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;div3&quot;</span>&gt;</span>3<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--&lt;div class=&quot;clear&quot;&gt;&lt;/div&gt;--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>CSS</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.outer</span> &#123;zoom:<span class=\"number\">1</span>;&#125;    <span class=\"comment\">/*==for IE6/7 Maxthon2==*/</span></span><br><span class=\"line\"><span class=\"selector-class\">.outer</span> <span class=\"selector-pseudo\">:after</span> &#123;<span class=\"attribute\">clear</span>:both;<span class=\"attribute\">content</span>:<span class=\"string\">&#x27;.&#x27;</span>;<span class=\"attribute\">display</span>:block;<span class=\"attribute\">width</span>: <span class=\"number\">0</span>;<span class=\"attribute\">height</span>: <span class=\"number\">0</span>;<span class=\"attribute\">visibility</span>:hidden;&#125;   <span class=\"comment\">/*==for FF/chrome/opera/IE8==*/</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ol>\n<li><p>display:block 使生成的元素以块级元素显示,占满剩余空间;</p>\n</li>\n<li><p>height:0 避免生成内容破坏原有布局的高度。</p>\n</li>\n<li><p>visibility:hidden 使生成的内容不可见，并允许可能被生成内容盖住的内容可以进行点击和交互;</p>\n</li>\n</ol>\n<p>4）通过 content:”.”生成内容作为最后一个元素，至于content里面是点还是其他都是可以的，例如oocss里面就有经典的 content:”XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX”,有些版本可能content 里面内容为空,一丝冰凉是不推荐这样做的,firefox直到7.0 content:”” 仍然会产生额外的空隙；</p>\n<p>5）zoom：1 触发IE hasLayout。</p>\n<p>通过分析发现，除了clear：both用来闭合浮动的，其他代码无非都是为了隐藏掉content生成的内容，这也就是其他版本的闭合浮动为什么会有font-size：0，line-height：0。</p>\n<hr>\n<p>OVER……</p>\n<meta name=\"referrer\" content=\"no-referrer\"/>\n\n<h2 id=\"What-is-this？\"><a href=\"#What-is-this？\" class=\"headerlink\" title=\"What is this？\"></a>What is this？</h2><p>你可能遇到过这样的 JS 面试题：</p>\n<blockquote>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var obj = &#123;</span><br><span class=\"line\">foo: function()&#123;</span><br><span class=\"line\"> console.log(this)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">var bar = obj.foo</span><br><span class=\"line\">obj.foo() // 打印出的 this 是 obj</span><br><span class=\"line\">bar() // 打印出的 this 是 window</span><br></pre></td></tr></table></figure>\n</blockquote>\n<!-- more -->\n\n<p>JS（ES5）里面有三种函数调用形式：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">func(p1, p2) </span><br><span class=\"line\">obj.child.method(p1, p2)</span><br><span class=\"line\">func.call(context, p1, p2) // 先不讲 apply</span><br></pre></td></tr></table></figure>\n\n<p>从看到这篇文章起，你一定要记住，第三种调用形式，才是正常调用形式：</p>\n<blockquote>\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">func.call(context, p1, p2)</span><br></pre></td></tr></table></figure>\n</blockquote>\n<h2 id=\"这样，this-就好解释了\"><a href=\"#这样，this-就好解释了\" class=\"headerlink\" title=\"这样，this 就好解释了\"></a>这样，this 就好解释了</h2><p>this，就是上面代码中的 context。就这么简单。</p>\n<p>this 是你 call 一个函数时传的 context，由于你从来不用 call 形式的函数调用，所以你一直不知道。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var obj = &#123;</span><br><span class=\"line\">  foo: function()&#123;</span><br><span class=\"line\">    console.log(this)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">var bar = obj.foo</span><br><span class=\"line\">obj.foo() // 转换为 obj.foo.call(obj)，this 就是 obj</span><br><span class=\"line\">bar() </span><br><span class=\"line\">// 转换为 bar.call()</span><br><span class=\"line\">// 由于没有传 context</span><br><span class=\"line\">// 所以 this 就是 undefined</span><br><span class=\"line\">// 最后浏览器给你一个默认的 this —— window 对象</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"更多的情况\"><a href=\"#更多的情况\" class=\"headerlink\" title=\"更多的情况\"></a>更多的情况</h2><ol>\n<li><p>Event Handler 中的 this“</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">btn.addEventListener(&#x27;click&#x27; ,function handler()&#123;</span><br><span class=\"line\">  console.log(this) // 请问这里的 this 是什么</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>通常来说this的值是触发事件的元素的引用，这种特性在多个相似的元素使用同一个通用事件监听器时非常让人满意。</p>\n<p>当使用 addEventListener() 为一个元素注册事件的时候，句柄里的 this 值是该元素的引用。其与传递给句柄的 event 参数的 currentTarget 属性的值一样。</p>\n</blockquote>\n<blockquote>\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 当事件被触发时</span><br><span class=\"line\">handler.call(event.currentTarget, event) </span><br><span class=\"line\">// 那么 this 是什么不言而喻</span><br></pre></td></tr></table></figure>\n</blockquote>\n<p><strong>this</strong>指向btn。</p>\n</li>\n<li><p>jQuery Event Handler 中的 this：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ul.on(<span class=\"symbol\">&amp;#39;</span>click<span class=\"symbol\">&amp;#39;</span>, <span class=\"symbol\">&amp;#39;</span>li<span class=\"symbol\">&amp;#39;</span> , function()&#123;</span><br><span class=\"line\">  console.log(this)</span><br><span class=\"line\">&#125;)we</span><br></pre></td></tr></table></figure>\n\n<p>文档：</p>\n<blockquote>\n<p>当jQuery的调用处理程序时，this关键字指向的是当前正在执行事件的元素。对于直接事件而言，this 代表绑定事件的元素。<strong>对于代理事件而言，****this 则代表了与 selector</strong> <strong>相匹配的元素。</strong>(注意，如果事件是从后代元素冒泡上来的话，那么 this 就有可能不等于 event.target。)若要使用 jQuery 的相关方法，可以根据当前元素创建一个 jQuery 对象，即使用 $(this)。</p>\n</blockquote>\n</li>\n</ol>\n<h2 id=\"强制指定this的指向\"><a href=\"#强制指定this的指向\" class=\"headerlink\" title=\"强制指定this的指向\"></a>强制指定this的指向</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function handlerWrapper(event)&#123;</span><br><span class=\"line\">  function handler()&#123;</span><br><span class=\"line\">    console.log(this) // 请问这里的 this 是什么</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  handler.call(&#123;name:&#x27;饥人谷&#x27;&#125;, event)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">btn.addEventListener(&#x27;click&#x27;, handlerWrapper)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"内部函数的this指向\"><a href=\"#内部函数的this指向\" class=\"headerlink\" title=\"内部函数的this指向\"></a>内部函数的this指向</h2><p><strong>构造函数版this：</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function Fn()&#123;</span><br><span class=\"line\">    this.user = &quot;追梦子&quot;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">var a = new Fn();</span><br><span class=\"line\">console.log(a.user); //追梦子</span><br></pre></td></tr></table></figure>\n\n<p>构造函数生成的this指向实例化的对象。</p>\n<p><strong>setTimeOut()或setInterval()中的this</strong>：</p>\n<p>在setTimeOut()或setInterval()这样的方法中，如果传入的函数包含this, 那么，默认情况下，函数中的this会指向window对象。</p>\n<p>改变的三种方式：</p>\n<ol>\n<li><p>将当前对象的this存为一个变量</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function doClick()&#123;</span><br><span class=\"line\">    var that = this;</span><br><span class=\"line\">    setInterval(function() &#123;</span><br><span class=\"line\">      console.log(that.msg);</span><br><span class=\"line\">     &#125;, 1000);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li><p>利用bind()方法</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function doClick()&#123;</span><br><span class=\"line\">    setInterval(function() &#123;</span><br><span class=\"line\">      console.log(this.msg);</span><br><span class=\"line\">     &#125;.bind(this), 1000);  //利用bind()将this绑定到这个函数上</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li><p>ES6的箭头函数</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function doClick()&#123;</span><br><span class=\"line\">     setInterval(() =&gt; &#123;</span><br><span class=\"line\">       console.log(this.msg);</span><br><span class=\"line\">     &#125;, 100);</span><br><span class=\"line\"> &#125;,</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h2 id=\"总结-2\"><a href=\"#总结-2\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p><strong>如何准确判断 this 指向的是什么？</strong></p>\n<p>1 . 函数是否在 new 中调用 (new 绑定)，如果是，那么 this 绑定的是新创建的对象。</p>\n<p>2 . 函数是否通过 call,apply 调用，或者使用了 bind(即硬绑定)，如果是，那么 this 绑定的就是指定的对象。</p>\n<p>3 . 函数是否在某个上下文对象中调用 (隐式绑定)，如果是的话，this 绑定的是那个上下文对象。一般是 obj.foo()。</p>\n<p>4 . 如果以上都不是，那么使用默认绑定。如果在严格模式下，则绑定到 undefined，否则绑定到全局对象。</p>\n<p>5 . 如果把 Null 或者 undefined 作为 this 的绑定对象传入 call、apply 或者 bind，这些值在调用时会被忽略，实际应用的是默认绑定规则。</p>\n<p>6 . 如果是箭头函数，箭头函数的 this 继承的是外层代码块的 this。</p>\n","site":{"data":{}},"excerpt":"<meta name=\"referrer\" content=\"no-referrer\"/>\n\n<h2 id=\"原生JS方法记录\"><a href=\"#原生JS方法记录\" class=\"headerlink\" title=\"原生JS方法记录\"></a>原生JS方法记录</h2><h3 id=\"记录原生JS实现的功能\"><a href=\"#记录原生JS实现的功能\" class=\"headerlink\" title=\"记录原生JS实现的功能\"></a>记录原生JS实现的功能</h3><p>通过框架实现的功能，如何通过原生JS实现，记录遇到的实现代码</p>","more":"<h3 id=\"js动态添加页面的icon图标\"><a href=\"#js动态添加页面的icon图标\" class=\"headerlink\" title=\"js动态添加页面的icon图标\"></a>js动态添加页面的icon图标</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(<span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> link = <span class=\"variable language_\">document</span>.<span class=\"title function_\">createElement</span>(<span class=\"string\">&#x27;link&#x27;</span>);</span><br><span class=\"line\">    link.<span class=\"property\">type</span> = <span class=\"string\">&#x27;image/x-icon&#x27;</span>;</span><br><span class=\"line\">    link.<span class=\"property\">rel</span> = <span class=\"string\">&#x27;shortcut icon&#x27;</span>;</span><br><span class=\"line\">    link.<span class=\"property\">href</span> = <span class=\"string\">&#x27;/images/366/favicon.ico&#x27;</span>;</span><br><span class=\"line\">    <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementsByTagName</span>(<span class=\"string\">&#x27;head&#x27;</span>)[<span class=\"number\">0</span>].<span class=\"title function_\">appendChild</span>(link);</span><br><span class=\"line\">&#125;());</span><br></pre></td></tr></table></figure>\n\n<meta name=\"referrer\" content=\"no-referrer\"/>\n\n<h2 id=\"记录图片懒加载的实现\"><a href=\"#记录图片懒加载的实现\" class=\"headerlink\" title=\"记录图片懒加载的实现\"></a>记录图片懒加载的实现</h2><h3 id=\"图片懒加载\"><a href=\"#图片懒加载\" class=\"headerlink\" title=\"图片懒加载\"></a>图片懒加载</h3><p>如果是一个图片较多的网站，比如照片类网站，会涉及到打开网站后，一次性向服务器发送大量请求，所以有需求：当用户需要查看更多图片的时候再进行请求。</p>\n<h3 id=\"原理\"><a href=\"#原理\" class=\"headerlink\" title=\"原理\"></a>原理</h3><ol>\n<li><p>先将img标签的src链接设为同一张图片（比如空白图片），然后给img标签设置自定义属性（比如 data-src）,然后将真正的图片地址存储在data-src中。</p>\n</li>\n<li><p>当JS监听到该图片元素进入可视窗口时，将自定义属性中的地址存储到src属性中。达到懒加载的效果。</p>\n</li>\n</ol>\n<!-- more -->\n\n<h3 id=\"例子\"><a href=\"#例子\" class=\"headerlink\" title=\"例子\"></a>例子</h3><ul>\n<li><p>HTML</p>\n<p>img图片引入地址为统一的一张图片，真正的地址存储在data-src中</p>\n</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;container&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;http://s4.sinaimg.cn/mw690/006uWPTUgy72CNFYNjB93&amp;690&quot;</span> <span class=\"attr\">alt</span>=<span class=\"string\">&quot;1&quot;</span> <span class=\"attr\">data-src</span>=<span class=\"string\">&quot;http://img4.imgtn.bdimg.com/it/u=951914923,777131061&amp;fm=26&amp;gp=0.jpg&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;http://s4.sinaimg.cn/mw690/006uWPTUgy72CNFYNjB93&amp;690&quot;</span> <span class=\"attr\">alt</span>=<span class=\"string\">&quot;1&quot;</span> <span class=\"attr\">data-src</span>=<span class=\"string\">&quot;http://img1.imgtn.bdimg.com/it/u=637435809,3242058940&amp;fm=26&amp;gp=0.jpg&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;http://s4.sinaimg.cn/mw690/006uWPTUgy72CNFYNjB93&amp;690&quot;</span> <span class=\"attr\">alt</span>=<span class=\"string\">&quot;1&quot;</span> <span class=\"attr\">data-src</span>=<span class=\"string\">&quot;http://img1.imgtn.bdimg.com/it/u=3990342075,2367006974&amp;fm=200&amp;gp=0.jpg&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;http://s4.sinaimg.cn/mw690/006uWPTUgy72CNFYNjB93&amp;690&quot;</span> <span class=\"attr\">alt</span>=<span class=\"string\">&quot;1&quot;</span> <span class=\"attr\">data-src</span>=<span class=\"string\">&quot;http://img1.imgtn.bdimg.com/it/u=1813891576,1754763093&amp;fm=26&amp;gp=0.jpg&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;http://s4.sinaimg.cn/mw690/006uWPTUgy72CNFYNjB93&amp;690&quot;</span> <span class=\"attr\">alt</span>=<span class=\"string\">&quot;1&quot;</span> <span class=\"attr\">data-src</span>=<span class=\"string\">&quot;http://img4.imgtn.bdimg.com/it/u=2539922263,2810970709&amp;fm=200&amp;gp=0.jpg&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p>CSS</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;style&gt;</span><br><span class=\"line\">    <span class=\"selector-class\">.container</span>&#123;</span><br><span class=\"line\">        <span class=\"attribute\">max-width</span>: <span class=\"number\">800px</span>;</span><br><span class=\"line\">        <span class=\"attribute\">margin</span>:<span class=\"number\">0</span> auto;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-class\">.container</span><span class=\"selector-pseudo\">:after</span>&#123;</span><br><span class=\"line\">        <span class=\"attribute\">content</span>:<span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">        <span class=\"attribute\">display</span>: block;</span><br><span class=\"line\">        <span class=\"attribute\">clear</span>:both;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-class\">.container</span> <span class=\"selector-tag\">img</span>&#123;</span><br><span class=\"line\">        <span class=\"attribute\">width</span>:<span class=\"number\">50%</span>;</span><br><span class=\"line\">        <span class=\"attribute\">height</span>:<span class=\"number\">260px</span>;</span><br><span class=\"line\">        <span class=\"attribute\">float</span><span class=\"selector-pseudo\">:left</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&lt;/style&gt;</span><br></pre></td></tr></table></figure></li>\n<li><p>JS</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"comment\">// 一开始没有滚动的时候，出现在视窗中的图片也会加载</span></span><br><span class=\"line\">    <span class=\"title function_\">start</span>();</span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"comment\">// 当页面开始滚动的时候，遍历图片，如果图片出现在视窗中，就加载图片</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> clock; <span class=\"comment\">//函数节流</span></span><br><span class=\"line\">    $(<span class=\"variable language_\">window</span>).<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;scroll&#x27;</span>,<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(clock)&#123;</span><br><span class=\"line\">            <span class=\"built_in\">clearTimeout</span>(clock);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        clock = <span class=\"built_in\">setTimeout</span>(<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">            <span class=\"title function_\">start</span>()</span><br><span class=\"line\">        &#125;,<span class=\"number\">200</span>)</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">function</span> <span class=\"title function_\">start</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">         $(<span class=\"string\">&#x27;.container img&#x27;</span>).<span class=\"title function_\">not</span>(<span class=\"string\">&#x27;[data-isLoading]&#x27;</span>).<span class=\"title function_\">each</span>(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (<span class=\"title function_\">isShow</span>($(<span class=\"variable language_\">this</span>))) &#123;</span><br><span class=\"line\">                <span class=\"title function_\">loadImg</span>($(<span class=\"variable language_\">this</span>));</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"comment\">// 判断图片是否出现在视窗的函数</span></span><br><span class=\"line\">    <span class=\"keyword\">function</span> <span class=\"title function_\">isShow</span>(<span class=\"params\">$node</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> $node.<span class=\"title function_\">offset</span>().<span class=\"property\">top</span> &lt;= $(<span class=\"variable language_\">window</span>).<span class=\"title function_\">height</span>()+$(<span class=\"variable language_\">window</span>).<span class=\"title function_\">scrollTop</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"comment\">// 加载图片的函数，就是把自定义属性data-src 存储的真正的图片地址，赋值给src</span></span><br><span class=\"line\">    <span class=\"keyword\">function</span> <span class=\"title function_\">loadImg</span>(<span class=\"params\">$img</span>)&#123;</span><br><span class=\"line\">            $img.<span class=\"title function_\">attr</span>(<span class=\"string\">&#x27;src&#x27;</span>, $img.<span class=\"title function_\">attr</span>(<span class=\"string\">&#x27;data-src&#x27;</span>));</span><br><span class=\"line\">  </span><br><span class=\"line\">            <span class=\"comment\">// 已经加载的图片，我给它设置一个属性，值为1，作为标识</span></span><br><span class=\"line\">            <span class=\"comment\">// 弄这个的初衷是因为，每次滚动的时候，所有的图片都会遍历一遍，这样有点浪费，所以做个标识，滚动的时候只遍历哪些还没有加载的图片</span></span><br><span class=\"line\">            $img.<span class=\"title function_\">attr</span>(<span class=\"string\">&#x27;data-isLoading&#x27;</span>,<span class=\"number\">1</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"js实现效果\"><a href=\"#js实现效果\" class=\"headerlink\" title=\"js实现效果\"></a>js实现效果</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> clock; <span class=\"comment\">//函数节流            </span></span><br><span class=\"line\">$(<span class=\"variable language_\">window</span>).<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;scroll&#x27;</span>,<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(clock)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">clearTimeout</span>(clock);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    clock = <span class=\"built_in\">setTimeout</span>(<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">        <span class=\"title function_\">start</span>()</span><br><span class=\"line\">    &#125;,<span class=\"number\">200</span>)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<p>这里有用到一个节流函数，200ms只执行一次加载图片函数，里面有if的判断条件是延迟函数本身，当settimeout执行时，判断为真，当settimeout不执行，为假。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">start</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">     $(<span class=\"string\">&#x27;.container img&#x27;</span>).<span class=\"title function_\">not</span>(<span class=\"string\">&#x27;[data-isLoading]&#x27;</span>).<span class=\"title function_\">each</span>(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"title function_\">isShow</span>($(<span class=\"variable language_\">this</span>))) &#123;</span><br><span class=\"line\">            <span class=\"title function_\">loadImg</span>($(<span class=\"variable language_\">this</span>));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>.not 函数是jq的用法，是将对象循环，并且将符合条件的对象剔除出数组，这里data-isloading在图片的src改变后，后续有将其赋值为1了。</p>\n<meta name=\"referrer\" content=\"no-referrer\"/>\n\n<h2 id=\"平滑上移到顶部-公共方法\"><a href=\"#平滑上移到顶部-公共方法\" class=\"headerlink\" title=\"平滑上移到顶部 公共方法\"></a>平滑上移到顶部 公共方法</h2><h3 id=\"完美平滑实现一个“回到顶部\"><a href=\"#完美平滑实现一个“回到顶部\" class=\"headerlink\" title=\"完美平滑实现一个“回到顶部\"></a>完美平滑实现一个“回到顶部</h3><p>在实际应用中，经常用到滚动到页面顶部或某个位置，一般简单用锚点处理或用js将document.body.scrollTop设置为0，结果是页面一闪而过滚到指定位置，不是特别友好。我们想要的效果是要有点缓冲效果。</p>\n<p>现代浏览器陆续意识到了这种需求，scrollIntoView意思是滚动到可视，css中提供了scroll-behavior属性，js有Element.scrollIntoView()方法。</p>\n<!-- more -->\n\n<h3 id=\"scroll-behavior-纯CSS实现\"><a href=\"#scroll-behavior-纯CSS实现\" class=\"headerlink\" title=\"scroll-behavior 纯CSS实现\"></a>scroll-behavior 纯CSS实现</h3><p><strong>现在css支持了新的功能，scroll-behavior属性可取值auto|smooth|inherit|unset</strong></p>\n<p>scroll-behavior: smooth;是我们想要的缓冲效果。在PC浏览器中，页面默认滚动是在<html>标签上，移动端大多数在<body>标签上，在我们想要实现平滑“回到顶部”，只需在这两个标签上都加上：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">html</span>, <span class=\"selector-tag\">body</span> &#123;</span><br><span class=\"line\">  scroll-behavior: smooth;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>当然，这个实现方法现在支持度比较不友好</p>\n</blockquote>\n<h3 id=\"Element-scrollIntoView-新的方法\"><a href=\"#Element-scrollIntoView-新的方法\" class=\"headerlink\" title=\"Element.scrollIntoView() 新的方法\"></a>Element.scrollIntoView() 新的方法</h3><p>Element.scrollIntoView() 方法让当前的元素滚动到浏览器窗口的可视区域内。</p>\n<p><strong>语法</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">element.<span class=\"title function_\">scrollIntoView</span>(); <span class=\"comment\">// 等同于element.scrollIntoView(true) </span></span><br><span class=\"line\">element.<span class=\"title function_\">scrollIntoView</span>(alignToTop); <span class=\"comment\">// Boolean型参数 </span></span><br><span class=\"line\">element.<span class=\"title function_\">scrollIntoView</span>(scrollIntoViewOptions); <span class=\"comment\">// Object型参数</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>参数</strong> </p>\n<p><code>alignToTop</code>可选</p>\n<p>一个<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Boolean\"><code>Boolean</code></a>值：</p>\n<ul>\n<li>如果为<code>true</code>，元素的顶端将和其所在滚动区的可视区域的顶端对齐。相应的 <code>scrollIntoViewOptions: &#123;block: &quot;start&quot;, inline: &quot;nearest&quot;&#125;</code>。这是这个参数的默认值。</li>\n<li>如果为<code>false</code>，元素的底端将和其所在滚动区的可视区域的底端对齐。相应的<code>scrollIntoViewOptions: &#123;block: &quot;end&quot;, inline: &quot;nearest&quot;&#125;</code>。</li>\n</ul>\n<p><code>scrollIntoViewOptions</code> 可选 </p>\n<p>一个包含下列属性的对象：</p>\n<ul>\n<li><p><code>behavior</code> 可选</p>\n<p>定义动画过渡效果， <code>&quot;auto&quot;</code>或 <code>&quot;smooth&quot;</code> 之一。默认为 <code>&quot;auto&quot;</code>。</p>\n</li>\n<li><p><code>block</code> 可选</p>\n<p>定义垂直方向的对齐， <code>&quot;start&quot;</code>, <code>&quot;center&quot;</code>, <code>&quot;end&quot;</code>, 或 <code>&quot;nearest&quot;</code>之一。默认为 <code>&quot;start&quot;</code>。</p>\n</li>\n<li><p><code>inline</code> 可选</p>\n<p>定义水平方向的对齐， <code>&quot;start&quot;</code>, <code>&quot;center&quot;</code>, <code>&quot;end&quot;</code>, 或 <code>&quot;nearest&quot;</code>之一。默认为 <code>&quot;nearest&quot;</code>。</p>\n</li>\n</ul>\n<p><strong>例子</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> element = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&quot;box&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">element.<span class=\"title function_\">scrollIntoView</span>();</span><br><span class=\"line\">element.<span class=\"title function_\">scrollIntoView</span>(<span class=\"literal\">false</span>);</span><br><span class=\"line\">element.<span class=\"title function_\">scrollIntoView</span>(&#123;<span class=\"attr\">block</span>: <span class=\"string\">&quot;end&quot;</span>&#125;);</span><br><span class=\"line\">element.<span class=\"title function_\">scrollIntoView</span>(&#123;<span class=\"attr\">behavior</span>: <span class=\"string\">&quot;instant&quot;</span>, <span class=\"attr\">block</span>: <span class=\"string\">&quot;end&quot;</span>, <span class=\"attr\">inline</span>: <span class=\"string\">&quot;nearest&quot;</span>&#125;);</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>当然，兼容性也是有问题的。</p>\n</blockquote>\n<h3 id=\"向下兼容\"><a href=\"#向下兼容\" class=\"headerlink\" title=\"向下兼容\"></a>向下兼容</h3><p>要达到所有浏览器都有相同（类似）效果，那就要把剩余不支持scroll-behavior属性的浏览器揪出来，用js去完成使命了。</p>\n<p><strong>注意点</strong></p>\n<ol>\n<li><p>判断是否支持scroll-behavior属性</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"keyword\">typeof</span> <span class=\"variable language_\">window</span>.<span class=\"title function_\">getComputedStyle</span>(<span class=\"variable language_\">document</span>.<span class=\"property\">body</span>).<span class=\"property\">scrollBehavior</span> === <span class=\"string\">&#x27;undefined&#x27;</span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 兼容js代码</span></span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 原生滚动api</span></span><br><span class=\"line\">  <span class=\"comment\">// Element.scrollIntoView()</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li><p>缓冲功能的实现</p>\n<p>原理：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> position = position + (destination - position) / n;</span><br></pre></td></tr></table></figure></li>\n<li><p>贴上代码</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script type=<span class=\"string\">&quot;javascript&quot;</span>&gt;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> scrollTopSmooth = <span class=\"keyword\">function</span> (<span class=\"params\">position</span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 不存在原生`requestAnimationFrame`，用`setTimeout`模拟替代</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (!<span class=\"variable language_\">window</span>.<span class=\"property\">requestAnimationFrame</span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">window</span>.<span class=\"property\">requestAnimationFrame</span> = <span class=\"keyword\">function</span> (<span class=\"params\">cb</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"built_in\">setTimeout</span>(cb, <span class=\"number\">17</span>);</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">// 当前滚动高度</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> scrollTop = <span class=\"variable language_\">document</span>.<span class=\"property\">documentElement</span>.<span class=\"property\">scrollTop</span> || <span class=\"variable language_\">document</span>.<span class=\"property\">body</span>.<span class=\"property\">scrollTop</span>;</span><br><span class=\"line\">  <span class=\"comment\">// step</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> step = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> distance = position - scrollTop;</span><br><span class=\"line\">    scrollTop = scrollTop + distance / <span class=\"number\">5</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"title class_\">Math</span>.<span class=\"title function_\">abs</span>(distance) &lt; <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">      <span class=\"variable language_\">window</span>.<span class=\"title function_\">scrollTo</span>(<span class=\"number\">0</span>, position);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"variable language_\">window</span>.<span class=\"title function_\">scrollTo</span>(<span class=\"number\">0</span>, scrollTop);</span><br><span class=\"line\">      <span class=\"title function_\">requestAnimationFrame</span>(step);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">  <span class=\"title function_\">step</span>();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">$backToTop = <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&#x27;.back-to-top&#x27;</span>)</span><br><span class=\"line\">$backToTop.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;click&#x27;</span>, <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"title function_\">scrollTopSmooth</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">&#125;, <span class=\"literal\">false</span>);   </span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"简单封装\"><a href=\"#简单封装\" class=\"headerlink\" title=\"简单封装\"></a>简单封装</h3><p>上面缓冲算法和当前滚动业务代码耦合在一起了，下面单独拆解出单独一个函数。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">* 缓冲函数</span></span><br><span class=\"line\"><span class=\"comment\">* <span class=\"doctag\">@param</span> &#123;<span class=\"type\">Number</span>&#125; position 当前滚动位置</span></span><br><span class=\"line\"><span class=\"comment\">* <span class=\"doctag\">@param</span> &#123;<span class=\"type\">Number</span>&#125; destination 目标位置</span></span><br><span class=\"line\"><span class=\"comment\">* <span class=\"doctag\">@param</span> &#123;<span class=\"type\">Number</span>&#125; rate 缓动率</span></span><br><span class=\"line\"><span class=\"comment\">* <span class=\"doctag\">@param</span> &#123;<span class=\"type\">Function</span>&#125; callback 缓动结束回调函数 两个参数分别是当前位置和是否结束</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> easeout = <span class=\"keyword\">function</span> (<span class=\"params\">position, destination, rate, callback</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (position === destination || <span class=\"keyword\">typeof</span> destination !== <span class=\"string\">&#x27;number&#x27;</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  destination = destination || <span class=\"number\">0</span>;</span><br><span class=\"line\">  rate = rate || <span class=\"number\">2</span>;</span><br><span class=\"line\">  <span class=\"comment\">// 不存在原生`requestAnimationFrame`，用`setTimeout`模拟替代</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (!<span class=\"variable language_\">window</span>.<span class=\"property\">requestAnimationFrame</span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">window</span>.<span class=\"property\">requestAnimationFrame</span> = <span class=\"keyword\">function</span> (<span class=\"params\">fn</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"built_in\">setTimeout</span>(fn, <span class=\"number\">17</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> step = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    position = position + (destination - position) / rate;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"title class_\">Math</span>.<span class=\"title function_\">abs</span>(destination - position) &lt; <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">      <span class=\"title function_\">callback</span>(destination, <span class=\"literal\">true</span>);</span><br><span class=\"line\">      <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"title function_\">callback</span>(position, <span class=\"literal\">false</span>);</span><br><span class=\"line\">    <span class=\"title function_\">requestAnimationFrame</span>(step);</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">  <span class=\"title function_\">step</span>();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>拆分后，这个小缓冲算法就可以被重复调用啦，而且，适用于滚动到指定位置（不仅仅是到顶部）和缓冲率（控制滚动快慢），当前小demo调用：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> scrollTopSmooth = <span class=\"keyword\">function</span> (<span class=\"params\">position</span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 当前滚动高度</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> scrollTop = <span class=\"variable language_\">document</span>.<span class=\"property\">documentElement</span>.<span class=\"property\">scrollTop</span> || <span class=\"variable language_\">document</span>.<span class=\"property\">body</span>.<span class=\"property\">scrollTop</span>;</span><br><span class=\"line\">  <span class=\"title function_\">easeout</span>(scrollTop, position, <span class=\"number\">5</span>, <span class=\"keyword\">function</span> (<span class=\"params\">val</span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">window</span>.<span class=\"title function_\">scrollTo</span>(<span class=\"number\">0</span>, val);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">$backToTop = <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&#x27;.back-to-top&#x27;</span>)</span><br><span class=\"line\">$backToTop.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;click&#x27;</span>, <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"title function_\">scrollTopSmooth</span>(<span class=\"number\">200</span>);</span><br><span class=\"line\">&#125;, <span class=\"literal\">false</span>);</span><br></pre></td></tr></table></figure></li>\n</ol>\n<p><strong>需要放入公共方法中去：</strong></p>\n<p>在main.js中，可以将公共方法添加到vue的原型上去，从而在所有的页面都可以实现调用：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import common from &#x27;@/comF/common.js&#x27;</span><br><span class=\"line\">Vue.prototype.common = common</span><br><span class=\"line\"></span><br><span class=\"line\">import axios from &#x27;axios&#x27;</span><br><span class=\"line\">Vue.prototype.axios = axios</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"函数防抖和节流-闭包\"><a href=\"#函数防抖和节流-闭包\" class=\"headerlink\" title=\"函数防抖和节流/闭包\"></a>函数防抖和节流/闭包</h2><h3 id=\"函数节流和防抖\"><a href=\"#函数节流和防抖\" class=\"headerlink\" title=\"函数节流和防抖\"></a>函数节流和防抖</h3><p>函数节流：<strong>所谓节流，就是指连续触发事件但是在 n 秒中只执行一次函数</strong></p>\n<p>函数防抖：<strong>所谓防抖，就是指触发事件后在 n 秒内函数只能执行一次，如果在 n 秒内又触发了事件，则会重新计算函数执行时间</strong></p>\n<!-- more -->\n\n<h3 id=\"防抖例子\"><a href=\"#防抖例子\" class=\"headerlink\" title=\"防抖例子\"></a>防抖例子</h3><p>防抖函数分为非立即执行版和立即执行版。</p>\n<p><strong>主要实现方式就是通过执行settimeout这个函数，每次触发延迟对应时间后再执行内部函数</strong></p>\n<ul>\n<li>非立即执行防抖函数</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">debounce</span>(<span class=\"params\">func, wait</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> timeout;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> context = <span class=\"variable language_\">this</span>;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> args = <span class=\"variable language_\">arguments</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (timeout) <span class=\"built_in\">clearTimeout</span>(timeout);</span><br><span class=\"line\">        </span><br><span class=\"line\">        timeout = <span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">            func.<span class=\"title function_\">apply</span>(context, args)</span><br><span class=\"line\">        &#125;, wait);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">content.<span class=\"property\">onmousemove</span> = <span class=\"title function_\">debounce</span>(count,<span class=\"number\">1000</span>); <span class=\"comment\">//调用函数</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>立即执行防抖函数</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">debounce</span>(<span class=\"params\">func,wait</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> timeout;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> context = <span class=\"variable language_\">this</span>;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> args = <span class=\"variable language_\">arguments</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (timeout) <span class=\"built_in\">clearTimeout</span>(timeout);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">let</span> callNow = !timeout;</span><br><span class=\"line\">        timeout = <span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">            timeout = <span class=\"literal\">null</span>;</span><br><span class=\"line\">        &#125;, wait)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (callNow) func.<span class=\"title function_\">apply</span>(context, args)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">content.<span class=\"property\">onmousemove</span> = <span class=\"title function_\">debounce</span>(count,<span class=\"number\">1000</span>); <span class=\"comment\">//调用函数</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>双剑合璧版：</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">debounce</span>(<span class=\"params\">func,wait,immediate</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> timeout;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> context = <span class=\"variable language_\">this</span>;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> args = <span class=\"variable language_\">arguments</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (timeout) <span class=\"built_in\">clearTimeout</span>(timeout);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (immediate) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> callNow = !timeout;</span><br><span class=\"line\">            timeout = <span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">                timeout = <span class=\"literal\">null</span>;</span><br><span class=\"line\">            &#125;, wait)</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (callNow) func.<span class=\"title function_\">apply</span>(context, args)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            timeout = <span class=\"built_in\">setTimeout</span>(<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">                func.<span class=\"title function_\">apply</span>(context, args)</span><br><span class=\"line\">            &#125;, wait);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"节流例子\"><a href=\"#节流例子\" class=\"headerlink\" title=\"节流例子\"></a>节流例子</h3><p>对于节流，一般有两种方式可以实现，分别是时间戳版和定时器版</p>\n<p><strong>主要实现是通过定位时间差来判断是否执行函数</strong></p>\n<ul>\n<li><p>时间戳</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">throttle</span>(<span class=\"params\">func, wait</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> previous = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> now = <span class=\"title class_\">Date</span>.<span class=\"title function_\">now</span>();</span><br><span class=\"line\">        <span class=\"keyword\">let</span> context = <span class=\"variable language_\">this</span>;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> args = <span class=\"variable language_\">arguments</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (now - previous &gt; wait) &#123;</span><br><span class=\"line\">            func.<span class=\"title function_\">apply</span>(context, args);</span><br><span class=\"line\">            previous = now;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">content.<span class=\"property\">onmousemove</span> = <span class=\"title function_\">throttle</span>(count,<span class=\"number\">1000</span>);</span><br></pre></td></tr></table></figure></li>\n<li><p>定时器</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">throttle</span>(<span class=\"params\">func, wait</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> timeout;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> context = <span class=\"variable language_\">this</span>;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> args = <span class=\"variable language_\">arguments</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!timeout) &#123;</span><br><span class=\"line\">            timeout = <span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">                timeout = <span class=\"literal\">null</span>;</span><br><span class=\"line\">                func.<span class=\"title function_\">apply</span>(context, args)</span><br><span class=\"line\">            &#125;, wait)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">content.<span class=\"property\">onmousemove</span> = <span class=\"title function_\">throttle</span>(count,<span class=\"number\">1000</span>);</span><br></pre></td></tr></table></figure></li>\n<li><p>合并版本</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">throttle</span>(<span class=\"params\">func, wait ,type</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(type===<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> previous = <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(type===<span class=\"number\">2</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> timeout;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> context = <span class=\"variable language_\">this</span>;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> args = <span class=\"variable language_\">arguments</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(type===<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">let</span> now = <span class=\"title class_\">Date</span>.<span class=\"title function_\">now</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (now - previous &gt; wait) &#123;</span><br><span class=\"line\">                func.<span class=\"title function_\">apply</span>(context, args);</span><br><span class=\"line\">                previous = now;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(type===<span class=\"number\">2</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!timeout) &#123;</span><br><span class=\"line\">                timeout = <span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">                    timeout = <span class=\"literal\">null</span>;</span><br><span class=\"line\">                    func.<span class=\"title function_\">apply</span>(context, args)</span><br><span class=\"line\">                &#125;, wait)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"区别\"><a href=\"#区别\" class=\"headerlink\" title=\"区别\"></a>区别</h3><p>可以看到 ：<strong>非立即执行防抖函数</strong> 和 <strong>定时器版节流函数</strong> 比较相似。</p>\n<blockquote>\n<p>主要区别是其中的判断条件：</p>\n<ol>\n<li>节流函数是<strong>判断执行settime函数没有执行，则让settime函数执行，达到一定时间内只执行一次的目的</strong>。</li>\n<li>防抖函数是<strong>判断settime函数执行，则让settime函数再执行一次，达到每次触发都延迟</strong></li>\n</ol>\n</blockquote>\n<h3 id=\"原理-1\"><a href=\"#原理-1\" class=\"headerlink\" title=\"原理\"></a>原理</h3><p>防抖是维护一个计时器，规定在delay时间后触发函数，但是在delay时间内再次触发的话，都会清除当前的 timer 然后重新设置超时调用，即重新计时。这样一来，只有最后一次操作能被触发。</p>\n<p>节流是通过判断是否到达一定时间来触发函数，若没到规定时间则使用计时器延后，而下一次事件则会重新设定计时器。</p>\n<h2 id=\"防抖函数中的闭包\"><a href=\"#防抖函数中的闭包\" class=\"headerlink\" title=\"防抖函数中的闭包\"></a>防抖函数中的闭包</h2><p>复制一份防止丢失</p>\n<h3 id=\"debounce函数\"><a href=\"#debounce函数\" class=\"headerlink\" title=\"debounce函数\"></a>debounce函数</h3><p>debounce函数，俗称防抖函数，专治input、resize、scroll等频繁操作打爆浏览器或其他资源。前端面试几乎必考，当然肯定会做一些变化。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> handler = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">this</span>, <span class=\"title class_\">Date</span>.<span class=\"title function_\">now</span>());</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;input&#x27;</span>).<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;input&#x27;</span>, handler);</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"现状\"><a href=\"#现状\" class=\"headerlink\" title=\"现状\"></a>现状</h3><p>用户每次输入操作都会触发handler调用，性能浪费。</p>\n<h3 id=\"目标\"><a href=\"#目标\" class=\"headerlink\" title=\"目标\"></a>目标</h3><p>用户一直输入并不触发handler，直到用户停止输入500ms以上，才触发一次handler。</p>\n<p>前提是，不修改原有的业务代码，且尽量通用。</p>\n<h3 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h3><p>setTimeout实现计时<br>高阶函数，即function作为参数并且返回function<br>代码实现过程</p>\n<h3 id=\"第一版\"><a href=\"#第一版\" class=\"headerlink\" title=\"第一版\"></a>第一版</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">debounce</span>(<span class=\"params\">fn, delay</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">setTimeout</span>(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">      <span class=\"title function_\">fn</span>();</span><br><span class=\"line\">    &#125;, delay);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>给handler包上试试</p>\n<p>document.getElementById(‘input’).addEventListener(‘input’, debounce(handler, 500));<br>明显不可以！！这样写只不过将每次触发都延时了500ms，并没有减少触发次数。不过我们至少实现了高阶函数，不会破坏原有的业务代码了。那么接下来就试着减少触发次数。</p>\n<p>思路就是每次触发先clearTimeout把之前的计时器清掉，再重新setTimout。那么问题来了，第2次进来时，怎么获取到第1次的计时器，并清除呢？</p>\n<h3 id=\"第二版\"><a href=\"#第二版\" class=\"headerlink\" title=\"第二版\"></a>第二版</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">debounce</span>(<span class=\"params\">fn, delay</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> timer;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123; <span class=\"comment\">// 闭包</span></span><br><span class=\"line\">    <span class=\"built_in\">clearTimeout</span>(timer);</span><br><span class=\"line\">    timer = <span class=\"built_in\">setTimeout</span>(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">      <span class=\"title function_\">fn</span>();</span><br><span class=\"line\">    &#125;, delay);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>试来试去，发现把timer放到“外面”最好（为什么不放到更外面？），每次调用进来，大家用的都是一个timer，完美。同时，我们的第一个主角登场了——闭包。</p>\n<p><strong>闭包</strong><br>闭包就是能够读取其他函数内部变量的函数。例如在javascript中，只有函数内部的子函数才能读取局部变量，所以闭包可以理解成“定义在一个函数内部的函数“。在本质上，闭包是将函数内部和函数外部连接起来的桥梁。——百度百科</p>\n<p>网上可以找个很多关于闭包的概念与解释，估计越看越蒙。认识事物需要一个从具象到抽象的过程，以目前的情况来看，我们只要知道，“定义在一个函数（外函数）内部的函数（内函数），并且内函数访问了外函数的变量，这个内函数就叫做闭包”。</p>\n<p>最关键的问题，闭包有什么用？从debounce这个例子，我们可以看到，闭包可以让每次触发的handler共享一个变量，通常用到高阶函数的地方，就会用到闭包。再举几个闭包的应用场景，比如给ajax请求加缓存、加锁，为一系列回调设置初始值，防止污染全局或局部变量等。可能这么说大家还是若有若无的，没关系，实践出真知，现实当中肯定会碰到能够应用闭包的地方的。我们继续debounce。</p>\n<p>终于解决了触发频率的问题了。但是！细心的同学肯定发现了。我们handler里的console打印出来的this，是不一样的！！！之前的this是input结点，现在的this是window对象。这绝对是不行的，比如我想要在handler里打印input的value，现在怎么做呢？</p>\n<h3 id=\"第三版\"><a href=\"#第三版\" class=\"headerlink\" title=\"第三版\"></a>第三版</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">debounce</span>(<span class=\"params\">fn, delay</span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 1</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> timer;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123; <span class=\"comment\">// 闭包</span></span><br><span class=\"line\">    <span class=\"comment\">// 2</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> ctx = <span class=\"variable language_\">this</span>; <span class=\"comment\">// this上下文</span></span><br><span class=\"line\">    <span class=\"built_in\">clearTimeout</span>(timer);</span><br><span class=\"line\">    timer = <span class=\"built_in\">setTimeout</span>(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 3</span></span><br><span class=\"line\">      fn.<span class=\"title function_\">apply</span>(ctx); <span class=\"comment\">// this上下文调用</span></span><br><span class=\"line\">    &#125;, delay);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>解决思路也简单，就是先把正确的this保存起来，我们在这里把this称为“上下文”，大家可以细细品味一下这个词。然后用apply（或call）重新制定一下fn的上下文即可。</p>\n<p><strong>上下文this</strong><br>js的this是很善变的，谁调用它，它就指向谁，所以“上下文”这个词还是很贴切的。那么，为什么在2处能够得到正确的this呢？涉及到上下文切换的地方，一共有3处，已在上面代码中标了出来。我总结了一个三步定位this法：</p>\n<p>第一步，是否立即执行？如果是，跳过第二步！</p>\n<p>第二步，如果不是立即执行，它一定会被转交给某个对象保管，看它被挂在了哪，或者说转交给了谁！</p>\n<p>第三步，这个执行函数挂在谁身上，谁就是this！</p>\n<p>我们来实践一下。</p>\n<p>第1处：</p>\n<p>我们需要先简单处理一下，debounce其实是挂在window全局上的，写全应该是window.debounce(handler, 500)。第一步，是立即执行的！跳过第二步！第三步，debounce挂在window上！所以this指向是window。</p>\n<p>第2处：</p>\n<p>先简单处理下，debounce(handler, 500)的执行结果是返回一个函数，所以下面两段代码基本上可以视为等价的</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;input&#x27;</span>).<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;input&#x27;</span>, <span class=\"title function_\">debounce</span>(handler, <span class=\"number\">500</span>));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;input&#x27;</span>).<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;input&#x27;</span>, <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123; <span class=\"comment\">// 闭包</span></span><br><span class=\"line\">  <span class=\"comment\">// 2</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> ctx = <span class=\"variable language_\">this</span>; <span class=\"comment\">// this上下文</span></span><br><span class=\"line\">  <span class=\"built_in\">clearTimeout</span>(timer);</span><br><span class=\"line\">  timer = <span class=\"built_in\">setTimeout</span>(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 3</span></span><br><span class=\"line\">    fn.<span class=\"title function_\">apply</span>(ctx); <span class=\"comment\">// this上下文调用</span></span><br><span class=\"line\">  &#125;, delay);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n\n\n<p>这么一看，就具体多了。第一步，不是立即执行；第二步，addEventListener是挂在dom上的方法，所以addEventListener只能把回调挂在dom上，可以理解成input.handler = function(){}，等行为被触发时才执行。所以它被转交给了input；第三步，handler挂在input上，所以this指向了input！</p>\n<p>第3处：</p>\n<p>setTimeout是挂在window上的，所以在执行的时候，实际上是window.setTimeout()。我们用伪代码模拟下setTimeout的实现</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">window</span>.<span class=\"property\">setTimeout</span> = <span class=\"keyword\">function</span>(<span class=\"params\">fn, delay</span>)&#123;</span><br><span class=\"line\">  <span class=\"comment\">// 因为不能立即执行，所以要找个地方挂fn，就只能把fn转交给它的主子window</span></span><br><span class=\"line\">  <span class=\"comment\">// 假设window存fn的属性叫setTimeoutHandler，与input.handler类似</span></span><br><span class=\"line\">  <span class=\"variable language_\">window</span>.<span class=\"property\">setTimeoutHandler</span> = fn;</span><br><span class=\"line\">  <span class=\"comment\">// 等待delay毫秒……</span></span><br><span class=\"line\">  <span class=\"variable language_\">window</span>.setTimeoutHandler(); <span class=\"comment\">// 执行</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>仔细理解一下，可以发现这里跟dom的回调非常像。第一步，不是立即执行；第二步，setTimeout是挂在window上的方法，所以只能转交给window的某个方法保管（假设叫setTimeoutHandler，名字不重要）；第三步，setTimeoutHandler挂在window上，所以this指向window。</p>\n<p>稳妥起见，我们再加一个例子</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123;</span><br><span class=\"line\">  <span class=\"attr\">test</span>: <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">this</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">obj.<span class=\"title function_\">test</span>(); <span class=\"comment\">// obj</span></span><br><span class=\"line\"><span class=\"built_in\">setTimeout</span>(obj.<span class=\"property\">test</span>,<span class=\"number\">1000</span>); <span class=\"comment\">// window</span></span><br></pre></td></tr></table></figure>\n\n<p>第一个很简单，立即执行，不用转交。直接可以定位this指向了obj！</p>\n<p>第二个非立即执行，虽然传进去的是obj.test，实际上需要转交给window.setTimeoutHandler保管，即window.setTimeoutHandler = obj.test。所以this指向的是window！</p>\n<p>总之，碰到非立即执行的函数，需要仔细分析一下。</p>\n<p><strong>debounce最终版</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">debounce</span>(<span class=\"params\">fn, delay</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> timer;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123; <span class=\"comment\">// 闭包</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> ctx = <span class=\"variable language_\">this</span>; <span class=\"comment\">// this上下文</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> args = <span class=\"variable language_\">arguments</span>;</span><br><span class=\"line\">    <span class=\"built_in\">clearTimeout</span>(timer);</span><br><span class=\"line\">    timer = <span class=\"built_in\">setTimeout</span>(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">      fn.<span class=\"title function_\">apply</span>(ctx, args); <span class=\"comment\">// this上下文调用</span></span><br><span class=\"line\">    &#125;, delay);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>最后，我们再把传参也解决一下（arguments是默认的存储所有传参的类数组对象，时间关系这里就不展开了），完成。</p>\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><p>debounce是一个很实用也很经典的功能函数，每一行代码都有丰富的内涵。与其类似的还有throttle，可以查查巩固一下。本文主要是想借debounce这个实用的函数引出js当中的两个比较难理解，的点this和闭包。说实话，这两个点想讲明白很难，更靠谱的办法是用大量的实践来消化。本文算是给各位同学种下一颗种子，以后碰到类似的情况时，能够很快的想起本文的内容，帮助自己更好的理解与感悟。</p>\n<meta name=\"referrer\" content=\"no-referrer\"/>\n\n<h2 id=\"冒泡，捕获与其阻止\"><a href=\"#冒泡，捕获与其阻止\" class=\"headerlink\" title=\"冒泡，捕获与其阻止\"></a>冒泡，捕获与其阻止</h2><h3 id=\"js-addEventListener事件捕获与冒泡-第三个参数详解-阻止事件传播\"><a href=\"#js-addEventListener事件捕获与冒泡-第三个参数详解-阻止事件传播\" class=\"headerlink\" title=\"js addEventListener事件捕获与冒泡,第三个参数详解,阻止事件传播\"></a>js addEventListener事件捕获与冒泡,第三个参数详解,阻止事件传播</h3><p><strong>关键点</strong></p>\n<blockquote>\n<p>element.addEventListener(event, function[, useCapture])</p>\n</blockquote>\n<ol>\n<li><p>event:事件名称,如click</p>\n</li>\n<li><p>function:指定要事件触发时执行的函数,可以传入事件参数</p>\n</li>\n<li><p>useCapture:可选。布尔值，指定事件是否在捕获或冒泡阶段执行。</p>\n<ul>\n<li><p>默认false:在冒泡阶段执行指定事件</p>\n</li>\n<li><p>true:在捕获阶段执行事件</p>\n</li>\n</ul>\n</li>\n<li><p>event.stopPropagation():阻止事件传播,用于function(event){}中</p>\n<!-- more --></li>\n</ol>\n<h3 id=\"捕获与冒泡\"><a href=\"#捕获与冒泡\" class=\"headerlink\" title=\"捕获与冒泡\"></a>捕获与冒泡</h3><p>图示：</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20190122115236901.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2x5dF9hbmd1bGFyanM=,size_16,color_FFFFFF,t_70\"></p>\n<p>冒泡js代码：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">print</span>(<span class=\"params\">e</span>)&#123;</span><br><span class=\"line\">     <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">id</span>);</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   aa.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;click&#x27;</span>,print);<span class=\"comment\">//第三个参数默认为false</span></span><br><span class=\"line\">   bb.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;click&#x27;</span>,print);</span><br><span class=\"line\">   cc.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;click&#x27;</span>,print);</span><br></pre></td></tr></table></figure>\n\n<p>输出结果：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cc</span><br><span class=\"line\">bb</span><br><span class=\"line\">aa</span><br></pre></td></tr></table></figure>\n\n<p>这个结果明显是从内到外去执行的，是冒泡阶段执行，因为默认的是false。</p>\n<p>捕获js代码：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">print</span>(<span class=\"params\">e</span>)&#123;</span><br><span class=\"line\">   <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">id</span>);</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"> aa.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;click&#x27;</span>,print,<span class=\"literal\">true</span>);<span class=\"comment\">//第三个参数默认为false</span></span><br><span class=\"line\"> bb.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;click&#x27;</span>,print,<span class=\"literal\">true</span>);</span><br><span class=\"line\"> cc.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;click&#x27;</span>,print,<span class=\"literal\">true</span>);</span><br></pre></td></tr></table></figure>\n\n<p>输出结果：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">aa</span><br><span class=\"line\">bb</span><br><span class=\"line\">cc</span><br></pre></td></tr></table></figure>\n\n<p>当改为true时，则要执行捕获阶段，从外到内去执行。</p>\n<h3 id=\"阻止传播行为\"><a href=\"#阻止传播行为\" class=\"headerlink\" title=\"阻止传播行为\"></a>阻止传播行为</h3><p>当有时候不需要点击激活所有的行为时，可以采用对应的方法阻止</p>\n<p>js代码如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">print</span>(<span class=\"params\">e</span>)&#123;</span><br><span class=\"line\">\te.<span class=\"title function_\">stopPropagation</span>();<span class=\"comment\">//执行完此函数后,该事件不再继续传播</span></span><br><span class=\"line\">   <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">id</span>);</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"> aa.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;click&#x27;</span>,print,<span class=\"literal\">true</span>);<span class=\"comment\">//第三个参数默认为false</span></span><br><span class=\"line\"> bb.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;click&#x27;</span>,print,<span class=\"literal\">true</span>);</span><br><span class=\"line\"> cc.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;click&#x27;</span>,print,<span class=\"literal\">true</span>);</span><br></pre></td></tr></table></figure>\n\n<p>输出结果：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">aa</span><br></pre></td></tr></table></figure>\n\n<p>再点击cc时,捕获cc,执行cc的click函数, 因为print函数中有<code>e.stopPropagation()</code>,所以执行完该函数后,click事件不再传播.</p>\n<h3 id=\"取消默认事件\"><a href=\"#取消默认事件\" class=\"headerlink\" title=\"取消默认事件\"></a>取消默认事件</h3><p>除了冒泡行为，有的时候还会遇到默认事件</p>\n<p>什么元素有默认行为呢？如链接<a>，提交按钮<input type=\"submit\">等。</p>\n<p><strong>阻止默认事件</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//假定有链接&lt;a href=&quot;http://caibaojian.com/&quot; id=&quot;testA&quot; &gt;caibaojian.com&lt;/a&gt;</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&quot;testA&quot;</span>);</span><br><span class=\"line\">a.<span class=\"property\">onclick</span> =<span class=\"keyword\">function</span>(<span class=\"params\">e</span>)&#123;</span><br><span class=\"line\"><span class=\"keyword\">if</span>(e.<span class=\"property\">preventDefault</span>)&#123;</span><br><span class=\"line\">e.<span class=\"title function_\">preventDefault</span>();</span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\"><span class=\"variable language_\">window</span>.<span class=\"property\">event</span>.<span class=\"property\">returnValue</span> == <span class=\"literal\">false</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"总结-1\"><a href=\"#总结-1\" class=\"headerlink\" title=\"总结\"></a>总结</h3><p>当需要停止冒泡行为时，可以使用：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">stopBubble</span>(<span class=\"params\">e</span>) &#123; </span><br><span class=\"line\"><span class=\"comment\">//如果提供了事件对象，则这是一个非IE浏览器 </span></span><br><span class=\"line\"><span class=\"keyword\">if</span> ( e &amp;&amp; e.<span class=\"property\">stopPropagation</span> ) </span><br><span class=\"line\">    <span class=\"comment\">//因此它支持W3C的stopPropagation()方法 </span></span><br><span class=\"line\">    e.<span class=\"title function_\">stopPropagation</span>(); </span><br><span class=\"line\"><span class=\"keyword\">else</span> </span><br><span class=\"line\">    <span class=\"comment\">//否则，我们需要使用IE的方式来取消事件冒泡 </span></span><br><span class=\"line\">    <span class=\"variable language_\">window</span>.<span class=\"property\">event</span>.<span class=\"property\">cancelBubble</span> = <span class=\"literal\">true</span>; </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>当需要阻止默认行为时，可以使用:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//阻止浏览器的默认行为 </span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">stopDefault</span>(<span class=\"params\"> e </span>) &#123; </span><br><span class=\"line\">    <span class=\"comment\">//阻止默认浏览器动作(W3C) </span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( e &amp;&amp; e.<span class=\"property\">preventDefault</span> ) </span><br><span class=\"line\">        e.<span class=\"title function_\">preventDefault</span>(); </span><br><span class=\"line\">    <span class=\"comment\">//IE中阻止函数器默认动作的方式 </span></span><br><span class=\"line\">    <span class=\"keyword\">else</span> </span><br><span class=\"line\">        <span class=\"variable language_\">window</span>.<span class=\"property\">event</span>.<span class=\"property\">returnValue</span> = <span class=\"literal\">false</span>; </span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">false</span>; </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<meta name=\"referrer\" content=\"no-referrer\"/>\n\n<h2 id=\"浮动\"><a href=\"#浮动\" class=\"headerlink\" title=\"浮动\"></a>浮动</h2><p>float 属性定义元素在哪个方向浮动。以往这个属性总应用于图像，使文本围绕在图像周围，不过在 CSS 中，任何元素都可以浮动。<br>浮动元素会生成一个块级框，而不论它本身是何种元素。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">img</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">  float:right;</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n\n<p>如果浮动非替换元素，则要指定一个明确的宽度；否则，它们会尽可能地窄。<br><em><strong>注释</strong></em>：假如在一行之上只有极少的空间可供浮动元素，那么这个元素会跳至下一行，这个过程会持续到某一行拥有足够的空间为止。</p>\n<h2 id=\"清除浮动\"><a href=\"#清除浮动\" class=\"headerlink\" title=\"清除浮动\"></a>清除浮动</h2><h3 id=\"浮动会带来什么影响？\"><a href=\"#浮动会带来什么影响？\" class=\"headerlink\" title=\"浮动会带来什么影响？\"></a>浮动会带来什么影响？</h3><p>浮动主要会影响页面的布局，给元素加上浮动后，元素会脱离文档流，从而导致以下的几个现象：</p>\n<ul>\n<li>外层父级元素边框不能撑开;</li>\n<li>外层父级元素背景不能显示;</li>\n<li>margin值不能正确显示;<!-- more -->\n图片如下:<br><img src=\"https://limengtupian.oss-cn-beijing.aliyuncs.com/float.jpg\" alt=\"float\"><br>代码如下：<br>HTML</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;outer&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;div1&quot;</span>&gt;</span>1<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;div2&quot;</span>&gt;</span>2<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;div3&quot;</span>&gt;</span>3<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>CSS</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.outer</span>&#123;<span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid <span class=\"number\">#ccc</span>;<span class=\"attribute\">background</span>: <span class=\"number\">#fc9</span>;<span class=\"attribute\">color</span>: <span class=\"number\">#fff</span>; <span class=\"attribute\">margin</span>: <span class=\"number\">50px</span> auto;<span class=\"attribute\">padding</span>: <span class=\"number\">50px</span>;&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.div1</span>&#123;<span class=\"attribute\">width</span>: <span class=\"number\">80px</span>;<span class=\"attribute\">height</span>: <span class=\"number\">80px</span>;<span class=\"attribute\">background</span>: red;<span class=\"attribute\">float</span>: left;&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.div2</span>&#123;<span class=\"attribute\">width</span>: <span class=\"number\">80px</span>;<span class=\"attribute\">height</span>: <span class=\"number\">80px</span>;<span class=\"attribute\">background</span>: blue;<span class=\"attribute\">float</span>: left;&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.div3</span>&#123;<span class=\"attribute\">width</span>: <span class=\"number\">80px</span>;<span class=\"attribute\">height</span>: <span class=\"number\">80px</span>;<span class=\"attribute\">background</span>: sienna;<span class=\"attribute\">float</span>: left;&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"如何清除浮动？\"><a href=\"#如何清除浮动？\" class=\"headerlink\" title=\"如何清除浮动？\"></a>如何清除浮动？</h3><ol>\n<li>添加新的元素 、应用 clear：both<br>HTML</li>\n</ol>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;outer&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;div1&quot;</span>&gt;</span>1<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;div2&quot;</span>&gt;</span>2<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;div3&quot;</span>&gt;</span>3<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;clear&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>CSS</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.clear</span>&#123;<span class=\"attribute\">clear</span>:both; <span class=\"attribute\">height</span>: <span class=\"number\">0</span>; <span class=\"attribute\">line-height</span>: <span class=\"number\">0</span>; <span class=\"attribute\">font-size</span>: <span class=\"number\">0</span>&#125;</span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>父级div定义 overflow: auto（注意：是父级div也就是这里的  div.outer）<br>HTML</li>\n</ol>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;outer over-flow&quot;</span>&gt;</span> //这里添加了一个class</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;div1&quot;</span>&gt;</span>1<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;div2&quot;</span>&gt;</span>2<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;div3&quot;</span>&gt;</span>3<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--&lt;div class=&quot;clear&quot;&gt;&lt;/div&gt;--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>CSS</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.over-flow</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">overflow</span>: auto; zoom: <span class=\"number\">1</span>; //zoom: <span class=\"number\">1</span>; 是在处理兼容性问题</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><em><strong>注意</strong></em>:使用overflow属性来清除浮动有一点需要注意，overflow属性共有三个属性值：hidden,auto,visible。<br>我们可以使用hiddent和auto值来清除浮动，但切记不能使用visible值，如果使用这个值将无法达到清除浮动效果，其他两个值都可以，其区据说在于一个对seo比较友好，另个hidden对seo不是太友好，其他区别我就说不上了，也不浪费时间。</p>\n<ol start=\"3\">\n<li>:after 方法：（注意：作用于浮动元素的父亲）<br>HTML</li>\n</ol>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;outer&quot;</span>&gt;</span> //这里添加了一个class</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;div1&quot;</span>&gt;</span>1<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;div2&quot;</span>&gt;</span>2<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;div3&quot;</span>&gt;</span>3<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--&lt;div class=&quot;clear&quot;&gt;&lt;/div&gt;--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>CSS</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.outer</span> &#123;zoom:<span class=\"number\">1</span>;&#125;    <span class=\"comment\">/*==for IE6/7 Maxthon2==*/</span></span><br><span class=\"line\"><span class=\"selector-class\">.outer</span> <span class=\"selector-pseudo\">:after</span> &#123;<span class=\"attribute\">clear</span>:both;<span class=\"attribute\">content</span>:<span class=\"string\">&#x27;.&#x27;</span>;<span class=\"attribute\">display</span>:block;<span class=\"attribute\">width</span>: <span class=\"number\">0</span>;<span class=\"attribute\">height</span>: <span class=\"number\">0</span>;<span class=\"attribute\">visibility</span>:hidden;&#125;   <span class=\"comment\">/*==for FF/chrome/opera/IE8==*/</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ol>\n<li><p>display:block 使生成的元素以块级元素显示,占满剩余空间;</p>\n</li>\n<li><p>height:0 避免生成内容破坏原有布局的高度。</p>\n</li>\n<li><p>visibility:hidden 使生成的内容不可见，并允许可能被生成内容盖住的内容可以进行点击和交互;</p>\n</li>\n</ol>\n<p>4）通过 content:”.”生成内容作为最后一个元素，至于content里面是点还是其他都是可以的，例如oocss里面就有经典的 content:”XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX”,有些版本可能content 里面内容为空,一丝冰凉是不推荐这样做的,firefox直到7.0 content:”” 仍然会产生额外的空隙；</p>\n<p>5）zoom：1 触发IE hasLayout。</p>\n<p>通过分析发现，除了clear：both用来闭合浮动的，其他代码无非都是为了隐藏掉content生成的内容，这也就是其他版本的闭合浮动为什么会有font-size：0，line-height：0。</p>\n<hr>\n<p>OVER……</p>\n<meta name=\"referrer\" content=\"no-referrer\"/>\n\n<h2 id=\"What-is-this？\"><a href=\"#What-is-this？\" class=\"headerlink\" title=\"What is this？\"></a>What is this？</h2><p>你可能遇到过这样的 JS 面试题：</p>\n<blockquote>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var obj = &#123;</span><br><span class=\"line\">foo: function()&#123;</span><br><span class=\"line\"> console.log(this)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">var bar = obj.foo</span><br><span class=\"line\">obj.foo() // 打印出的 this 是 obj</span><br><span class=\"line\">bar() // 打印出的 this 是 window</span><br></pre></td></tr></table></figure>\n</blockquote>\n<!-- more -->\n\n<p>JS（ES5）里面有三种函数调用形式：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">func(p1, p2) </span><br><span class=\"line\">obj.child.method(p1, p2)</span><br><span class=\"line\">func.call(context, p1, p2) // 先不讲 apply</span><br></pre></td></tr></table></figure>\n\n<p>从看到这篇文章起，你一定要记住，第三种调用形式，才是正常调用形式：</p>\n<blockquote>\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">func.call(context, p1, p2)</span><br></pre></td></tr></table></figure>\n</blockquote>\n<h2 id=\"这样，this-就好解释了\"><a href=\"#这样，this-就好解释了\" class=\"headerlink\" title=\"这样，this 就好解释了\"></a>这样，this 就好解释了</h2><p>this，就是上面代码中的 context。就这么简单。</p>\n<p>this 是你 call 一个函数时传的 context，由于你从来不用 call 形式的函数调用，所以你一直不知道。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var obj = &#123;</span><br><span class=\"line\">  foo: function()&#123;</span><br><span class=\"line\">    console.log(this)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">var bar = obj.foo</span><br><span class=\"line\">obj.foo() // 转换为 obj.foo.call(obj)，this 就是 obj</span><br><span class=\"line\">bar() </span><br><span class=\"line\">// 转换为 bar.call()</span><br><span class=\"line\">// 由于没有传 context</span><br><span class=\"line\">// 所以 this 就是 undefined</span><br><span class=\"line\">// 最后浏览器给你一个默认的 this —— window 对象</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"更多的情况\"><a href=\"#更多的情况\" class=\"headerlink\" title=\"更多的情况\"></a>更多的情况</h2><ol>\n<li><p>Event Handler 中的 this“</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">btn.addEventListener(&#x27;click&#x27; ,function handler()&#123;</span><br><span class=\"line\">  console.log(this) // 请问这里的 this 是什么</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>通常来说this的值是触发事件的元素的引用，这种特性在多个相似的元素使用同一个通用事件监听器时非常让人满意。</p>\n<p>当使用 addEventListener() 为一个元素注册事件的时候，句柄里的 this 值是该元素的引用。其与传递给句柄的 event 参数的 currentTarget 属性的值一样。</p>\n</blockquote>\n<blockquote>\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 当事件被触发时</span><br><span class=\"line\">handler.call(event.currentTarget, event) </span><br><span class=\"line\">// 那么 this 是什么不言而喻</span><br></pre></td></tr></table></figure>\n</blockquote>\n<p><strong>this</strong>指向btn。</p>\n</li>\n<li><p>jQuery Event Handler 中的 this：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ul.on(<span class=\"symbol\">&amp;#39;</span>click<span class=\"symbol\">&amp;#39;</span>, <span class=\"symbol\">&amp;#39;</span>li<span class=\"symbol\">&amp;#39;</span> , function()&#123;</span><br><span class=\"line\">  console.log(this)</span><br><span class=\"line\">&#125;)we</span><br></pre></td></tr></table></figure>\n\n<p>文档：</p>\n<blockquote>\n<p>当jQuery的调用处理程序时，this关键字指向的是当前正在执行事件的元素。对于直接事件而言，this 代表绑定事件的元素。<strong>对于代理事件而言，****this 则代表了与 selector</strong> <strong>相匹配的元素。</strong>(注意，如果事件是从后代元素冒泡上来的话，那么 this 就有可能不等于 event.target。)若要使用 jQuery 的相关方法，可以根据当前元素创建一个 jQuery 对象，即使用 $(this)。</p>\n</blockquote>\n</li>\n</ol>\n<h2 id=\"强制指定this的指向\"><a href=\"#强制指定this的指向\" class=\"headerlink\" title=\"强制指定this的指向\"></a>强制指定this的指向</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function handlerWrapper(event)&#123;</span><br><span class=\"line\">  function handler()&#123;</span><br><span class=\"line\">    console.log(this) // 请问这里的 this 是什么</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  handler.call(&#123;name:&#x27;饥人谷&#x27;&#125;, event)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">btn.addEventListener(&#x27;click&#x27;, handlerWrapper)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"内部函数的this指向\"><a href=\"#内部函数的this指向\" class=\"headerlink\" title=\"内部函数的this指向\"></a>内部函数的this指向</h2><p><strong>构造函数版this：</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function Fn()&#123;</span><br><span class=\"line\">    this.user = &quot;追梦子&quot;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">var a = new Fn();</span><br><span class=\"line\">console.log(a.user); //追梦子</span><br></pre></td></tr></table></figure>\n\n<p>构造函数生成的this指向实例化的对象。</p>\n<p><strong>setTimeOut()或setInterval()中的this</strong>：</p>\n<p>在setTimeOut()或setInterval()这样的方法中，如果传入的函数包含this, 那么，默认情况下，函数中的this会指向window对象。</p>\n<p>改变的三种方式：</p>\n<ol>\n<li><p>将当前对象的this存为一个变量</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function doClick()&#123;</span><br><span class=\"line\">    var that = this;</span><br><span class=\"line\">    setInterval(function() &#123;</span><br><span class=\"line\">      console.log(that.msg);</span><br><span class=\"line\">     &#125;, 1000);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li><p>利用bind()方法</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function doClick()&#123;</span><br><span class=\"line\">    setInterval(function() &#123;</span><br><span class=\"line\">      console.log(this.msg);</span><br><span class=\"line\">     &#125;.bind(this), 1000);  //利用bind()将this绑定到这个函数上</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li><p>ES6的箭头函数</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function doClick()&#123;</span><br><span class=\"line\">     setInterval(() =&gt; &#123;</span><br><span class=\"line\">       console.log(this.msg);</span><br><span class=\"line\">     &#125;, 100);</span><br><span class=\"line\"> &#125;,</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h2 id=\"总结-2\"><a href=\"#总结-2\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p><strong>如何准确判断 this 指向的是什么？</strong></p>\n<p>1 . 函数是否在 new 中调用 (new 绑定)，如果是，那么 this 绑定的是新创建的对象。</p>\n<p>2 . 函数是否通过 call,apply 调用，或者使用了 bind(即硬绑定)，如果是，那么 this 绑定的就是指定的对象。</p>\n<p>3 . 函数是否在某个上下文对象中调用 (隐式绑定)，如果是的话，this 绑定的是那个上下文对象。一般是 obj.foo()。</p>\n<p>4 . 如果以上都不是，那么使用默认绑定。如果在严格模式下，则绑定到 undefined，否则绑定到全局对象。</p>\n<p>5 . 如果把 Null 或者 undefined 作为 this 的绑定对象传入 call、apply 或者 bind，这些值在调用时会被忽略，实际应用的是默认绑定规则。</p>\n<p>6 . 如果是箭头函数，箭头函数的 this 继承的是外层代码块的 this。</p>"},{"title":"异步迭代器和await","date":"2020-07-12T09:16:26.000Z","_content":"\n<meta name=\"referrer\" content=\"no-referrer\"/>\n\n## 异步迭代器和await\n\n迭代器：迭代器是一种特殊对象，它具有专有接口，所有的迭代器对象都有一个next()方法。async和await：返回一个promise对象和等待对象resolve\n\n### async和await的应用\n\n#### async 起什么作用？\n\n只用记住一点：async总会返回一个promise对象！当你return一个字符串的时候，它会自动通过resolve封装成一个promis对象。\n\n> 如果返回对象本身就是一个promise呢？当然就是直接把这个promise对象返回回去咯！\n\n#### async能用在哪里？\n\n当你需要一个promise对象，并且你不想每次都写new promise代码时：\n\n```js\nfunction getPromise(){\n  return new Promise((resolve,reject)=>{\n   resolve(\"long_time_value\")\n  })\n}\n```\n\n那么你可以这样：\n\n```js\nasync function getPromise(){\n return \"long_time_value\"\n}\ngetPromise()\n```\n\n#### await的作用\n\nawait必须要和async搭配，并且她的执行分两种情况：\n\n1. await等待的是一个普通字面量，比如字符串之类的，会直接进行下面代码的操作，也就是相当于没有进行阻塞\n2. await等待的是一个promise对象，那么只有当这个promise对象resolve之后才会进行下一步的代码\n\n### async和await的优势\n\n看以下代码：\n\n```js\nfunction step1(n) {\n    console.log(`step1 with ${n}`);\n    return takeLongTime(n);\n}\n\nfunction step2(m, n) {\n    console.log(`step2 with ${m} and ${n}`);\n    return takeLongTime(m + n);\n}\n\nfunction step3(k, m, n) {\n    console.log(`step3 with ${k}, ${m} and ${n}`);\n    return takeLongTime(k + m + n);\n}\n```\n\n普通执行方式：\n\n```js\nfunction doIt() {\n    console.time(\"doIt\");\n    const time1 = 300;\n    step1(time1)\n        .then(time2 => {\n            return step2(time1, time2)\n                .then(time3 => [time1, time2, time3]);\n        })\n        .then(times => {\n            const [time1, time2, time3] = times;\n            return step3(time1, time2, time3);\n        })\n        .then(result => {\n            console.log(`result is ${result}`);\n            console.timeEnd(\"doIt\");\n        });\n}\n\ndoIt();\n```\n\nawait执行方式：\n\n```js\nasync function doIt() {\n    console.time(\"doIt\");\n    const time1 = 300;\n    const time2 = await step1(time1);\n    const time3 = await step2(time1, time2);\n    const result = await step3(time1, time2, time3);\n    console.log(`result is ${result}`);\n    console.timeEnd(\"doIt\");\n}\n\ndoIt();\n```\n\n这里最大的区别就是 promise通过then传递参数太麻烦了。\n\n### 迭代器\n\n异步迭代器主要用于：当前请求需要上一个请求返回的数据。这种一部情况，一般是有一个请求数组，需要依次发起请求。并且根据上一次请求可以做相应的动作。\n\n代码如下：\n\n```js\nlet arr =[promise1,promise2]\nconst reqArr = {\n    [Symbol.asyncIterator]: () => ({\n            next: async () => {\n              let res = await arr.shift()()\n              if (res.code != '0000') {\n                return {\n                  done: true,\n                  value: false,\n                }\n              }\n              return {\n                done: req.length == 0,\n                value: res,\n              }\n            },\n          }),\n        }\nfor await (const item of reqArr) {\n          console.log(item,'item')\n}\n```\n\n主要的控制有两个：\n\n1. let res = await arr.shift()() 这里的await可以控制请求的返回数据顺序\n2. next:()=>{ return{ done：false，value：res}}，这实际上是一个函数。for await of 会默认调用next函数来进行遍历请求。通过返回的对象done字段的true和false来判断是否要执行下一步！\n\n","source":"_posts/异步迭代器和await.md","raw":"---\n\ntitle: 异步迭代器和await\ndate: 2020-07-12 17:16:26\ntags: [js,hexo]\n---\n\n<meta name=\"referrer\" content=\"no-referrer\"/>\n\n## 异步迭代器和await\n\n迭代器：迭代器是一种特殊对象，它具有专有接口，所有的迭代器对象都有一个next()方法。async和await：返回一个promise对象和等待对象resolve\n\n### async和await的应用\n\n#### async 起什么作用？\n\n只用记住一点：async总会返回一个promise对象！当你return一个字符串的时候，它会自动通过resolve封装成一个promis对象。\n\n> 如果返回对象本身就是一个promise呢？当然就是直接把这个promise对象返回回去咯！\n\n#### async能用在哪里？\n\n当你需要一个promise对象，并且你不想每次都写new promise代码时：\n\n```js\nfunction getPromise(){\n  return new Promise((resolve,reject)=>{\n   resolve(\"long_time_value\")\n  })\n}\n```\n\n那么你可以这样：\n\n```js\nasync function getPromise(){\n return \"long_time_value\"\n}\ngetPromise()\n```\n\n#### await的作用\n\nawait必须要和async搭配，并且她的执行分两种情况：\n\n1. await等待的是一个普通字面量，比如字符串之类的，会直接进行下面代码的操作，也就是相当于没有进行阻塞\n2. await等待的是一个promise对象，那么只有当这个promise对象resolve之后才会进行下一步的代码\n\n### async和await的优势\n\n看以下代码：\n\n```js\nfunction step1(n) {\n    console.log(`step1 with ${n}`);\n    return takeLongTime(n);\n}\n\nfunction step2(m, n) {\n    console.log(`step2 with ${m} and ${n}`);\n    return takeLongTime(m + n);\n}\n\nfunction step3(k, m, n) {\n    console.log(`step3 with ${k}, ${m} and ${n}`);\n    return takeLongTime(k + m + n);\n}\n```\n\n普通执行方式：\n\n```js\nfunction doIt() {\n    console.time(\"doIt\");\n    const time1 = 300;\n    step1(time1)\n        .then(time2 => {\n            return step2(time1, time2)\n                .then(time3 => [time1, time2, time3]);\n        })\n        .then(times => {\n            const [time1, time2, time3] = times;\n            return step3(time1, time2, time3);\n        })\n        .then(result => {\n            console.log(`result is ${result}`);\n            console.timeEnd(\"doIt\");\n        });\n}\n\ndoIt();\n```\n\nawait执行方式：\n\n```js\nasync function doIt() {\n    console.time(\"doIt\");\n    const time1 = 300;\n    const time2 = await step1(time1);\n    const time3 = await step2(time1, time2);\n    const result = await step3(time1, time2, time3);\n    console.log(`result is ${result}`);\n    console.timeEnd(\"doIt\");\n}\n\ndoIt();\n```\n\n这里最大的区别就是 promise通过then传递参数太麻烦了。\n\n### 迭代器\n\n异步迭代器主要用于：当前请求需要上一个请求返回的数据。这种一部情况，一般是有一个请求数组，需要依次发起请求。并且根据上一次请求可以做相应的动作。\n\n代码如下：\n\n```js\nlet arr =[promise1,promise2]\nconst reqArr = {\n    [Symbol.asyncIterator]: () => ({\n            next: async () => {\n              let res = await arr.shift()()\n              if (res.code != '0000') {\n                return {\n                  done: true,\n                  value: false,\n                }\n              }\n              return {\n                done: req.length == 0,\n                value: res,\n              }\n            },\n          }),\n        }\nfor await (const item of reqArr) {\n          console.log(item,'item')\n}\n```\n\n主要的控制有两个：\n\n1. let res = await arr.shift()() 这里的await可以控制请求的返回数据顺序\n2. next:()=>{ return{ done：false，value：res}}，这实际上是一个函数。for await of 会默认调用next函数来进行遍历请求。通过返回的对象done字段的true和false来判断是否要执行下一步！\n\n","slug":"异步迭代器和await","published":1,"updated":"2021-08-29T15:02:13.486Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl0uux6w0001j7sufbw797ewj","content":"<meta name=\"referrer\" content=\"no-referrer\"/>\n\n<h2 id=\"异步迭代器和await\"><a href=\"#异步迭代器和await\" class=\"headerlink\" title=\"异步迭代器和await\"></a>异步迭代器和await</h2><p>迭代器：迭代器是一种特殊对象，它具有专有接口，所有的迭代器对象都有一个next()方法。async和await：返回一个promise对象和等待对象resolve</p>\n<h3 id=\"async和await的应用\"><a href=\"#async和await的应用\" class=\"headerlink\" title=\"async和await的应用\"></a>async和await的应用</h3><h4 id=\"async-起什么作用？\"><a href=\"#async-起什么作用？\" class=\"headerlink\" title=\"async 起什么作用？\"></a>async 起什么作用？</h4><p>只用记住一点：async总会返回一个promise对象！当你return一个字符串的时候，它会自动通过resolve封装成一个promis对象。</p>\n<blockquote>\n<p>如果返回对象本身就是一个promise呢？当然就是直接把这个promise对象返回回去咯！</p>\n</blockquote>\n<h4 id=\"async能用在哪里？\"><a href=\"#async能用在哪里？\" class=\"headerlink\" title=\"async能用在哪里？\"></a>async能用在哪里？</h4><p>当你需要一个promise对象，并且你不想每次都写new promise代码时：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">getPromise</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve,reject</span>)=&gt;</span>&#123;</span><br><span class=\"line\">   <span class=\"title function_\">resolve</span>(<span class=\"string\">&quot;long_time_value&quot;</span>)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>那么你可以这样：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"keyword\">function</span> <span class=\"title function_\">getPromise</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\"> <span class=\"keyword\">return</span> <span class=\"string\">&quot;long_time_value&quot;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"title function_\">getPromise</span>()</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"await的作用\"><a href=\"#await的作用\" class=\"headerlink\" title=\"await的作用\"></a>await的作用</h4><p>await必须要和async搭配，并且她的执行分两种情况：</p>\n<ol>\n<li>await等待的是一个普通字面量，比如字符串之类的，会直接进行下面代码的操作，也就是相当于没有进行阻塞</li>\n<li>await等待的是一个promise对象，那么只有当这个promise对象resolve之后才会进行下一步的代码</li>\n</ol>\n<h3 id=\"async和await的优势\"><a href=\"#async和await的优势\" class=\"headerlink\" title=\"async和await的优势\"></a>async和await的优势</h3><p>看以下代码：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">step1</span>(<span class=\"params\">n</span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">`step1 with <span class=\"subst\">$&#123;n&#125;</span>`</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"title function_\">takeLongTime</span>(n);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">step2</span>(<span class=\"params\">m, n</span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">`step2 with <span class=\"subst\">$&#123;m&#125;</span> and <span class=\"subst\">$&#123;n&#125;</span>`</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"title function_\">takeLongTime</span>(m + n);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">step3</span>(<span class=\"params\">k, m, n</span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">`step3 with <span class=\"subst\">$&#123;k&#125;</span>, <span class=\"subst\">$&#123;m&#125;</span> and <span class=\"subst\">$&#123;n&#125;</span>`</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"title function_\">takeLongTime</span>(k + m + n);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>普通执行方式：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">doIt</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">time</span>(<span class=\"string\">&quot;doIt&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">const</span> time1 = <span class=\"number\">300</span>;</span><br><span class=\"line\">    <span class=\"title function_\">step1</span>(time1)</span><br><span class=\"line\">        .<span class=\"title function_\">then</span>(<span class=\"function\"><span class=\"params\">time2</span> =&gt;</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"title function_\">step2</span>(time1, time2)</span><br><span class=\"line\">                .<span class=\"title function_\">then</span>(<span class=\"function\"><span class=\"params\">time3</span> =&gt;</span> [time1, time2, time3]);</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">        .<span class=\"title function_\">then</span>(<span class=\"function\"><span class=\"params\">times</span> =&gt;</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">const</span> [time1, time2, time3] = times;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"title function_\">step3</span>(time1, time2, time3);</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">        .<span class=\"title function_\">then</span>(<span class=\"function\"><span class=\"params\">result</span> =&gt;</span> &#123;</span><br><span class=\"line\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">`result is <span class=\"subst\">$&#123;result&#125;</span>`</span>);</span><br><span class=\"line\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">timeEnd</span>(<span class=\"string\">&quot;doIt&quot;</span>);</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">doIt</span>();</span><br></pre></td></tr></table></figure>\n\n<p>await执行方式：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"keyword\">function</span> <span class=\"title function_\">doIt</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">time</span>(<span class=\"string\">&quot;doIt&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">const</span> time1 = <span class=\"number\">300</span>;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> time2 = <span class=\"keyword\">await</span> <span class=\"title function_\">step1</span>(time1);</span><br><span class=\"line\">    <span class=\"keyword\">const</span> time3 = <span class=\"keyword\">await</span> <span class=\"title function_\">step2</span>(time1, time2);</span><br><span class=\"line\">    <span class=\"keyword\">const</span> result = <span class=\"keyword\">await</span> <span class=\"title function_\">step3</span>(time1, time2, time3);</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">`result is <span class=\"subst\">$&#123;result&#125;</span>`</span>);</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">timeEnd</span>(<span class=\"string\">&quot;doIt&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">doIt</span>();</span><br></pre></td></tr></table></figure>\n\n<p>这里最大的区别就是 promise通过then传递参数太麻烦了。</p>\n<h3 id=\"迭代器\"><a href=\"#迭代器\" class=\"headerlink\" title=\"迭代器\"></a>迭代器</h3><p>异步迭代器主要用于：当前请求需要上一个请求返回的数据。这种一部情况，一般是有一个请求数组，需要依次发起请求。并且根据上一次请求可以做相应的动作。</p>\n<p>代码如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> arr =[promise1,promise2]</span><br><span class=\"line\"><span class=\"keyword\">const</span> reqArr = &#123;</span><br><span class=\"line\">    [<span class=\"title class_\">Symbol</span>.<span class=\"property\">asyncIterator</span>]: <span class=\"function\">() =&gt;</span> (&#123;</span><br><span class=\"line\">            <span class=\"attr\">next</span>: <span class=\"keyword\">async</span> () =&gt; &#123;</span><br><span class=\"line\">              <span class=\"keyword\">let</span> res = <span class=\"keyword\">await</span> arr.<span class=\"title function_\">shift</span>()()</span><br><span class=\"line\">              <span class=\"keyword\">if</span> (res.<span class=\"property\">code</span> != <span class=\"string\">&#x27;0000&#x27;</span>) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">                  <span class=\"attr\">done</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">                  <span class=\"attr\">value</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">              &#125;</span><br><span class=\"line\">              <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">                <span class=\"attr\">done</span>: req.<span class=\"property\">length</span> == <span class=\"number\">0</span>,</span><br><span class=\"line\">                <span class=\"attr\">value</span>: res,</span><br><span class=\"line\">              &#125;</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">          &#125;),</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"keyword\">await</span> (<span class=\"keyword\">const</span> item <span class=\"keyword\">of</span> reqArr) &#123;</span><br><span class=\"line\">          <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(item,<span class=\"string\">&#x27;item&#x27;</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>主要的控制有两个：</p>\n<ol>\n<li>let res = await arr.shift()() 这里的await可以控制请求的返回数据顺序</li>\n<li>next:()=&gt;{ return{ done：false，value：res}}，这实际上是一个函数。for await of 会默认调用next函数来进行遍历请求。通过返回的对象done字段的true和false来判断是否要执行下一步！</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<meta name=\"referrer\" content=\"no-referrer\"/>\n\n<h2 id=\"异步迭代器和await\"><a href=\"#异步迭代器和await\" class=\"headerlink\" title=\"异步迭代器和await\"></a>异步迭代器和await</h2><p>迭代器：迭代器是一种特殊对象，它具有专有接口，所有的迭代器对象都有一个next()方法。async和await：返回一个promise对象和等待对象resolve</p>\n<h3 id=\"async和await的应用\"><a href=\"#async和await的应用\" class=\"headerlink\" title=\"async和await的应用\"></a>async和await的应用</h3><h4 id=\"async-起什么作用？\"><a href=\"#async-起什么作用？\" class=\"headerlink\" title=\"async 起什么作用？\"></a>async 起什么作用？</h4><p>只用记住一点：async总会返回一个promise对象！当你return一个字符串的时候，它会自动通过resolve封装成一个promis对象。</p>\n<blockquote>\n<p>如果返回对象本身就是一个promise呢？当然就是直接把这个promise对象返回回去咯！</p>\n</blockquote>\n<h4 id=\"async能用在哪里？\"><a href=\"#async能用在哪里？\" class=\"headerlink\" title=\"async能用在哪里？\"></a>async能用在哪里？</h4><p>当你需要一个promise对象，并且你不想每次都写new promise代码时：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">getPromise</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve,reject</span>)=&gt;</span>&#123;</span><br><span class=\"line\">   <span class=\"title function_\">resolve</span>(<span class=\"string\">&quot;long_time_value&quot;</span>)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>那么你可以这样：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"keyword\">function</span> <span class=\"title function_\">getPromise</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\"> <span class=\"keyword\">return</span> <span class=\"string\">&quot;long_time_value&quot;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"title function_\">getPromise</span>()</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"await的作用\"><a href=\"#await的作用\" class=\"headerlink\" title=\"await的作用\"></a>await的作用</h4><p>await必须要和async搭配，并且她的执行分两种情况：</p>\n<ol>\n<li>await等待的是一个普通字面量，比如字符串之类的，会直接进行下面代码的操作，也就是相当于没有进行阻塞</li>\n<li>await等待的是一个promise对象，那么只有当这个promise对象resolve之后才会进行下一步的代码</li>\n</ol>\n<h3 id=\"async和await的优势\"><a href=\"#async和await的优势\" class=\"headerlink\" title=\"async和await的优势\"></a>async和await的优势</h3><p>看以下代码：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">step1</span>(<span class=\"params\">n</span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">`step1 with <span class=\"subst\">$&#123;n&#125;</span>`</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"title function_\">takeLongTime</span>(n);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">step2</span>(<span class=\"params\">m, n</span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">`step2 with <span class=\"subst\">$&#123;m&#125;</span> and <span class=\"subst\">$&#123;n&#125;</span>`</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"title function_\">takeLongTime</span>(m + n);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">step3</span>(<span class=\"params\">k, m, n</span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">`step3 with <span class=\"subst\">$&#123;k&#125;</span>, <span class=\"subst\">$&#123;m&#125;</span> and <span class=\"subst\">$&#123;n&#125;</span>`</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"title function_\">takeLongTime</span>(k + m + n);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>普通执行方式：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">doIt</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">time</span>(<span class=\"string\">&quot;doIt&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">const</span> time1 = <span class=\"number\">300</span>;</span><br><span class=\"line\">    <span class=\"title function_\">step1</span>(time1)</span><br><span class=\"line\">        .<span class=\"title function_\">then</span>(<span class=\"function\"><span class=\"params\">time2</span> =&gt;</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"title function_\">step2</span>(time1, time2)</span><br><span class=\"line\">                .<span class=\"title function_\">then</span>(<span class=\"function\"><span class=\"params\">time3</span> =&gt;</span> [time1, time2, time3]);</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">        .<span class=\"title function_\">then</span>(<span class=\"function\"><span class=\"params\">times</span> =&gt;</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">const</span> [time1, time2, time3] = times;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"title function_\">step3</span>(time1, time2, time3);</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">        .<span class=\"title function_\">then</span>(<span class=\"function\"><span class=\"params\">result</span> =&gt;</span> &#123;</span><br><span class=\"line\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">`result is <span class=\"subst\">$&#123;result&#125;</span>`</span>);</span><br><span class=\"line\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">timeEnd</span>(<span class=\"string\">&quot;doIt&quot;</span>);</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">doIt</span>();</span><br></pre></td></tr></table></figure>\n\n<p>await执行方式：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"keyword\">function</span> <span class=\"title function_\">doIt</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">time</span>(<span class=\"string\">&quot;doIt&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">const</span> time1 = <span class=\"number\">300</span>;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> time2 = <span class=\"keyword\">await</span> <span class=\"title function_\">step1</span>(time1);</span><br><span class=\"line\">    <span class=\"keyword\">const</span> time3 = <span class=\"keyword\">await</span> <span class=\"title function_\">step2</span>(time1, time2);</span><br><span class=\"line\">    <span class=\"keyword\">const</span> result = <span class=\"keyword\">await</span> <span class=\"title function_\">step3</span>(time1, time2, time3);</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">`result is <span class=\"subst\">$&#123;result&#125;</span>`</span>);</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">timeEnd</span>(<span class=\"string\">&quot;doIt&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">doIt</span>();</span><br></pre></td></tr></table></figure>\n\n<p>这里最大的区别就是 promise通过then传递参数太麻烦了。</p>\n<h3 id=\"迭代器\"><a href=\"#迭代器\" class=\"headerlink\" title=\"迭代器\"></a>迭代器</h3><p>异步迭代器主要用于：当前请求需要上一个请求返回的数据。这种一部情况，一般是有一个请求数组，需要依次发起请求。并且根据上一次请求可以做相应的动作。</p>\n<p>代码如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> arr =[promise1,promise2]</span><br><span class=\"line\"><span class=\"keyword\">const</span> reqArr = &#123;</span><br><span class=\"line\">    [<span class=\"title class_\">Symbol</span>.<span class=\"property\">asyncIterator</span>]: <span class=\"function\">() =&gt;</span> (&#123;</span><br><span class=\"line\">            <span class=\"attr\">next</span>: <span class=\"keyword\">async</span> () =&gt; &#123;</span><br><span class=\"line\">              <span class=\"keyword\">let</span> res = <span class=\"keyword\">await</span> arr.<span class=\"title function_\">shift</span>()()</span><br><span class=\"line\">              <span class=\"keyword\">if</span> (res.<span class=\"property\">code</span> != <span class=\"string\">&#x27;0000&#x27;</span>) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">                  <span class=\"attr\">done</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">                  <span class=\"attr\">value</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">              &#125;</span><br><span class=\"line\">              <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">                <span class=\"attr\">done</span>: req.<span class=\"property\">length</span> == <span class=\"number\">0</span>,</span><br><span class=\"line\">                <span class=\"attr\">value</span>: res,</span><br><span class=\"line\">              &#125;</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">          &#125;),</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"keyword\">await</span> (<span class=\"keyword\">const</span> item <span class=\"keyword\">of</span> reqArr) &#123;</span><br><span class=\"line\">          <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(item,<span class=\"string\">&#x27;item&#x27;</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>主要的控制有两个：</p>\n<ol>\n<li>let res = await arr.shift()() 这里的await可以控制请求的返回数据顺序</li>\n<li>next:()=&gt;{ return{ done：false，value：res}}，这实际上是一个函数。for await of 会默认调用next函数来进行遍历请求。通过返回的对象done字段的true和false来判断是否要执行下一步！</li>\n</ol>\n"},{"title":"常用点记录（ES6/flex/vue写法)","date":"2020-03-02T09:16:26.000Z","_content":"\n<meta name=\"referrer\" content=\"no-referrer\"/>\n\n## ES6新方法，VUE中样式\n\nES6， 全称 ECMAScript 6.0 ，是 JavaScript 的下一个版本标准，2015.06 发版。\n\n<!-- more -->\n\n### 样式或者vue中写法的记录问题贴\n\n这个里主要是关于样式中的坑和vue中一些特定写法的记录，统一放入这个帖子中，方便查询\n\n**vue中直接在style中进行判断**\n\n```html\n<el-tag        :style=\"'backgroundColor:white;marginLeft:20px;border:none;marginRight:20px;fontSize:14px;color:'+ (isEdit == true ? 'black': 'lightgrey') +''\"\n>是否续订:</el-tag>\n```\n\n> 外部用“”，内部还需要用‘’包裹，然后再内部使用拼接的写法，同时判断这个条件，还需要用括号包裹起来，并且，对应的值，也需要用‘’包裹起来。\n\n### **Array.apply(null, { length: 20 }) 和 new Array(20)**\n\n```js\nrender: function (createElement) {\n  return createElement('div',\n    Array.apply(null, { length: 20 }).map(function () {\n      return createElement('p', 'hi')\n    })\n  )\n}\n```\n\n> Array.apply(null, { length: 20 }) 生成的数组形式为[undifiend,undifiend,undifiend,.....],\n>\n> new Array(20)等价于[，，，，]\n\n后面使用.map方法的时候，map方法的限制为：map函数并不会遍历数组中没有初始化或者被delete的元素（有相同限制还有forEach, reduce方法）。而new Array 并没有初始化。所以，需要采用官方的写法。\n\n### ES6新方法\n\n**使用reduce取代map和filter**\n\n```js\nlet num =[20,30,40,50]\nlet doubleNum = num.reduce((finalNum,num)=>{\n  let numTem = num*2\n  if(numTem > 50){\n    finalNum.push(numTem)\n  }\n  return finalNum\n},[])\nconsole.log(doubleNum)\n```\n\n**统计数组中相同项的个数**\n\n```js\nlet name = ['tom','jerry','tony','jack','tony','jack']\nlet nameAsiys = name.reduce((nameObject,object)=>{\n  nameObject[object] = nameObject[object] ? ++nameObject[object] : 1\n},{})\nconsole.log(nameAsiys)\n```\n\n **删除不需要的属性**\n\n```js\nlet {_lee,_meng,...others} = {_lee:'first',_meng:'last',object1:'111',object2:'222',object3:'333',object4:'444'}\nconsole.log(others)\n```\n\n**在函数参数中解构嵌套对象**\n\n```js\nlet originObject = {\n  name:'lee',\n  test:{\n    origin:'1',\n    fix:'3',\n    bug:'555'\n  }\n}\nlet {name,test:{bug}} = originObject;\nconsole.log(name,bug)\n```\n\n**数组对象去重**\n\n```js\nlet person = [\n     {id: 0, name: \"小明\"},\n     {id: 1, name: \"小张\"},\n     {id: 2, name: \"小李\"},\n     {id: 3, name: \"小孙\"},\n     {id: 1, name: \"小周\"},\n     {id: 2, name: \"小陈\"},   \n];\nlet personTem = {}\nlet finalList = person.reduce((personList,element)=>{\n  personTem[element.id] ? '' : personTem[element.id] = true && personList.push(element)\n  return personList;\n},[])\nconsole.log(finalList)\n```\n\n","source":"_posts/常用点记录（ES6flexvue写法).md","raw":"---\ntitle: 常用点记录（ES6/flex/vue写法)\ndate: 2020-03-02 17:16:26\ntags: [ES6,新特性]\n---\n\n<meta name=\"referrer\" content=\"no-referrer\"/>\n\n## ES6新方法，VUE中样式\n\nES6， 全称 ECMAScript 6.0 ，是 JavaScript 的下一个版本标准，2015.06 发版。\n\n<!-- more -->\n\n### 样式或者vue中写法的记录问题贴\n\n这个里主要是关于样式中的坑和vue中一些特定写法的记录，统一放入这个帖子中，方便查询\n\n**vue中直接在style中进行判断**\n\n```html\n<el-tag        :style=\"'backgroundColor:white;marginLeft:20px;border:none;marginRight:20px;fontSize:14px;color:'+ (isEdit == true ? 'black': 'lightgrey') +''\"\n>是否续订:</el-tag>\n```\n\n> 外部用“”，内部还需要用‘’包裹，然后再内部使用拼接的写法，同时判断这个条件，还需要用括号包裹起来，并且，对应的值，也需要用‘’包裹起来。\n\n### **Array.apply(null, { length: 20 }) 和 new Array(20)**\n\n```js\nrender: function (createElement) {\n  return createElement('div',\n    Array.apply(null, { length: 20 }).map(function () {\n      return createElement('p', 'hi')\n    })\n  )\n}\n```\n\n> Array.apply(null, { length: 20 }) 生成的数组形式为[undifiend,undifiend,undifiend,.....],\n>\n> new Array(20)等价于[，，，，]\n\n后面使用.map方法的时候，map方法的限制为：map函数并不会遍历数组中没有初始化或者被delete的元素（有相同限制还有forEach, reduce方法）。而new Array 并没有初始化。所以，需要采用官方的写法。\n\n### ES6新方法\n\n**使用reduce取代map和filter**\n\n```js\nlet num =[20,30,40,50]\nlet doubleNum = num.reduce((finalNum,num)=>{\n  let numTem = num*2\n  if(numTem > 50){\n    finalNum.push(numTem)\n  }\n  return finalNum\n},[])\nconsole.log(doubleNum)\n```\n\n**统计数组中相同项的个数**\n\n```js\nlet name = ['tom','jerry','tony','jack','tony','jack']\nlet nameAsiys = name.reduce((nameObject,object)=>{\n  nameObject[object] = nameObject[object] ? ++nameObject[object] : 1\n},{})\nconsole.log(nameAsiys)\n```\n\n **删除不需要的属性**\n\n```js\nlet {_lee,_meng,...others} = {_lee:'first',_meng:'last',object1:'111',object2:'222',object3:'333',object4:'444'}\nconsole.log(others)\n```\n\n**在函数参数中解构嵌套对象**\n\n```js\nlet originObject = {\n  name:'lee',\n  test:{\n    origin:'1',\n    fix:'3',\n    bug:'555'\n  }\n}\nlet {name,test:{bug}} = originObject;\nconsole.log(name,bug)\n```\n\n**数组对象去重**\n\n```js\nlet person = [\n     {id: 0, name: \"小明\"},\n     {id: 1, name: \"小张\"},\n     {id: 2, name: \"小李\"},\n     {id: 3, name: \"小孙\"},\n     {id: 1, name: \"小周\"},\n     {id: 2, name: \"小陈\"},   \n];\nlet personTem = {}\nlet finalList = person.reduce((personList,element)=>{\n  personTem[element.id] ? '' : personTem[element.id] = true && personList.push(element)\n  return personList;\n},[])\nconsole.log(finalList)\n```\n\n","slug":"常用点记录（ES6flexvue写法)","published":1,"updated":"2020-09-04T08:14:58.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl0uux6w1001m7suf5p1abbol","content":"<meta name=\"referrer\" content=\"no-referrer\"/>\n\n<h2 id=\"ES6新方法，VUE中样式\"><a href=\"#ES6新方法，VUE中样式\" class=\"headerlink\" title=\"ES6新方法，VUE中样式\"></a>ES6新方法，VUE中样式</h2><p>ES6， 全称 ECMAScript 6.0 ，是 JavaScript 的下一个版本标准，2015.06 发版。</p>\n<span id=\"more\"></span>\n\n<h3 id=\"样式或者vue中写法的记录问题贴\"><a href=\"#样式或者vue中写法的记录问题贴\" class=\"headerlink\" title=\"样式或者vue中写法的记录问题贴\"></a>样式或者vue中写法的记录问题贴</h3><p>这个里主要是关于样式中的坑和vue中一些特定写法的记录，统一放入这个帖子中，方便查询</p>\n<p><strong>vue中直接在style中进行判断</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">el-tag</span>        <span class=\"attr\">:style</span>=<span class=\"string\">&quot;&#x27;backgroundColor:white;marginLeft:20px;border:none;marginRight:20px;fontSize:14px;color:&#x27;+ (isEdit == true ? &#x27;black&#x27;: &#x27;lightgrey&#x27;) +&#x27;&#x27;&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">&gt;</span>是否续订:<span class=\"tag\">&lt;/<span class=\"name\">el-tag</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>外部用“”，内部还需要用‘’包裹，然后再内部使用拼接的写法，同时判断这个条件，还需要用括号包裹起来，并且，对应的值，也需要用‘’包裹起来。</p>\n</blockquote>\n<h3 id=\"Array-apply-null-length-20-和-new-Array-20\"><a href=\"#Array-apply-null-length-20-和-new-Array-20\" class=\"headerlink\" title=\"Array.apply(null, { length: 20 }) 和 new Array(20)\"></a><strong>Array.apply(null, { length: 20 }) 和 new Array(20)</strong></h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">render</span>: <span class=\"keyword\">function</span> (<span class=\"params\">createElement</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"title function_\">createElement</span>(<span class=\"string\">&#x27;div&#x27;</span>,</span><br><span class=\"line\">    <span class=\"title class_\">Array</span>.<span class=\"title function_\">apply</span>(<span class=\"literal\">null</span>, &#123; <span class=\"attr\">length</span>: <span class=\"number\">20</span> &#125;).<span class=\"title function_\">map</span>(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"title function_\">createElement</span>(<span class=\"string\">&#x27;p&#x27;</span>, <span class=\"string\">&#x27;hi&#x27;</span>)</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  )</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>Array.apply(null, { length: 20 }) 生成的数组形式为[undifiend,undifiend,undifiend,…..],</p>\n<p>new Array(20)等价于[，，，，]</p>\n</blockquote>\n<p>后面使用.map方法的时候，map方法的限制为：map函数并不会遍历数组中没有初始化或者被delete的元素（有相同限制还有forEach, reduce方法）。而new Array 并没有初始化。所以，需要采用官方的写法。</p>\n<h3 id=\"ES6新方法\"><a href=\"#ES6新方法\" class=\"headerlink\" title=\"ES6新方法\"></a>ES6新方法</h3><p><strong>使用reduce取代map和filter</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> num =[<span class=\"number\">20</span>,<span class=\"number\">30</span>,<span class=\"number\">40</span>,<span class=\"number\">50</span>]</span><br><span class=\"line\"><span class=\"keyword\">let</span> doubleNum = num.<span class=\"title function_\">reduce</span>(<span class=\"function\">(<span class=\"params\">finalNum,num</span>)=&gt;</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> numTem = num*<span class=\"number\">2</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span>(numTem &gt; <span class=\"number\">50</span>)&#123;</span><br><span class=\"line\">    finalNum.<span class=\"title function_\">push</span>(numTem)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> finalNum</span><br><span class=\"line\">&#125;,[])</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(doubleNum)</span><br></pre></td></tr></table></figure>\n\n<p><strong>统计数组中相同项的个数</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> name = [<span class=\"string\">&#x27;tom&#x27;</span>,<span class=\"string\">&#x27;jerry&#x27;</span>,<span class=\"string\">&#x27;tony&#x27;</span>,<span class=\"string\">&#x27;jack&#x27;</span>,<span class=\"string\">&#x27;tony&#x27;</span>,<span class=\"string\">&#x27;jack&#x27;</span>]</span><br><span class=\"line\"><span class=\"keyword\">let</span> nameAsiys = name.<span class=\"title function_\">reduce</span>(<span class=\"function\">(<span class=\"params\">nameObject,object</span>)=&gt;</span>&#123;</span><br><span class=\"line\">  nameObject[object] = nameObject[object] ? ++nameObject[object] : <span class=\"number\">1</span></span><br><span class=\"line\">&#125;,&#123;&#125;)</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(nameAsiys)</span><br></pre></td></tr></table></figure>\n\n<p> <strong>删除不需要的属性</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> &#123;_lee,_meng,...others&#125; = &#123;<span class=\"attr\">_lee</span>:<span class=\"string\">&#x27;first&#x27;</span>,<span class=\"attr\">_meng</span>:<span class=\"string\">&#x27;last&#x27;</span>,<span class=\"attr\">object1</span>:<span class=\"string\">&#x27;111&#x27;</span>,<span class=\"attr\">object2</span>:<span class=\"string\">&#x27;222&#x27;</span>,<span class=\"attr\">object3</span>:<span class=\"string\">&#x27;333&#x27;</span>,<span class=\"attr\">object4</span>:<span class=\"string\">&#x27;444&#x27;</span>&#125;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(others)</span><br></pre></td></tr></table></figure>\n\n<p><strong>在函数参数中解构嵌套对象</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> originObject = &#123;</span><br><span class=\"line\">  <span class=\"attr\">name</span>:<span class=\"string\">&#x27;lee&#x27;</span>,</span><br><span class=\"line\">  <span class=\"attr\">test</span>:&#123;</span><br><span class=\"line\">    <span class=\"attr\">origin</span>:<span class=\"string\">&#x27;1&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">fix</span>:<span class=\"string\">&#x27;3&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">bug</span>:<span class=\"string\">&#x27;555&#x27;</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">let</span> &#123;name,<span class=\"attr\">test</span>:&#123;bug&#125;&#125; = originObject;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(name,bug)</span><br></pre></td></tr></table></figure>\n\n<p><strong>数组对象去重</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> person = [</span><br><span class=\"line\">     &#123;<span class=\"attr\">id</span>: <span class=\"number\">0</span>, <span class=\"attr\">name</span>: <span class=\"string\">&quot;小明&quot;</span>&#125;,</span><br><span class=\"line\">     &#123;<span class=\"attr\">id</span>: <span class=\"number\">1</span>, <span class=\"attr\">name</span>: <span class=\"string\">&quot;小张&quot;</span>&#125;,</span><br><span class=\"line\">     &#123;<span class=\"attr\">id</span>: <span class=\"number\">2</span>, <span class=\"attr\">name</span>: <span class=\"string\">&quot;小李&quot;</span>&#125;,</span><br><span class=\"line\">     &#123;<span class=\"attr\">id</span>: <span class=\"number\">3</span>, <span class=\"attr\">name</span>: <span class=\"string\">&quot;小孙&quot;</span>&#125;,</span><br><span class=\"line\">     &#123;<span class=\"attr\">id</span>: <span class=\"number\">1</span>, <span class=\"attr\">name</span>: <span class=\"string\">&quot;小周&quot;</span>&#125;,</span><br><span class=\"line\">     &#123;<span class=\"attr\">id</span>: <span class=\"number\">2</span>, <span class=\"attr\">name</span>: <span class=\"string\">&quot;小陈&quot;</span>&#125;,   </span><br><span class=\"line\">];</span><br><span class=\"line\"><span class=\"keyword\">let</span> personTem = &#123;&#125;</span><br><span class=\"line\"><span class=\"keyword\">let</span> finalList = person.<span class=\"title function_\">reduce</span>(<span class=\"function\">(<span class=\"params\">personList,element</span>)=&gt;</span>&#123;</span><br><span class=\"line\">  personTem[element.<span class=\"property\">id</span>] ? <span class=\"string\">&#x27;&#x27;</span> : personTem[element.<span class=\"property\">id</span>] = <span class=\"literal\">true</span> &amp;&amp; personList.<span class=\"title function_\">push</span>(element)</span><br><span class=\"line\">  <span class=\"keyword\">return</span> personList;</span><br><span class=\"line\">&#125;,[])</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(finalList)</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"<meta name=\"referrer\" content=\"no-referrer\"/>\n\n<h2 id=\"ES6新方法，VUE中样式\"><a href=\"#ES6新方法，VUE中样式\" class=\"headerlink\" title=\"ES6新方法，VUE中样式\"></a>ES6新方法，VUE中样式</h2><p>ES6， 全称 ECMAScript 6.0 ，是 JavaScript 的下一个版本标准，2015.06 发版。</p>","more":"<h3 id=\"样式或者vue中写法的记录问题贴\"><a href=\"#样式或者vue中写法的记录问题贴\" class=\"headerlink\" title=\"样式或者vue中写法的记录问题贴\"></a>样式或者vue中写法的记录问题贴</h3><p>这个里主要是关于样式中的坑和vue中一些特定写法的记录，统一放入这个帖子中，方便查询</p>\n<p><strong>vue中直接在style中进行判断</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">el-tag</span>        <span class=\"attr\">:style</span>=<span class=\"string\">&quot;&#x27;backgroundColor:white;marginLeft:20px;border:none;marginRight:20px;fontSize:14px;color:&#x27;+ (isEdit == true ? &#x27;black&#x27;: &#x27;lightgrey&#x27;) +&#x27;&#x27;&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">&gt;</span>是否续订:<span class=\"tag\">&lt;/<span class=\"name\">el-tag</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>外部用“”，内部还需要用‘’包裹，然后再内部使用拼接的写法，同时判断这个条件，还需要用括号包裹起来，并且，对应的值，也需要用‘’包裹起来。</p>\n</blockquote>\n<h3 id=\"Array-apply-null-length-20-和-new-Array-20\"><a href=\"#Array-apply-null-length-20-和-new-Array-20\" class=\"headerlink\" title=\"Array.apply(null, { length: 20 }) 和 new Array(20)\"></a><strong>Array.apply(null, { length: 20 }) 和 new Array(20)</strong></h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">render</span>: <span class=\"keyword\">function</span> (<span class=\"params\">createElement</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"title function_\">createElement</span>(<span class=\"string\">&#x27;div&#x27;</span>,</span><br><span class=\"line\">    <span class=\"title class_\">Array</span>.<span class=\"title function_\">apply</span>(<span class=\"literal\">null</span>, &#123; <span class=\"attr\">length</span>: <span class=\"number\">20</span> &#125;).<span class=\"title function_\">map</span>(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"title function_\">createElement</span>(<span class=\"string\">&#x27;p&#x27;</span>, <span class=\"string\">&#x27;hi&#x27;</span>)</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  )</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>Array.apply(null, { length: 20 }) 生成的数组形式为[undifiend,undifiend,undifiend,…..],</p>\n<p>new Array(20)等价于[，，，，]</p>\n</blockquote>\n<p>后面使用.map方法的时候，map方法的限制为：map函数并不会遍历数组中没有初始化或者被delete的元素（有相同限制还有forEach, reduce方法）。而new Array 并没有初始化。所以，需要采用官方的写法。</p>\n<h3 id=\"ES6新方法\"><a href=\"#ES6新方法\" class=\"headerlink\" title=\"ES6新方法\"></a>ES6新方法</h3><p><strong>使用reduce取代map和filter</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> num =[<span class=\"number\">20</span>,<span class=\"number\">30</span>,<span class=\"number\">40</span>,<span class=\"number\">50</span>]</span><br><span class=\"line\"><span class=\"keyword\">let</span> doubleNum = num.<span class=\"title function_\">reduce</span>(<span class=\"function\">(<span class=\"params\">finalNum,num</span>)=&gt;</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> numTem = num*<span class=\"number\">2</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span>(numTem &gt; <span class=\"number\">50</span>)&#123;</span><br><span class=\"line\">    finalNum.<span class=\"title function_\">push</span>(numTem)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> finalNum</span><br><span class=\"line\">&#125;,[])</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(doubleNum)</span><br></pre></td></tr></table></figure>\n\n<p><strong>统计数组中相同项的个数</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> name = [<span class=\"string\">&#x27;tom&#x27;</span>,<span class=\"string\">&#x27;jerry&#x27;</span>,<span class=\"string\">&#x27;tony&#x27;</span>,<span class=\"string\">&#x27;jack&#x27;</span>,<span class=\"string\">&#x27;tony&#x27;</span>,<span class=\"string\">&#x27;jack&#x27;</span>]</span><br><span class=\"line\"><span class=\"keyword\">let</span> nameAsiys = name.<span class=\"title function_\">reduce</span>(<span class=\"function\">(<span class=\"params\">nameObject,object</span>)=&gt;</span>&#123;</span><br><span class=\"line\">  nameObject[object] = nameObject[object] ? ++nameObject[object] : <span class=\"number\">1</span></span><br><span class=\"line\">&#125;,&#123;&#125;)</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(nameAsiys)</span><br></pre></td></tr></table></figure>\n\n<p> <strong>删除不需要的属性</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> &#123;_lee,_meng,...others&#125; = &#123;<span class=\"attr\">_lee</span>:<span class=\"string\">&#x27;first&#x27;</span>,<span class=\"attr\">_meng</span>:<span class=\"string\">&#x27;last&#x27;</span>,<span class=\"attr\">object1</span>:<span class=\"string\">&#x27;111&#x27;</span>,<span class=\"attr\">object2</span>:<span class=\"string\">&#x27;222&#x27;</span>,<span class=\"attr\">object3</span>:<span class=\"string\">&#x27;333&#x27;</span>,<span class=\"attr\">object4</span>:<span class=\"string\">&#x27;444&#x27;</span>&#125;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(others)</span><br></pre></td></tr></table></figure>\n\n<p><strong>在函数参数中解构嵌套对象</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> originObject = &#123;</span><br><span class=\"line\">  <span class=\"attr\">name</span>:<span class=\"string\">&#x27;lee&#x27;</span>,</span><br><span class=\"line\">  <span class=\"attr\">test</span>:&#123;</span><br><span class=\"line\">    <span class=\"attr\">origin</span>:<span class=\"string\">&#x27;1&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">fix</span>:<span class=\"string\">&#x27;3&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">bug</span>:<span class=\"string\">&#x27;555&#x27;</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">let</span> &#123;name,<span class=\"attr\">test</span>:&#123;bug&#125;&#125; = originObject;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(name,bug)</span><br></pre></td></tr></table></figure>\n\n<p><strong>数组对象去重</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> person = [</span><br><span class=\"line\">     &#123;<span class=\"attr\">id</span>: <span class=\"number\">0</span>, <span class=\"attr\">name</span>: <span class=\"string\">&quot;小明&quot;</span>&#125;,</span><br><span class=\"line\">     &#123;<span class=\"attr\">id</span>: <span class=\"number\">1</span>, <span class=\"attr\">name</span>: <span class=\"string\">&quot;小张&quot;</span>&#125;,</span><br><span class=\"line\">     &#123;<span class=\"attr\">id</span>: <span class=\"number\">2</span>, <span class=\"attr\">name</span>: <span class=\"string\">&quot;小李&quot;</span>&#125;,</span><br><span class=\"line\">     &#123;<span class=\"attr\">id</span>: <span class=\"number\">3</span>, <span class=\"attr\">name</span>: <span class=\"string\">&quot;小孙&quot;</span>&#125;,</span><br><span class=\"line\">     &#123;<span class=\"attr\">id</span>: <span class=\"number\">1</span>, <span class=\"attr\">name</span>: <span class=\"string\">&quot;小周&quot;</span>&#125;,</span><br><span class=\"line\">     &#123;<span class=\"attr\">id</span>: <span class=\"number\">2</span>, <span class=\"attr\">name</span>: <span class=\"string\">&quot;小陈&quot;</span>&#125;,   </span><br><span class=\"line\">];</span><br><span class=\"line\"><span class=\"keyword\">let</span> personTem = &#123;&#125;</span><br><span class=\"line\"><span class=\"keyword\">let</span> finalList = person.<span class=\"title function_\">reduce</span>(<span class=\"function\">(<span class=\"params\">personList,element</span>)=&gt;</span>&#123;</span><br><span class=\"line\">  personTem[element.<span class=\"property\">id</span>] ? <span class=\"string\">&#x27;&#x27;</span> : personTem[element.<span class=\"property\">id</span>] = <span class=\"literal\">true</span> &amp;&amp; personList.<span class=\"title function_\">push</span>(element)</span><br><span class=\"line\">  <span class=\"keyword\">return</span> personList;</span><br><span class=\"line\">&#125;,[])</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(finalList)</span><br></pre></td></tr></table></figure>"},{"title":"当你换了新电脑需要做什么","date":"2020-07-12T09:16:26.000Z","_content":"\n<meta name=\"referrer\" content=\"no-referrer\"/>\n\n## 当你换了新电脑需要做什么\n\n### 基础环境\n\n1. node\n2. 安装node的基础上安装vue、vue-cli\n3. ","source":"_posts/当你换了新电脑需要做什么.md","raw":"---\n\ntitle: 当你换了新电脑需要做什么\ndate: 2020-07-12 17:16:26\ntags: [js]\n---\n\n<meta name=\"referrer\" content=\"no-referrer\"/>\n\n## 当你换了新电脑需要做什么\n\n### 基础环境\n\n1. node\n2. 安装node的基础上安装vue、vue-cli\n3. ","slug":"当你换了新电脑需要做什么","published":1,"updated":"2021-04-12T07:35:46.513Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl0uux6w2001o7sufaxd48di8","content":"<meta name=\"referrer\" content=\"no-referrer\"/>\n\n<h2 id=\"当你换了新电脑需要做什么\"><a href=\"#当你换了新电脑需要做什么\" class=\"headerlink\" title=\"当你换了新电脑需要做什么\"></a>当你换了新电脑需要做什么</h2><h3 id=\"基础环境\"><a href=\"#基础环境\" class=\"headerlink\" title=\"基础环境\"></a>基础环境</h3><ol>\n<li>node</li>\n<li>安装node的基础上安装vue、vue-cli</li>\n<li></li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<meta name=\"referrer\" content=\"no-referrer\"/>\n\n<h2 id=\"当你换了新电脑需要做什么\"><a href=\"#当你换了新电脑需要做什么\" class=\"headerlink\" title=\"当你换了新电脑需要做什么\"></a>当你换了新电脑需要做什么</h2><h3 id=\"基础环境\"><a href=\"#基础环境\" class=\"headerlink\" title=\"基础环境\"></a>基础环境</h3><ol>\n<li>node</li>\n<li>安装node的基础上安装vue、vue-cli</li>\n<li></li>\n</ol>\n"},{"title":"微信小程序日常","date":"2020-07-12T09:16:26.000Z","_content":"\n<meta name=\"referrer\" content=\"no-referrer\"/>\n\n## 微信小程序日常\n\n### 使用彩色的图标1\n\n```js\n配合阿里iconfont，下载icon项目，进入iconfont文件夹\nnpm install -g iconfont-tools\niconfont-tools\n在原来下载的目录中多出来一个文件夹\n打开文件夹选择其中的wxss文件引入到微信小程序中即可\n```\n\n使用如下：\n\n```js\n<icon class=\"t-icon t-icon-ziyuan9\"></icon>\nicon-ziyuan9就是iconfont中复制的class\n```\n\n### 编辑器打开默认页面\n\n```js\n将app.json中list顺序修改即可\n\"pages\": [\n    \"pages/mine/mine\",\n    \"pages/index/index\",\n    \"pages/userConsole/userConsole\",\n    \"pages/storageConsole/storageConsole\",\n    \"pages/databaseGuide/databaseGuide\",\n    \"pages/addFunction/addFunction\",\n    \"pages/deployFunctions/deployFunctions\",\n    \"pages/chooseLib/chooseLib\",\n    \"pages/openapi/openapi\",\n    \"pages/openapi/serverapi/serverapi\",\n    \"pages/openapi/callback/callback\",\n    \"pages/openapi/cloudid/cloudid\",\n    \"pages/im/im\",\n    \"pages/im/room/room\",\n    \"pages/mine\",\n    \"pages/recorder/recorder\"\n],\n```\n\n如上，总是会打开个人中心页面（mine页面）\n\n### 使用彩色的图标2\n\n阿里iconfont提供了Symbol类型的引入方式，拥有很多优点，记录下再小程序中的使用\n\n```js\nnpm install mini-program-iconfont-cli --save-dev\n\nnpx iconfont-init\n# 可传入配置输出路径\n# npx iconfont-init --output iconfont.json\n```\n\n初始化后会生成一个json配置文件,修改配置如下\n\n```js\n{\n  \"symbol_url\": \"//at.alicdn.com/t/font_2428200_oocwz3ghukn.js\",\n  \"save_dir\": \"miniprogram/components/iconfont\",\n  \"use_rpx\": true,\n  \"trim_icon_prefix\": \"icon\",\n  \"default_icon_size\": 50\n}\n```\n\nsymbol_url：将官网的地址引入\n\nsave_dir：根据自己的目录生成\n\n生成标准组件\n\n```js\n# 可传入配置文件路径\n# npx iconfont-XXXX --config iconfont.json\n\n# 微信小程序\nnpx iconfont-wechat\n\n# 支付宝小程序\nnpx iconfont-alipay\n\n# 百度小程序\nnpx iconfont-baidu\n\n# 头条小程序\nnpx iconfont-toutiao\n\n# QQ小程序\nnpx iconfont-qq\n```\n\n引入\n\n在根目录 的app.json文件中引入全局图标组件，避免每个page都引入，也可单个page引入\n\n```\n// 绝对路径\n{\n    \"usingComponents\": {\n      \"iconfont\": \"components/iconfont/iconfont\"\n    }\n}\n```\n\n使用组件\n\n```js\n// 原色彩\n<iconfont name=\"alipay\" />\n\n// 单色：红色\n<iconfont name=\"alipay\" color=\"red\" />\n\n// 多色：红色+橘色\n<iconfont name=\"alipay\" color=\"{{['red', 'orange']}}\" size=\"300\" />\n\n// 不同格式的颜色写法\n<iconfont name=\"alipay\" color=\"{{['#333', 'rgb(50, 124, 39)']}}\" />\n```\n\n","source":"_posts/微信小程序日常.md","raw":"---\n\ntitle: 微信小程序日常\ndate: 2020-07-12 17:16:26\ntags: [js,hexo]\n---\n\n<meta name=\"referrer\" content=\"no-referrer\"/>\n\n## 微信小程序日常\n\n### 使用彩色的图标1\n\n```js\n配合阿里iconfont，下载icon项目，进入iconfont文件夹\nnpm install -g iconfont-tools\niconfont-tools\n在原来下载的目录中多出来一个文件夹\n打开文件夹选择其中的wxss文件引入到微信小程序中即可\n```\n\n使用如下：\n\n```js\n<icon class=\"t-icon t-icon-ziyuan9\"></icon>\nicon-ziyuan9就是iconfont中复制的class\n```\n\n### 编辑器打开默认页面\n\n```js\n将app.json中list顺序修改即可\n\"pages\": [\n    \"pages/mine/mine\",\n    \"pages/index/index\",\n    \"pages/userConsole/userConsole\",\n    \"pages/storageConsole/storageConsole\",\n    \"pages/databaseGuide/databaseGuide\",\n    \"pages/addFunction/addFunction\",\n    \"pages/deployFunctions/deployFunctions\",\n    \"pages/chooseLib/chooseLib\",\n    \"pages/openapi/openapi\",\n    \"pages/openapi/serverapi/serverapi\",\n    \"pages/openapi/callback/callback\",\n    \"pages/openapi/cloudid/cloudid\",\n    \"pages/im/im\",\n    \"pages/im/room/room\",\n    \"pages/mine\",\n    \"pages/recorder/recorder\"\n],\n```\n\n如上，总是会打开个人中心页面（mine页面）\n\n### 使用彩色的图标2\n\n阿里iconfont提供了Symbol类型的引入方式，拥有很多优点，记录下再小程序中的使用\n\n```js\nnpm install mini-program-iconfont-cli --save-dev\n\nnpx iconfont-init\n# 可传入配置输出路径\n# npx iconfont-init --output iconfont.json\n```\n\n初始化后会生成一个json配置文件,修改配置如下\n\n```js\n{\n  \"symbol_url\": \"//at.alicdn.com/t/font_2428200_oocwz3ghukn.js\",\n  \"save_dir\": \"miniprogram/components/iconfont\",\n  \"use_rpx\": true,\n  \"trim_icon_prefix\": \"icon\",\n  \"default_icon_size\": 50\n}\n```\n\nsymbol_url：将官网的地址引入\n\nsave_dir：根据自己的目录生成\n\n生成标准组件\n\n```js\n# 可传入配置文件路径\n# npx iconfont-XXXX --config iconfont.json\n\n# 微信小程序\nnpx iconfont-wechat\n\n# 支付宝小程序\nnpx iconfont-alipay\n\n# 百度小程序\nnpx iconfont-baidu\n\n# 头条小程序\nnpx iconfont-toutiao\n\n# QQ小程序\nnpx iconfont-qq\n```\n\n引入\n\n在根目录 的app.json文件中引入全局图标组件，避免每个page都引入，也可单个page引入\n\n```\n// 绝对路径\n{\n    \"usingComponents\": {\n      \"iconfont\": \"components/iconfont/iconfont\"\n    }\n}\n```\n\n使用组件\n\n```js\n// 原色彩\n<iconfont name=\"alipay\" />\n\n// 单色：红色\n<iconfont name=\"alipay\" color=\"red\" />\n\n// 多色：红色+橘色\n<iconfont name=\"alipay\" color=\"{{['red', 'orange']}}\" size=\"300\" />\n\n// 不同格式的颜色写法\n<iconfont name=\"alipay\" color=\"{{['#333', 'rgb(50, 124, 39)']}}\" />\n```\n\n","slug":"微信小程序日常","published":1,"updated":"2021-04-13T06:01:02.344Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl0uux6w5001r7sufge8qeh6v","content":"<meta name=\"referrer\" content=\"no-referrer\"/>\n\n<h2 id=\"微信小程序日常\"><a href=\"#微信小程序日常\" class=\"headerlink\" title=\"微信小程序日常\"></a>微信小程序日常</h2><h3 id=\"使用彩色的图标1\"><a href=\"#使用彩色的图标1\" class=\"headerlink\" title=\"使用彩色的图标1\"></a>使用彩色的图标1</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">配合阿里iconfont，下载icon项目，进入iconfont文件夹</span><br><span class=\"line\">npm install -g iconfont-tools</span><br><span class=\"line\">iconfont-tools</span><br><span class=\"line\">在原来下载的目录中多出来一个文件夹</span><br><span class=\"line\">打开文件夹选择其中的wxss文件引入到微信小程序中即可</span><br></pre></td></tr></table></figure>\n\n<p>使用如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;icon <span class=\"keyword\">class</span>=<span class=\"string\">&quot;t-icon t-icon-ziyuan9&quot;</span>&gt;&lt;/icon&gt;</span><br><span class=\"line\">icon-ziyuan9就是iconfont中复制的<span class=\"keyword\">class</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"编辑器打开默认页面\"><a href=\"#编辑器打开默认页面\" class=\"headerlink\" title=\"编辑器打开默认页面\"></a>编辑器打开默认页面</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">将app.<span class=\"property\">json</span>中list顺序修改即可</span><br><span class=\"line\"><span class=\"string\">&quot;pages&quot;</span>: [</span><br><span class=\"line\">    <span class=\"string\">&quot;pages/mine/mine&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;pages/index/index&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;pages/userConsole/userConsole&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;pages/storageConsole/storageConsole&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;pages/databaseGuide/databaseGuide&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;pages/addFunction/addFunction&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;pages/deployFunctions/deployFunctions&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;pages/chooseLib/chooseLib&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;pages/openapi/openapi&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;pages/openapi/serverapi/serverapi&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;pages/openapi/callback/callback&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;pages/openapi/cloudid/cloudid&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;pages/im/im&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;pages/im/room/room&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;pages/mine&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;pages/recorder/recorder&quot;</span></span><br><span class=\"line\">],</span><br></pre></td></tr></table></figure>\n\n<p>如上，总是会打开个人中心页面（mine页面）</p>\n<h3 id=\"使用彩色的图标2\"><a href=\"#使用彩色的图标2\" class=\"headerlink\" title=\"使用彩色的图标2\"></a>使用彩色的图标2</h3><p>阿里iconfont提供了Symbol类型的引入方式，拥有很多优点，记录下再小程序中的使用</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install mini-program-iconfont-cli --save-dev</span><br><span class=\"line\"></span><br><span class=\"line\">npx iconfont-init</span><br><span class=\"line\"># 可传入配置输出路径</span><br><span class=\"line\"># npx iconfont-init --output iconfont.<span class=\"property\">json</span></span><br></pre></td></tr></table></figure>\n\n<p>初始化后会生成一个json配置文件,修改配置如下</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">&quot;symbol_url&quot;</span>: <span class=\"string\">&quot;//at.alicdn.com/t/font_2428200_oocwz3ghukn.js&quot;</span>,</span><br><span class=\"line\">  <span class=\"string\">&quot;save_dir&quot;</span>: <span class=\"string\">&quot;miniprogram/components/iconfont&quot;</span>,</span><br><span class=\"line\">  <span class=\"string\">&quot;use_rpx&quot;</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  <span class=\"string\">&quot;trim_icon_prefix&quot;</span>: <span class=\"string\">&quot;icon&quot;</span>,</span><br><span class=\"line\">  <span class=\"string\">&quot;default_icon_size&quot;</span>: <span class=\"number\">50</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>symbol_url：将官网的地址引入</p>\n<p>save_dir：根据自己的目录生成</p>\n<p>生成标准组件</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 可传入配置文件路径</span><br><span class=\"line\"># npx iconfont-<span class=\"variable constant_\">XXXX</span> --config iconfont.<span class=\"property\">json</span></span><br><span class=\"line\"></span><br><span class=\"line\"># 微信小程序</span><br><span class=\"line\">npx iconfont-wechat</span><br><span class=\"line\"></span><br><span class=\"line\"># 支付宝小程序</span><br><span class=\"line\">npx iconfont-alipay</span><br><span class=\"line\"></span><br><span class=\"line\"># 百度小程序</span><br><span class=\"line\">npx iconfont-baidu</span><br><span class=\"line\"></span><br><span class=\"line\"># 头条小程序</span><br><span class=\"line\">npx iconfont-toutiao</span><br><span class=\"line\"></span><br><span class=\"line\"># <span class=\"variable constant_\">QQ</span>小程序</span><br><span class=\"line\">npx iconfont-qq</span><br></pre></td></tr></table></figure>\n\n<p>引入</p>\n<p>在根目录 的app.json文件中引入全局图标组件，避免每个page都引入，也可单个page引入</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 绝对路径</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    &quot;usingComponents&quot;: &#123;</span><br><span class=\"line\">      &quot;iconfont&quot;: &quot;components/iconfont/iconfont&quot;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>使用组件</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 原色彩</span></span><br><span class=\"line\">&lt;iconfont name=<span class=\"string\">&quot;alipay&quot;</span> /&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 单色：红色</span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">iconfont</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;alipay&quot;</span> <span class=\"attr\">color</span>=<span class=\"string\">&quot;red&quot;</span> /&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 多色：红色+橘色</span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">iconfont</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;alipay&quot;</span> <span class=\"attr\">color</span>=<span class=\"string\">&quot;&#123;&#123;[&#x27;red&#x27;, &#x27;orange&#x27;]&#125;&#125;&quot;</span> <span class=\"attr\">size</span>=<span class=\"string\">&quot;300&quot;</span> /&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 不同格式的颜色写法</span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">iconfont</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;alipay&quot;</span> <span class=\"attr\">color</span>=<span class=\"string\">&quot;&#123;&#123;[&#x27;#333&#x27;, &#x27;rgb(50, 124, 39)&#x27;]&#125;&#125;&quot;</span> /&gt;</span></span></span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"","more":"<meta name=\"referrer\" content=\"no-referrer\"/>\n\n<h2 id=\"微信小程序日常\"><a href=\"#微信小程序日常\" class=\"headerlink\" title=\"微信小程序日常\"></a>微信小程序日常</h2><h3 id=\"使用彩色的图标1\"><a href=\"#使用彩色的图标1\" class=\"headerlink\" title=\"使用彩色的图标1\"></a>使用彩色的图标1</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">配合阿里iconfont，下载icon项目，进入iconfont文件夹</span><br><span class=\"line\">npm install -g iconfont-tools</span><br><span class=\"line\">iconfont-tools</span><br><span class=\"line\">在原来下载的目录中多出来一个文件夹</span><br><span class=\"line\">打开文件夹选择其中的wxss文件引入到微信小程序中即可</span><br></pre></td></tr></table></figure>\n\n<p>使用如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;icon <span class=\"keyword\">class</span>=<span class=\"string\">&quot;t-icon t-icon-ziyuan9&quot;</span>&gt;&lt;/icon&gt;</span><br><span class=\"line\">icon-ziyuan9就是iconfont中复制的<span class=\"keyword\">class</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"编辑器打开默认页面\"><a href=\"#编辑器打开默认页面\" class=\"headerlink\" title=\"编辑器打开默认页面\"></a>编辑器打开默认页面</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">将app.<span class=\"property\">json</span>中list顺序修改即可</span><br><span class=\"line\"><span class=\"string\">&quot;pages&quot;</span>: [</span><br><span class=\"line\">    <span class=\"string\">&quot;pages/mine/mine&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;pages/index/index&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;pages/userConsole/userConsole&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;pages/storageConsole/storageConsole&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;pages/databaseGuide/databaseGuide&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;pages/addFunction/addFunction&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;pages/deployFunctions/deployFunctions&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;pages/chooseLib/chooseLib&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;pages/openapi/openapi&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;pages/openapi/serverapi/serverapi&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;pages/openapi/callback/callback&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;pages/openapi/cloudid/cloudid&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;pages/im/im&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;pages/im/room/room&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;pages/mine&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;pages/recorder/recorder&quot;</span></span><br><span class=\"line\">],</span><br></pre></td></tr></table></figure>\n\n<p>如上，总是会打开个人中心页面（mine页面）</p>\n<h3 id=\"使用彩色的图标2\"><a href=\"#使用彩色的图标2\" class=\"headerlink\" title=\"使用彩色的图标2\"></a>使用彩色的图标2</h3><p>阿里iconfont提供了Symbol类型的引入方式，拥有很多优点，记录下再小程序中的使用</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install mini-program-iconfont-cli --save-dev</span><br><span class=\"line\"></span><br><span class=\"line\">npx iconfont-init</span><br><span class=\"line\"># 可传入配置输出路径</span><br><span class=\"line\"># npx iconfont-init --output iconfont.<span class=\"property\">json</span></span><br></pre></td></tr></table></figure>\n\n<p>初始化后会生成一个json配置文件,修改配置如下</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">&quot;symbol_url&quot;</span>: <span class=\"string\">&quot;//at.alicdn.com/t/font_2428200_oocwz3ghukn.js&quot;</span>,</span><br><span class=\"line\">  <span class=\"string\">&quot;save_dir&quot;</span>: <span class=\"string\">&quot;miniprogram/components/iconfont&quot;</span>,</span><br><span class=\"line\">  <span class=\"string\">&quot;use_rpx&quot;</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  <span class=\"string\">&quot;trim_icon_prefix&quot;</span>: <span class=\"string\">&quot;icon&quot;</span>,</span><br><span class=\"line\">  <span class=\"string\">&quot;default_icon_size&quot;</span>: <span class=\"number\">50</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>symbol_url：将官网的地址引入</p>\n<p>save_dir：根据自己的目录生成</p>\n<p>生成标准组件</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 可传入配置文件路径</span><br><span class=\"line\"># npx iconfont-<span class=\"variable constant_\">XXXX</span> --config iconfont.<span class=\"property\">json</span></span><br><span class=\"line\"></span><br><span class=\"line\"># 微信小程序</span><br><span class=\"line\">npx iconfont-wechat</span><br><span class=\"line\"></span><br><span class=\"line\"># 支付宝小程序</span><br><span class=\"line\">npx iconfont-alipay</span><br><span class=\"line\"></span><br><span class=\"line\"># 百度小程序</span><br><span class=\"line\">npx iconfont-baidu</span><br><span class=\"line\"></span><br><span class=\"line\"># 头条小程序</span><br><span class=\"line\">npx iconfont-toutiao</span><br><span class=\"line\"></span><br><span class=\"line\"># <span class=\"variable constant_\">QQ</span>小程序</span><br><span class=\"line\">npx iconfont-qq</span><br></pre></td></tr></table></figure>\n\n<p>引入</p>\n<p>在根目录 的app.json文件中引入全局图标组件，避免每个page都引入，也可单个page引入</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 绝对路径</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    &quot;usingComponents&quot;: &#123;</span><br><span class=\"line\">      &quot;iconfont&quot;: &quot;components/iconfont/iconfont&quot;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>使用组件</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 原色彩</span></span><br><span class=\"line\">&lt;iconfont name=<span class=\"string\">&quot;alipay&quot;</span> /&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 单色：红色</span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">iconfont</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;alipay&quot;</span> <span class=\"attr\">color</span>=<span class=\"string\">&quot;red&quot;</span> /&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 多色：红色+橘色</span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">iconfont</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;alipay&quot;</span> <span class=\"attr\">color</span>=<span class=\"string\">&quot;&#123;&#123;[&#x27;red&#x27;, &#x27;orange&#x27;]&#125;&#125;&quot;</span> <span class=\"attr\">size</span>=<span class=\"string\">&quot;300&quot;</span> /&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 不同格式的颜色写法</span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">iconfont</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;alipay&quot;</span> <span class=\"attr\">color</span>=<span class=\"string\">&quot;&#123;&#123;[&#x27;#333&#x27;, &#x27;rgb(50, 124, 39)&#x27;]&#125;&#125;&quot;</span> /&gt;</span></span></span><br></pre></td></tr></table></figure>\n\n"},{"title":"正则记录","date":"2020-07-12T09:16:26.000Z","_content":"\n<meta name=\"referrer\" content=\"no-referrer\"/>\n\n### 正则记录\n\n1. 手机号码\n\n   ```js\n   !/^1[3-9]\\d{9}$/.test()\n   ```\n\n2. 正整数\n\n3. 密码\n\n   长度8-30位，密码必须包含数字、大/小写字母、特殊字符中任意三种\n\n   ```js\n   !/^(?![a-zA-Z]+$)(?![A-Z0-9]+$)(?![A-Z\\W_]+$)(?![a-z0-9]+$)(?![a-z\\W_]+$)(?![0-9\\W_]+$)[a-zA-Z0-9\\W_]{8,30}$/.test()\n   ```\n\n4. 日期\n\n5. 座机\n\n   ```js\n   /^(\\(\\d{3,4}\\)|\\d{3,4}-|\\s)?\\d{7,14}$/\n   ```\n\n6. 设定","source":"_posts/正则记录.md","raw":"---\ntitle: 正则记录\ndate: 2020-07-12 17:16:26\ntags: [js,hexo]\n---\n\n<meta name=\"referrer\" content=\"no-referrer\"/>\n\n### 正则记录\n\n1. 手机号码\n\n   ```js\n   !/^1[3-9]\\d{9}$/.test()\n   ```\n\n2. 正整数\n\n3. 密码\n\n   长度8-30位，密码必须包含数字、大/小写字母、特殊字符中任意三种\n\n   ```js\n   !/^(?![a-zA-Z]+$)(?![A-Z0-9]+$)(?![A-Z\\W_]+$)(?![a-z0-9]+$)(?![a-z\\W_]+$)(?![0-9\\W_]+$)[a-zA-Z0-9\\W_]{8,30}$/.test()\n   ```\n\n4. 日期\n\n5. 座机\n\n   ```js\n   /^(\\(\\d{3,4}\\)|\\d{3,4}-|\\s)?\\d{7,14}$/\n   ```\n\n6. 设定","slug":"正则记录","published":1,"updated":"2021-02-03T09:08:12.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl0uux6w5001t7suf023ehoht","content":"<meta name=\"referrer\" content=\"no-referrer\"/>\n\n<h3 id=\"正则记录\"><a href=\"#正则记录\" class=\"headerlink\" title=\"正则记录\"></a>正则记录</h3><ol>\n<li><p>手机号码</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">!<span class=\"regexp\">/^1[3-9]\\d&#123;9&#125;$/</span>.<span class=\"title function_\">test</span>()</span><br></pre></td></tr></table></figure></li>\n<li><p>正整数</p>\n</li>\n<li><p>密码</p>\n<p>长度8-30位，密码必须包含数字、大/小写字母、特殊字符中任意三种</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">!<span class=\"regexp\">/^(?![a-zA-Z]+$)(?![A-Z0-9]+$)(?![A-Z\\W_]+$)(?![a-z0-9]+$)(?![a-z\\W_]+$)(?![0-9\\W_]+$)[a-zA-Z0-9\\W_]&#123;8,30&#125;$/</span>.<span class=\"title function_\">test</span>()</span><br></pre></td></tr></table></figure></li>\n<li><p>日期</p>\n</li>\n<li><p>座机</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/^(\\(\\d&#123;<span class=\"number\">3</span>,<span class=\"number\">4</span>&#125;\\)|\\d&#123;<span class=\"number\">3</span>,<span class=\"number\">4</span>&#125;-|\\s)?\\d&#123;<span class=\"number\">7</span>,<span class=\"number\">14</span>&#125;$/</span><br></pre></td></tr></table></figure></li>\n<li><p>设定</p>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<meta name=\"referrer\" content=\"no-referrer\"/>\n\n<h3 id=\"正则记录\"><a href=\"#正则记录\" class=\"headerlink\" title=\"正则记录\"></a>正则记录</h3><ol>\n<li><p>手机号码</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">!<span class=\"regexp\">/^1[3-9]\\d&#123;9&#125;$/</span>.<span class=\"title function_\">test</span>()</span><br></pre></td></tr></table></figure></li>\n<li><p>正整数</p>\n</li>\n<li><p>密码</p>\n<p>长度8-30位，密码必须包含数字、大/小写字母、特殊字符中任意三种</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">!<span class=\"regexp\">/^(?![a-zA-Z]+$)(?![A-Z0-9]+$)(?![A-Z\\W_]+$)(?![a-z0-9]+$)(?![a-z\\W_]+$)(?![0-9\\W_]+$)[a-zA-Z0-9\\W_]&#123;8,30&#125;$/</span>.<span class=\"title function_\">test</span>()</span><br></pre></td></tr></table></figure></li>\n<li><p>日期</p>\n</li>\n<li><p>座机</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/^(\\(\\d&#123;<span class=\"number\">3</span>,<span class=\"number\">4</span>&#125;\\)|\\d&#123;<span class=\"number\">3</span>,<span class=\"number\">4</span>&#125;-|\\s)?\\d&#123;<span class=\"number\">7</span>,<span class=\"number\">14</span>&#125;$/</span><br></pre></td></tr></table></figure></li>\n<li><p>设定</p>\n</li>\n</ol>\n"},{"title":"时间小工具","date":"2020-07-12T09:16:26.000Z","_content":"\n<meta name=\"referrer\" content=\"no-referrer\"/>\n\n## 时间小工具\n\n关于处理js时间相关的一些小函数\n\n1. 对象转字符串\n\n   ```js\n     dateToString: function makeString(obj) {\n       //将传入的date对象,形如\n       // {\n       // \t\"year\": \"2020\",\n       // \t\"month\": \"11\",\n       // \t\"timestamp\": 1605605844\n       // }\n       // 改成成\"2020-11\"类型字符串\n       let dateTem = ''\n       let changeString = '-'\n       if (obj) {\n         for (const key in obj) {\n           if (key != 'timestamp') {\n             if (key == 'hour') {\n               changeString = ' '\n             } else if (key == 'minute' || key == 'second') {\n               changeString = ':'\n             }\n             const element = obj[key]\n             dateTem = dateTem + changeString + element\n           }\n         }\n         console.log(dateTem.slice(1, dateTem.length))\n         return dateTem.slice(1, dateTem.length)\n       }\n     },\n   ```\n\n2.   将时间戳转化为xxxx-xx-xx xx:xx:xx\n\n   ```js\n    timestampToString: function timestampMake(timestamp) {\n       // 将时间戳转化为xxxx-xx-xx xx:xx:xx\n       let d = new Date(timestamp * 1) //根据时间戳生成的时间对象\n       let date =\n         d.getFullYear() +\n         '-' +\n         (d.getMonth() + 1) +\n         '-' +\n         d.getDate() +\n         ' ' +\n         d.getHours() +\n         ':' +\n         d.getMinutes() +\n         ':' +\n         d.getSeconds()\n       return date\n     },\n   ```\n\n3. 将xxxx-xx-xx xx:xx:xx转化为时间戳\n\n   ```js\n     stringToTimestamp: function stringMake(string) {\n       // let date = '2015-03-05 17:59:00.0';\n       let date = string.substring(0, 19)\n       date = date.replace(/-/g, '/')\n       console.log(date, '转化的时间字符串')\n       let timestamp = new Date(date).getTime()\n       return timestamp\n     },\n   ```\n\n4. 将传入的部分时间字符串,补全为xxxx-xx-xx xx:xx:xx\n\n   ```js\n   makeDateComplete: function completeMake(string, type) {\n       //将传入的部分时间字符串,补全为xxxx-xx-xx xx:xx:xx\n       let tem = JSON.parse(JSON.stringify(string))\n   \n       let dateList = tem.split('-')\n       if (dateList.length < 3) {\n         //形如 2020-11\n         if (type == 'start') {\n           tem = tem + '-01 00:00:00'\n         } else {\n           //dosomething\n         }\n         return tem\n       } else {\n         //形如 2020-11-08\n         if (type == 'start') {\n           tem = tem + ' 00:00:00'\n         } else {\n           tem = tem + ' 23:59:59'\n         }\n         return tem\n       }\n     },\n   ```\n\n5. 传入形式：2020-08-08 00：00：00，传出形式：2020-08-08\n\n   ```js\n   cutDate: function cutDate(date) {\n       //传入形式：2020-08-08 00：00：00，传出形式：2020-08-08\n       let fmt = ''\n       if (date) {\n         fmt = date.split(' ')[0]\n       }\n       return fmt\n     },\n   ```\n\n   ","source":"_posts/时间小工具.md","raw":"---\ntitle: 时间小工具\ndate: 2020-07-12 17:16:26\ntags: [js,hexo]\n---\n\n<meta name=\"referrer\" content=\"no-referrer\"/>\n\n## 时间小工具\n\n关于处理js时间相关的一些小函数\n\n1. 对象转字符串\n\n   ```js\n     dateToString: function makeString(obj) {\n       //将传入的date对象,形如\n       // {\n       // \t\"year\": \"2020\",\n       // \t\"month\": \"11\",\n       // \t\"timestamp\": 1605605844\n       // }\n       // 改成成\"2020-11\"类型字符串\n       let dateTem = ''\n       let changeString = '-'\n       if (obj) {\n         for (const key in obj) {\n           if (key != 'timestamp') {\n             if (key == 'hour') {\n               changeString = ' '\n             } else if (key == 'minute' || key == 'second') {\n               changeString = ':'\n             }\n             const element = obj[key]\n             dateTem = dateTem + changeString + element\n           }\n         }\n         console.log(dateTem.slice(1, dateTem.length))\n         return dateTem.slice(1, dateTem.length)\n       }\n     },\n   ```\n\n2.   将时间戳转化为xxxx-xx-xx xx:xx:xx\n\n   ```js\n    timestampToString: function timestampMake(timestamp) {\n       // 将时间戳转化为xxxx-xx-xx xx:xx:xx\n       let d = new Date(timestamp * 1) //根据时间戳生成的时间对象\n       let date =\n         d.getFullYear() +\n         '-' +\n         (d.getMonth() + 1) +\n         '-' +\n         d.getDate() +\n         ' ' +\n         d.getHours() +\n         ':' +\n         d.getMinutes() +\n         ':' +\n         d.getSeconds()\n       return date\n     },\n   ```\n\n3. 将xxxx-xx-xx xx:xx:xx转化为时间戳\n\n   ```js\n     stringToTimestamp: function stringMake(string) {\n       // let date = '2015-03-05 17:59:00.0';\n       let date = string.substring(0, 19)\n       date = date.replace(/-/g, '/')\n       console.log(date, '转化的时间字符串')\n       let timestamp = new Date(date).getTime()\n       return timestamp\n     },\n   ```\n\n4. 将传入的部分时间字符串,补全为xxxx-xx-xx xx:xx:xx\n\n   ```js\n   makeDateComplete: function completeMake(string, type) {\n       //将传入的部分时间字符串,补全为xxxx-xx-xx xx:xx:xx\n       let tem = JSON.parse(JSON.stringify(string))\n   \n       let dateList = tem.split('-')\n       if (dateList.length < 3) {\n         //形如 2020-11\n         if (type == 'start') {\n           tem = tem + '-01 00:00:00'\n         } else {\n           //dosomething\n         }\n         return tem\n       } else {\n         //形如 2020-11-08\n         if (type == 'start') {\n           tem = tem + ' 00:00:00'\n         } else {\n           tem = tem + ' 23:59:59'\n         }\n         return tem\n       }\n     },\n   ```\n\n5. 传入形式：2020-08-08 00：00：00，传出形式：2020-08-08\n\n   ```js\n   cutDate: function cutDate(date) {\n       //传入形式：2020-08-08 00：00：00，传出形式：2020-08-08\n       let fmt = ''\n       if (date) {\n         fmt = date.split(' ')[0]\n       }\n       return fmt\n     },\n   ```\n\n   ","slug":"时间小工具","published":1,"updated":"2021-01-20T02:32:32.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl0uux6w6001v7suf988ib7f2","content":"<meta name=\"referrer\" content=\"no-referrer\"/>\n\n<h2 id=\"时间小工具\"><a href=\"#时间小工具\" class=\"headerlink\" title=\"时间小工具\"></a>时间小工具</h2><p>关于处理js时间相关的一些小函数</p>\n<ol>\n<li><p>对象转字符串</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">dateToString</span>: <span class=\"keyword\">function</span> <span class=\"title function_\">makeString</span>(<span class=\"params\">obj</span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">//将传入的date对象,形如</span></span><br><span class=\"line\">  <span class=\"comment\">// &#123;</span></span><br><span class=\"line\">  <span class=\"comment\">// \t&quot;year&quot;: &quot;2020&quot;,</span></span><br><span class=\"line\">  <span class=\"comment\">// \t&quot;month&quot;: &quot;11&quot;,</span></span><br><span class=\"line\">  <span class=\"comment\">// \t&quot;timestamp&quot;: 1605605844</span></span><br><span class=\"line\">  <span class=\"comment\">// &#125;</span></span><br><span class=\"line\">  <span class=\"comment\">// 改成成&quot;2020-11&quot;类型字符串</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> dateTem = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> changeString = <span class=\"string\">&#x27;-&#x27;</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (obj) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">const</span> key <span class=\"keyword\">in</span> obj) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (key != <span class=\"string\">&#x27;timestamp&#x27;</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (key == <span class=\"string\">&#x27;hour&#x27;</span>) &#123;</span><br><span class=\"line\">          changeString = <span class=\"string\">&#x27; &#x27;</span></span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (key == <span class=\"string\">&#x27;minute&#x27;</span> || key == <span class=\"string\">&#x27;second&#x27;</span>) &#123;</span><br><span class=\"line\">          changeString = <span class=\"string\">&#x27;:&#x27;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> element = obj[key]</span><br><span class=\"line\">        dateTem = dateTem + changeString + element</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(dateTem.<span class=\"title function_\">slice</span>(<span class=\"number\">1</span>, dateTem.<span class=\"property\">length</span>))</span><br><span class=\"line\">    <span class=\"keyword\">return</span> dateTem.<span class=\"title function_\">slice</span>(<span class=\"number\">1</span>, dateTem.<span class=\"property\">length</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure></li>\n<li><p>  将时间戳转化为xxxx-xx-xx xx:xx:xx</p>\n</li>\n</ol>\n   <figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">timestampToString</span>: <span class=\"keyword\">function</span> <span class=\"title function_\">timestampMake</span>(<span class=\"params\">timestamp</span>) &#123;</span><br><span class=\"line\">   <span class=\"comment\">// 将时间戳转化为xxxx-xx-xx xx:xx:xx</span></span><br><span class=\"line\">   <span class=\"keyword\">let</span> d = <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>(timestamp * <span class=\"number\">1</span>) <span class=\"comment\">//根据时间戳生成的时间对象</span></span><br><span class=\"line\">   <span class=\"keyword\">let</span> date =</span><br><span class=\"line\">     d.<span class=\"title function_\">getFullYear</span>() +</span><br><span class=\"line\">     <span class=\"string\">&#x27;-&#x27;</span> +</span><br><span class=\"line\">     (d.<span class=\"title function_\">getMonth</span>() + <span class=\"number\">1</span>) +</span><br><span class=\"line\">     <span class=\"string\">&#x27;-&#x27;</span> +</span><br><span class=\"line\">     d.<span class=\"title function_\">getDate</span>() +</span><br><span class=\"line\">     <span class=\"string\">&#x27; &#x27;</span> +</span><br><span class=\"line\">     d.<span class=\"title function_\">getHours</span>() +</span><br><span class=\"line\">     <span class=\"string\">&#x27;:&#x27;</span> +</span><br><span class=\"line\">     d.<span class=\"title function_\">getMinutes</span>() +</span><br><span class=\"line\">     <span class=\"string\">&#x27;:&#x27;</span> +</span><br><span class=\"line\">     d.<span class=\"title function_\">getSeconds</span>()</span><br><span class=\"line\">   <span class=\"keyword\">return</span> date</span><br><span class=\"line\"> &#125;,</span><br></pre></td></tr></table></figure>\n\n<ol start=\"3\">\n<li><p>将xxxx-xx-xx xx:xx:xx转化为时间戳</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">stringToTimestamp</span>: <span class=\"keyword\">function</span> <span class=\"title function_\">stringMake</span>(<span class=\"params\">string</span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// let date = &#x27;2015-03-05 17:59:00.0&#x27;;</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> date = string.<span class=\"title function_\">substring</span>(<span class=\"number\">0</span>, <span class=\"number\">19</span>)</span><br><span class=\"line\">  date = date.<span class=\"title function_\">replace</span>(<span class=\"regexp\">/-/g</span>, <span class=\"string\">&#x27;/&#x27;</span>)</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(date, <span class=\"string\">&#x27;转化的时间字符串&#x27;</span>)</span><br><span class=\"line\">  <span class=\"keyword\">let</span> timestamp = <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>(date).<span class=\"title function_\">getTime</span>()</span><br><span class=\"line\">  <span class=\"keyword\">return</span> timestamp</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure></li>\n<li><p>将传入的部分时间字符串,补全为xxxx-xx-xx xx:xx:xx</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">makeDateComplete</span>: <span class=\"keyword\">function</span> <span class=\"title function_\">completeMake</span>(<span class=\"params\">string, type</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">//将传入的部分时间字符串,补全为xxxx-xx-xx xx:xx:xx</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> tem = <span class=\"title class_\">JSON</span>.<span class=\"title function_\">parse</span>(<span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(string))</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">let</span> dateList = tem.<span class=\"title function_\">split</span>(<span class=\"string\">&#x27;-&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (dateList.<span class=\"property\">length</span> &lt; <span class=\"number\">3</span>) &#123;</span><br><span class=\"line\">      <span class=\"comment\">//形如 2020-11</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (type == <span class=\"string\">&#x27;start&#x27;</span>) &#123;</span><br><span class=\"line\">        tem = tem + <span class=\"string\">&#x27;-01 00:00:00&#x27;</span></span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//dosomething</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> tem</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"comment\">//形如 2020-11-08</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (type == <span class=\"string\">&#x27;start&#x27;</span>) &#123;</span><br><span class=\"line\">        tem = tem + <span class=\"string\">&#x27; 00:00:00&#x27;</span></span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        tem = tem + <span class=\"string\">&#x27; 23:59:59&#x27;</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> tem</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br></pre></td></tr></table></figure></li>\n<li><p>传入形式：2020-08-08 00：00：00，传出形式：2020-08-08</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">cutDate</span>: <span class=\"keyword\">function</span> <span class=\"title function_\">cutDate</span>(<span class=\"params\">date</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">//传入形式：2020-08-08 00：00：00，传出形式：2020-08-08</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> fmt = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (date) &#123;</span><br><span class=\"line\">      fmt = date.<span class=\"title function_\">split</span>(<span class=\"string\">&#x27; &#x27;</span>)[<span class=\"number\">0</span>]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> fmt</span><br><span class=\"line\">  &#125;,</span><br></pre></td></tr></table></figure></li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<meta name=\"referrer\" content=\"no-referrer\"/>\n\n<h2 id=\"时间小工具\"><a href=\"#时间小工具\" class=\"headerlink\" title=\"时间小工具\"></a>时间小工具</h2><p>关于处理js时间相关的一些小函数</p>\n<ol>\n<li><p>对象转字符串</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">dateToString</span>: <span class=\"keyword\">function</span> <span class=\"title function_\">makeString</span>(<span class=\"params\">obj</span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">//将传入的date对象,形如</span></span><br><span class=\"line\">  <span class=\"comment\">// &#123;</span></span><br><span class=\"line\">  <span class=\"comment\">// \t&quot;year&quot;: &quot;2020&quot;,</span></span><br><span class=\"line\">  <span class=\"comment\">// \t&quot;month&quot;: &quot;11&quot;,</span></span><br><span class=\"line\">  <span class=\"comment\">// \t&quot;timestamp&quot;: 1605605844</span></span><br><span class=\"line\">  <span class=\"comment\">// &#125;</span></span><br><span class=\"line\">  <span class=\"comment\">// 改成成&quot;2020-11&quot;类型字符串</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> dateTem = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> changeString = <span class=\"string\">&#x27;-&#x27;</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (obj) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">const</span> key <span class=\"keyword\">in</span> obj) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (key != <span class=\"string\">&#x27;timestamp&#x27;</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (key == <span class=\"string\">&#x27;hour&#x27;</span>) &#123;</span><br><span class=\"line\">          changeString = <span class=\"string\">&#x27; &#x27;</span></span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (key == <span class=\"string\">&#x27;minute&#x27;</span> || key == <span class=\"string\">&#x27;second&#x27;</span>) &#123;</span><br><span class=\"line\">          changeString = <span class=\"string\">&#x27;:&#x27;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> element = obj[key]</span><br><span class=\"line\">        dateTem = dateTem + changeString + element</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(dateTem.<span class=\"title function_\">slice</span>(<span class=\"number\">1</span>, dateTem.<span class=\"property\">length</span>))</span><br><span class=\"line\">    <span class=\"keyword\">return</span> dateTem.<span class=\"title function_\">slice</span>(<span class=\"number\">1</span>, dateTem.<span class=\"property\">length</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure></li>\n<li><p>  将时间戳转化为xxxx-xx-xx xx:xx:xx</p>\n</li>\n</ol>\n   <figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">timestampToString</span>: <span class=\"keyword\">function</span> <span class=\"title function_\">timestampMake</span>(<span class=\"params\">timestamp</span>) &#123;</span><br><span class=\"line\">   <span class=\"comment\">// 将时间戳转化为xxxx-xx-xx xx:xx:xx</span></span><br><span class=\"line\">   <span class=\"keyword\">let</span> d = <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>(timestamp * <span class=\"number\">1</span>) <span class=\"comment\">//根据时间戳生成的时间对象</span></span><br><span class=\"line\">   <span class=\"keyword\">let</span> date =</span><br><span class=\"line\">     d.<span class=\"title function_\">getFullYear</span>() +</span><br><span class=\"line\">     <span class=\"string\">&#x27;-&#x27;</span> +</span><br><span class=\"line\">     (d.<span class=\"title function_\">getMonth</span>() + <span class=\"number\">1</span>) +</span><br><span class=\"line\">     <span class=\"string\">&#x27;-&#x27;</span> +</span><br><span class=\"line\">     d.<span class=\"title function_\">getDate</span>() +</span><br><span class=\"line\">     <span class=\"string\">&#x27; &#x27;</span> +</span><br><span class=\"line\">     d.<span class=\"title function_\">getHours</span>() +</span><br><span class=\"line\">     <span class=\"string\">&#x27;:&#x27;</span> +</span><br><span class=\"line\">     d.<span class=\"title function_\">getMinutes</span>() +</span><br><span class=\"line\">     <span class=\"string\">&#x27;:&#x27;</span> +</span><br><span class=\"line\">     d.<span class=\"title function_\">getSeconds</span>()</span><br><span class=\"line\">   <span class=\"keyword\">return</span> date</span><br><span class=\"line\"> &#125;,</span><br></pre></td></tr></table></figure>\n\n<ol start=\"3\">\n<li><p>将xxxx-xx-xx xx:xx:xx转化为时间戳</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">stringToTimestamp</span>: <span class=\"keyword\">function</span> <span class=\"title function_\">stringMake</span>(<span class=\"params\">string</span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// let date = &#x27;2015-03-05 17:59:00.0&#x27;;</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> date = string.<span class=\"title function_\">substring</span>(<span class=\"number\">0</span>, <span class=\"number\">19</span>)</span><br><span class=\"line\">  date = date.<span class=\"title function_\">replace</span>(<span class=\"regexp\">/-/g</span>, <span class=\"string\">&#x27;/&#x27;</span>)</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(date, <span class=\"string\">&#x27;转化的时间字符串&#x27;</span>)</span><br><span class=\"line\">  <span class=\"keyword\">let</span> timestamp = <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>(date).<span class=\"title function_\">getTime</span>()</span><br><span class=\"line\">  <span class=\"keyword\">return</span> timestamp</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure></li>\n<li><p>将传入的部分时间字符串,补全为xxxx-xx-xx xx:xx:xx</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">makeDateComplete</span>: <span class=\"keyword\">function</span> <span class=\"title function_\">completeMake</span>(<span class=\"params\">string, type</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">//将传入的部分时间字符串,补全为xxxx-xx-xx xx:xx:xx</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> tem = <span class=\"title class_\">JSON</span>.<span class=\"title function_\">parse</span>(<span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(string))</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">let</span> dateList = tem.<span class=\"title function_\">split</span>(<span class=\"string\">&#x27;-&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (dateList.<span class=\"property\">length</span> &lt; <span class=\"number\">3</span>) &#123;</span><br><span class=\"line\">      <span class=\"comment\">//形如 2020-11</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (type == <span class=\"string\">&#x27;start&#x27;</span>) &#123;</span><br><span class=\"line\">        tem = tem + <span class=\"string\">&#x27;-01 00:00:00&#x27;</span></span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//dosomething</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> tem</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"comment\">//形如 2020-11-08</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (type == <span class=\"string\">&#x27;start&#x27;</span>) &#123;</span><br><span class=\"line\">        tem = tem + <span class=\"string\">&#x27; 00:00:00&#x27;</span></span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        tem = tem + <span class=\"string\">&#x27; 23:59:59&#x27;</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> tem</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br></pre></td></tr></table></figure></li>\n<li><p>传入形式：2020-08-08 00：00：00，传出形式：2020-08-08</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">cutDate</span>: <span class=\"keyword\">function</span> <span class=\"title function_\">cutDate</span>(<span class=\"params\">date</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">//传入形式：2020-08-08 00：00：00，传出形式：2020-08-08</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> fmt = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (date) &#123;</span><br><span class=\"line\">      fmt = date.<span class=\"title function_\">split</span>(<span class=\"string\">&#x27; &#x27;</span>)[<span class=\"number\">0</span>]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> fmt</span><br><span class=\"line\">  &#125;,</span><br></pre></td></tr></table></figure></li>\n</ol>\n"},{"title":"当你重启了服务器，应该做什么 ？","date":"2020-07-12T09:16:26.000Z","_content":"\n<meta name=\"referrer\" content=\"no-referrer\"/>\n\n## 当你重启了服务器，应该做什么 ？(配置ffmpeg)\n\n更新了一些视频处理功能上去，重启服务器数据库请求500，记录一下重启后需要做什么\n\n9月25日，配置ffmpeg环境变量到centOS\n\n<!-- more -->\n\n> 根据新添加的功能去检查是否有依赖未安装\n\n### 服务器是否正常启动\n\n登录阿里云后台，通过官网使用远程链接登录，检查是否启动正确\n\n### 检查nginx是否启动\n\n输入网址limeng.website。找不到地址，则使用ip进行访问，还是访问不到，需要检查nginx，重启\n\n```js\ncd /www/server/nginx/sbin\n./nginx \n或者 ./nginx -s reload\n```\n\n### 检查mongdb是否启动\n\n可以访问网页，但是不能链接数据库，通过远程连接，启动node\n\n```js\ncd /BLOG/server\nnode index\n```\n\n### 9月25日记录\n\n本次是因为更新ffmpeg处理视频功能，上传server后，引入的fluent-ffmpeg没有在centOS中安装。需要安装后再启动 node\n\n1. [官网下载linux版本的ffmpeg源码包 ffmpeg-4.1.tar.xz](https://johnvansickle.com/ffmpeg/release-source/)\n\n2. 使用xftp将源码包ffmpeg-4.1.tar.xz上传至linux主机，解压源码包\n\n   ```js\n   cd /usr/local/\n   mkdir ffmpeg    #在usr/local目录下创建ffmpeg目录\n   cd /usr/local/ffmpeg\n   tar xvJf ffmpeg-4.1.tar.xz\n   cd ffmpeg-4.1\n   yum install gcc \n   yum install yasm \n   ./configure --enable-shared --prefix=/usr/local/ffmpeg\n   make\n   make install\n   ```\n\n3. 编译完成后，需要修改path\n\n   ```js\n   vim /etc/ld.so.conf\n   ```\n\n   ```js\n   内容如下：\n   include ld.so.conf.d/*.conf\n   /usr/local/ffmpeg/lib/\n   ```\n\n   输入**ldconfig**使修改生效。\n\n   ```js\n   ldconfig\n   ```\n\n4. 查看版本\n\n   ```JS\n   /usr/local/ffmpeg/ffmpeg-4.1/ffmpeg -version\n   ```\n\n5. 配置环境变量\n\n   ```JS\n   # vim /etc/profile\n   ```\n\n   ```js\n   内容如下：\n   #set ffmpeg environment\n   PATH=$PATH:/usr/local/ffmpeg/bin\n   export PATH\n   ```\n\n   ```js\n   source /etc/profile #使配置生效\n   ```\n\n   ```js\n   ffmpeg -version\n   ```\n\n   最终展示如下：可以在任意地方使用ffmpeg\n\n   ![img](https://img2018.cnblogs.com/blog/1486162/201907/1486162-20190710113208809-336235091.png)\n\n","source":"_posts/当你重启了服务器，应该做什么 ？.md","raw":"---\ntitle: 当你重启了服务器，应该做什么 ？\ndate: 2020-07-12 17:16:26\ntags: [centsos]\n---\n\n<meta name=\"referrer\" content=\"no-referrer\"/>\n\n## 当你重启了服务器，应该做什么 ？(配置ffmpeg)\n\n更新了一些视频处理功能上去，重启服务器数据库请求500，记录一下重启后需要做什么\n\n9月25日，配置ffmpeg环境变量到centOS\n\n<!-- more -->\n\n> 根据新添加的功能去检查是否有依赖未安装\n\n### 服务器是否正常启动\n\n登录阿里云后台，通过官网使用远程链接登录，检查是否启动正确\n\n### 检查nginx是否启动\n\n输入网址limeng.website。找不到地址，则使用ip进行访问，还是访问不到，需要检查nginx，重启\n\n```js\ncd /www/server/nginx/sbin\n./nginx \n或者 ./nginx -s reload\n```\n\n### 检查mongdb是否启动\n\n可以访问网页，但是不能链接数据库，通过远程连接，启动node\n\n```js\ncd /BLOG/server\nnode index\n```\n\n### 9月25日记录\n\n本次是因为更新ffmpeg处理视频功能，上传server后，引入的fluent-ffmpeg没有在centOS中安装。需要安装后再启动 node\n\n1. [官网下载linux版本的ffmpeg源码包 ffmpeg-4.1.tar.xz](https://johnvansickle.com/ffmpeg/release-source/)\n\n2. 使用xftp将源码包ffmpeg-4.1.tar.xz上传至linux主机，解压源码包\n\n   ```js\n   cd /usr/local/\n   mkdir ffmpeg    #在usr/local目录下创建ffmpeg目录\n   cd /usr/local/ffmpeg\n   tar xvJf ffmpeg-4.1.tar.xz\n   cd ffmpeg-4.1\n   yum install gcc \n   yum install yasm \n   ./configure --enable-shared --prefix=/usr/local/ffmpeg\n   make\n   make install\n   ```\n\n3. 编译完成后，需要修改path\n\n   ```js\n   vim /etc/ld.so.conf\n   ```\n\n   ```js\n   内容如下：\n   include ld.so.conf.d/*.conf\n   /usr/local/ffmpeg/lib/\n   ```\n\n   输入**ldconfig**使修改生效。\n\n   ```js\n   ldconfig\n   ```\n\n4. 查看版本\n\n   ```JS\n   /usr/local/ffmpeg/ffmpeg-4.1/ffmpeg -version\n   ```\n\n5. 配置环境变量\n\n   ```JS\n   # vim /etc/profile\n   ```\n\n   ```js\n   内容如下：\n   #set ffmpeg environment\n   PATH=$PATH:/usr/local/ffmpeg/bin\n   export PATH\n   ```\n\n   ```js\n   source /etc/profile #使配置生效\n   ```\n\n   ```js\n   ffmpeg -version\n   ```\n\n   最终展示如下：可以在任意地方使用ffmpeg\n\n   ![img](https://img2018.cnblogs.com/blog/1486162/201907/1486162-20190710113208809-336235091.png)\n\n","slug":"当你重启了服务器，应该做什么 ？","published":1,"updated":"2020-09-25T09:34:18.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl0uux6w7001y7suf1ud2fix5","content":"<meta name=\"referrer\" content=\"no-referrer\"/>\n\n<h2 id=\"当你重启了服务器，应该做什么-？-配置ffmpeg\"><a href=\"#当你重启了服务器，应该做什么-？-配置ffmpeg\" class=\"headerlink\" title=\"当你重启了服务器，应该做什么 ？(配置ffmpeg)\"></a>当你重启了服务器，应该做什么 ？(配置ffmpeg)</h2><p>更新了一些视频处理功能上去，重启服务器数据库请求500，记录一下重启后需要做什么</p>\n<p>9月25日，配置ffmpeg环境变量到centOS</p>\n<span id=\"more\"></span>\n\n<blockquote>\n<p>根据新添加的功能去检查是否有依赖未安装</p>\n</blockquote>\n<h3 id=\"服务器是否正常启动\"><a href=\"#服务器是否正常启动\" class=\"headerlink\" title=\"服务器是否正常启动\"></a>服务器是否正常启动</h3><p>登录阿里云后台，通过官网使用远程链接登录，检查是否启动正确</p>\n<h3 id=\"检查nginx是否启动\"><a href=\"#检查nginx是否启动\" class=\"headerlink\" title=\"检查nginx是否启动\"></a>检查nginx是否启动</h3><p>输入网址limeng.website。找不到地址，则使用ip进行访问，还是访问不到，需要检查nginx，重启</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /www/server/nginx/sbin</span><br><span class=\"line\">./nginx </span><br><span class=\"line\">或者 ./nginx -s reload</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"检查mongdb是否启动\"><a href=\"#检查mongdb是否启动\" class=\"headerlink\" title=\"检查mongdb是否启动\"></a>检查mongdb是否启动</h3><p>可以访问网页，但是不能链接数据库，通过远程连接，启动node</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /<span class=\"variable constant_\">BLOG</span>/server</span><br><span class=\"line\">node index</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"9月25日记录\"><a href=\"#9月25日记录\" class=\"headerlink\" title=\"9月25日记录\"></a>9月25日记录</h3><p>本次是因为更新ffmpeg处理视频功能，上传server后，引入的fluent-ffmpeg没有在centOS中安装。需要安装后再启动 node</p>\n<ol>\n<li><p><a href=\"https://johnvansickle.com/ffmpeg/release-source/\">官网下载linux版本的ffmpeg源码包 ffmpeg-4.1.tar.xz</a></p>\n</li>\n<li><p>使用xftp将源码包ffmpeg-4.1.tar.xz上传至linux主机，解压源码包</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /usr/local/</span><br><span class=\"line\">mkdir ffmpeg    #在usr/local目录下创建ffmpeg目录</span><br><span class=\"line\">cd /usr/local/ffmpeg</span><br><span class=\"line\">tar xvJf ffmpeg-<span class=\"number\">4.1</span>.<span class=\"property\">tar</span>.<span class=\"property\">xz</span></span><br><span class=\"line\">cd ffmpeg-<span class=\"number\">4.1</span></span><br><span class=\"line\">yum install gcc </span><br><span class=\"line\">yum install yasm </span><br><span class=\"line\">./configure --enable-shared --prefix=<span class=\"regexp\">/usr/</span>local/ffmpeg</span><br><span class=\"line\">make</span><br><span class=\"line\">make install</span><br></pre></td></tr></table></figure></li>\n<li><p>编译完成后，需要修改path</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim /etc/ld.<span class=\"property\">so</span>.<span class=\"property\">conf</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">内容如下：</span><br><span class=\"line\">include ld.<span class=\"property\">so</span>.<span class=\"property\">conf</span>.<span class=\"property\">d</span><span class=\"comment\">/*.conf</span></span><br><span class=\"line\"><span class=\"comment\">/usr/local/ffmpeg/lib/</span></span><br></pre></td></tr></table></figure>\n\n<p>输入<strong>ldconfig</strong>使修改生效。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ldconfig</span><br></pre></td></tr></table></figure></li>\n<li><p>查看版本</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/usr/local/ffmpeg/ffmpeg-<span class=\"number\">4.1</span>/ffmpeg -version</span><br></pre></td></tr></table></figure></li>\n<li><p>配置环境变量</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># vim /etc/profile</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">内容如下：</span><br><span class=\"line\">#set ffmpeg environment</span><br><span class=\"line\"><span class=\"variable constant_\">PATH</span>=<span class=\"attr\">$PATH</span>:<span class=\"regexp\">/usr/</span>local/ffmpeg/bin</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"variable constant_\">PATH</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">source /etc/profile #使配置生效</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ffmpeg -version</span><br></pre></td></tr></table></figure>\n\n<p>最终展示如下：可以在任意地方使用ffmpeg</p>\n<p><img src=\"https://img2018.cnblogs.com/blog/1486162/201907/1486162-20190710113208809-336235091.png\" alt=\"img\"></p>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"<meta name=\"referrer\" content=\"no-referrer\"/>\n\n<h2 id=\"当你重启了服务器，应该做什么-？-配置ffmpeg\"><a href=\"#当你重启了服务器，应该做什么-？-配置ffmpeg\" class=\"headerlink\" title=\"当你重启了服务器，应该做什么 ？(配置ffmpeg)\"></a>当你重启了服务器，应该做什么 ？(配置ffmpeg)</h2><p>更新了一些视频处理功能上去，重启服务器数据库请求500，记录一下重启后需要做什么</p>\n<p>9月25日，配置ffmpeg环境变量到centOS</p>","more":"<blockquote>\n<p>根据新添加的功能去检查是否有依赖未安装</p>\n</blockquote>\n<h3 id=\"服务器是否正常启动\"><a href=\"#服务器是否正常启动\" class=\"headerlink\" title=\"服务器是否正常启动\"></a>服务器是否正常启动</h3><p>登录阿里云后台，通过官网使用远程链接登录，检查是否启动正确</p>\n<h3 id=\"检查nginx是否启动\"><a href=\"#检查nginx是否启动\" class=\"headerlink\" title=\"检查nginx是否启动\"></a>检查nginx是否启动</h3><p>输入网址limeng.website。找不到地址，则使用ip进行访问，还是访问不到，需要检查nginx，重启</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /www/server/nginx/sbin</span><br><span class=\"line\">./nginx </span><br><span class=\"line\">或者 ./nginx -s reload</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"检查mongdb是否启动\"><a href=\"#检查mongdb是否启动\" class=\"headerlink\" title=\"检查mongdb是否启动\"></a>检查mongdb是否启动</h3><p>可以访问网页，但是不能链接数据库，通过远程连接，启动node</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /<span class=\"variable constant_\">BLOG</span>/server</span><br><span class=\"line\">node index</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"9月25日记录\"><a href=\"#9月25日记录\" class=\"headerlink\" title=\"9月25日记录\"></a>9月25日记录</h3><p>本次是因为更新ffmpeg处理视频功能，上传server后，引入的fluent-ffmpeg没有在centOS中安装。需要安装后再启动 node</p>\n<ol>\n<li><p><a href=\"https://johnvansickle.com/ffmpeg/release-source/\">官网下载linux版本的ffmpeg源码包 ffmpeg-4.1.tar.xz</a></p>\n</li>\n<li><p>使用xftp将源码包ffmpeg-4.1.tar.xz上传至linux主机，解压源码包</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /usr/local/</span><br><span class=\"line\">mkdir ffmpeg    #在usr/local目录下创建ffmpeg目录</span><br><span class=\"line\">cd /usr/local/ffmpeg</span><br><span class=\"line\">tar xvJf ffmpeg-<span class=\"number\">4.1</span>.<span class=\"property\">tar</span>.<span class=\"property\">xz</span></span><br><span class=\"line\">cd ffmpeg-<span class=\"number\">4.1</span></span><br><span class=\"line\">yum install gcc </span><br><span class=\"line\">yum install yasm </span><br><span class=\"line\">./configure --enable-shared --prefix=<span class=\"regexp\">/usr/</span>local/ffmpeg</span><br><span class=\"line\">make</span><br><span class=\"line\">make install</span><br></pre></td></tr></table></figure></li>\n<li><p>编译完成后，需要修改path</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim /etc/ld.<span class=\"property\">so</span>.<span class=\"property\">conf</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">内容如下：</span><br><span class=\"line\">include ld.<span class=\"property\">so</span>.<span class=\"property\">conf</span>.<span class=\"property\">d</span><span class=\"comment\">/*.conf</span></span><br><span class=\"line\"><span class=\"comment\">/usr/local/ffmpeg/lib/</span></span><br></pre></td></tr></table></figure>\n\n<p>输入<strong>ldconfig</strong>使修改生效。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ldconfig</span><br></pre></td></tr></table></figure></li>\n<li><p>查看版本</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/usr/local/ffmpeg/ffmpeg-<span class=\"number\">4.1</span>/ffmpeg -version</span><br></pre></td></tr></table></figure></li>\n<li><p>配置环境变量</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># vim /etc/profile</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">内容如下：</span><br><span class=\"line\">#set ffmpeg environment</span><br><span class=\"line\"><span class=\"variable constant_\">PATH</span>=<span class=\"attr\">$PATH</span>:<span class=\"regexp\">/usr/</span>local/ffmpeg/bin</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"variable constant_\">PATH</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">source /etc/profile #使配置生效</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ffmpeg -version</span><br></pre></td></tr></table></figure>\n\n<p>最终展示如下：可以在任意地方使用ffmpeg</p>\n<p><img src=\"https://img2018.cnblogs.com/blog/1486162/201907/1486162-20190710113208809-336235091.png\" alt=\"img\"></p>\n</li>\n</ol>"},{"title":"监听页面和浏览器的离开","date":"2022-03-17T10:34:42.128Z","_content":"\n<meta name=\"referrer\" content=\"no-referrer\"/>\n\n1\n\n\n\n\n\n<!-- more -->\n\n> \n\n\n\n\n\n## 一、简介\n\n有时候，开发者需要知道，用户正在离开页面。常用的方法是监听下面三个事件。\n\n> - `pagehide`\n> - `beforeunload`\n> - `unload`\n\n但是，这些事件在手机上可能不会触发，页面就直接关闭了。因为手机系统可以将一个进程直接转入后台，然后杀死。\n\n> - 用户点击了一条系统通知，切换到另一个 App。\n> - 用户进入任务切换窗口，切换到另一个 App。\n> - 用户点击了 Home 按钮，切换回主屏幕。\n> - 操作系统自动切换到另一个 App（比如，收到一个电话）。\n\n上面这些情况，都会导致手机将浏览器进程切换到后台，然后为了节省资源，可能就会杀死浏览器进程。\n\n\n\n```javascript\ndocument.addEventListener('visibilitychange', function () {\n  // 用户离开了当前页面\n  if (document.visibilityState === 'hidden') {\n    document.title = '页面不可见';\n  }\n\n  // 用户打开或回到页面\n  if (document.visibilityState === 'visible') {\n    document.title = '页面可见';\n  }\n});\n```","source":"_posts/监听页面和浏览器离开.md","raw":"---\ntitle: 监听页面和浏览器的离开\ndate: \ntags: \n---\n\n<meta name=\"referrer\" content=\"no-referrer\"/>\n\n1\n\n\n\n\n\n<!-- more -->\n\n> \n\n\n\n\n\n## 一、简介\n\n有时候，开发者需要知道，用户正在离开页面。常用的方法是监听下面三个事件。\n\n> - `pagehide`\n> - `beforeunload`\n> - `unload`\n\n但是，这些事件在手机上可能不会触发，页面就直接关闭了。因为手机系统可以将一个进程直接转入后台，然后杀死。\n\n> - 用户点击了一条系统通知，切换到另一个 App。\n> - 用户进入任务切换窗口，切换到另一个 App。\n> - 用户点击了 Home 按钮，切换回主屏幕。\n> - 操作系统自动切换到另一个 App（比如，收到一个电话）。\n\n上面这些情况，都会导致手机将浏览器进程切换到后台，然后为了节省资源，可能就会杀死浏览器进程。\n\n\n\n```javascript\ndocument.addEventListener('visibilitychange', function () {\n  // 用户离开了当前页面\n  if (document.visibilityState === 'hidden') {\n    document.title = '页面不可见';\n  }\n\n  // 用户打开或回到页面\n  if (document.visibilityState === 'visible') {\n    document.title = '页面可见';\n  }\n});\n```","slug":"监听页面和浏览器离开","published":1,"updated":"2020-12-24T09:55:08.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl0uux6w700207suf06nq8run","content":"<meta name=\"referrer\" content=\"no-referrer\"/>\n\n<p>1</p>\n<span id=\"more\"></span>\n\n<blockquote>\n</blockquote>\n<h2 id=\"一、简介\"><a href=\"#一、简介\" class=\"headerlink\" title=\"一、简介\"></a>一、简介</h2><p>有时候，开发者需要知道，用户正在离开页面。常用的方法是监听下面三个事件。</p>\n<blockquote>\n<ul>\n<li><code>pagehide</code></li>\n<li><code>beforeunload</code></li>\n<li><code>unload</code></li>\n</ul>\n</blockquote>\n<p>但是，这些事件在手机上可能不会触发，页面就直接关闭了。因为手机系统可以将一个进程直接转入后台，然后杀死。</p>\n<blockquote>\n<ul>\n<li>用户点击了一条系统通知，切换到另一个 App。</li>\n<li>用户进入任务切换窗口，切换到另一个 App。</li>\n<li>用户点击了 Home 按钮，切换回主屏幕。</li>\n<li>操作系统自动切换到另一个 App（比如，收到一个电话）。</li>\n</ul>\n</blockquote>\n<p>上面这些情况，都会导致手机将浏览器进程切换到后台，然后为了节省资源，可能就会杀死浏览器进程。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">document</span>.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;visibilitychange&#x27;</span>, <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 用户离开了当前页面</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"variable language_\">document</span>.<span class=\"property\">visibilityState</span> === <span class=\"string\">&#x27;hidden&#x27;</span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">document</span>.<span class=\"property\">title</span> = <span class=\"string\">&#x27;页面不可见&#x27;</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 用户打开或回到页面</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"variable language_\">document</span>.<span class=\"property\">visibilityState</span> === <span class=\"string\">&#x27;visible&#x27;</span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">document</span>.<span class=\"property\">title</span> = <span class=\"string\">&#x27;页面可见&#x27;</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<meta name=\"referrer\" content=\"no-referrer\"/>\n\n<p>1</p>","more":"<blockquote>\n</blockquote>\n<h2 id=\"一、简介\"><a href=\"#一、简介\" class=\"headerlink\" title=\"一、简介\"></a>一、简介</h2><p>有时候，开发者需要知道，用户正在离开页面。常用的方法是监听下面三个事件。</p>\n<blockquote>\n<ul>\n<li><code>pagehide</code></li>\n<li><code>beforeunload</code></li>\n<li><code>unload</code></li>\n</ul>\n</blockquote>\n<p>但是，这些事件在手机上可能不会触发，页面就直接关闭了。因为手机系统可以将一个进程直接转入后台，然后杀死。</p>\n<blockquote>\n<ul>\n<li>用户点击了一条系统通知，切换到另一个 App。</li>\n<li>用户进入任务切换窗口，切换到另一个 App。</li>\n<li>用户点击了 Home 按钮，切换回主屏幕。</li>\n<li>操作系统自动切换到另一个 App（比如，收到一个电话）。</li>\n</ul>\n</blockquote>\n<p>上面这些情况，都会导致手机将浏览器进程切换到后台，然后为了节省资源，可能就会杀死浏览器进程。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">document</span>.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;visibilitychange&#x27;</span>, <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 用户离开了当前页面</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"variable language_\">document</span>.<span class=\"property\">visibilityState</span> === <span class=\"string\">&#x27;hidden&#x27;</span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">document</span>.<span class=\"property\">title</span> = <span class=\"string\">&#x27;页面不可见&#x27;</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 用户打开或回到页面</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"variable language_\">document</span>.<span class=\"property\">visibilityState</span> === <span class=\"string\">&#x27;visible&#x27;</span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">document</span>.<span class=\"property\">title</span> = <span class=\"string\">&#x27;页面可见&#x27;</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>"},{"title":"服务器目录说明","date":"2020-07-12T09:16:26.000Z","_content":"\n<meta name=\"referrer\" content=\"no-referrer\"/>\n\n## 服务器目录说明\n\n1. /BLOG/back\n\n   博客文章的数据库备份位置\n\n2. /www/server/nginx/conf\n\n   nginx的配置文件位置\n\n3. /www/server/nginx/html\n\n   nginx的网站代码（打包后的前端文件放置这里）\n\n4. /www/server/mongodb/bin\n\n   数据库的操作根目录\n\n\n\n<!-- more -->\n\n> ","source":"_posts/服务器目录说明.md","raw":"---\ntitle: 服务器目录说明\ndate: 2020-07-12 17:16:26\ntags: [js,hexo]\n---\n\n<meta name=\"referrer\" content=\"no-referrer\"/>\n\n## 服务器目录说明\n\n1. /BLOG/back\n\n   博客文章的数据库备份位置\n\n2. /www/server/nginx/conf\n\n   nginx的配置文件位置\n\n3. /www/server/nginx/html\n\n   nginx的网站代码（打包后的前端文件放置这里）\n\n4. /www/server/mongodb/bin\n\n   数据库的操作根目录\n\n\n\n<!-- more -->\n\n> ","slug":"服务器目录说明","published":1,"updated":"2021-03-04T01:38:40.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl0uux6w800237sufcci8g3xn","content":"<meta name=\"referrer\" content=\"no-referrer\"/>\n\n<h2 id=\"服务器目录说明\"><a href=\"#服务器目录说明\" class=\"headerlink\" title=\"服务器目录说明\"></a>服务器目录说明</h2><ol>\n<li><p>/BLOG/back</p>\n<p>博客文章的数据库备份位置</p>\n</li>\n<li><p>/www/server/nginx/conf</p>\n<p>nginx的配置文件位置</p>\n</li>\n<li><p>/www/server/nginx/html</p>\n<p>nginx的网站代码（打包后的前端文件放置这里）</p>\n</li>\n<li><p>/www/server/mongodb/bin</p>\n<p>数据库的操作根目录</p>\n</li>\n</ol>\n<span id=\"more\"></span>\n\n<blockquote>\n</blockquote>\n","site":{"data":{}},"excerpt":"<meta name=\"referrer\" content=\"no-referrer\"/>\n\n<h2 id=\"服务器目录说明\"><a href=\"#服务器目录说明\" class=\"headerlink\" title=\"服务器目录说明\"></a>服务器目录说明</h2><ol>\n<li><p>/BLOG/back</p>\n<p>博客文章的数据库备份位置</p>\n</li>\n<li><p>/www/server/nginx/conf</p>\n<p>nginx的配置文件位置</p>\n</li>\n<li><p>/www/server/nginx/html</p>\n<p>nginx的网站代码（打包后的前端文件放置这里）</p>\n</li>\n<li><p>/www/server/mongodb/bin</p>\n<p>数据库的操作根目录</p>\n</li>\n</ol>","more":"<blockquote>\n</blockquote>"},{"title":"纯js实现上传视频，截取关键帧及全屏截图","date":"2020-07-12T09:16:26.000Z","_content":"\n<meta name=\"referrer\" content=\"no-referrer\"/>\n\n## 纯js实现上传视频，截取关键帧及全屏截图\n\nWeb端的截图(生成图片)并不算是个高频的需求，资料自然也不算多，查来查去，也不过Canvas 和 SVG两种实现方案，原理大概相似，都非真正义上的截图而是把DOM转为图片，然而实现方式却截然不同。\n\n<!-- more -->\n\n> context.drawImage(img,sx,sy,swidth,sheight,x,y,width,height);\n\n### 需求\n\n对上传的视频进行截图，生成对应帧图片。对网站页面进行截图\n\n### 实现视频截图\n\n1. 上传\n\n   ```html\\\n             <el-upload\n               class=\"upload-demo\"\n               :before-upload=\"beforeUpload\"\n               :action=\"uploadUrl\"\n               :on-success=\"uploadSuccess\"\n               :file-list=\"fileList\"\n             >\n               <el-button size=\"small\" type=\"primary\">点击上传</el-button>\n             </el-upload>\n   ```\n\n   ```js\n       beforeUpload(file) {\n         this.movieUrl = window.URL.createObjectURL(file);\n       }\n   ```\n\n2. 通过canvas转出img\n\n```js\n shootIt() {\n      let video = this.$refs.uploadVideo;\n      let imgHeight = 0;\n      let imgWidth = 0;\n      let videoWidth = 0;\n      let videoHeight = 0;\n      let canvas = document.createElement(\"canvas\");\n      let canvasCtx = canvas.getContext(\"2d\");\n      //获取展示的video宽高作为画布的宽高和临时视频截图的宽高\n      this.info.swidth = canvas.width = imgWidth = video.offsetWidth;\n      this.info.sheight = canvas.height = imgHeight = video.offsetHeight;\n      //获取实际视频的宽高，相当于视频分辨率吧\n      videoWidth = video.videoWidth;\n      videoHeight = video.videoHeight;\n      //坐原图像的x,y轴坐标，大小，目标图像的x，y轴标，大小。\n      canvasCtx.drawImage(\n        video,\n        0,\n        0,\n        videoWidth,\n        videoHeight,\n        0,\n        0,\n        imgWidth,\n        imgHeight\n      );\n      //把图标base64编码后变成一段url字符串\n      let dataUrl = canvas.toDataURL(\"image/png\");\n      this.shootUrl = dataUrl;\n      // 获取图片的base64格式\n      // let shootImage = base64ConvertFile(dataUrl, \"haorooms截取视频帧\");\n    },\n```\n\n### 实现网站截图\n\n> import html2canvas from 'html2canvas'\n\n`html2canvas.js`用法其实很简单，通常情况下只需传入需要转换的DOM对象就可以了\n\n代码：定义公共方法\n\n```js\nimport html2canvas from 'html2canvas'\n\nexport const shootAll = (dom) => {\n  return new html2canvas(dom, {\n    backgroundColor: '1',\n    allowTaint: true,\n    useCORS: true\n  }).then((canvas) => {\n    let canvasInfo = {\n      width: canvas.getAttribute(\"width\"),\n      height: canvas.getAttribute(\"height\"),\n      url: canvas.toDataURL()\n    }\n    // canvas为转换后的Canvas对象\n    return canvasInfo // 导出图片\n  })\n}\n```\n\n> 找到对应dom是关键，可以通过点击事件获取到e，e携带了全部的路径path，从path中可以获取到父级的dom，传入前做一下对象是否是dom的判断\n\n```js\n assertElement(obj) {\n      //判断是不是dom节点\n      var d = document.createElement(\"div\");\n      try {\n        d.appendChild(obj.cloneNode(true));\n        return obj.nodeType == 1 ? true : false;\n      } catch (e) {\n        return false;\n      }\n    },\n    shootAllPre(e) {\n      let shootDom = null;\n      e.path.forEach((v) => {\n        //寻找到 container dom节点\n        let judge = this.assertElement(v);\n        if (judge && v.getAttribute(\"class\") == \"container\") {\n          shootDom = v;\n        }\n      });\n      shootAll(shootDom).then((res) => {\n        this.shootUrl = res.url;\n        this.info.swidth = res.width;\n        this.info.sheight = res.height;\n      });\n    },\n```\n\n```html\n          <el-button size=\"small\" type=\"primary\" @click=\"shootAllPre\">全屏截图</el-button>\n```\n\n","source":"_posts/纯js实现上传视频，截取关键帧作为封面，上传后端保存.md","raw":"---\ntitle: 纯js实现上传视频，截取关键帧及全屏截图\ndate: 2020-07-12 17:16:26\ntags: [js,hexo]\n---\n\n<meta name=\"referrer\" content=\"no-referrer\"/>\n\n## 纯js实现上传视频，截取关键帧及全屏截图\n\nWeb端的截图(生成图片)并不算是个高频的需求，资料自然也不算多，查来查去，也不过Canvas 和 SVG两种实现方案，原理大概相似，都非真正义上的截图而是把DOM转为图片，然而实现方式却截然不同。\n\n<!-- more -->\n\n> context.drawImage(img,sx,sy,swidth,sheight,x,y,width,height);\n\n### 需求\n\n对上传的视频进行截图，生成对应帧图片。对网站页面进行截图\n\n### 实现视频截图\n\n1. 上传\n\n   ```html\\\n             <el-upload\n               class=\"upload-demo\"\n               :before-upload=\"beforeUpload\"\n               :action=\"uploadUrl\"\n               :on-success=\"uploadSuccess\"\n               :file-list=\"fileList\"\n             >\n               <el-button size=\"small\" type=\"primary\">点击上传</el-button>\n             </el-upload>\n   ```\n\n   ```js\n       beforeUpload(file) {\n         this.movieUrl = window.URL.createObjectURL(file);\n       }\n   ```\n\n2. 通过canvas转出img\n\n```js\n shootIt() {\n      let video = this.$refs.uploadVideo;\n      let imgHeight = 0;\n      let imgWidth = 0;\n      let videoWidth = 0;\n      let videoHeight = 0;\n      let canvas = document.createElement(\"canvas\");\n      let canvasCtx = canvas.getContext(\"2d\");\n      //获取展示的video宽高作为画布的宽高和临时视频截图的宽高\n      this.info.swidth = canvas.width = imgWidth = video.offsetWidth;\n      this.info.sheight = canvas.height = imgHeight = video.offsetHeight;\n      //获取实际视频的宽高，相当于视频分辨率吧\n      videoWidth = video.videoWidth;\n      videoHeight = video.videoHeight;\n      //坐原图像的x,y轴坐标，大小，目标图像的x，y轴标，大小。\n      canvasCtx.drawImage(\n        video,\n        0,\n        0,\n        videoWidth,\n        videoHeight,\n        0,\n        0,\n        imgWidth,\n        imgHeight\n      );\n      //把图标base64编码后变成一段url字符串\n      let dataUrl = canvas.toDataURL(\"image/png\");\n      this.shootUrl = dataUrl;\n      // 获取图片的base64格式\n      // let shootImage = base64ConvertFile(dataUrl, \"haorooms截取视频帧\");\n    },\n```\n\n### 实现网站截图\n\n> import html2canvas from 'html2canvas'\n\n`html2canvas.js`用法其实很简单，通常情况下只需传入需要转换的DOM对象就可以了\n\n代码：定义公共方法\n\n```js\nimport html2canvas from 'html2canvas'\n\nexport const shootAll = (dom) => {\n  return new html2canvas(dom, {\n    backgroundColor: '1',\n    allowTaint: true,\n    useCORS: true\n  }).then((canvas) => {\n    let canvasInfo = {\n      width: canvas.getAttribute(\"width\"),\n      height: canvas.getAttribute(\"height\"),\n      url: canvas.toDataURL()\n    }\n    // canvas为转换后的Canvas对象\n    return canvasInfo // 导出图片\n  })\n}\n```\n\n> 找到对应dom是关键，可以通过点击事件获取到e，e携带了全部的路径path，从path中可以获取到父级的dom，传入前做一下对象是否是dom的判断\n\n```js\n assertElement(obj) {\n      //判断是不是dom节点\n      var d = document.createElement(\"div\");\n      try {\n        d.appendChild(obj.cloneNode(true));\n        return obj.nodeType == 1 ? true : false;\n      } catch (e) {\n        return false;\n      }\n    },\n    shootAllPre(e) {\n      let shootDom = null;\n      e.path.forEach((v) => {\n        //寻找到 container dom节点\n        let judge = this.assertElement(v);\n        if (judge && v.getAttribute(\"class\") == \"container\") {\n          shootDom = v;\n        }\n      });\n      shootAll(shootDom).then((res) => {\n        this.shootUrl = res.url;\n        this.info.swidth = res.width;\n        this.info.sheight = res.height;\n      });\n    },\n```\n\n```html\n          <el-button size=\"small\" type=\"primary\" @click=\"shootAllPre\">全屏截图</el-button>\n```\n\n","slug":"纯js实现上传视频，截取关键帧作为封面，上传后端保存","published":1,"updated":"2020-09-11T03:21:10.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl0uux6w900257suf9wdxb20y","content":"<meta name=\"referrer\" content=\"no-referrer\"/>\n\n<h2 id=\"纯js实现上传视频，截取关键帧及全屏截图\"><a href=\"#纯js实现上传视频，截取关键帧及全屏截图\" class=\"headerlink\" title=\"纯js实现上传视频，截取关键帧及全屏截图\"></a>纯js实现上传视频，截取关键帧及全屏截图</h2><p>Web端的截图(生成图片)并不算是个高频的需求，资料自然也不算多，查来查去，也不过Canvas 和 SVG两种实现方案，原理大概相似，都非真正义上的截图而是把DOM转为图片，然而实现方式却截然不同。</p>\n<span id=\"more\"></span>\n\n<blockquote>\n<p>context.drawImage(img,sx,sy,swidth,sheight,x,y,width,height);</p>\n</blockquote>\n<h3 id=\"需求\"><a href=\"#需求\" class=\"headerlink\" title=\"需求\"></a>需求</h3><p>对上传的视频进行截图，生成对应帧图片。对网站页面进行截图</p>\n<h3 id=\"实现视频截图\"><a href=\"#实现视频截图\" class=\"headerlink\" title=\"实现视频截图\"></a>实现视频截图</h3><ol>\n<li><p>上传</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;el-upload</span><br><span class=\"line\">  class=&quot;upload-demo&quot;</span><br><span class=\"line\">  :before-upload=&quot;beforeUpload&quot;</span><br><span class=\"line\">  :action=&quot;uploadUrl&quot;</span><br><span class=\"line\">  :on-success=&quot;uploadSuccess&quot;</span><br><span class=\"line\">  :file-list=&quot;fileList&quot;</span><br><span class=\"line\">&gt;</span><br><span class=\"line\">  &lt;el-button size=&quot;small&quot; type=&quot;primary&quot;&gt;点击上传&lt;/el-button&gt;</span><br><span class=\"line\">&lt;/el-upload&gt;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">beforeUpload</span>(<span class=\"params\">file</span>) &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">this</span>.<span class=\"property\">movieUrl</span> = <span class=\"variable language_\">window</span>.<span class=\"property\">URL</span>.<span class=\"title function_\">createObjectURL</span>(file);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li><p>通过canvas转出img</p>\n</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">shootIt</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">     <span class=\"keyword\">let</span> video = <span class=\"variable language_\">this</span>.<span class=\"property\">$refs</span>.<span class=\"property\">uploadVideo</span>;</span><br><span class=\"line\">     <span class=\"keyword\">let</span> imgHeight = <span class=\"number\">0</span>;</span><br><span class=\"line\">     <span class=\"keyword\">let</span> imgWidth = <span class=\"number\">0</span>;</span><br><span class=\"line\">     <span class=\"keyword\">let</span> videoWidth = <span class=\"number\">0</span>;</span><br><span class=\"line\">     <span class=\"keyword\">let</span> videoHeight = <span class=\"number\">0</span>;</span><br><span class=\"line\">     <span class=\"keyword\">let</span> canvas = <span class=\"variable language_\">document</span>.<span class=\"title function_\">createElement</span>(<span class=\"string\">&quot;canvas&quot;</span>);</span><br><span class=\"line\">     <span class=\"keyword\">let</span> canvasCtx = canvas.<span class=\"title function_\">getContext</span>(<span class=\"string\">&quot;2d&quot;</span>);</span><br><span class=\"line\">     <span class=\"comment\">//获取展示的video宽高作为画布的宽高和临时视频截图的宽高</span></span><br><span class=\"line\">     <span class=\"variable language_\">this</span>.<span class=\"property\">info</span>.<span class=\"property\">swidth</span> = canvas.<span class=\"property\">width</span> = imgWidth = video.<span class=\"property\">offsetWidth</span>;</span><br><span class=\"line\">     <span class=\"variable language_\">this</span>.<span class=\"property\">info</span>.<span class=\"property\">sheight</span> = canvas.<span class=\"property\">height</span> = imgHeight = video.<span class=\"property\">offsetHeight</span>;</span><br><span class=\"line\">     <span class=\"comment\">//获取实际视频的宽高，相当于视频分辨率吧</span></span><br><span class=\"line\">     videoWidth = video.<span class=\"property\">videoWidth</span>;</span><br><span class=\"line\">     videoHeight = video.<span class=\"property\">videoHeight</span>;</span><br><span class=\"line\">     <span class=\"comment\">//坐原图像的x,y轴坐标，大小，目标图像的x，y轴标，大小。</span></span><br><span class=\"line\">     canvasCtx.<span class=\"title function_\">drawImage</span>(</span><br><span class=\"line\">       video,</span><br><span class=\"line\">       <span class=\"number\">0</span>,</span><br><span class=\"line\">       <span class=\"number\">0</span>,</span><br><span class=\"line\">       videoWidth,</span><br><span class=\"line\">       videoHeight,</span><br><span class=\"line\">       <span class=\"number\">0</span>,</span><br><span class=\"line\">       <span class=\"number\">0</span>,</span><br><span class=\"line\">       imgWidth,</span><br><span class=\"line\">       imgHeight</span><br><span class=\"line\">     );</span><br><span class=\"line\">     <span class=\"comment\">//把图标base64编码后变成一段url字符串</span></span><br><span class=\"line\">     <span class=\"keyword\">let</span> dataUrl = canvas.<span class=\"title function_\">toDataURL</span>(<span class=\"string\">&quot;image/png&quot;</span>);</span><br><span class=\"line\">     <span class=\"variable language_\">this</span>.<span class=\"property\">shootUrl</span> = dataUrl;</span><br><span class=\"line\">     <span class=\"comment\">// 获取图片的base64格式</span></span><br><span class=\"line\">     <span class=\"comment\">// let shootImage = base64ConvertFile(dataUrl, &quot;haorooms截取视频帧&quot;);</span></span><br><span class=\"line\">   &#125;,</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"实现网站截图\"><a href=\"#实现网站截图\" class=\"headerlink\" title=\"实现网站截图\"></a>实现网站截图</h3><blockquote>\n<p>import html2canvas from ‘html2canvas’</p>\n</blockquote>\n<p><code>html2canvas.js</code>用法其实很简单，通常情况下只需传入需要转换的DOM对象就可以了</p>\n<p>代码：定义公共方法</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> html2canvas <span class=\"keyword\">from</span> <span class=\"string\">&#x27;html2canvas&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> <span class=\"title function_\">shootAll</span> = (<span class=\"params\">dom</span>) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title function_\">html2canvas</span>(dom, &#123;</span><br><span class=\"line\">    <span class=\"attr\">backgroundColor</span>: <span class=\"string\">&#x27;1&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">allowTaint</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    <span class=\"attr\">useCORS</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">  &#125;).<span class=\"title function_\">then</span>(<span class=\"function\">(<span class=\"params\">canvas</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> canvasInfo = &#123;</span><br><span class=\"line\">      <span class=\"attr\">width</span>: canvas.<span class=\"title function_\">getAttribute</span>(<span class=\"string\">&quot;width&quot;</span>),</span><br><span class=\"line\">      <span class=\"attr\">height</span>: canvas.<span class=\"title function_\">getAttribute</span>(<span class=\"string\">&quot;height&quot;</span>),</span><br><span class=\"line\">      <span class=\"attr\">url</span>: canvas.<span class=\"title function_\">toDataURL</span>()</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// canvas为转换后的Canvas对象</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> canvasInfo <span class=\"comment\">// 导出图片</span></span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>找到对应dom是关键，可以通过点击事件获取到e，e携带了全部的路径path，从path中可以获取到父级的dom，传入前做一下对象是否是dom的判断</p>\n</blockquote>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">assertElement</span>(<span class=\"params\">obj</span>) &#123;</span><br><span class=\"line\">     <span class=\"comment\">//判断是不是dom节点</span></span><br><span class=\"line\">     <span class=\"keyword\">var</span> d = <span class=\"variable language_\">document</span>.<span class=\"title function_\">createElement</span>(<span class=\"string\">&quot;div&quot;</span>);</span><br><span class=\"line\">     <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">       d.<span class=\"title function_\">appendChild</span>(obj.<span class=\"title function_\">cloneNode</span>(<span class=\"literal\">true</span>));</span><br><span class=\"line\">       <span class=\"keyword\">return</span> obj.<span class=\"property\">nodeType</span> == <span class=\"number\">1</span> ? <span class=\"literal\">true</span> : <span class=\"literal\">false</span>;</span><br><span class=\"line\">     &#125; <span class=\"keyword\">catch</span> (e) &#123;</span><br><span class=\"line\">       <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">   &#125;,</span><br><span class=\"line\">   <span class=\"title function_\">shootAllPre</span>(<span class=\"params\">e</span>) &#123;</span><br><span class=\"line\">     <span class=\"keyword\">let</span> shootDom = <span class=\"literal\">null</span>;</span><br><span class=\"line\">     e.<span class=\"property\">path</span>.<span class=\"title function_\">forEach</span>(<span class=\"function\">(<span class=\"params\">v</span>) =&gt;</span> &#123;</span><br><span class=\"line\">       <span class=\"comment\">//寻找到 container dom节点</span></span><br><span class=\"line\">       <span class=\"keyword\">let</span> judge = <span class=\"variable language_\">this</span>.<span class=\"title function_\">assertElement</span>(v);</span><br><span class=\"line\">       <span class=\"keyword\">if</span> (judge &amp;&amp; v.<span class=\"title function_\">getAttribute</span>(<span class=\"string\">&quot;class&quot;</span>) == <span class=\"string\">&quot;container&quot;</span>) &#123;</span><br><span class=\"line\">         shootDom = v;</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">     &#125;);</span><br><span class=\"line\">     <span class=\"title function_\">shootAll</span>(shootDom).<span class=\"title function_\">then</span>(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> &#123;</span><br><span class=\"line\">       <span class=\"variable language_\">this</span>.<span class=\"property\">shootUrl</span> = res.<span class=\"property\">url</span>;</span><br><span class=\"line\">       <span class=\"variable language_\">this</span>.<span class=\"property\">info</span>.<span class=\"property\">swidth</span> = res.<span class=\"property\">width</span>;</span><br><span class=\"line\">       <span class=\"variable language_\">this</span>.<span class=\"property\">info</span>.<span class=\"property\">sheight</span> = res.<span class=\"property\">height</span>;</span><br><span class=\"line\">     &#125;);</span><br><span class=\"line\">   &#125;,</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">el-button</span> <span class=\"attr\">size</span>=<span class=\"string\">&quot;small&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;primary&quot;</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;shootAllPre&quot;</span>&gt;</span>全屏截图<span class=\"tag\">&lt;/<span class=\"name\">el-button</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"<meta name=\"referrer\" content=\"no-referrer\"/>\n\n<h2 id=\"纯js实现上传视频，截取关键帧及全屏截图\"><a href=\"#纯js实现上传视频，截取关键帧及全屏截图\" class=\"headerlink\" title=\"纯js实现上传视频，截取关键帧及全屏截图\"></a>纯js实现上传视频，截取关键帧及全屏截图</h2><p>Web端的截图(生成图片)并不算是个高频的需求，资料自然也不算多，查来查去，也不过Canvas 和 SVG两种实现方案，原理大概相似，都非真正义上的截图而是把DOM转为图片，然而实现方式却截然不同。</p>","more":"<blockquote>\n<p>context.drawImage(img,sx,sy,swidth,sheight,x,y,width,height);</p>\n</blockquote>\n<h3 id=\"需求\"><a href=\"#需求\" class=\"headerlink\" title=\"需求\"></a>需求</h3><p>对上传的视频进行截图，生成对应帧图片。对网站页面进行截图</p>\n<h3 id=\"实现视频截图\"><a href=\"#实现视频截图\" class=\"headerlink\" title=\"实现视频截图\"></a>实现视频截图</h3><ol>\n<li><p>上传</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;el-upload</span><br><span class=\"line\">  class=&quot;upload-demo&quot;</span><br><span class=\"line\">  :before-upload=&quot;beforeUpload&quot;</span><br><span class=\"line\">  :action=&quot;uploadUrl&quot;</span><br><span class=\"line\">  :on-success=&quot;uploadSuccess&quot;</span><br><span class=\"line\">  :file-list=&quot;fileList&quot;</span><br><span class=\"line\">&gt;</span><br><span class=\"line\">  &lt;el-button size=&quot;small&quot; type=&quot;primary&quot;&gt;点击上传&lt;/el-button&gt;</span><br><span class=\"line\">&lt;/el-upload&gt;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">beforeUpload</span>(<span class=\"params\">file</span>) &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">this</span>.<span class=\"property\">movieUrl</span> = <span class=\"variable language_\">window</span>.<span class=\"property\">URL</span>.<span class=\"title function_\">createObjectURL</span>(file);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li><p>通过canvas转出img</p>\n</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">shootIt</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">     <span class=\"keyword\">let</span> video = <span class=\"variable language_\">this</span>.<span class=\"property\">$refs</span>.<span class=\"property\">uploadVideo</span>;</span><br><span class=\"line\">     <span class=\"keyword\">let</span> imgHeight = <span class=\"number\">0</span>;</span><br><span class=\"line\">     <span class=\"keyword\">let</span> imgWidth = <span class=\"number\">0</span>;</span><br><span class=\"line\">     <span class=\"keyword\">let</span> videoWidth = <span class=\"number\">0</span>;</span><br><span class=\"line\">     <span class=\"keyword\">let</span> videoHeight = <span class=\"number\">0</span>;</span><br><span class=\"line\">     <span class=\"keyword\">let</span> canvas = <span class=\"variable language_\">document</span>.<span class=\"title function_\">createElement</span>(<span class=\"string\">&quot;canvas&quot;</span>);</span><br><span class=\"line\">     <span class=\"keyword\">let</span> canvasCtx = canvas.<span class=\"title function_\">getContext</span>(<span class=\"string\">&quot;2d&quot;</span>);</span><br><span class=\"line\">     <span class=\"comment\">//获取展示的video宽高作为画布的宽高和临时视频截图的宽高</span></span><br><span class=\"line\">     <span class=\"variable language_\">this</span>.<span class=\"property\">info</span>.<span class=\"property\">swidth</span> = canvas.<span class=\"property\">width</span> = imgWidth = video.<span class=\"property\">offsetWidth</span>;</span><br><span class=\"line\">     <span class=\"variable language_\">this</span>.<span class=\"property\">info</span>.<span class=\"property\">sheight</span> = canvas.<span class=\"property\">height</span> = imgHeight = video.<span class=\"property\">offsetHeight</span>;</span><br><span class=\"line\">     <span class=\"comment\">//获取实际视频的宽高，相当于视频分辨率吧</span></span><br><span class=\"line\">     videoWidth = video.<span class=\"property\">videoWidth</span>;</span><br><span class=\"line\">     videoHeight = video.<span class=\"property\">videoHeight</span>;</span><br><span class=\"line\">     <span class=\"comment\">//坐原图像的x,y轴坐标，大小，目标图像的x，y轴标，大小。</span></span><br><span class=\"line\">     canvasCtx.<span class=\"title function_\">drawImage</span>(</span><br><span class=\"line\">       video,</span><br><span class=\"line\">       <span class=\"number\">0</span>,</span><br><span class=\"line\">       <span class=\"number\">0</span>,</span><br><span class=\"line\">       videoWidth,</span><br><span class=\"line\">       videoHeight,</span><br><span class=\"line\">       <span class=\"number\">0</span>,</span><br><span class=\"line\">       <span class=\"number\">0</span>,</span><br><span class=\"line\">       imgWidth,</span><br><span class=\"line\">       imgHeight</span><br><span class=\"line\">     );</span><br><span class=\"line\">     <span class=\"comment\">//把图标base64编码后变成一段url字符串</span></span><br><span class=\"line\">     <span class=\"keyword\">let</span> dataUrl = canvas.<span class=\"title function_\">toDataURL</span>(<span class=\"string\">&quot;image/png&quot;</span>);</span><br><span class=\"line\">     <span class=\"variable language_\">this</span>.<span class=\"property\">shootUrl</span> = dataUrl;</span><br><span class=\"line\">     <span class=\"comment\">// 获取图片的base64格式</span></span><br><span class=\"line\">     <span class=\"comment\">// let shootImage = base64ConvertFile(dataUrl, &quot;haorooms截取视频帧&quot;);</span></span><br><span class=\"line\">   &#125;,</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"实现网站截图\"><a href=\"#实现网站截图\" class=\"headerlink\" title=\"实现网站截图\"></a>实现网站截图</h3><blockquote>\n<p>import html2canvas from ‘html2canvas’</p>\n</blockquote>\n<p><code>html2canvas.js</code>用法其实很简单，通常情况下只需传入需要转换的DOM对象就可以了</p>\n<p>代码：定义公共方法</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> html2canvas <span class=\"keyword\">from</span> <span class=\"string\">&#x27;html2canvas&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> <span class=\"title function_\">shootAll</span> = (<span class=\"params\">dom</span>) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title function_\">html2canvas</span>(dom, &#123;</span><br><span class=\"line\">    <span class=\"attr\">backgroundColor</span>: <span class=\"string\">&#x27;1&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">allowTaint</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    <span class=\"attr\">useCORS</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">  &#125;).<span class=\"title function_\">then</span>(<span class=\"function\">(<span class=\"params\">canvas</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> canvasInfo = &#123;</span><br><span class=\"line\">      <span class=\"attr\">width</span>: canvas.<span class=\"title function_\">getAttribute</span>(<span class=\"string\">&quot;width&quot;</span>),</span><br><span class=\"line\">      <span class=\"attr\">height</span>: canvas.<span class=\"title function_\">getAttribute</span>(<span class=\"string\">&quot;height&quot;</span>),</span><br><span class=\"line\">      <span class=\"attr\">url</span>: canvas.<span class=\"title function_\">toDataURL</span>()</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// canvas为转换后的Canvas对象</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> canvasInfo <span class=\"comment\">// 导出图片</span></span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>找到对应dom是关键，可以通过点击事件获取到e，e携带了全部的路径path，从path中可以获取到父级的dom，传入前做一下对象是否是dom的判断</p>\n</blockquote>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">assertElement</span>(<span class=\"params\">obj</span>) &#123;</span><br><span class=\"line\">     <span class=\"comment\">//判断是不是dom节点</span></span><br><span class=\"line\">     <span class=\"keyword\">var</span> d = <span class=\"variable language_\">document</span>.<span class=\"title function_\">createElement</span>(<span class=\"string\">&quot;div&quot;</span>);</span><br><span class=\"line\">     <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">       d.<span class=\"title function_\">appendChild</span>(obj.<span class=\"title function_\">cloneNode</span>(<span class=\"literal\">true</span>));</span><br><span class=\"line\">       <span class=\"keyword\">return</span> obj.<span class=\"property\">nodeType</span> == <span class=\"number\">1</span> ? <span class=\"literal\">true</span> : <span class=\"literal\">false</span>;</span><br><span class=\"line\">     &#125; <span class=\"keyword\">catch</span> (e) &#123;</span><br><span class=\"line\">       <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">   &#125;,</span><br><span class=\"line\">   <span class=\"title function_\">shootAllPre</span>(<span class=\"params\">e</span>) &#123;</span><br><span class=\"line\">     <span class=\"keyword\">let</span> shootDom = <span class=\"literal\">null</span>;</span><br><span class=\"line\">     e.<span class=\"property\">path</span>.<span class=\"title function_\">forEach</span>(<span class=\"function\">(<span class=\"params\">v</span>) =&gt;</span> &#123;</span><br><span class=\"line\">       <span class=\"comment\">//寻找到 container dom节点</span></span><br><span class=\"line\">       <span class=\"keyword\">let</span> judge = <span class=\"variable language_\">this</span>.<span class=\"title function_\">assertElement</span>(v);</span><br><span class=\"line\">       <span class=\"keyword\">if</span> (judge &amp;&amp; v.<span class=\"title function_\">getAttribute</span>(<span class=\"string\">&quot;class&quot;</span>) == <span class=\"string\">&quot;container&quot;</span>) &#123;</span><br><span class=\"line\">         shootDom = v;</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">     &#125;);</span><br><span class=\"line\">     <span class=\"title function_\">shootAll</span>(shootDom).<span class=\"title function_\">then</span>(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> &#123;</span><br><span class=\"line\">       <span class=\"variable language_\">this</span>.<span class=\"property\">shootUrl</span> = res.<span class=\"property\">url</span>;</span><br><span class=\"line\">       <span class=\"variable language_\">this</span>.<span class=\"property\">info</span>.<span class=\"property\">swidth</span> = res.<span class=\"property\">width</span>;</span><br><span class=\"line\">       <span class=\"variable language_\">this</span>.<span class=\"property\">info</span>.<span class=\"property\">sheight</span> = res.<span class=\"property\">height</span>;</span><br><span class=\"line\">     &#125;);</span><br><span class=\"line\">   &#125;,</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">el-button</span> <span class=\"attr\">size</span>=<span class=\"string\">&quot;small&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;primary&quot;</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;shootAllPre&quot;</span>&gt;</span>全屏截图<span class=\"tag\">&lt;/<span class=\"name\">el-button</span>&gt;</span></span><br></pre></td></tr></table></figure>"},{"title":"用插槽去二次封装","date":"2020-07-12T09:16:26.000Z","_content":"\n<meta name=\"referrer\" content=\"no-referrer\"/>\n\n## 用插槽去二次封装\n\n### 后台系统管理页面\n\n管理系统页面通常都有如下的结构：上方是一个搜素框，可以选择和输入各种搜素条件，下面则是一个table列表。用来显示搜素出来的数据。\n\n这通常可以分成两个公共组件进行封装。\n\n### slot是什么?\n\n一个table前面的大部分数据都是单纯的展示。需要注意的通常都是最后一列，一般都有各种各样的操作。这里需要使用slot插槽去封装，形如：\n\n```js\n<button type=\"submit\">\n  <slot>Submit</slot>\n</button>\n```\n\n如果你将上面的这个代码做成组件：submit-button，则有如下用法：\n\n```js\n<submit-button></submit-button>\n显示：\nsubmit\n```\n\n当然，也可以父级直接传参改变其数据\n\n```js\n<submit-button>\n  Save\n</submit-button>\n显示:\nsave\n```\n\n### 用slot去封装table\n\ntable的最后一列是动态的。我们就可以用slot去操作，如下：\n\n父级：\n\n```js\n  <TableBlock :tableLabels=\"labelList\" :tableData=\"tableData\" :total=\"total\"\n        :loading=\"tableLoading\" @sizeChange=\"tableSizeChange\"           @pageChange=\"tablePageChange\">\n        <template v-slot:operation=\"scope\">\n          <el-button @click=\"gotoDetail(scope.row)\" type=\"text\" size=\"small\"\n            >详情</el-button\n          >\n          <el-button @click=\"unSubscribe(scope.row)\" type=\"text\" size=\"small\"\n            >退订</el-button\n          >\n        </template>\n      </TableBlock>\n```\n\n子级：\n\n```js\n <el-table\n      v-loading=\"loading\"\n      :data=\"tableData\"\n      :row-class-name=\"tableRowClassName\"\n      sortable=\"custom\"\n      border\n      @selection-change=\"handleSelectionChange\"\n      @sort-change=\"sortChange\">\n    >\n      <el-table-column type=\"selection\" width=\"55\"> </el-table-column>\n      <el-table-column\n        v-for=\"({label, key,sort}) in tableLabels\"\n        :key=\"label\"\n        :show-overflow-tooltip=\"true\"\n        :label=\"label\"\n        :prop=\"key\"\n        :sortable=\"sort && 'custom'\"\n      >\n        <template v-slot=\"scope\">\n          <span>{{ scope.row[key] !== '' ? convertToTxt(key,scope.row,label) : \"-\" }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column :show-overflow-tooltip=\"true\" label=\"操作\">\n        <template v-slot=\"scope\">\n          <slot name=\"operation\" :row=\"scope.row\"></slot>  \n        </template>\n      </el-table-column>\n    </el-table>\n```\n\n子级内有个 具名插槽。通过具名operation，可以直接匹配上父级传来的slot数据。从而将数据显示到子组件的对应位置\n\n父级；\n\n```js\n  <template v-slot:operation=\"scope\">\n    </template>\n```\n\n子级：\n\n```js\n<slot name=\"operation\" :row=\"scope.row\"></slot>  \n```\n\n通过上面的两个slot配合，就可以将下面template的内容：\n\n```js\n <el-button @click=\"gotoDetail(scope.row)\" type=\"text\" size=\"small\"\n            >详情</el-button\n          >\n          <el-button @click=\"unSubscribe(scope.row)\" type=\"text\" size=\"small\"\n            >退订</el-button\n  >\n```\n\n显示到子组件的template》slot中：\n\n```js\n<el-table-column :show-overflow-tooltip=\"true\" label=\"操作\">\n        <template v-slot=\"scope\">\n          <slot name=\"operation\" :row=\"scope.row\"></slot>  \n        </template>\n</el-table-column>\n```\n\n","source":"_posts/用插槽去二次封装.md","raw":"---\n\ntitle: 用插槽去二次封装\ndate: 2020-07-12 17:16:26\ntags: [js,hexo]\n---\n\n<meta name=\"referrer\" content=\"no-referrer\"/>\n\n## 用插槽去二次封装\n\n### 后台系统管理页面\n\n管理系统页面通常都有如下的结构：上方是一个搜素框，可以选择和输入各种搜素条件，下面则是一个table列表。用来显示搜素出来的数据。\n\n这通常可以分成两个公共组件进行封装。\n\n### slot是什么?\n\n一个table前面的大部分数据都是单纯的展示。需要注意的通常都是最后一列，一般都有各种各样的操作。这里需要使用slot插槽去封装，形如：\n\n```js\n<button type=\"submit\">\n  <slot>Submit</slot>\n</button>\n```\n\n如果你将上面的这个代码做成组件：submit-button，则有如下用法：\n\n```js\n<submit-button></submit-button>\n显示：\nsubmit\n```\n\n当然，也可以父级直接传参改变其数据\n\n```js\n<submit-button>\n  Save\n</submit-button>\n显示:\nsave\n```\n\n### 用slot去封装table\n\ntable的最后一列是动态的。我们就可以用slot去操作，如下：\n\n父级：\n\n```js\n  <TableBlock :tableLabels=\"labelList\" :tableData=\"tableData\" :total=\"total\"\n        :loading=\"tableLoading\" @sizeChange=\"tableSizeChange\"           @pageChange=\"tablePageChange\">\n        <template v-slot:operation=\"scope\">\n          <el-button @click=\"gotoDetail(scope.row)\" type=\"text\" size=\"small\"\n            >详情</el-button\n          >\n          <el-button @click=\"unSubscribe(scope.row)\" type=\"text\" size=\"small\"\n            >退订</el-button\n          >\n        </template>\n      </TableBlock>\n```\n\n子级：\n\n```js\n <el-table\n      v-loading=\"loading\"\n      :data=\"tableData\"\n      :row-class-name=\"tableRowClassName\"\n      sortable=\"custom\"\n      border\n      @selection-change=\"handleSelectionChange\"\n      @sort-change=\"sortChange\">\n    >\n      <el-table-column type=\"selection\" width=\"55\"> </el-table-column>\n      <el-table-column\n        v-for=\"({label, key,sort}) in tableLabels\"\n        :key=\"label\"\n        :show-overflow-tooltip=\"true\"\n        :label=\"label\"\n        :prop=\"key\"\n        :sortable=\"sort && 'custom'\"\n      >\n        <template v-slot=\"scope\">\n          <span>{{ scope.row[key] !== '' ? convertToTxt(key,scope.row,label) : \"-\" }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column :show-overflow-tooltip=\"true\" label=\"操作\">\n        <template v-slot=\"scope\">\n          <slot name=\"operation\" :row=\"scope.row\"></slot>  \n        </template>\n      </el-table-column>\n    </el-table>\n```\n\n子级内有个 具名插槽。通过具名operation，可以直接匹配上父级传来的slot数据。从而将数据显示到子组件的对应位置\n\n父级；\n\n```js\n  <template v-slot:operation=\"scope\">\n    </template>\n```\n\n子级：\n\n```js\n<slot name=\"operation\" :row=\"scope.row\"></slot>  \n```\n\n通过上面的两个slot配合，就可以将下面template的内容：\n\n```js\n <el-button @click=\"gotoDetail(scope.row)\" type=\"text\" size=\"small\"\n            >详情</el-button\n          >\n          <el-button @click=\"unSubscribe(scope.row)\" type=\"text\" size=\"small\"\n            >退订</el-button\n  >\n```\n\n显示到子组件的template》slot中：\n\n```js\n<el-table-column :show-overflow-tooltip=\"true\" label=\"操作\">\n        <template v-slot=\"scope\">\n          <slot name=\"operation\" :row=\"scope.row\"></slot>  \n        </template>\n</el-table-column>\n```\n\n","slug":"用插槽去二次封装","published":1,"updated":"2021-06-22T07:13:34.454Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl0uux6wa00287suf2q5e6x5x","content":"<meta name=\"referrer\" content=\"no-referrer\"/>\n\n<h2 id=\"用插槽去二次封装\"><a href=\"#用插槽去二次封装\" class=\"headerlink\" title=\"用插槽去二次封装\"></a>用插槽去二次封装</h2><h3 id=\"后台系统管理页面\"><a href=\"#后台系统管理页面\" class=\"headerlink\" title=\"后台系统管理页面\"></a>后台系统管理页面</h3><p>管理系统页面通常都有如下的结构：上方是一个搜素框，可以选择和输入各种搜素条件，下面则是一个table列表。用来显示搜素出来的数据。</p>\n<p>这通常可以分成两个公共组件进行封装。</p>\n<h3 id=\"slot是什么\"><a href=\"#slot是什么\" class=\"headerlink\" title=\"slot是什么?\"></a>slot是什么?</h3><p>一个table前面的大部分数据都是单纯的展示。需要注意的通常都是最后一列，一般都有各种各样的操作。这里需要使用slot插槽去封装，形如：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;button type=<span class=\"string\">&quot;submit&quot;</span>&gt;</span><br><span class=\"line\">  <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">slot</span>&gt;</span>Submit<span class=\"tag\">&lt;/<span class=\"name\">slot</span>&gt;</span></span></span><br><span class=\"line\">&lt;/button&gt;</span><br></pre></td></tr></table></figure>\n\n<p>如果你将上面的这个代码做成组件：submit-button，则有如下用法：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;submit-button&gt;&lt;/submit-button&gt;</span><br><span class=\"line\">显示：</span><br><span class=\"line\">submit</span><br></pre></td></tr></table></figure>\n\n<p>当然，也可以父级直接传参改变其数据</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;submit-button&gt;</span><br><span class=\"line\">  <span class=\"title class_\">Save</span></span><br><span class=\"line\">&lt;/submit-button&gt;</span><br><span class=\"line\">显示:</span><br><span class=\"line\">save</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"用slot去封装table\"><a href=\"#用slot去封装table\" class=\"headerlink\" title=\"用slot去封装table\"></a>用slot去封装table</h3><p>table的最后一列是动态的。我们就可以用slot去操作，如下：</p>\n<p>父级：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;<span class=\"title class_\">TableBlock</span> :tableLabels=<span class=\"string\">&quot;labelList&quot;</span> :tableData=<span class=\"string\">&quot;tableData&quot;</span> :total=<span class=\"string\">&quot;total&quot;</span></span><br><span class=\"line\">      :loading=<span class=\"string\">&quot;tableLoading&quot;</span> @sizeChange=<span class=\"string\">&quot;tableSizeChange&quot;</span>           @pageChange=<span class=\"string\">&quot;tablePageChange&quot;</span>&gt;</span><br><span class=\"line\">      <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">template</span> <span class=\"attr\">v-slot:operation</span>=<span class=\"string\">&quot;scope&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">el-button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;gotoDetail(scope.row)&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">size</span>=<span class=\"string\">&quot;small&quot;</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">          &gt;</span>详情&lt;/el-button</span></span><br><span class=\"line\"><span class=\"language-xml\">        &gt;</span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">el-button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;unSubscribe(scope.row)&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">size</span>=<span class=\"string\">&quot;small&quot;</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">          &gt;</span>退订&lt;/el-button</span></span><br><span class=\"line\"><span class=\"language-xml\">        &gt;</span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;/<span class=\"name\">TableBlock</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n\n<p>子级：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;el-table</span><br><span class=\"line\">     v-loading=<span class=\"string\">&quot;loading&quot;</span></span><br><span class=\"line\">     :data=<span class=\"string\">&quot;tableData&quot;</span></span><br><span class=\"line\">     :row-<span class=\"keyword\">class</span>-name=<span class=\"string\">&quot;tableRowClassName&quot;</span></span><br><span class=\"line\">     sortable=<span class=\"string\">&quot;custom&quot;</span></span><br><span class=\"line\">     border</span><br><span class=\"line\">     @selection-change=<span class=\"string\">&quot;handleSelectionChange&quot;</span></span><br><span class=\"line\">     @sort-change=<span class=\"string\">&quot;sortChange&quot;</span>&gt;</span><br><span class=\"line\">   &gt;</span><br><span class=\"line\">     <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">el-table-column</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;selection&quot;</span> <span class=\"attr\">width</span>=<span class=\"string\">&quot;55&quot;</span>&gt;</span> <span class=\"tag\">&lt;/<span class=\"name\">el-table-column</span>&gt;</span></span></span><br><span class=\"line\">     <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">el-table-column</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">       <span class=\"attr\">v-for</span>=<span class=\"string\">&quot;(&#123;label, key,sort&#125;) in tableLabels&quot;</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">       <span class=\"attr\">:key</span>=<span class=\"string\">&quot;label&quot;</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">       <span class=\"attr\">:show-overflow-tooltip</span>=<span class=\"string\">&quot;true&quot;</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">       <span class=\"attr\">:label</span>=<span class=\"string\">&quot;label&quot;</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">       <span class=\"attr\">:prop</span>=<span class=\"string\">&quot;key&quot;</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">       <span class=\"attr\">:sortable</span>=<span class=\"string\">&quot;sort &amp;&amp; &#x27;custom&#x27;&quot;</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">     &gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">       <span class=\"tag\">&lt;<span class=\"name\">template</span> <span class=\"attr\">v-slot</span>=<span class=\"string\">&quot;scope&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">         <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>&#123;&#123; scope.row[key] !== &#x27;&#x27; ? convertToTxt(key,scope.row,label) : &quot;-&quot; &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">       <span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">     <span class=\"tag\">&lt;/<span class=\"name\">el-table-column</span>&gt;</span></span></span><br><span class=\"line\">     <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">el-table-column</span> <span class=\"attr\">:show-overflow-tooltip</span>=<span class=\"string\">&quot;true&quot;</span> <span class=\"attr\">label</span>=<span class=\"string\">&quot;操作&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">       <span class=\"tag\">&lt;<span class=\"name\">template</span> <span class=\"attr\">v-slot</span>=<span class=\"string\">&quot;scope&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">         <span class=\"tag\">&lt;<span class=\"name\">slot</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;operation&quot;</span> <span class=\"attr\">:row</span>=<span class=\"string\">&quot;scope.row&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">slot</span>&gt;</span>  </span></span><br><span class=\"line\"><span class=\"language-xml\">       <span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">     <span class=\"tag\">&lt;/<span class=\"name\">el-table-column</span>&gt;</span></span></span><br><span class=\"line\">   &lt;/el-table&gt;</span><br></pre></td></tr></table></figure>\n\n<p>子级内有个 具名插槽。通过具名operation，可以直接匹配上父级传来的slot数据。从而将数据显示到子组件的对应位置</p>\n<p>父级；</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template v-<span class=\"attr\">slot</span>:operation=<span class=\"string\">&quot;scope&quot;</span>&gt;</span><br><span class=\"line\">  &lt;/template&gt;</span><br></pre></td></tr></table></figure>\n\n<p>子级：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;slot name=<span class=\"string\">&quot;operation&quot;</span> :row=<span class=\"string\">&quot;scope.row&quot;</span>&gt;&lt;/slot&gt;  </span><br></pre></td></tr></table></figure>\n\n<p>通过上面的两个slot配合，就可以将下面template的内容：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;el-button @click=<span class=\"string\">&quot;gotoDetail(scope.row)&quot;</span> type=<span class=\"string\">&quot;text&quot;</span> size=<span class=\"string\">&quot;small&quot;</span></span><br><span class=\"line\">           &gt;详情&lt;/el-button</span><br><span class=\"line\">         &gt;</span><br><span class=\"line\">         <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">el-button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;unSubscribe(scope.row)&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">size</span>=<span class=\"string\">&quot;small&quot;</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">           &gt;</span>退订&lt;/el-button</span></span><br><span class=\"line\"><span class=\"language-xml\"> &gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>显示到子组件的template》slot中：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;el-table-column :show-overflow-tooltip=<span class=\"string\">&quot;true&quot;</span> label=<span class=\"string\">&quot;操作&quot;</span>&gt;</span><br><span class=\"line\">        <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">template</span> <span class=\"attr\">v-slot</span>=<span class=\"string\">&quot;scope&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">          <span class=\"tag\">&lt;<span class=\"name\">slot</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;operation&quot;</span> <span class=\"attr\">:row</span>=<span class=\"string\">&quot;scope.row&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">slot</span>&gt;</span>  </span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span></span><br><span class=\"line\">&lt;/el-table-column&gt;</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"","more":"<meta name=\"referrer\" content=\"no-referrer\"/>\n\n<h2 id=\"用插槽去二次封装\"><a href=\"#用插槽去二次封装\" class=\"headerlink\" title=\"用插槽去二次封装\"></a>用插槽去二次封装</h2><h3 id=\"后台系统管理页面\"><a href=\"#后台系统管理页面\" class=\"headerlink\" title=\"后台系统管理页面\"></a>后台系统管理页面</h3><p>管理系统页面通常都有如下的结构：上方是一个搜素框，可以选择和输入各种搜素条件，下面则是一个table列表。用来显示搜素出来的数据。</p>\n<p>这通常可以分成两个公共组件进行封装。</p>\n<h3 id=\"slot是什么\"><a href=\"#slot是什么\" class=\"headerlink\" title=\"slot是什么?\"></a>slot是什么?</h3><p>一个table前面的大部分数据都是单纯的展示。需要注意的通常都是最后一列，一般都有各种各样的操作。这里需要使用slot插槽去封装，形如：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;button type=<span class=\"string\">&quot;submit&quot;</span>&gt;</span><br><span class=\"line\">  <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">slot</span>&gt;</span>Submit<span class=\"tag\">&lt;/<span class=\"name\">slot</span>&gt;</span></span></span><br><span class=\"line\">&lt;/button&gt;</span><br></pre></td></tr></table></figure>\n\n<p>如果你将上面的这个代码做成组件：submit-button，则有如下用法：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;submit-button&gt;&lt;/submit-button&gt;</span><br><span class=\"line\">显示：</span><br><span class=\"line\">submit</span><br></pre></td></tr></table></figure>\n\n<p>当然，也可以父级直接传参改变其数据</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;submit-button&gt;</span><br><span class=\"line\">  <span class=\"title class_\">Save</span></span><br><span class=\"line\">&lt;/submit-button&gt;</span><br><span class=\"line\">显示:</span><br><span class=\"line\">save</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"用slot去封装table\"><a href=\"#用slot去封装table\" class=\"headerlink\" title=\"用slot去封装table\"></a>用slot去封装table</h3><p>table的最后一列是动态的。我们就可以用slot去操作，如下：</p>\n<p>父级：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;<span class=\"title class_\">TableBlock</span> :tableLabels=<span class=\"string\">&quot;labelList&quot;</span> :tableData=<span class=\"string\">&quot;tableData&quot;</span> :total=<span class=\"string\">&quot;total&quot;</span></span><br><span class=\"line\">      :loading=<span class=\"string\">&quot;tableLoading&quot;</span> @sizeChange=<span class=\"string\">&quot;tableSizeChange&quot;</span>           @pageChange=<span class=\"string\">&quot;tablePageChange&quot;</span>&gt;</span><br><span class=\"line\">      <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">template</span> <span class=\"attr\">v-slot:operation</span>=<span class=\"string\">&quot;scope&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">el-button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;gotoDetail(scope.row)&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">size</span>=<span class=\"string\">&quot;small&quot;</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">          &gt;</span>详情&lt;/el-button</span></span><br><span class=\"line\"><span class=\"language-xml\">        &gt;</span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">el-button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;unSubscribe(scope.row)&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">size</span>=<span class=\"string\">&quot;small&quot;</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">          &gt;</span>退订&lt;/el-button</span></span><br><span class=\"line\"><span class=\"language-xml\">        &gt;</span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;/<span class=\"name\">TableBlock</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n\n<p>子级：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;el-table</span><br><span class=\"line\">     v-loading=<span class=\"string\">&quot;loading&quot;</span></span><br><span class=\"line\">     :data=<span class=\"string\">&quot;tableData&quot;</span></span><br><span class=\"line\">     :row-<span class=\"keyword\">class</span>-name=<span class=\"string\">&quot;tableRowClassName&quot;</span></span><br><span class=\"line\">     sortable=<span class=\"string\">&quot;custom&quot;</span></span><br><span class=\"line\">     border</span><br><span class=\"line\">     @selection-change=<span class=\"string\">&quot;handleSelectionChange&quot;</span></span><br><span class=\"line\">     @sort-change=<span class=\"string\">&quot;sortChange&quot;</span>&gt;</span><br><span class=\"line\">   &gt;</span><br><span class=\"line\">     <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">el-table-column</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;selection&quot;</span> <span class=\"attr\">width</span>=<span class=\"string\">&quot;55&quot;</span>&gt;</span> <span class=\"tag\">&lt;/<span class=\"name\">el-table-column</span>&gt;</span></span></span><br><span class=\"line\">     <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">el-table-column</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">       <span class=\"attr\">v-for</span>=<span class=\"string\">&quot;(&#123;label, key,sort&#125;) in tableLabels&quot;</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">       <span class=\"attr\">:key</span>=<span class=\"string\">&quot;label&quot;</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">       <span class=\"attr\">:show-overflow-tooltip</span>=<span class=\"string\">&quot;true&quot;</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">       <span class=\"attr\">:label</span>=<span class=\"string\">&quot;label&quot;</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">       <span class=\"attr\">:prop</span>=<span class=\"string\">&quot;key&quot;</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">       <span class=\"attr\">:sortable</span>=<span class=\"string\">&quot;sort &amp;&amp; &#x27;custom&#x27;&quot;</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">     &gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">       <span class=\"tag\">&lt;<span class=\"name\">template</span> <span class=\"attr\">v-slot</span>=<span class=\"string\">&quot;scope&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">         <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>&#123;&#123; scope.row[key] !== &#x27;&#x27; ? convertToTxt(key,scope.row,label) : &quot;-&quot; &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">       <span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">     <span class=\"tag\">&lt;/<span class=\"name\">el-table-column</span>&gt;</span></span></span><br><span class=\"line\">     <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">el-table-column</span> <span class=\"attr\">:show-overflow-tooltip</span>=<span class=\"string\">&quot;true&quot;</span> <span class=\"attr\">label</span>=<span class=\"string\">&quot;操作&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">       <span class=\"tag\">&lt;<span class=\"name\">template</span> <span class=\"attr\">v-slot</span>=<span class=\"string\">&quot;scope&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">         <span class=\"tag\">&lt;<span class=\"name\">slot</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;operation&quot;</span> <span class=\"attr\">:row</span>=<span class=\"string\">&quot;scope.row&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">slot</span>&gt;</span>  </span></span><br><span class=\"line\"><span class=\"language-xml\">       <span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">     <span class=\"tag\">&lt;/<span class=\"name\">el-table-column</span>&gt;</span></span></span><br><span class=\"line\">   &lt;/el-table&gt;</span><br></pre></td></tr></table></figure>\n\n<p>子级内有个 具名插槽。通过具名operation，可以直接匹配上父级传来的slot数据。从而将数据显示到子组件的对应位置</p>\n<p>父级；</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template v-<span class=\"attr\">slot</span>:operation=<span class=\"string\">&quot;scope&quot;</span>&gt;</span><br><span class=\"line\">  &lt;/template&gt;</span><br></pre></td></tr></table></figure>\n\n<p>子级：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;slot name=<span class=\"string\">&quot;operation&quot;</span> :row=<span class=\"string\">&quot;scope.row&quot;</span>&gt;&lt;/slot&gt;  </span><br></pre></td></tr></table></figure>\n\n<p>通过上面的两个slot配合，就可以将下面template的内容：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;el-button @click=<span class=\"string\">&quot;gotoDetail(scope.row)&quot;</span> type=<span class=\"string\">&quot;text&quot;</span> size=<span class=\"string\">&quot;small&quot;</span></span><br><span class=\"line\">           &gt;详情&lt;/el-button</span><br><span class=\"line\">         &gt;</span><br><span class=\"line\">         <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">el-button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;unSubscribe(scope.row)&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">size</span>=<span class=\"string\">&quot;small&quot;</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">           &gt;</span>退订&lt;/el-button</span></span><br><span class=\"line\"><span class=\"language-xml\"> &gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>显示到子组件的template》slot中：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;el-table-column :show-overflow-tooltip=<span class=\"string\">&quot;true&quot;</span> label=<span class=\"string\">&quot;操作&quot;</span>&gt;</span><br><span class=\"line\">        <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">template</span> <span class=\"attr\">v-slot</span>=<span class=\"string\">&quot;scope&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">          <span class=\"tag\">&lt;<span class=\"name\">slot</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;operation&quot;</span> <span class=\"attr\">:row</span>=<span class=\"string\">&quot;scope.row&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">slot</span>&gt;</span>  </span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span></span><br><span class=\"line\">&lt;/el-table-column&gt;</span><br></pre></td></tr></table></figure>\n\n"},{"title":"记录网站功能","date":"2019-12-02T09:16:26.000Z","_content":"\n<meta name=\"referrer\" content=\"no-referrer\"/>\n\n## 记录网站功能\n\n### 网站登录页面和注册页面\n\n登录页面和注册页面都做了一个css效果，中间有遇到些问题，记录\n\n点击后会让input框中的文字位置上浮，实现动态的效果，如下：\n\n![](https://limengtupian.oss-cn-beijing.aliyuncs.com/%E7%99%BB%E5%BD%95/%E7%99%BB%E5%BD%954.gif)\n\n<!-- more -->\n\n### 实现代码\n\n实现效果是很简单的，代码如下：\n\n```html\n<div class=\"accAndPass\" v-for=\"(item,index) in items1\" :key=\"index\">\n        <span class>{{item.text}}</span>\n        <input name=\"inputValue\" type=\"text\" @focus=\"turnUp(index)\" @blur=\"turnOff(index)\" />\n        <img :src=\"closeIcon\" name='eyes' @click='showPassWord'>\n</div>\n```\n\n当input聚焦的时候添加一个class，失焦的时候去掉这个class即可：\n\n```js\t\n    turnUp(index) {\n      var spans = document.getElementsByTagName(\"span\");\n      var Bottomsoild = document.getElementsByClassName(\"accAndPass\");\n      spans[index].classList.add(\"showup\");\n      Bottomsoild[index].classList.add(\"bottom\");\n    },\n    turnOff(index) {\n      var Bottomsoild = document.getElementsByClassName(\"accAndPass\");\n      var spans = document.getElementsByTagName(\"span\");\n      var input_Value = document.getElementsByName(\"inputValue\");\n      if (input_Value[index].value !== \"\") {\n        spans[index].classList.add(\"showup\");\n        Bottomsoild[index].classList.add(\"bottom\");\n      } else {\n        spans[index].className = \"\";\n        Bottomsoild[index].classList.remove(\"bottom\");\n      }\n```\n\n这个主要是css的实现可以关注下，有添加了平滑移动的动画\n\n```css\n.showup {\n  top: -35% !important;\n  left: 0 !important;\n  transition: 0.5s;\n  color: black !important;\n  font-weight: 600;\n  font-size: 20px !important;\n}\n\n.bottom {\n  border-bottom: 2px solid #34495e !important;\n}\n```\n\n要注意的是，input框内的登录这个两个字，会占用input的空间，所以需要做处理：\n\ninput框的背景颜色需要改成透明色，再改变登录这个两个字的z-index权重，将input权重高于这两个文字，就可以覆盖这两个文字，并且可以在透明背景下正常显示。\n\n```css\t\n.accAndPass input {\n  height: 50px;\n  width: 100%;\n  outline: none;\n  font-size: 25px;\n  padding: 0;\n  border: none;\n  background-color: transparent;\n  position: relative;\n}\n.accAndPass > span {\n  position: absolute;\n  top: 50%;\n  left: 3%;\n  transform: translateY(-50%);\n  z-index: -1;\n  transition: 0.5s;\n  font-size: 18px;\n  color: lightgray;\n}\n```\n\n**通过按钮隐藏或者显示密码**\n\n主要是更改input内的type，让其在‘text’和‘password’之间去转换,引入图片的时候，如果找不到地址，可以在地址前添加require。\n\n```js\t\nshowPassWord(){\n  var inputs = document.getElementsByName(\"inputValue\");\n  var eyes = document.getElementsByName('eyes');\n  if (this.showEyes === false) {\n  inputs[1].type = 'text';\n  eyes[1].src = this.openIcon;\n  }else{\n  inputs[1].type = 'password';\n  eyes[1].src = this.closeIcon;\n  }\n  this.showEyes = !this.showEyes;\n}\n```\n\n```html\n      closeIcon: require(\"../assets/close.png\"),\n      openIcon: require(\"../assets/open.png\"),\n```\n\n## 记录网站功能-电影分类\n\n### 电影分类\n\n通过axios获得到豆瓣top90部电影后，想要在左侧添加一个分类的侧边栏，所以需要对得到的电影进行分类。\n\n暂时没有找到分类的api接口，只有自己通过js去循环分类出一个新的数组，新数组形式如下：\n\n```js\nmovieGenres.push({\n  index: nowGenres,\n  list: [movieLists[i]]\n});\n```\n\nindex:电影的类别（比如动作，冒险，剧情等等），\n\nlist：对应类别中的所有电影。\n\nmovieLists[i]：初始通过axios得到的电影详情信息（初始对象）\n\n<!-- more -->\n\n### 实现代码\n\n* 实现逻辑\n\n  1. 获取到全部电影对象\n  2. 1. 设定一个空数组用来存放分类后的全部电影：movieGenres[]。\n     2. 循环全部对象，判断每一部电影的类别是否存在于新数组中，\n     3. 存在则，直接添加到对应的类别数组LIst中去，\n     4. 不存在，则将对应类别直接添加到新数组中，\n\n* 实现代码\n\n  ```js\n  formMovieG(movieLists) {\n    var movieGenres = [];\n    for (let i = 0; i < movieLists.length; i++) {\n      var nowGenres = movieLists[i].genres[0];\n      if (toJudge(nowGenres)) {\n        movieGenres.push({\n          index: nowGenres,\n          list: [movieLists[i]]\n        });\n      } else {\n        for (let j = 0; j < movieGenres.length; j++) {\n          if (movieGenres[j].index == nowGenres)\n            movieGenres[j].list.push(movieLists[i]);\n        }\n      }\n    }\n    function toJudge(nowGenres) {\n      for (let i = 0; i < movieGenres.length; i++) {\n        if (movieGenres[i].index == nowGenres) {\n          return false;\n        }\n      }\n      return true;\n    }\n    return movieGenres;\n  },\n  ```\n\n  movieLists:全部电影（90部没有分类）\n\n  toJudge（）：判断函数，判断是否存在对应类别 ，存在则返回false，不存在则返回true；\n\n  ```js\n  this.movieGenres = this.formMovieG(movieLists);\n  ```\n\n  获取后赋值。\n\n* *注意点*\n\n  新数组的形式：\n\n  ```html\n        movieGenres.push({\n          index: nowGenres,\n          *list: [movieLists[i]]*\n        });\n  ```\n\n  其中list应当为一个数组的形式，因为是多个对象在其中，后续判断类别相同后，需要用push的方法推到list数组中去。\n\n## 记录网站功能-动态生成li\n\n### 动态生成元素\n\n当获取到电影之后，一页只能显示9个电影，之后的电影则需要通过下方的分页li去显示，不同的种类的电影数量是不一致的，所以对应的下方显示数量li页不一致，所以需要根据电影数量动态生成li。\n\n全部电影：\n\n![](https://limengtupian.oss-cn-beijing.aliyuncs.com/%E5%8A%A8%E6%80%81/%E5%8A%A8%E6%80%811.png)\n\n局部电影：\n\n![](https://limengtupian.oss-cn-beijing.aliyuncs.com/%E5%8A%A8%E6%80%81/%E5%8A%A8%E6%80%812.png)\n\n<!-- more -->\n\n### 代码\n\n* 逻辑\n\n  1. 通过判断当前类目一共有多少电影去生成对应个数的下方li索引，\n  2. 切换前，应当先清除所有的li，然后再生成新的li。\n  3. 给每个li绑定一个点击事件，当点击时候，当前显示页面的数组替换成对应序号的数组，\n\n* 代码\n\n  ```js\n  // 生成下方li列表\n  createLiLists(Lilength) {\n    let that = this; //内部函数中调用函数，用that存储this指向，再调用，that.xxx\n    var indexlists = document.querySelector(\"#indexLists\");\n    var showindex = document.querySelector(\".showindex\");\n    for (let i = 1; i < Lilength; i++) {\n      var node = document.createElement(\"li\");\n      var textIndex = document.createTextNode(i);\n      node.appendChild(textIndex);\n      indexlists.appendChild(node);\n      node.className = \"index\";\n      node.addEventListener(\"click\", function() {\n        that.gotoIndex(this.innerText, showindex); // that调用\n      });\n    }\n    this.liIndexList = Lilength;\n    showindex.innerText = 1;\n  },\n  ```\n\n  ```js\n  // 清除li\n  clearLiLists() {\n    // this.liIndexList = Lilength;\n    var indexlists = document.querySelector(\"#indexLists\");\n    var liS = indexlists.querySelectorAll(\".index\");\n    // 清除lis，排他\n    for (var i = liS.length - 1; i >= 0; i--) {\n      indexlists.removeChild(liS[i]);\n    }\n  },\n  ```\n\n  ```js\n  //点击事件\n  gotoIndex(e, showindex) {\n    var index = document.querySelectorAll(\".index\");\n    // var showindex = document.querySelector(\".showindex\");\n    this.isLoading = true;\n    //单页面应用，定时器并不会自动关闭，需要手动清除\n    var out = setInterval(() => {\n      if (this.allMovie.length == 90) {\n        if (this.liIndexList == 11) {\n          this.items = this.allMovie.slice(\n            parseInt(e) * 9 - 9,\n            parseInt(e) * 9,\n            (this.isLoading = false)\n          );\n        } else {\n          this.items = this.movieGenres_index_list.slice(\n            parseInt(e) * 9 - 9,\n            parseInt(e) * 9,\n            (this.isLoading = false)\n          );\n        }\n        clearInterval(out);\n      }\n    }, 100);\n    showindex.innerText = e;\n    for (let i = 0; i < index.length; i++) {\n      index[i].classList.remove(\"light\");\n    }\n    index[e - 1].classList.add(\"light\");\n  },\n  ```\n\n  \n\n* 注意点\n\n  1. 生成元素后需要添加元素，才能生效\n\n     ```js\n         var node = document.createElement(\"li\");\n         var textIndex = document.createTextNode(i);\n         node.appendChild(textIndex);\n         indexlists.appendChild(node);\n     ```\n\n     这里生成了li和li内部的数字i，然后需要append到父元素indexlists上，才能生效。\n\n  2. 函数内部调用函数添加事件，使用了that\n\n     ```js\t\n          let that = this; //内部函数中调用函数，用that存储this指向，再调用，that.xxx\n          node.addEventListener(\"click\", function() {\n           that.gotoIndex(this.innerText, showindex); // that调用\n         });\n     ```\n\n     addEventListener内使用其他函数gotoIndex，直接使用this.gotoIndex不生效，使用that生效。\n\n  3. 写了一个定时器，判断是否将90部电影循环完毕，再执行绑定点击跳转事件，避免未加载完成90部电影点击无效。\n\n     ```js\n     var out = setInterval(() => {\n         if (this.allMovie.length == 90) {\n           if (this.liIndexList == 11) {\n             this.items = this.allMovie.slice(\n               parseInt(e) * 9 - 9,\n               parseInt(e) * 9,\n               (this.isLoading = false)\n             );\n           } else {\n             this.items = this.movieGenres_index_list.slice(\n               parseInt(e) * 9 - 9,\n               parseInt(e) * 9,\n               (this.isLoading = false)\n             );\n           }\n           clearInterval(out);//单页面应用，定时器并不会自动关闭，需要手动清除\n         }\n       }, 100);\n     ```\n\n     刚打开页面时候，去给li添加事件，会发现报错，因为此时，还没有获取到全部的电影，所以没有办法执行对应的数字跳转到对应的页面电影。\n\n     所以执行一个定时循环函数去判断电影是不是获取完毕，获取完毕了，再执行添加函数。\n\n     如果是有对应的api数据，则比较方便，只用获取到对应的index去后端请求。\n\n## 记录网站功能-购物车\n\n### 网站购物车功能\n\n需要在两个页面（电影列表和电影详情）去添加一个购物车功能，而且通过购物车可以跳转到支付页面，支付页面中页可以直接修改购物车的电影数量。\n\n一般去多页面操作同一数据，都会使用一些工具，现在用的是vue-x 。\n\n传统方法主要是通过父子组件之间的传值来进行操作：\n\n1. 父组件传给子组件的数据\n\n   1. 父组件需要在子组件标签处添加一个自定义标签\n\n      ```html\t\n      <Shop :number=\"allMovie.length\"></Shop>\n      ```\n\n      ```js\n      import Shop from \"@/components/shoppingCar.vue\";\n      ```\n\n      ```js\n      data() {\n          return {\n              allMovie: []\n          }\n      ```\n\n   2. 子组件需要注册props\n\n      ``` html\n      <h4>影库共有{{number}}部电影</h4>\n      ```\n\n      ```js\n        props:[\"number\"],\n      ```\n\n   这样，就可以通过标签的方法，子组件调用父组件处拿到number里的allmovie的length了。\n\n   <!-- more -->\n\n2. 子组件传给父组件的数据\n\n   1. 子组件需要给元素绑定一个事件，通过事件传参\n\n      ```html\n      <button  @click=\"toParent()\">点击传值</button>\n      ```\n\n      ```js\n        methods: {\n            toParent(){\n          this.$emit('sendToFather',this.message)\n        },\n        }\n      ```\n\n      ```js\n      \tdata() {\n          return {\n            message:{name:\"购物车\",color:\"red\"},\n          }\n      ```\n\n      \n\n   2. 父组件通过调用子组件定义的一个特定名字方法来获得子组件参数\n\n      ```html\n      <Shop  @sendToFather=\"getChild\"></Shop>\n      ```\n\n      ```js\n        methods: {\n          getChild(data){\n            console.log(data);\n          },\n        }\n      ```\n\n      控制台会输出子组件的message数组。\n\n### 购物车功能vue-x实现\n\n涉及到多个页面操作同一数据源，并且其中有页面不是父子关系。使用vue-x更加便捷\n\n* 逻辑\n\n  vue-x的使用核心是两个，一个是state，另一个是mutations。\n\n  ```html\n  export default new Vuex.Store({\n    state: {\n    },\n    mutations: {\n    },\n    actions: {\n    },\n    modules: {\n    }\n  })\n  ```\n\n  \n\n  1. state是页面所需要调用的一个数据源，比如我要在购物车中展示的所有电影数组，这个数组可以在购物车和支付页面都显示出来\n  2. mutations是其他页面提交新的数据过来的时候，需要对传递过来的数据做一些操作（比如要添加一些数量表示，要筛选出重复项等等），然后再赋值给state中的数据源，从而更新所有页面的数据。\n\n* 代码 \n\n  ```js\n  export default new Vuex.Store({\n    state: {\n      // 当前购物车的电影(经过了数量整理)\n      carMovie: [],\n      //数量\n      totalNumber: 0,\n    },\n    mutations: {\n      setShopCar(state, arg) {\n        //处理数组中的重复项，将重复项剔除，并且account 加一\n        for (let i = 0; i < arg.length; i++) {\n          for (let j = 0; j < arg.length; j++) {\n            if (i != j && arg[i].object.title == arg[j].object.title) {\n              arg.splice(j, 1);\n              j = 0;\n              arg[i].account += 1;\n            }\n          }\n        };\n        state.carMovie = arg;\n        var argTem = JSON.stringify(arg);\n        window.localStorage.setItem('tempMovie',argTem);\n        // 电影的数量\n        var total = 0;\n        for (let i = 0; i < arg.length; i++) {\n          total += arg[i].account;\n        };\n        state.totalNumber = total;\n      }\n    },\n    actions: {\n    },\n    modules: {\n    }\n  })\n  ```\n\n  支付页面中调用:\n\n  ```js\n    computed: {\n      carMovie() {\n        return this.$store.state.carMovie;\n      },\n    }\n  ```\n\n  支付页面中更新vue-x中state：\n\n  ```js\n      buyTheMovie(item) {\n        // var reg = this.$store.state.buyCarMovieList;\n        var reg = this.$store.state.carMovie;\n        reg.push({\n          account: 1,\n          object: item\n        });\n        this.$store.commit(\"setShopCar\", reg);\n      },\n  ```\n\n* 注意\n\n  1. 直接获取state数据，然后修改，这个操作是能够生效的，但是不推荐这个方法，应当所有修改state数据的操作都使用：this.$store.commit(\"xxxxx\", xxx)。从而能够保证数据更新的一致性。\n  2. 一般调用的时候，涉及到比较复杂的数据，都可以用再computed周期中。\n\n## 记录网站功能-搜索\n\n### 搜索功能\n\n网站一共获取90部电影，设计了搜索功能，主要搜索依据为电影名字，因为没有找到搜索的api接口，所以直接获取到全部的90部电影后，再进行的全部的电影循环匹配，相对花的时间比较多。\n\n实现了通过部分关键字显示对应电影，记录如下：\n\n![](https://limengtupian.oss-cn-beijing.aliyuncs.com/%E6%90%9C%E7%B4%A2/%E6%90%9C%E7%B4%A21.png)\n\n<!-- more -->\n\n### 功能实现\n\n* 逻辑实现\n\n  1. 选择一个合适的事件\n\n     通过取得input框内的value值去对比每一部电影的title，然后可以得出判断，这里需要选择对应的input事件，参考网上的说明，选用oninput事件，找到的说明如下：\n\n     * 一种是onchange事件，触发条件：内容改变且失去焦点。\n\n     * 一种是onpropertychange事件，触发条件：元素内容改变即触发，另外js改变内容，该元素的属性改变也会触发。但只在IE11以下支持。\n\n     * 一种是html5的oninput事件，触发条件：value值的改变，但是js方式改变value不会触发，且在IE8以上及其他标准浏览器支持。\n\n     实际上，网上看到有新的事件对应不同的条件执行，暂时没有去尝试，直接用了防抖函数，如下：\n\n     ​       原理：\n\n     ​         当浏览器有非直接的文字输入时，compositionstart事件就会同步触发，记住，是同步\n\n     ​         当浏览器是直接的文字输入时，compositionend事件就会触发\n\n     ```js\n     var cpLock = false;\n         $('input[search]').on('compositionstart', function () {\n             // 输入汉语拼音时锁住搜索框，不进行搜索，或者从汉语拼音转到字母时也可触发\n             cpLock = true;\n             console.log('不搜索')\n         });\n         $('input[search]').on('compositionend', function () {\n             // 结束汉语拼音输入并生成汉字时，解锁搜索框，进行搜索\n             cpLock = false;\n             console.log('汉字搜索');\n             // 接下去放ajax请求生成下拉框内容\n         });\n         $('input[search]').on('input', function () {\n             if (!cpLock) {\n                 console.log('字母搜索')    \n               // 接下去放ajax请求生成下拉框内容\n           }\n     ```\n\n  2. 需要防抖函数\n\n     防抖函数具体见以下文章：[防抖函数和节流函数]([http://www.limeng54231.top/2019/12/02/%E5%87%BD%E6%95%B0%E8%8A%82%E6%B5%81%E5%92%8C%E9%98%B2%E6%8A%96/](http://www.limeng54231.top/2019/12/02/函数节流和防抖/))\n\n* 代码\n\n  代码如下：\n\n  ```html\t\n  <input id=\"searchMovie\" type=\"text\" placeholder=\"请输入......\" @input=\"doSearch\" />\n  ```\n\n  ```js\n  <script>\n  //防抖函数\n  function debounce(fn, delay = 2000) {\n    //可以放入项目中的公共方法中进行调用（鹅只是省事）\n    let timer;\n    return function() {\n      var args = arguments;\n      if (timer) {\n        clearTimeout(timer);\n      }\n      this.isLoading = true;\n      this.loadingIntext = \"搜索中......\";\n      if (document.getElementById(\"searchMovie\").value == \"\") {\n        this.items = this.firstPMovie;\n        this.isLoading = false;\n        this.loadingIntext = \"请稍等......\";\n      } else {\n        timer = setTimeout(() => {\n          fn.apply(this, args); // this 指向vue\n        }, delay);\n      }\n    };\n  }\n  export default {\n  methods:{\n      doSearch: debounce(function() {\n    var searchMovieV = document.getElementById(\"searchMovie\").value;\n    var res = this.allMovie;\n    this.items = [];\n    for (let i = 0; i < res.length; i++) {\n      if (res[i].title.includes(searchMovieV)) {\n        this.items.push(res[i]);\n        this.isLoading = false;\n        this.loadingIntext = \"请稍等......\";\n      }\n    }\n    if (this.items.length == 0) {\n      this.loadingIntext = \"没有找到结果哟,3秒后自动返回，稍等......\";\n      this.isLoading = true;\n      var setT = setTimeout(() => {\n        this.items = this.firstPMovie;\n        this.isLoading = false;\n        this.loadingIntext = \"请稍等......\";\n        clearTimeout(setT);\n      }, 3000);\n    }\n  })\n  }\n  }\n  </script>\n  ```\n\n* **注意**\n\n1. 如何判断input的值是否符合电影title的关键词\n\n   ```html\t\n   res[i].title.includes(searchMovieV)\n   ```\n\n   .includes函数可以判断title内有没有包含seatchmovie 的关键字，只要有对应的任意一个字，就会判断为true\n\n2. 再vue中使用防抖函数\n\n   debounce这个函数需要直接写再script内部，然后设置了两个参数，第一个就是执行方法，即fn，第二个是等待时间。\n\n   这里需要注意的是，debounce这个函数内部需要定义一个timer，形成一个闭包，从而使得第二次进入循环后，清除掉第一次的定时函数。\n\n   同时this的指向问题，需要再return函数中用一个变量去存以下this，以确保指针指向的是input。\n\n   参考链接：[防抖函数中的闭包](\n\n## 记录网站功能实现-精灵图\n\n### 精灵图\n\n* 精灵图技术产生的目的：很多大型网页在首次加载的时候都需要加载很多的小图片，而考虑到在同一时间，服务器拥堵的情况下，为了解决这一问题，采用了精灵图这一技术来缓解加载时间过长从而影响用户体验的这个问题。\n\n* 精灵图技术的本质：所谓精灵图就是把很多的小图片合并到一张较大的图片里，所以在首次加载页面的时候，就不用加载过多的小图片，只需要加载出来将小图片合并起来的那一张大图片也就是精灵图即可，这样在一定程度上减少了页面的加载速度，也一定程度上缓解了服务器的压力。例如王者荣耀页面里的几个小logo:\n\n  ![tupian](http://5b0988e595225.cdn.sohucs.com/images/20171128/e5c76a5b52c14b2eadb8036126bbdce2.png)\n\n<!-- more -->\n\n### 怎么去实现一张图片加载不同位置\n\n**主要通过background-position属性去设置不同位置**\n\n如图：\n\n* 引入背景图片\n\n  ![](https://limengtupian.oss-cn-beijing.aliyuncs.com/%E7%B2%BE%E7%81%B5%E5%9B%BEmd/%E7%B2%BE%E7%81%B5%E5%9B%BE1.png)\n\n* 设置背景图片显示位置**（实际上可以通过js的for循环去设置）**\n\n  ![](https://limengtupian.oss-cn-beijing.aliyuncs.com/%E7%B2%BE%E7%81%B5%E5%9B%BEmd/%E7%B2%BE%E7%81%B5%E5%9B%BE2.png)\n\n* 设置hover效果\n\n  ![](https://limengtupian.oss-cn-beijing.aliyuncs.com/%E7%B2%BE%E7%81%B5%E5%9B%BEmd/%E7%B2%BE%E7%81%B5%E5%9B%BE3.png)\n\n### 优缺点\n\n**优点：**\n\n①减少网页的http请求，从而加快了网页加载速度，提高用户体验。\n\n②减少图片的体积，因为每个图片都有一个头部信息，把多个图片放到一个图片里，就会共用同一个头信息，从而减少了字节数。\n\n③解决了网页设计师在图片命名上的困扰，只需对一张集合的图片上命名就可以了，不需要对每一个小元素进行命名。\n\n④更换风格方便，只需要在一张或少张图片上修改图片的颜色或样式，整个网页的风格就可以改变。\n\n**缺点：**\n\n①在宽屏，高分辨率的屏幕下的自适应页面，你的图片如果不够宽，很容易出现背景断裂。\n\n②CSS Sprites在开发的时候，要通过photoshop或其他工具测量计算每一个背景单元的精确位置。\n\n③在维护的时候比较麻烦，如果页面背景有少许改动，一般就要改这张合并的图片。\n\n④精灵图不能随意改变大小和颜色。改变大小会失真模糊，降低用户体验，Css3新属性可以改变精灵图颜色，但是比较麻烦，并且新属性有兼容问题，现在一般用字体图标代替精灵图。\n\n## 记录网站功能实现-搜索功能\n\n### 网站搜索功能\n\n很多的导航网站会再头顶设置不同的搜索引擎的搜索框，提供更方便的搜索功能，如图：\n\n![](https://limengtupian.oss-cn-beijing.aliyuncs.com/%E6%90%9C%E7%B4%A2%E5%8A%9F%E8%83%BD/%E6%90%9C%E7%B4%A2%E5%8A%9F%E8%83%BD1.png)\n\n这个实现也不复杂，如下：\n\n<!-- more -->\n\n### 如何实现\n\n功能的实现也不复杂，是通过一个form，不停的变换form中的action和name去切换不同的搜索引擎的\n\n代码如下：\n\n```html\n<form action=\"https://www.baidu.com/s\" target=\"__blank\" id=\"searchForm\">\n  <input\n    id=\"searchInput\"\n    type=\"text\"\n    placeholder=\"请输入要搜索的内容：\"\n    v-model=\"searchValue\"\n    name=\"word\"\n    autofocus\n  />\n  <input type=\"submit\" value=\"搜索\" />\n</form>\n```\n\n```js\ndata() {\n  return {\n    items: [\n      {\n        text: \"谷歌\",\n        searchUrl: \"http://www.google.com.hk/search?q=\",\n        name: \"q\"\n      },\n      { text: \"百度\", searchUrl: \"https://www.baidu.com/s\", name: \"word\" },\n      {\n        text: \"搜狗\",\n        searchUrl: \"http://www.sogou.com/web\",\n        name: \"query\"\n      },\n      { text: \"必应\", searchUrl: \"https://cn.bing.com/search\", name: \"q\" }\n    ],\n    checkindex: 1,\n    searchValue: \"\"\n  };\n},\n```\n\n```js\nisActive(item, index) {\n  this.checkindex = index;\n  document.getElementById(\"searchForm\").action = item.searchUrl;\n  document.getElementById(\"searchInput\").name = item.name;\n},\n```\n\n通过v-for去循环data中的items，去生成不同的搜索引擎按钮，点击不同的按钮，去切换form中的action和input中的name就可以实现搜索功能。\n\n这个其中主要是通过各大搜索引擎提供的地址去操作，例如百度等，已经提供了公共的搜索接口，非常的方便。\n\n## 侧边栏随动闪烁问题记录\n\n很多网站都有侧边栏随动的效果，当页面在最顶部的时候，侧边栏是正常的元素上下排列效果，当下滑到一定的位置，侧边栏会变成固定的位置。如下：\n\n![](https://limengtupian.oss-cn-beijing.aliyuncs.com/%E4%BE%A7%E8%BE%B9%E6%A0%8F%E9%97%AA%E7%83%81/1.png)\n\n固定位置如下：\n\n![](https://limengtupian.oss-cn-beijing.aliyuncs.com/%E4%BE%A7%E8%BE%B9%E6%A0%8F%E9%97%AA%E7%83%81/2.png)\n\n<!-- more -->\n\n### 功能实现\n\n实现功能是很简单的，直接获取当前位置对应最顶部的值，然后当值大于某个数时，将元素的class增加一个fixed，当小于某个值，再移除这个class\n\n```css\n  position: fixed !important;\n  transform: translateZ(0);\n  -webkit-transform: translateZ(0);\n  top: 70px;\n```\n\njs判断如下：\n\n```js\n      var h = this.$refs.carousel.offsetHeight;\n      this.scrollPosition = document.documentElement.scrollTop;\n      this.$store.commit(\"setScrollPosition\", this.scrollPosition);//记录当前浏览的位置，返回时可以保证用户时之前的浏览位置\n      console.log(this.scrollPosition);\n      var offtop = document.documentElement.scrollTop + 50;\n      if (document.body.clientWidth > 972) {\n        if (offtop > h) {\n          this.movieG2 = true;//增加class\n        } else {\n          this.movieG2 = false;//减少class\n        }\n      }\n```\n\n### 问题\n\n这样产生了问题：\n\n浏览器中，每次鼠标滚轮都是滚动固定的大小，每次滚动67左右。\n\n但是当接近判断clss临界条件时，会向下滚动一次就立刻超过临界值，导致，这个侧边栏会从之前的上下排列瞬间切换到fixed排列，这中间侧边栏会闪烁一下。\n\n我观察了其他网站的实现，发现其他网站向下滚动的距离时固定的，比如，滚动5次，刚好可以达到临界值，然后下一次滚动，刚好可以将正常的文档流改成fixed，所以没有闪烁问题。\n\n### 实现功能\n\n关键属性：mousewheel事件\n\nmousewheel事件就是鼠标滚轮滚动的事件，每次滚动，可以阻止其默认行为，然后，自己设定下滑的距离，从而实现每次滚动的距离可控。\n\n代码如下：\n\n```js\n//滚轮事件\n// 鼠标滚轮事件\nfunction getWheelDelta(event) {\n  if (event.wheelDelta) {\n    return event.wheelDelta;\n  } else {\n    // 兼容火狐\n    return -event.detail;\n  }\n}\n// 鼠标滚动逻辑（全屏滚动关键逻辑）\nfunction scrollMouse(event) {\n  event.preventDefault();\n  let delta = getWheelDelta(event);\n  let locationNow = document.documentElement.scrollTop;\n  // delta < 0，鼠标往前滚动，页面向下滚动\n  if (delta < 0) {\n    goDown(locationNow);\n  } else {\n    goUp(locationNow);\n  }\n}\nfunction goDown(locationNow) {\n    window.scrollTo(0, locationNow + 80);\n}\nfunction goUp(locationNow) {\n  if (locationNow > 80) {\n    window.scrollTo(0, locationNow - 80);\n  } else {\n    window.scrollTo(0, 0);\n  }\n}\n// 鼠标滚轮监听，火狐鼠标滚动事件不同其他\nif (navigator.userAgent.toLowerCase().indexOf(\"firefox\") === -1) {\n  document.addEventListener(\"mousewheel\", scrollMouse, { passive: false });\n} else {\n  document.addEventListener(\"DOMMouseScroll\", scrollMouse);\n}\n```\n\n### 实现效果\n\n每次滚动都下滑80，这样，就可以比较方便的去修正不同元素的距离。\n\n修复前：\n\n![](https://limengtupian.oss-cn-beijing.aliyuncs.com/%E4%BE%A7%E8%BE%B9%E6%A0%8F%E9%97%AA%E7%83%81/%E4%BF%AE%E5%A4%8D%E5%89%8D.gif)\n\n\n\n修复后：\n\n![](https://limengtupian.oss-cn-beijing.aliyuncs.com/%E4%BE%A7%E8%BE%B9%E6%A0%8F%E9%97%AA%E7%83%81/%E4%BF%AE%E5%A4%8D%E5%90%8E.gif)\n\n## 通过local storage模拟了注册登录机制\n\n前后端分离模式下，网站的注册、登录机制实现，对于前端来说，主要考虑两个点：\n\n1. 把用户的账号校验然后发送后端申请验证码\n2. 提交用户的账号和验证码去后端校验，然后后端返回状态码（token）\n\n以上两点可以通过localstorage去简单模拟的，记录如下：\n\n<!-- more -->\n\n### 注册登录逻辑流程\n\n需要实现的注册功能如下：\n\n1. 校验手机号码是否正确\n   1. 正确：显示验证码（直接页面上显示一个验证码）\n   2. 错误：手机号码下方提示“手机号码错误”\n2. 校验手机号码和验证码是否正确\n   1. 正确：信息入库，添加如local storage，跳转至登录页面\n   2. 错误：显示验证码错误或者手机号码已经注册\n\n实现登录功能如下：\n\n1. 校验手机号码是否正确\n   1. 正确：显示验证码（直接页面上显示一个验证码）\n   2. 错误：手机号码下方提示“手机号码错误”\n2. 校验手机号码和验证码是否正确\n   1. 正确：添加登录状态（token），跳转至个人中心页面\n   2. 错误： 显示验证码错误或者手机没有注册\n\ntoken是一个对象，里面包含了登陆后的信息。如下：\n\n```js\n            let passUsrInfo = {\n              usrname: this.items1[0].value,\n              token: \"pass\",\n              time: Date.now(),\n            }\n```\n\n1. usrname：用户名\n2. token：登录状态\n3. time：登录时间\n\n可以通过判断当前时间与time的差值去决定是否还再登录状态，我这里设置时10分钟。\n\n### 实现代码\n\n```js\n   toLogin() {\n      if (this.common.phoneNumber(0, this.items1[0].value)) {\n        this.items1[0].showerr = false;\n        this.items1[0].err = \"手机号码有误\";\n        if (this.items1[1].value == 6666) {\n          this.items1[1].showerr = false;\n          let tem = JSON.parse(localStorage.getItem(\"usrname\")) == null ? [] : JSON.parse(localStorage.getItem(\"usrname\"));\n          let usrInfo = this.items1[0].value;\n          if (tem.length == 0) {\n            tem.push({ usrname: usrInfo });\n            window.localStorage.setItem(\"usrname\", JSON.stringify(tem));\n            this.registerOK = true;\n            setTimeout(() => {\n              this.$router.push(\"/login\");\n            }, 3000);\n          } else {\n            let index = tem.findIndex((x) => x.usrname == usrInfo);\n            if (index == -1) {\n              tem.push({ usrname: usrInfo });\n              window.localStorage.setItem(\"usrname\", JSON.stringify(tem));\n              this.registerOK = true;\n              setTimeout(() => {\n                this.$router.push(\"/login\");\n              }, 3000);\n            } else {\n              this.items1[0].err = \"该手机号码已经被注册\";\n              this.items1[0].showerr = true;\n            }\n          }\n        } else {\n          this.items1[1].showerr = true;\n        }\n      } else {\n        this.items1[0].showerr = true;\n        this.items1[0].err = \"手机号码有误\";\n      }\n    }\n```\n\n以上是登录时，判断手机号码及验证码的逻辑。说明：\n\n1. this.common.phoneNumber(0, this.items1[0].value)\n\n   这个是一个公共方法，用正则表达式判断手机号码是否正确\n\n2. let tem = JSON.parse(localStorage.getItem(\"usrname\")) == null ? [] : JSON.parse(localStorage.getItem(\"usrname\"))\n\n   这个是获取到本地存储中的注册手机号码，模拟的是数据库中的注册用户信息，去判断手机号码是否注册\n\n### 根据token去显示页面\n\n可以再页面加载时候去判断下localstorage内有没有对应的信息，从而去显示不同的页面：\n\n实现代码：\n\n首页导航栏：\n\n```html\n        <div v-if=\"showRegLogin\" class=\"col-xs-2 col-xs-offset-7 navbarRight\">\n          <router-link tag=\"a\" to=\"/login\">Login</router-link>\n          <router-link tag=\"a\" to=\"/register\">Register</router-link>\n        </div>\n        <div v-else class=\"col-xs-2 col-xs-offset-7 navbarRight\">\n          <router-link tag=\"a\" to=\"/center\">Center</router-link>\n          <router-link tag=\"a\" to=\"/register\">Register</router-link>\n        </div>\n```\n\n```js\n  mounted() {\n    this.showRegLogin = !this.common.judgeLogin()\n  }\n```\n\n购物车栏：\n\n```html\n      <ul v-if=\"showList\" class=\"carLists\">\n        <li>\n          <div class=\"movieLists\">\n            <span class=\"name\">电影名称</span>\n            <span class=\"acount\">数量</span>\n          </div>\n        </li>\n        <li v-for=\"(item, index) in carMovie\" :key=\"index\">\n          <div class=\"movieLists\">\n            <span class=\"name\">{{ item.title }}</span>\n            <span class=\"acount\">{{ item.account }}</span>\n          </div>\n        </li>\n      </ul>\n      <ul v-else class=\"carLists\">\n        <li class=\"showLogin\">\n          <div>\n            还没有登录呢，点击\n            <router-link to=\"/login\" tag=\"span\" style=\"color:red;cursor:pointer;\">登录</router-link>\n          </div>\n        </li>\n      </ul>\n```\n\n```js\n    toJudge() {\n      this.showUp = false;\n      this.isLogin = JSON.parse(window.localStorage.getItem(\"passUsrInfo\"))\n        .token\n        ? JSON.parse(window.localStorage.getItem(\"passUsrInfo\")).token\n        : \"\";\n      //false没有登录或者登录失效，true已经登录并且失效时间内\n      if (this.isLogin && this.common.judgeLogin()) {\n        this.showList = true;\n        this.movieAcountLoading = true;\n      } else {\n        this.showList = false;\n      }\n    }\n```\n\n效果如下：\n\n未登录：\n\n![](https://limengtupian.oss-cn-beijing.aliyuncs.com/%E6%B3%A8%E5%86%8C%E7%99%BB%E5%BD%95%E5%8A%9F%E8%83%BD/1.png)\n\n![](https://limengtupian.oss-cn-beijing.aliyuncs.com/%E6%B3%A8%E5%86%8C%E7%99%BB%E5%BD%95%E5%8A%9F%E8%83%BD/2.png)\n\n已经登录：\n\n![](https://limengtupian.oss-cn-beijing.aliyuncs.com/%E6%B3%A8%E5%86%8C%E7%99%BB%E5%BD%95%E5%8A%9F%E8%83%BD/3.png)\n\n![](https://limengtupian.oss-cn-beijing.aliyuncs.com/%E6%B3%A8%E5%86%8C%E7%99%BB%E5%BD%95%E5%8A%9F%E8%83%BD/4.png)\n\n## Vue中引入图片失效\n\n## 引入图片\n\n自己本地开发引入图片可以选择相对路径或者绝对路径，比如：\n\n```html\n<img :src=\"../images/1.png\">\n```\n\n这样是可以在网页中显示的，或者将图片放在网络存储中，引用网络地址。\n\n但是，在使用Vue进行开发的时候，有遇到一个问题：本地引入图片生效，但是使用Js去替换图片的时候，使用相对路径，就不能正确的生成图片，查阅资料发现了需要更换引入方式。\n\n<!-- more -->\n\n### 想要实现的样式\n\n密码的显示和隐藏样式：\n\n**显示：**\n\n![open](https://limengtupian.oss-cn-beijing.aliyuncs.com/open.png)\n\n**隐藏:**\n\n![close](https://limengtupian.oss-cn-beijing.aliyuncs.com/close.png)\n\n## 在Vue中引入图片\n\n1. 直接使用相对路径\n\n   直接使用相对路径生成的html里面，可以发现在引用的图片地址处，会被加上一串唯一编码。\n\n   如果用JS去修改img的src，生成的图片地址里面是没有编码的，所以不会正确的加载地址。\n\n2. 正确的引入\n\n   1. **html**\n\n      img直接引入地址，需要在src上加上v-bind，也就是冒号：\n\n      ![html](https://limengtupian.oss-cn-beijing.aliyuncs.com/html.png)\n\n   2. **data**\n\n      data对应的应该有该名称的对应地址属性\n\n      ![data](https://limengtupian.oss-cn-beijing.aliyuncs.com/icon.png)\n\n   3. **methds**\n\n      直接在方法里面去让src的属性等于对应的src名称\n\n      ![methds](https://limengtupian.oss-cn-beijing.aliyuncs.com/function.png)\n\n   \n\n这样，可以正确的显示图片，从F12解析可以看到，图片的地址都是已经加上了编码。","source":"_posts/记录网站功能实现.md","raw":"---\ntitle: 记录网站功能\ndate: 2019-12-02 17:16:26\ntags: [登录，动画]\n---\n\n<meta name=\"referrer\" content=\"no-referrer\"/>\n\n## 记录网站功能\n\n### 网站登录页面和注册页面\n\n登录页面和注册页面都做了一个css效果，中间有遇到些问题，记录\n\n点击后会让input框中的文字位置上浮，实现动态的效果，如下：\n\n![](https://limengtupian.oss-cn-beijing.aliyuncs.com/%E7%99%BB%E5%BD%95/%E7%99%BB%E5%BD%954.gif)\n\n<!-- more -->\n\n### 实现代码\n\n实现效果是很简单的，代码如下：\n\n```html\n<div class=\"accAndPass\" v-for=\"(item,index) in items1\" :key=\"index\">\n        <span class>{{item.text}}</span>\n        <input name=\"inputValue\" type=\"text\" @focus=\"turnUp(index)\" @blur=\"turnOff(index)\" />\n        <img :src=\"closeIcon\" name='eyes' @click='showPassWord'>\n</div>\n```\n\n当input聚焦的时候添加一个class，失焦的时候去掉这个class即可：\n\n```js\t\n    turnUp(index) {\n      var spans = document.getElementsByTagName(\"span\");\n      var Bottomsoild = document.getElementsByClassName(\"accAndPass\");\n      spans[index].classList.add(\"showup\");\n      Bottomsoild[index].classList.add(\"bottom\");\n    },\n    turnOff(index) {\n      var Bottomsoild = document.getElementsByClassName(\"accAndPass\");\n      var spans = document.getElementsByTagName(\"span\");\n      var input_Value = document.getElementsByName(\"inputValue\");\n      if (input_Value[index].value !== \"\") {\n        spans[index].classList.add(\"showup\");\n        Bottomsoild[index].classList.add(\"bottom\");\n      } else {\n        spans[index].className = \"\";\n        Bottomsoild[index].classList.remove(\"bottom\");\n      }\n```\n\n这个主要是css的实现可以关注下，有添加了平滑移动的动画\n\n```css\n.showup {\n  top: -35% !important;\n  left: 0 !important;\n  transition: 0.5s;\n  color: black !important;\n  font-weight: 600;\n  font-size: 20px !important;\n}\n\n.bottom {\n  border-bottom: 2px solid #34495e !important;\n}\n```\n\n要注意的是，input框内的登录这个两个字，会占用input的空间，所以需要做处理：\n\ninput框的背景颜色需要改成透明色，再改变登录这个两个字的z-index权重，将input权重高于这两个文字，就可以覆盖这两个文字，并且可以在透明背景下正常显示。\n\n```css\t\n.accAndPass input {\n  height: 50px;\n  width: 100%;\n  outline: none;\n  font-size: 25px;\n  padding: 0;\n  border: none;\n  background-color: transparent;\n  position: relative;\n}\n.accAndPass > span {\n  position: absolute;\n  top: 50%;\n  left: 3%;\n  transform: translateY(-50%);\n  z-index: -1;\n  transition: 0.5s;\n  font-size: 18px;\n  color: lightgray;\n}\n```\n\n**通过按钮隐藏或者显示密码**\n\n主要是更改input内的type，让其在‘text’和‘password’之间去转换,引入图片的时候，如果找不到地址，可以在地址前添加require。\n\n```js\t\nshowPassWord(){\n  var inputs = document.getElementsByName(\"inputValue\");\n  var eyes = document.getElementsByName('eyes');\n  if (this.showEyes === false) {\n  inputs[1].type = 'text';\n  eyes[1].src = this.openIcon;\n  }else{\n  inputs[1].type = 'password';\n  eyes[1].src = this.closeIcon;\n  }\n  this.showEyes = !this.showEyes;\n}\n```\n\n```html\n      closeIcon: require(\"../assets/close.png\"),\n      openIcon: require(\"../assets/open.png\"),\n```\n\n## 记录网站功能-电影分类\n\n### 电影分类\n\n通过axios获得到豆瓣top90部电影后，想要在左侧添加一个分类的侧边栏，所以需要对得到的电影进行分类。\n\n暂时没有找到分类的api接口，只有自己通过js去循环分类出一个新的数组，新数组形式如下：\n\n```js\nmovieGenres.push({\n  index: nowGenres,\n  list: [movieLists[i]]\n});\n```\n\nindex:电影的类别（比如动作，冒险，剧情等等），\n\nlist：对应类别中的所有电影。\n\nmovieLists[i]：初始通过axios得到的电影详情信息（初始对象）\n\n<!-- more -->\n\n### 实现代码\n\n* 实现逻辑\n\n  1. 获取到全部电影对象\n  2. 1. 设定一个空数组用来存放分类后的全部电影：movieGenres[]。\n     2. 循环全部对象，判断每一部电影的类别是否存在于新数组中，\n     3. 存在则，直接添加到对应的类别数组LIst中去，\n     4. 不存在，则将对应类别直接添加到新数组中，\n\n* 实现代码\n\n  ```js\n  formMovieG(movieLists) {\n    var movieGenres = [];\n    for (let i = 0; i < movieLists.length; i++) {\n      var nowGenres = movieLists[i].genres[0];\n      if (toJudge(nowGenres)) {\n        movieGenres.push({\n          index: nowGenres,\n          list: [movieLists[i]]\n        });\n      } else {\n        for (let j = 0; j < movieGenres.length; j++) {\n          if (movieGenres[j].index == nowGenres)\n            movieGenres[j].list.push(movieLists[i]);\n        }\n      }\n    }\n    function toJudge(nowGenres) {\n      for (let i = 0; i < movieGenres.length; i++) {\n        if (movieGenres[i].index == nowGenres) {\n          return false;\n        }\n      }\n      return true;\n    }\n    return movieGenres;\n  },\n  ```\n\n  movieLists:全部电影（90部没有分类）\n\n  toJudge（）：判断函数，判断是否存在对应类别 ，存在则返回false，不存在则返回true；\n\n  ```js\n  this.movieGenres = this.formMovieG(movieLists);\n  ```\n\n  获取后赋值。\n\n* *注意点*\n\n  新数组的形式：\n\n  ```html\n        movieGenres.push({\n          index: nowGenres,\n          *list: [movieLists[i]]*\n        });\n  ```\n\n  其中list应当为一个数组的形式，因为是多个对象在其中，后续判断类别相同后，需要用push的方法推到list数组中去。\n\n## 记录网站功能-动态生成li\n\n### 动态生成元素\n\n当获取到电影之后，一页只能显示9个电影，之后的电影则需要通过下方的分页li去显示，不同的种类的电影数量是不一致的，所以对应的下方显示数量li页不一致，所以需要根据电影数量动态生成li。\n\n全部电影：\n\n![](https://limengtupian.oss-cn-beijing.aliyuncs.com/%E5%8A%A8%E6%80%81/%E5%8A%A8%E6%80%811.png)\n\n局部电影：\n\n![](https://limengtupian.oss-cn-beijing.aliyuncs.com/%E5%8A%A8%E6%80%81/%E5%8A%A8%E6%80%812.png)\n\n<!-- more -->\n\n### 代码\n\n* 逻辑\n\n  1. 通过判断当前类目一共有多少电影去生成对应个数的下方li索引，\n  2. 切换前，应当先清除所有的li，然后再生成新的li。\n  3. 给每个li绑定一个点击事件，当点击时候，当前显示页面的数组替换成对应序号的数组，\n\n* 代码\n\n  ```js\n  // 生成下方li列表\n  createLiLists(Lilength) {\n    let that = this; //内部函数中调用函数，用that存储this指向，再调用，that.xxx\n    var indexlists = document.querySelector(\"#indexLists\");\n    var showindex = document.querySelector(\".showindex\");\n    for (let i = 1; i < Lilength; i++) {\n      var node = document.createElement(\"li\");\n      var textIndex = document.createTextNode(i);\n      node.appendChild(textIndex);\n      indexlists.appendChild(node);\n      node.className = \"index\";\n      node.addEventListener(\"click\", function() {\n        that.gotoIndex(this.innerText, showindex); // that调用\n      });\n    }\n    this.liIndexList = Lilength;\n    showindex.innerText = 1;\n  },\n  ```\n\n  ```js\n  // 清除li\n  clearLiLists() {\n    // this.liIndexList = Lilength;\n    var indexlists = document.querySelector(\"#indexLists\");\n    var liS = indexlists.querySelectorAll(\".index\");\n    // 清除lis，排他\n    for (var i = liS.length - 1; i >= 0; i--) {\n      indexlists.removeChild(liS[i]);\n    }\n  },\n  ```\n\n  ```js\n  //点击事件\n  gotoIndex(e, showindex) {\n    var index = document.querySelectorAll(\".index\");\n    // var showindex = document.querySelector(\".showindex\");\n    this.isLoading = true;\n    //单页面应用，定时器并不会自动关闭，需要手动清除\n    var out = setInterval(() => {\n      if (this.allMovie.length == 90) {\n        if (this.liIndexList == 11) {\n          this.items = this.allMovie.slice(\n            parseInt(e) * 9 - 9,\n            parseInt(e) * 9,\n            (this.isLoading = false)\n          );\n        } else {\n          this.items = this.movieGenres_index_list.slice(\n            parseInt(e) * 9 - 9,\n            parseInt(e) * 9,\n            (this.isLoading = false)\n          );\n        }\n        clearInterval(out);\n      }\n    }, 100);\n    showindex.innerText = e;\n    for (let i = 0; i < index.length; i++) {\n      index[i].classList.remove(\"light\");\n    }\n    index[e - 1].classList.add(\"light\");\n  },\n  ```\n\n  \n\n* 注意点\n\n  1. 生成元素后需要添加元素，才能生效\n\n     ```js\n         var node = document.createElement(\"li\");\n         var textIndex = document.createTextNode(i);\n         node.appendChild(textIndex);\n         indexlists.appendChild(node);\n     ```\n\n     这里生成了li和li内部的数字i，然后需要append到父元素indexlists上，才能生效。\n\n  2. 函数内部调用函数添加事件，使用了that\n\n     ```js\t\n          let that = this; //内部函数中调用函数，用that存储this指向，再调用，that.xxx\n          node.addEventListener(\"click\", function() {\n           that.gotoIndex(this.innerText, showindex); // that调用\n         });\n     ```\n\n     addEventListener内使用其他函数gotoIndex，直接使用this.gotoIndex不生效，使用that生效。\n\n  3. 写了一个定时器，判断是否将90部电影循环完毕，再执行绑定点击跳转事件，避免未加载完成90部电影点击无效。\n\n     ```js\n     var out = setInterval(() => {\n         if (this.allMovie.length == 90) {\n           if (this.liIndexList == 11) {\n             this.items = this.allMovie.slice(\n               parseInt(e) * 9 - 9,\n               parseInt(e) * 9,\n               (this.isLoading = false)\n             );\n           } else {\n             this.items = this.movieGenres_index_list.slice(\n               parseInt(e) * 9 - 9,\n               parseInt(e) * 9,\n               (this.isLoading = false)\n             );\n           }\n           clearInterval(out);//单页面应用，定时器并不会自动关闭，需要手动清除\n         }\n       }, 100);\n     ```\n\n     刚打开页面时候，去给li添加事件，会发现报错，因为此时，还没有获取到全部的电影，所以没有办法执行对应的数字跳转到对应的页面电影。\n\n     所以执行一个定时循环函数去判断电影是不是获取完毕，获取完毕了，再执行添加函数。\n\n     如果是有对应的api数据，则比较方便，只用获取到对应的index去后端请求。\n\n## 记录网站功能-购物车\n\n### 网站购物车功能\n\n需要在两个页面（电影列表和电影详情）去添加一个购物车功能，而且通过购物车可以跳转到支付页面，支付页面中页可以直接修改购物车的电影数量。\n\n一般去多页面操作同一数据，都会使用一些工具，现在用的是vue-x 。\n\n传统方法主要是通过父子组件之间的传值来进行操作：\n\n1. 父组件传给子组件的数据\n\n   1. 父组件需要在子组件标签处添加一个自定义标签\n\n      ```html\t\n      <Shop :number=\"allMovie.length\"></Shop>\n      ```\n\n      ```js\n      import Shop from \"@/components/shoppingCar.vue\";\n      ```\n\n      ```js\n      data() {\n          return {\n              allMovie: []\n          }\n      ```\n\n   2. 子组件需要注册props\n\n      ``` html\n      <h4>影库共有{{number}}部电影</h4>\n      ```\n\n      ```js\n        props:[\"number\"],\n      ```\n\n   这样，就可以通过标签的方法，子组件调用父组件处拿到number里的allmovie的length了。\n\n   <!-- more -->\n\n2. 子组件传给父组件的数据\n\n   1. 子组件需要给元素绑定一个事件，通过事件传参\n\n      ```html\n      <button  @click=\"toParent()\">点击传值</button>\n      ```\n\n      ```js\n        methods: {\n            toParent(){\n          this.$emit('sendToFather',this.message)\n        },\n        }\n      ```\n\n      ```js\n      \tdata() {\n          return {\n            message:{name:\"购物车\",color:\"red\"},\n          }\n      ```\n\n      \n\n   2. 父组件通过调用子组件定义的一个特定名字方法来获得子组件参数\n\n      ```html\n      <Shop  @sendToFather=\"getChild\"></Shop>\n      ```\n\n      ```js\n        methods: {\n          getChild(data){\n            console.log(data);\n          },\n        }\n      ```\n\n      控制台会输出子组件的message数组。\n\n### 购物车功能vue-x实现\n\n涉及到多个页面操作同一数据源，并且其中有页面不是父子关系。使用vue-x更加便捷\n\n* 逻辑\n\n  vue-x的使用核心是两个，一个是state，另一个是mutations。\n\n  ```html\n  export default new Vuex.Store({\n    state: {\n    },\n    mutations: {\n    },\n    actions: {\n    },\n    modules: {\n    }\n  })\n  ```\n\n  \n\n  1. state是页面所需要调用的一个数据源，比如我要在购物车中展示的所有电影数组，这个数组可以在购物车和支付页面都显示出来\n  2. mutations是其他页面提交新的数据过来的时候，需要对传递过来的数据做一些操作（比如要添加一些数量表示，要筛选出重复项等等），然后再赋值给state中的数据源，从而更新所有页面的数据。\n\n* 代码 \n\n  ```js\n  export default new Vuex.Store({\n    state: {\n      // 当前购物车的电影(经过了数量整理)\n      carMovie: [],\n      //数量\n      totalNumber: 0,\n    },\n    mutations: {\n      setShopCar(state, arg) {\n        //处理数组中的重复项，将重复项剔除，并且account 加一\n        for (let i = 0; i < arg.length; i++) {\n          for (let j = 0; j < arg.length; j++) {\n            if (i != j && arg[i].object.title == arg[j].object.title) {\n              arg.splice(j, 1);\n              j = 0;\n              arg[i].account += 1;\n            }\n          }\n        };\n        state.carMovie = arg;\n        var argTem = JSON.stringify(arg);\n        window.localStorage.setItem('tempMovie',argTem);\n        // 电影的数量\n        var total = 0;\n        for (let i = 0; i < arg.length; i++) {\n          total += arg[i].account;\n        };\n        state.totalNumber = total;\n      }\n    },\n    actions: {\n    },\n    modules: {\n    }\n  })\n  ```\n\n  支付页面中调用:\n\n  ```js\n    computed: {\n      carMovie() {\n        return this.$store.state.carMovie;\n      },\n    }\n  ```\n\n  支付页面中更新vue-x中state：\n\n  ```js\n      buyTheMovie(item) {\n        // var reg = this.$store.state.buyCarMovieList;\n        var reg = this.$store.state.carMovie;\n        reg.push({\n          account: 1,\n          object: item\n        });\n        this.$store.commit(\"setShopCar\", reg);\n      },\n  ```\n\n* 注意\n\n  1. 直接获取state数据，然后修改，这个操作是能够生效的，但是不推荐这个方法，应当所有修改state数据的操作都使用：this.$store.commit(\"xxxxx\", xxx)。从而能够保证数据更新的一致性。\n  2. 一般调用的时候，涉及到比较复杂的数据，都可以用再computed周期中。\n\n## 记录网站功能-搜索\n\n### 搜索功能\n\n网站一共获取90部电影，设计了搜索功能，主要搜索依据为电影名字，因为没有找到搜索的api接口，所以直接获取到全部的90部电影后，再进行的全部的电影循环匹配，相对花的时间比较多。\n\n实现了通过部分关键字显示对应电影，记录如下：\n\n![](https://limengtupian.oss-cn-beijing.aliyuncs.com/%E6%90%9C%E7%B4%A2/%E6%90%9C%E7%B4%A21.png)\n\n<!-- more -->\n\n### 功能实现\n\n* 逻辑实现\n\n  1. 选择一个合适的事件\n\n     通过取得input框内的value值去对比每一部电影的title，然后可以得出判断，这里需要选择对应的input事件，参考网上的说明，选用oninput事件，找到的说明如下：\n\n     * 一种是onchange事件，触发条件：内容改变且失去焦点。\n\n     * 一种是onpropertychange事件，触发条件：元素内容改变即触发，另外js改变内容，该元素的属性改变也会触发。但只在IE11以下支持。\n\n     * 一种是html5的oninput事件，触发条件：value值的改变，但是js方式改变value不会触发，且在IE8以上及其他标准浏览器支持。\n\n     实际上，网上看到有新的事件对应不同的条件执行，暂时没有去尝试，直接用了防抖函数，如下：\n\n     ​       原理：\n\n     ​         当浏览器有非直接的文字输入时，compositionstart事件就会同步触发，记住，是同步\n\n     ​         当浏览器是直接的文字输入时，compositionend事件就会触发\n\n     ```js\n     var cpLock = false;\n         $('input[search]').on('compositionstart', function () {\n             // 输入汉语拼音时锁住搜索框，不进行搜索，或者从汉语拼音转到字母时也可触发\n             cpLock = true;\n             console.log('不搜索')\n         });\n         $('input[search]').on('compositionend', function () {\n             // 结束汉语拼音输入并生成汉字时，解锁搜索框，进行搜索\n             cpLock = false;\n             console.log('汉字搜索');\n             // 接下去放ajax请求生成下拉框内容\n         });\n         $('input[search]').on('input', function () {\n             if (!cpLock) {\n                 console.log('字母搜索')    \n               // 接下去放ajax请求生成下拉框内容\n           }\n     ```\n\n  2. 需要防抖函数\n\n     防抖函数具体见以下文章：[防抖函数和节流函数]([http://www.limeng54231.top/2019/12/02/%E5%87%BD%E6%95%B0%E8%8A%82%E6%B5%81%E5%92%8C%E9%98%B2%E6%8A%96/](http://www.limeng54231.top/2019/12/02/函数节流和防抖/))\n\n* 代码\n\n  代码如下：\n\n  ```html\t\n  <input id=\"searchMovie\" type=\"text\" placeholder=\"请输入......\" @input=\"doSearch\" />\n  ```\n\n  ```js\n  <script>\n  //防抖函数\n  function debounce(fn, delay = 2000) {\n    //可以放入项目中的公共方法中进行调用（鹅只是省事）\n    let timer;\n    return function() {\n      var args = arguments;\n      if (timer) {\n        clearTimeout(timer);\n      }\n      this.isLoading = true;\n      this.loadingIntext = \"搜索中......\";\n      if (document.getElementById(\"searchMovie\").value == \"\") {\n        this.items = this.firstPMovie;\n        this.isLoading = false;\n        this.loadingIntext = \"请稍等......\";\n      } else {\n        timer = setTimeout(() => {\n          fn.apply(this, args); // this 指向vue\n        }, delay);\n      }\n    };\n  }\n  export default {\n  methods:{\n      doSearch: debounce(function() {\n    var searchMovieV = document.getElementById(\"searchMovie\").value;\n    var res = this.allMovie;\n    this.items = [];\n    for (let i = 0; i < res.length; i++) {\n      if (res[i].title.includes(searchMovieV)) {\n        this.items.push(res[i]);\n        this.isLoading = false;\n        this.loadingIntext = \"请稍等......\";\n      }\n    }\n    if (this.items.length == 0) {\n      this.loadingIntext = \"没有找到结果哟,3秒后自动返回，稍等......\";\n      this.isLoading = true;\n      var setT = setTimeout(() => {\n        this.items = this.firstPMovie;\n        this.isLoading = false;\n        this.loadingIntext = \"请稍等......\";\n        clearTimeout(setT);\n      }, 3000);\n    }\n  })\n  }\n  }\n  </script>\n  ```\n\n* **注意**\n\n1. 如何判断input的值是否符合电影title的关键词\n\n   ```html\t\n   res[i].title.includes(searchMovieV)\n   ```\n\n   .includes函数可以判断title内有没有包含seatchmovie 的关键字，只要有对应的任意一个字，就会判断为true\n\n2. 再vue中使用防抖函数\n\n   debounce这个函数需要直接写再script内部，然后设置了两个参数，第一个就是执行方法，即fn，第二个是等待时间。\n\n   这里需要注意的是，debounce这个函数内部需要定义一个timer，形成一个闭包，从而使得第二次进入循环后，清除掉第一次的定时函数。\n\n   同时this的指向问题，需要再return函数中用一个变量去存以下this，以确保指针指向的是input。\n\n   参考链接：[防抖函数中的闭包](\n\n## 记录网站功能实现-精灵图\n\n### 精灵图\n\n* 精灵图技术产生的目的：很多大型网页在首次加载的时候都需要加载很多的小图片，而考虑到在同一时间，服务器拥堵的情况下，为了解决这一问题，采用了精灵图这一技术来缓解加载时间过长从而影响用户体验的这个问题。\n\n* 精灵图技术的本质：所谓精灵图就是把很多的小图片合并到一张较大的图片里，所以在首次加载页面的时候，就不用加载过多的小图片，只需要加载出来将小图片合并起来的那一张大图片也就是精灵图即可，这样在一定程度上减少了页面的加载速度，也一定程度上缓解了服务器的压力。例如王者荣耀页面里的几个小logo:\n\n  ![tupian](http://5b0988e595225.cdn.sohucs.com/images/20171128/e5c76a5b52c14b2eadb8036126bbdce2.png)\n\n<!-- more -->\n\n### 怎么去实现一张图片加载不同位置\n\n**主要通过background-position属性去设置不同位置**\n\n如图：\n\n* 引入背景图片\n\n  ![](https://limengtupian.oss-cn-beijing.aliyuncs.com/%E7%B2%BE%E7%81%B5%E5%9B%BEmd/%E7%B2%BE%E7%81%B5%E5%9B%BE1.png)\n\n* 设置背景图片显示位置**（实际上可以通过js的for循环去设置）**\n\n  ![](https://limengtupian.oss-cn-beijing.aliyuncs.com/%E7%B2%BE%E7%81%B5%E5%9B%BEmd/%E7%B2%BE%E7%81%B5%E5%9B%BE2.png)\n\n* 设置hover效果\n\n  ![](https://limengtupian.oss-cn-beijing.aliyuncs.com/%E7%B2%BE%E7%81%B5%E5%9B%BEmd/%E7%B2%BE%E7%81%B5%E5%9B%BE3.png)\n\n### 优缺点\n\n**优点：**\n\n①减少网页的http请求，从而加快了网页加载速度，提高用户体验。\n\n②减少图片的体积，因为每个图片都有一个头部信息，把多个图片放到一个图片里，就会共用同一个头信息，从而减少了字节数。\n\n③解决了网页设计师在图片命名上的困扰，只需对一张集合的图片上命名就可以了，不需要对每一个小元素进行命名。\n\n④更换风格方便，只需要在一张或少张图片上修改图片的颜色或样式，整个网页的风格就可以改变。\n\n**缺点：**\n\n①在宽屏，高分辨率的屏幕下的自适应页面，你的图片如果不够宽，很容易出现背景断裂。\n\n②CSS Sprites在开发的时候，要通过photoshop或其他工具测量计算每一个背景单元的精确位置。\n\n③在维护的时候比较麻烦，如果页面背景有少许改动，一般就要改这张合并的图片。\n\n④精灵图不能随意改变大小和颜色。改变大小会失真模糊，降低用户体验，Css3新属性可以改变精灵图颜色，但是比较麻烦，并且新属性有兼容问题，现在一般用字体图标代替精灵图。\n\n## 记录网站功能实现-搜索功能\n\n### 网站搜索功能\n\n很多的导航网站会再头顶设置不同的搜索引擎的搜索框，提供更方便的搜索功能，如图：\n\n![](https://limengtupian.oss-cn-beijing.aliyuncs.com/%E6%90%9C%E7%B4%A2%E5%8A%9F%E8%83%BD/%E6%90%9C%E7%B4%A2%E5%8A%9F%E8%83%BD1.png)\n\n这个实现也不复杂，如下：\n\n<!-- more -->\n\n### 如何实现\n\n功能的实现也不复杂，是通过一个form，不停的变换form中的action和name去切换不同的搜索引擎的\n\n代码如下：\n\n```html\n<form action=\"https://www.baidu.com/s\" target=\"__blank\" id=\"searchForm\">\n  <input\n    id=\"searchInput\"\n    type=\"text\"\n    placeholder=\"请输入要搜索的内容：\"\n    v-model=\"searchValue\"\n    name=\"word\"\n    autofocus\n  />\n  <input type=\"submit\" value=\"搜索\" />\n</form>\n```\n\n```js\ndata() {\n  return {\n    items: [\n      {\n        text: \"谷歌\",\n        searchUrl: \"http://www.google.com.hk/search?q=\",\n        name: \"q\"\n      },\n      { text: \"百度\", searchUrl: \"https://www.baidu.com/s\", name: \"word\" },\n      {\n        text: \"搜狗\",\n        searchUrl: \"http://www.sogou.com/web\",\n        name: \"query\"\n      },\n      { text: \"必应\", searchUrl: \"https://cn.bing.com/search\", name: \"q\" }\n    ],\n    checkindex: 1,\n    searchValue: \"\"\n  };\n},\n```\n\n```js\nisActive(item, index) {\n  this.checkindex = index;\n  document.getElementById(\"searchForm\").action = item.searchUrl;\n  document.getElementById(\"searchInput\").name = item.name;\n},\n```\n\n通过v-for去循环data中的items，去生成不同的搜索引擎按钮，点击不同的按钮，去切换form中的action和input中的name就可以实现搜索功能。\n\n这个其中主要是通过各大搜索引擎提供的地址去操作，例如百度等，已经提供了公共的搜索接口，非常的方便。\n\n## 侧边栏随动闪烁问题记录\n\n很多网站都有侧边栏随动的效果，当页面在最顶部的时候，侧边栏是正常的元素上下排列效果，当下滑到一定的位置，侧边栏会变成固定的位置。如下：\n\n![](https://limengtupian.oss-cn-beijing.aliyuncs.com/%E4%BE%A7%E8%BE%B9%E6%A0%8F%E9%97%AA%E7%83%81/1.png)\n\n固定位置如下：\n\n![](https://limengtupian.oss-cn-beijing.aliyuncs.com/%E4%BE%A7%E8%BE%B9%E6%A0%8F%E9%97%AA%E7%83%81/2.png)\n\n<!-- more -->\n\n### 功能实现\n\n实现功能是很简单的，直接获取当前位置对应最顶部的值，然后当值大于某个数时，将元素的class增加一个fixed，当小于某个值，再移除这个class\n\n```css\n  position: fixed !important;\n  transform: translateZ(0);\n  -webkit-transform: translateZ(0);\n  top: 70px;\n```\n\njs判断如下：\n\n```js\n      var h = this.$refs.carousel.offsetHeight;\n      this.scrollPosition = document.documentElement.scrollTop;\n      this.$store.commit(\"setScrollPosition\", this.scrollPosition);//记录当前浏览的位置，返回时可以保证用户时之前的浏览位置\n      console.log(this.scrollPosition);\n      var offtop = document.documentElement.scrollTop + 50;\n      if (document.body.clientWidth > 972) {\n        if (offtop > h) {\n          this.movieG2 = true;//增加class\n        } else {\n          this.movieG2 = false;//减少class\n        }\n      }\n```\n\n### 问题\n\n这样产生了问题：\n\n浏览器中，每次鼠标滚轮都是滚动固定的大小，每次滚动67左右。\n\n但是当接近判断clss临界条件时，会向下滚动一次就立刻超过临界值，导致，这个侧边栏会从之前的上下排列瞬间切换到fixed排列，这中间侧边栏会闪烁一下。\n\n我观察了其他网站的实现，发现其他网站向下滚动的距离时固定的，比如，滚动5次，刚好可以达到临界值，然后下一次滚动，刚好可以将正常的文档流改成fixed，所以没有闪烁问题。\n\n### 实现功能\n\n关键属性：mousewheel事件\n\nmousewheel事件就是鼠标滚轮滚动的事件，每次滚动，可以阻止其默认行为，然后，自己设定下滑的距离，从而实现每次滚动的距离可控。\n\n代码如下：\n\n```js\n//滚轮事件\n// 鼠标滚轮事件\nfunction getWheelDelta(event) {\n  if (event.wheelDelta) {\n    return event.wheelDelta;\n  } else {\n    // 兼容火狐\n    return -event.detail;\n  }\n}\n// 鼠标滚动逻辑（全屏滚动关键逻辑）\nfunction scrollMouse(event) {\n  event.preventDefault();\n  let delta = getWheelDelta(event);\n  let locationNow = document.documentElement.scrollTop;\n  // delta < 0，鼠标往前滚动，页面向下滚动\n  if (delta < 0) {\n    goDown(locationNow);\n  } else {\n    goUp(locationNow);\n  }\n}\nfunction goDown(locationNow) {\n    window.scrollTo(0, locationNow + 80);\n}\nfunction goUp(locationNow) {\n  if (locationNow > 80) {\n    window.scrollTo(0, locationNow - 80);\n  } else {\n    window.scrollTo(0, 0);\n  }\n}\n// 鼠标滚轮监听，火狐鼠标滚动事件不同其他\nif (navigator.userAgent.toLowerCase().indexOf(\"firefox\") === -1) {\n  document.addEventListener(\"mousewheel\", scrollMouse, { passive: false });\n} else {\n  document.addEventListener(\"DOMMouseScroll\", scrollMouse);\n}\n```\n\n### 实现效果\n\n每次滚动都下滑80，这样，就可以比较方便的去修正不同元素的距离。\n\n修复前：\n\n![](https://limengtupian.oss-cn-beijing.aliyuncs.com/%E4%BE%A7%E8%BE%B9%E6%A0%8F%E9%97%AA%E7%83%81/%E4%BF%AE%E5%A4%8D%E5%89%8D.gif)\n\n\n\n修复后：\n\n![](https://limengtupian.oss-cn-beijing.aliyuncs.com/%E4%BE%A7%E8%BE%B9%E6%A0%8F%E9%97%AA%E7%83%81/%E4%BF%AE%E5%A4%8D%E5%90%8E.gif)\n\n## 通过local storage模拟了注册登录机制\n\n前后端分离模式下，网站的注册、登录机制实现，对于前端来说，主要考虑两个点：\n\n1. 把用户的账号校验然后发送后端申请验证码\n2. 提交用户的账号和验证码去后端校验，然后后端返回状态码（token）\n\n以上两点可以通过localstorage去简单模拟的，记录如下：\n\n<!-- more -->\n\n### 注册登录逻辑流程\n\n需要实现的注册功能如下：\n\n1. 校验手机号码是否正确\n   1. 正确：显示验证码（直接页面上显示一个验证码）\n   2. 错误：手机号码下方提示“手机号码错误”\n2. 校验手机号码和验证码是否正确\n   1. 正确：信息入库，添加如local storage，跳转至登录页面\n   2. 错误：显示验证码错误或者手机号码已经注册\n\n实现登录功能如下：\n\n1. 校验手机号码是否正确\n   1. 正确：显示验证码（直接页面上显示一个验证码）\n   2. 错误：手机号码下方提示“手机号码错误”\n2. 校验手机号码和验证码是否正确\n   1. 正确：添加登录状态（token），跳转至个人中心页面\n   2. 错误： 显示验证码错误或者手机没有注册\n\ntoken是一个对象，里面包含了登陆后的信息。如下：\n\n```js\n            let passUsrInfo = {\n              usrname: this.items1[0].value,\n              token: \"pass\",\n              time: Date.now(),\n            }\n```\n\n1. usrname：用户名\n2. token：登录状态\n3. time：登录时间\n\n可以通过判断当前时间与time的差值去决定是否还再登录状态，我这里设置时10分钟。\n\n### 实现代码\n\n```js\n   toLogin() {\n      if (this.common.phoneNumber(0, this.items1[0].value)) {\n        this.items1[0].showerr = false;\n        this.items1[0].err = \"手机号码有误\";\n        if (this.items1[1].value == 6666) {\n          this.items1[1].showerr = false;\n          let tem = JSON.parse(localStorage.getItem(\"usrname\")) == null ? [] : JSON.parse(localStorage.getItem(\"usrname\"));\n          let usrInfo = this.items1[0].value;\n          if (tem.length == 0) {\n            tem.push({ usrname: usrInfo });\n            window.localStorage.setItem(\"usrname\", JSON.stringify(tem));\n            this.registerOK = true;\n            setTimeout(() => {\n              this.$router.push(\"/login\");\n            }, 3000);\n          } else {\n            let index = tem.findIndex((x) => x.usrname == usrInfo);\n            if (index == -1) {\n              tem.push({ usrname: usrInfo });\n              window.localStorage.setItem(\"usrname\", JSON.stringify(tem));\n              this.registerOK = true;\n              setTimeout(() => {\n                this.$router.push(\"/login\");\n              }, 3000);\n            } else {\n              this.items1[0].err = \"该手机号码已经被注册\";\n              this.items1[0].showerr = true;\n            }\n          }\n        } else {\n          this.items1[1].showerr = true;\n        }\n      } else {\n        this.items1[0].showerr = true;\n        this.items1[0].err = \"手机号码有误\";\n      }\n    }\n```\n\n以上是登录时，判断手机号码及验证码的逻辑。说明：\n\n1. this.common.phoneNumber(0, this.items1[0].value)\n\n   这个是一个公共方法，用正则表达式判断手机号码是否正确\n\n2. let tem = JSON.parse(localStorage.getItem(\"usrname\")) == null ? [] : JSON.parse(localStorage.getItem(\"usrname\"))\n\n   这个是获取到本地存储中的注册手机号码，模拟的是数据库中的注册用户信息，去判断手机号码是否注册\n\n### 根据token去显示页面\n\n可以再页面加载时候去判断下localstorage内有没有对应的信息，从而去显示不同的页面：\n\n实现代码：\n\n首页导航栏：\n\n```html\n        <div v-if=\"showRegLogin\" class=\"col-xs-2 col-xs-offset-7 navbarRight\">\n          <router-link tag=\"a\" to=\"/login\">Login</router-link>\n          <router-link tag=\"a\" to=\"/register\">Register</router-link>\n        </div>\n        <div v-else class=\"col-xs-2 col-xs-offset-7 navbarRight\">\n          <router-link tag=\"a\" to=\"/center\">Center</router-link>\n          <router-link tag=\"a\" to=\"/register\">Register</router-link>\n        </div>\n```\n\n```js\n  mounted() {\n    this.showRegLogin = !this.common.judgeLogin()\n  }\n```\n\n购物车栏：\n\n```html\n      <ul v-if=\"showList\" class=\"carLists\">\n        <li>\n          <div class=\"movieLists\">\n            <span class=\"name\">电影名称</span>\n            <span class=\"acount\">数量</span>\n          </div>\n        </li>\n        <li v-for=\"(item, index) in carMovie\" :key=\"index\">\n          <div class=\"movieLists\">\n            <span class=\"name\">{{ item.title }}</span>\n            <span class=\"acount\">{{ item.account }}</span>\n          </div>\n        </li>\n      </ul>\n      <ul v-else class=\"carLists\">\n        <li class=\"showLogin\">\n          <div>\n            还没有登录呢，点击\n            <router-link to=\"/login\" tag=\"span\" style=\"color:red;cursor:pointer;\">登录</router-link>\n          </div>\n        </li>\n      </ul>\n```\n\n```js\n    toJudge() {\n      this.showUp = false;\n      this.isLogin = JSON.parse(window.localStorage.getItem(\"passUsrInfo\"))\n        .token\n        ? JSON.parse(window.localStorage.getItem(\"passUsrInfo\")).token\n        : \"\";\n      //false没有登录或者登录失效，true已经登录并且失效时间内\n      if (this.isLogin && this.common.judgeLogin()) {\n        this.showList = true;\n        this.movieAcountLoading = true;\n      } else {\n        this.showList = false;\n      }\n    }\n```\n\n效果如下：\n\n未登录：\n\n![](https://limengtupian.oss-cn-beijing.aliyuncs.com/%E6%B3%A8%E5%86%8C%E7%99%BB%E5%BD%95%E5%8A%9F%E8%83%BD/1.png)\n\n![](https://limengtupian.oss-cn-beijing.aliyuncs.com/%E6%B3%A8%E5%86%8C%E7%99%BB%E5%BD%95%E5%8A%9F%E8%83%BD/2.png)\n\n已经登录：\n\n![](https://limengtupian.oss-cn-beijing.aliyuncs.com/%E6%B3%A8%E5%86%8C%E7%99%BB%E5%BD%95%E5%8A%9F%E8%83%BD/3.png)\n\n![](https://limengtupian.oss-cn-beijing.aliyuncs.com/%E6%B3%A8%E5%86%8C%E7%99%BB%E5%BD%95%E5%8A%9F%E8%83%BD/4.png)\n\n## Vue中引入图片失效\n\n## 引入图片\n\n自己本地开发引入图片可以选择相对路径或者绝对路径，比如：\n\n```html\n<img :src=\"../images/1.png\">\n```\n\n这样是可以在网页中显示的，或者将图片放在网络存储中，引用网络地址。\n\n但是，在使用Vue进行开发的时候，有遇到一个问题：本地引入图片生效，但是使用Js去替换图片的时候，使用相对路径，就不能正确的生成图片，查阅资料发现了需要更换引入方式。\n\n<!-- more -->\n\n### 想要实现的样式\n\n密码的显示和隐藏样式：\n\n**显示：**\n\n![open](https://limengtupian.oss-cn-beijing.aliyuncs.com/open.png)\n\n**隐藏:**\n\n![close](https://limengtupian.oss-cn-beijing.aliyuncs.com/close.png)\n\n## 在Vue中引入图片\n\n1. 直接使用相对路径\n\n   直接使用相对路径生成的html里面，可以发现在引用的图片地址处，会被加上一串唯一编码。\n\n   如果用JS去修改img的src，生成的图片地址里面是没有编码的，所以不会正确的加载地址。\n\n2. 正确的引入\n\n   1. **html**\n\n      img直接引入地址，需要在src上加上v-bind，也就是冒号：\n\n      ![html](https://limengtupian.oss-cn-beijing.aliyuncs.com/html.png)\n\n   2. **data**\n\n      data对应的应该有该名称的对应地址属性\n\n      ![data](https://limengtupian.oss-cn-beijing.aliyuncs.com/icon.png)\n\n   3. **methds**\n\n      直接在方法里面去让src的属性等于对应的src名称\n\n      ![methds](https://limengtupian.oss-cn-beijing.aliyuncs.com/function.png)\n\n   \n\n这样，可以正确的显示图片，从F12解析可以看到，图片的地址都是已经加上了编码。","slug":"记录网站功能实现","published":1,"updated":"2020-07-03T07:40:16.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl0uux6wa002a7sufcoyahoru","content":"<meta name=\"referrer\" content=\"no-referrer\"/>\n\n<h2 id=\"记录网站功能\"><a href=\"#记录网站功能\" class=\"headerlink\" title=\"记录网站功能\"></a>记录网站功能</h2><h3 id=\"网站登录页面和注册页面\"><a href=\"#网站登录页面和注册页面\" class=\"headerlink\" title=\"网站登录页面和注册页面\"></a>网站登录页面和注册页面</h3><p>登录页面和注册页面都做了一个css效果，中间有遇到些问题，记录</p>\n<p>点击后会让input框中的文字位置上浮，实现动态的效果，如下：</p>\n<p><img src=\"https://limengtupian.oss-cn-beijing.aliyuncs.com/%E7%99%BB%E5%BD%95/%E7%99%BB%E5%BD%954.gif\"></p>\n<span id=\"more\"></span>\n\n<h3 id=\"实现代码\"><a href=\"#实现代码\" class=\"headerlink\" title=\"实现代码\"></a>实现代码</h3><p>实现效果是很简单的，代码如下：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;accAndPass&quot;</span> <span class=\"attr\">v-for</span>=<span class=\"string\">&quot;(item,index) in items1&quot;</span> <span class=\"attr\">:key</span>=<span class=\"string\">&quot;index&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>&gt;</span>&#123;&#123;item.text&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;inputValue&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> @<span class=\"attr\">focus</span>=<span class=\"string\">&quot;turnUp(index)&quot;</span> @<span class=\"attr\">blur</span>=<span class=\"string\">&quot;turnOff(index)&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">:src</span>=<span class=\"string\">&quot;closeIcon&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&#x27;eyes&#x27;</span> @<span class=\"attr\">click</span>=<span class=\"string\">&#x27;showPassWord&#x27;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>当input聚焦的时候添加一个class，失焦的时候去掉这个class即可：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">turnUp</span>(<span class=\"params\">index</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> spans = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementsByTagName</span>(<span class=\"string\">&quot;span&quot;</span>);</span><br><span class=\"line\">  <span class=\"keyword\">var</span> <span class=\"title class_\">Bottomsoild</span> = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementsByClassName</span>(<span class=\"string\">&quot;accAndPass&quot;</span>);</span><br><span class=\"line\">  spans[index].<span class=\"property\">classList</span>.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;showup&quot;</span>);</span><br><span class=\"line\">  <span class=\"title class_\">Bottomsoild</span>[index].<span class=\"property\">classList</span>.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;bottom&quot;</span>);</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\"><span class=\"title function_\">turnOff</span>(<span class=\"params\">index</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> <span class=\"title class_\">Bottomsoild</span> = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementsByClassName</span>(<span class=\"string\">&quot;accAndPass&quot;</span>);</span><br><span class=\"line\">  <span class=\"keyword\">var</span> spans = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementsByTagName</span>(<span class=\"string\">&quot;span&quot;</span>);</span><br><span class=\"line\">  <span class=\"keyword\">var</span> input_Value = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementsByName</span>(<span class=\"string\">&quot;inputValue&quot;</span>);</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (input_Value[index].<span class=\"property\">value</span> !== <span class=\"string\">&quot;&quot;</span>) &#123;</span><br><span class=\"line\">    spans[index].<span class=\"property\">classList</span>.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;showup&quot;</span>);</span><br><span class=\"line\">    <span class=\"title class_\">Bottomsoild</span>[index].<span class=\"property\">classList</span>.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;bottom&quot;</span>);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    spans[index].<span class=\"property\">className</span> = <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">    <span class=\"title class_\">Bottomsoild</span>[index].<span class=\"property\">classList</span>.<span class=\"title function_\">remove</span>(<span class=\"string\">&quot;bottom&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n\n<p>这个主要是css的实现可以关注下，有添加了平滑移动的动画</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.showup</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">top</span>: -<span class=\"number\">35%</span> <span class=\"meta\">!important</span>;</span><br><span class=\"line\">  <span class=\"attribute\">left</span>: <span class=\"number\">0</span> <span class=\"meta\">!important</span>;</span><br><span class=\"line\">  <span class=\"attribute\">transition</span>: <span class=\"number\">0.5s</span>;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: black <span class=\"meta\">!important</span>;</span><br><span class=\"line\">  <span class=\"attribute\">font-weight</span>: <span class=\"number\">600</span>;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">20px</span> <span class=\"meta\">!important</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.bottom</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">border-bottom</span>: <span class=\"number\">2px</span> solid <span class=\"number\">#34495e</span> <span class=\"meta\">!important</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>要注意的是，input框内的登录这个两个字，会占用input的空间，所以需要做处理：</p>\n<p>input框的背景颜色需要改成透明色，再改变登录这个两个字的z-index权重，将input权重高于这两个文字，就可以覆盖这两个文字，并且可以在透明背景下正常显示。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.accAndPass</span> <span class=\"selector-tag\">input</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">50px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">outline</span>: none;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">25px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border</span>: none;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: transparent;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: relative;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.accAndPass</span> &gt; <span class=\"selector-tag\">span</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">  <span class=\"attribute\">top</span>: <span class=\"number\">50%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">left</span>: <span class=\"number\">3%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">transform</span>: <span class=\"built_in\">translateY</span>(-<span class=\"number\">50%</span>);</span><br><span class=\"line\">  <span class=\"attribute\">z-index</span>: -<span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"attribute\">transition</span>: <span class=\"number\">0.5s</span>;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">18px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: lightgray;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>通过按钮隐藏或者显示密码</strong></p>\n<p>主要是更改input内的type，让其在‘text’和‘password’之间去转换,引入图片的时候，如果找不到地址，可以在地址前添加require。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">showPassWord</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> inputs = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementsByName</span>(<span class=\"string\">&quot;inputValue&quot;</span>);</span><br><span class=\"line\">  <span class=\"keyword\">var</span> eyes = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementsByName</span>(<span class=\"string\">&#x27;eyes&#x27;</span>);</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"variable language_\">this</span>.<span class=\"property\">showEyes</span> === <span class=\"literal\">false</span>) &#123;</span><br><span class=\"line\">  inputs[<span class=\"number\">1</span>].<span class=\"property\">type</span> = <span class=\"string\">&#x27;text&#x27;</span>;</span><br><span class=\"line\">  eyes[<span class=\"number\">1</span>].<span class=\"property\">src</span> = <span class=\"variable language_\">this</span>.<span class=\"property\">openIcon</span>;</span><br><span class=\"line\">  &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">  inputs[<span class=\"number\">1</span>].<span class=\"property\">type</span> = <span class=\"string\">&#x27;password&#x27;</span>;</span><br><span class=\"line\">  eyes[<span class=\"number\">1</span>].<span class=\"property\">src</span> = <span class=\"variable language_\">this</span>.<span class=\"property\">closeIcon</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"variable language_\">this</span>.<span class=\"property\">showEyes</span> = !<span class=\"variable language_\">this</span>.<span class=\"property\">showEyes</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">closeIcon: require(&quot;../assets/close.png&quot;),</span><br><span class=\"line\">openIcon: require(&quot;../assets/open.png&quot;),</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"记录网站功能-电影分类\"><a href=\"#记录网站功能-电影分类\" class=\"headerlink\" title=\"记录网站功能-电影分类\"></a>记录网站功能-电影分类</h2><h3 id=\"电影分类\"><a href=\"#电影分类\" class=\"headerlink\" title=\"电影分类\"></a>电影分类</h3><p>通过axios获得到豆瓣top90部电影后，想要在左侧添加一个分类的侧边栏，所以需要对得到的电影进行分类。</p>\n<p>暂时没有找到分类的api接口，只有自己通过js去循环分类出一个新的数组，新数组形式如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">movieGenres.<span class=\"title function_\">push</span>(&#123;</span><br><span class=\"line\">  <span class=\"attr\">index</span>: nowGenres,</span><br><span class=\"line\">  <span class=\"attr\">list</span>: [movieLists[i]]</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>index:电影的类别（比如动作，冒险，剧情等等），</p>\n<p>list：对应类别中的所有电影。</p>\n<p>movieLists[i]：初始通过axios得到的电影详情信息（初始对象）</p>\n<!-- more -->\n\n<h3 id=\"实现代码-1\"><a href=\"#实现代码-1\" class=\"headerlink\" title=\"实现代码\"></a>实现代码</h3><ul>\n<li><p>实现逻辑</p>\n<ol>\n<li>获取到全部电影对象</li>\n<li><ol>\n<li>设定一个空数组用来存放分类后的全部电影：movieGenres[]。</li>\n<li>循环全部对象，判断每一部电影的类别是否存在于新数组中，</li>\n<li>存在则，直接添加到对应的类别数组LIst中去，</li>\n<li>不存在，则将对应类别直接添加到新数组中，</li>\n</ol>\n</li>\n</ol>\n</li>\n<li><p>实现代码</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">formMovieG</span>(<span class=\"params\">movieLists</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> movieGenres = [];</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; movieLists.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> nowGenres = movieLists[i].<span class=\"property\">genres</span>[<span class=\"number\">0</span>];</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"title function_\">toJudge</span>(nowGenres)) &#123;</span><br><span class=\"line\">      movieGenres.<span class=\"title function_\">push</span>(&#123;</span><br><span class=\"line\">        <span class=\"attr\">index</span>: nowGenres,</span><br><span class=\"line\">        <span class=\"attr\">list</span>: [movieLists[i]]</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = <span class=\"number\">0</span>; j &lt; movieGenres.<span class=\"property\">length</span>; j++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (movieGenres[j].<span class=\"property\">index</span> == nowGenres)</span><br><span class=\"line\">          movieGenres[j].<span class=\"property\">list</span>.<span class=\"title function_\">push</span>(movieLists[i]);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">function</span> <span class=\"title function_\">toJudge</span>(<span class=\"params\">nowGenres</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; movieGenres.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (movieGenres[i].<span class=\"property\">index</span> == nowGenres) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> movieGenres;</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n\n<p>movieLists:全部电影（90部没有分类）</p>\n<p>toJudge（）：判断函数，判断是否存在对应类别 ，存在则返回false，不存在则返回true；</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">this</span>.<span class=\"property\">movieGenres</span> = <span class=\"variable language_\">this</span>.<span class=\"title function_\">formMovieG</span>(movieLists);</span><br></pre></td></tr></table></figure>\n\n<p>获取后赋值。</p>\n</li>\n<li><p><em>注意点</em></p>\n<p>新数组的形式：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">movieGenres.push(&#123;</span><br><span class=\"line\">  index: nowGenres,</span><br><span class=\"line\">  *list: [movieLists[i]]*</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>其中list应当为一个数组的形式，因为是多个对象在其中，后续判断类别相同后，需要用push的方法推到list数组中去。</p>\n</li>\n</ul>\n<h2 id=\"记录网站功能-动态生成li\"><a href=\"#记录网站功能-动态生成li\" class=\"headerlink\" title=\"记录网站功能-动态生成li\"></a>记录网站功能-动态生成li</h2><h3 id=\"动态生成元素\"><a href=\"#动态生成元素\" class=\"headerlink\" title=\"动态生成元素\"></a>动态生成元素</h3><p>当获取到电影之后，一页只能显示9个电影，之后的电影则需要通过下方的分页li去显示，不同的种类的电影数量是不一致的，所以对应的下方显示数量li页不一致，所以需要根据电影数量动态生成li。</p>\n<p>全部电影：</p>\n<p><img src=\"https://limengtupian.oss-cn-beijing.aliyuncs.com/%E5%8A%A8%E6%80%81/%E5%8A%A8%E6%80%811.png\"></p>\n<p>局部电影：</p>\n<p><img src=\"https://limengtupian.oss-cn-beijing.aliyuncs.com/%E5%8A%A8%E6%80%81/%E5%8A%A8%E6%80%812.png\"></p>\n<!-- more -->\n\n<h3 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h3><ul>\n<li><p>逻辑</p>\n<ol>\n<li>通过判断当前类目一共有多少电影去生成对应个数的下方li索引，</li>\n<li>切换前，应当先清除所有的li，然后再生成新的li。</li>\n<li>给每个li绑定一个点击事件，当点击时候，当前显示页面的数组替换成对应序号的数组，</li>\n</ol>\n</li>\n<li><p>代码</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 生成下方li列表</span></span><br><span class=\"line\"><span class=\"title function_\">createLiLists</span>(<span class=\"params\">Lilength</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> that = <span class=\"variable language_\">this</span>; <span class=\"comment\">//内部函数中调用函数，用that存储this指向，再调用，that.xxx</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> indexlists = <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&quot;#indexLists&quot;</span>);</span><br><span class=\"line\">  <span class=\"keyword\">var</span> showindex = <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&quot;.showindex&quot;</span>);</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt; <span class=\"title class_\">Lilength</span>; i++) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> node = <span class=\"variable language_\">document</span>.<span class=\"title function_\">createElement</span>(<span class=\"string\">&quot;li&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> textIndex = <span class=\"variable language_\">document</span>.<span class=\"title function_\">createTextNode</span>(i);</span><br><span class=\"line\">    node.<span class=\"title function_\">appendChild</span>(textIndex);</span><br><span class=\"line\">    indexlists.<span class=\"title function_\">appendChild</span>(node);</span><br><span class=\"line\">    node.<span class=\"property\">className</span> = <span class=\"string\">&quot;index&quot;</span>;</span><br><span class=\"line\">    node.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&quot;click&quot;</span>, <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">      that.<span class=\"title function_\">gotoIndex</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">innerText</span>, showindex); <span class=\"comment\">// that调用</span></span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"variable language_\">this</span>.<span class=\"property\">liIndexList</span> = <span class=\"title class_\">Lilength</span>;</span><br><span class=\"line\">  showindex.<span class=\"property\">innerText</span> = <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 清除li</span></span><br><span class=\"line\"><span class=\"title function_\">clearLiLists</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// this.liIndexList = Lilength;</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> indexlists = <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&quot;#indexLists&quot;</span>);</span><br><span class=\"line\">  <span class=\"keyword\">var</span> liS = indexlists.<span class=\"title function_\">querySelectorAll</span>(<span class=\"string\">&quot;.index&quot;</span>);</span><br><span class=\"line\">  <span class=\"comment\">// 清除lis，排他</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = liS.<span class=\"property\">length</span> - <span class=\"number\">1</span>; i &gt;= <span class=\"number\">0</span>; i--) &#123;</span><br><span class=\"line\">    indexlists.<span class=\"title function_\">removeChild</span>(liS[i]);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//点击事件</span></span><br><span class=\"line\"><span class=\"title function_\">gotoIndex</span>(<span class=\"params\">e, showindex</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> index = <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelectorAll</span>(<span class=\"string\">&quot;.index&quot;</span>);</span><br><span class=\"line\">  <span class=\"comment\">// var showindex = document.querySelector(&quot;.showindex&quot;);</span></span><br><span class=\"line\">  <span class=\"variable language_\">this</span>.<span class=\"property\">isLoading</span> = <span class=\"literal\">true</span>;</span><br><span class=\"line\">  <span class=\"comment\">//单页面应用，定时器并不会自动关闭，需要手动清除</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> out = <span class=\"built_in\">setInterval</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"variable language_\">this</span>.<span class=\"property\">allMovie</span>.<span class=\"property\">length</span> == <span class=\"number\">90</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (<span class=\"variable language_\">this</span>.<span class=\"property\">liIndexList</span> == <span class=\"number\">11</span>) &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">items</span> = <span class=\"variable language_\">this</span>.<span class=\"property\">allMovie</span>.<span class=\"title function_\">slice</span>(</span><br><span class=\"line\">          <span class=\"built_in\">parseInt</span>(e) * <span class=\"number\">9</span> - <span class=\"number\">9</span>,</span><br><span class=\"line\">          <span class=\"built_in\">parseInt</span>(e) * <span class=\"number\">9</span>,</span><br><span class=\"line\">          (<span class=\"variable language_\">this</span>.<span class=\"property\">isLoading</span> = <span class=\"literal\">false</span>)</span><br><span class=\"line\">        );</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">items</span> = <span class=\"variable language_\">this</span>.<span class=\"property\">movieGenres_index_list</span>.<span class=\"title function_\">slice</span>(</span><br><span class=\"line\">          <span class=\"built_in\">parseInt</span>(e) * <span class=\"number\">9</span> - <span class=\"number\">9</span>,</span><br><span class=\"line\">          <span class=\"built_in\">parseInt</span>(e) * <span class=\"number\">9</span>,</span><br><span class=\"line\">          (<span class=\"variable language_\">this</span>.<span class=\"property\">isLoading</span> = <span class=\"literal\">false</span>)</span><br><span class=\"line\">        );</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"built_in\">clearInterval</span>(out);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;, <span class=\"number\">100</span>);</span><br><span class=\"line\">  showindex.<span class=\"property\">innerText</span> = e;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; index.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">    index[i].<span class=\"property\">classList</span>.<span class=\"title function_\">remove</span>(<span class=\"string\">&quot;light&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  index[e - <span class=\"number\">1</span>].<span class=\"property\">classList</span>.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;light&quot;</span>);</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure></li>\n<li><p>注意点</p>\n<ol>\n<li><p>生成元素后需要添加元素，才能生效</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> node = <span class=\"variable language_\">document</span>.<span class=\"title function_\">createElement</span>(<span class=\"string\">&quot;li&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> textIndex = <span class=\"variable language_\">document</span>.<span class=\"title function_\">createTextNode</span>(i);</span><br><span class=\"line\">node.<span class=\"title function_\">appendChild</span>(textIndex);</span><br><span class=\"line\">indexlists.<span class=\"title function_\">appendChild</span>(node);</span><br></pre></td></tr></table></figure>\n\n<p>这里生成了li和li内部的数字i，然后需要append到父元素indexlists上，才能生效。</p>\n</li>\n<li><p>函数内部调用函数添加事件，使用了that</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"keyword\">let</span> that = <span class=\"variable language_\">this</span>; <span class=\"comment\">//内部函数中调用函数，用that存储this指向，再调用，that.xxx</span></span><br><span class=\"line\"> node.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&quot;click&quot;</span>, <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  that.<span class=\"title function_\">gotoIndex</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">innerText</span>, showindex); <span class=\"comment\">// that调用</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>addEventListener内使用其他函数gotoIndex，直接使用this.gotoIndex不生效，使用that生效。</p>\n</li>\n<li><p>写了一个定时器，判断是否将90部电影循环完毕，再执行绑定点击跳转事件，避免未加载完成90部电影点击无效。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> out = <span class=\"built_in\">setInterval</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"variable language_\">this</span>.<span class=\"property\">allMovie</span>.<span class=\"property\">length</span> == <span class=\"number\">90</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (<span class=\"variable language_\">this</span>.<span class=\"property\">liIndexList</span> == <span class=\"number\">11</span>) &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">items</span> = <span class=\"variable language_\">this</span>.<span class=\"property\">allMovie</span>.<span class=\"title function_\">slice</span>(</span><br><span class=\"line\">          <span class=\"built_in\">parseInt</span>(e) * <span class=\"number\">9</span> - <span class=\"number\">9</span>,</span><br><span class=\"line\">          <span class=\"built_in\">parseInt</span>(e) * <span class=\"number\">9</span>,</span><br><span class=\"line\">          (<span class=\"variable language_\">this</span>.<span class=\"property\">isLoading</span> = <span class=\"literal\">false</span>)</span><br><span class=\"line\">        );</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">items</span> = <span class=\"variable language_\">this</span>.<span class=\"property\">movieGenres_index_list</span>.<span class=\"title function_\">slice</span>(</span><br><span class=\"line\">          <span class=\"built_in\">parseInt</span>(e) * <span class=\"number\">9</span> - <span class=\"number\">9</span>,</span><br><span class=\"line\">          <span class=\"built_in\">parseInt</span>(e) * <span class=\"number\">9</span>,</span><br><span class=\"line\">          (<span class=\"variable language_\">this</span>.<span class=\"property\">isLoading</span> = <span class=\"literal\">false</span>)</span><br><span class=\"line\">        );</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"built_in\">clearInterval</span>(out);<span class=\"comment\">//单页面应用，定时器并不会自动关闭，需要手动清除</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;, <span class=\"number\">100</span>);</span><br></pre></td></tr></table></figure>\n\n<p>刚打开页面时候，去给li添加事件，会发现报错，因为此时，还没有获取到全部的电影，所以没有办法执行对应的数字跳转到对应的页面电影。</p>\n<p>所以执行一个定时循环函数去判断电影是不是获取完毕，获取完毕了，再执行添加函数。</p>\n<p>如果是有对应的api数据，则比较方便，只用获取到对应的index去后端请求。</p>\n</li>\n</ol>\n</li>\n</ul>\n<h2 id=\"记录网站功能-购物车\"><a href=\"#记录网站功能-购物车\" class=\"headerlink\" title=\"记录网站功能-购物车\"></a>记录网站功能-购物车</h2><h3 id=\"网站购物车功能\"><a href=\"#网站购物车功能\" class=\"headerlink\" title=\"网站购物车功能\"></a>网站购物车功能</h3><p>需要在两个页面（电影列表和电影详情）去添加一个购物车功能，而且通过购物车可以跳转到支付页面，支付页面中页可以直接修改购物车的电影数量。</p>\n<p>一般去多页面操作同一数据，都会使用一些工具，现在用的是vue-x 。</p>\n<p>传统方法主要是通过父子组件之间的传值来进行操作：</p>\n<ol>\n<li><p>父组件传给子组件的数据</p>\n<ol>\n<li><p>父组件需要在子组件标签处添加一个自定义标签</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Shop</span> <span class=\"attr\">:number</span>=<span class=\"string\">&quot;allMovie.length&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">Shop</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">Shop</span> <span class=\"keyword\">from</span> <span class=\"string\">&quot;@/components/shoppingCar.vue&quot;</span>;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">data</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">        <span class=\"attr\">allMovie</span>: []</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure></li>\n<li><p>子组件需要注册props</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h4</span>&gt;</span>影库共有&#123;&#123;number&#125;&#125;部电影<span class=\"tag\">&lt;/<span class=\"name\">h4</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">props</span>:[<span class=\"string\">&quot;number&quot;</span>],</span><br></pre></td></tr></table></figure></li>\n</ol>\n<p>这样，就可以通过标签的方法，子组件调用父组件处拿到number里的allmovie的length了。</p>\n<!-- more --></li>\n<li><p>子组件传给父组件的数据</p>\n<ol>\n<li><p>子组件需要给元素绑定一个事件，通过事件传参</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span>  @<span class=\"attr\">click</span>=<span class=\"string\">&quot;toParent()&quot;</span>&gt;</span>点击传值<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">methods</span>: &#123;</span><br><span class=\"line\">    <span class=\"title function_\">toParent</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">  <span class=\"variable language_\">this</span>.$emit(<span class=\"string\">&#x27;sendToFather&#x27;</span>,<span class=\"variable language_\">this</span>.<span class=\"property\">message</span>)</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">data</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">   <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">     <span class=\"attr\">message</span>:&#123;<span class=\"attr\">name</span>:<span class=\"string\">&quot;购物车&quot;</span>,<span class=\"attr\">color</span>:<span class=\"string\">&quot;red&quot;</span>&#125;,</span><br><span class=\"line\">   &#125;</span><br></pre></td></tr></table></figure></li>\n<li><p>父组件通过调用子组件定义的一个特定名字方法来获得子组件参数</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Shop</span>  @<span class=\"attr\">sendToFather</span>=<span class=\"string\">&quot;getChild&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">Shop</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">methods</span>: &#123;</span><br><span class=\"line\">  <span class=\"title function_\">getChild</span>(<span class=\"params\">data</span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(data);</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>控制台会输出子组件的message数组。</p>\n</li>\n</ol>\n</li>\n</ol>\n<h3 id=\"购物车功能vue-x实现\"><a href=\"#购物车功能vue-x实现\" class=\"headerlink\" title=\"购物车功能vue-x实现\"></a>购物车功能vue-x实现</h3><p>涉及到多个页面操作同一数据源，并且其中有页面不是父子关系。使用vue-x更加便捷</p>\n<ul>\n<li><p>逻辑</p>\n<p>vue-x的使用核心是两个，一个是state，另一个是mutations。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export default new Vuex.Store(&#123;</span><br><span class=\"line\">  state: &#123;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  mutations: &#123;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  actions: &#123;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  modules: &#123;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n\n\n<ol>\n<li>state是页面所需要调用的一个数据源，比如我要在购物车中展示的所有电影数组，这个数组可以在购物车和支付页面都显示出来</li>\n<li>mutations是其他页面提交新的数据过来的时候，需要对传递过来的数据做一些操作（比如要添加一些数量表示，要筛选出重复项等等），然后再赋值给state中的数据源，从而更新所有页面的数据。</li>\n</ol>\n</li>\n<li><p>代码 </p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Vuex</span>.<span class=\"title class_\">Store</span>(&#123;</span><br><span class=\"line\">  <span class=\"attr\">state</span>: &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 当前购物车的电影(经过了数量整理)</span></span><br><span class=\"line\">    <span class=\"attr\">carMovie</span>: [],</span><br><span class=\"line\">    <span class=\"comment\">//数量</span></span><br><span class=\"line\">    <span class=\"attr\">totalNumber</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">mutations</span>: &#123;</span><br><span class=\"line\">    <span class=\"title function_\">setShopCar</span>(<span class=\"params\">state, arg</span>) &#123;</span><br><span class=\"line\">      <span class=\"comment\">//处理数组中的重复项，将重复项剔除，并且account 加一</span></span><br><span class=\"line\">      <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; arg.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = <span class=\"number\">0</span>; j &lt; arg.<span class=\"property\">length</span>; j++) &#123;</span><br><span class=\"line\">          <span class=\"keyword\">if</span> (i != j &amp;&amp; arg[i].<span class=\"property\">object</span>.<span class=\"property\">title</span> == arg[j].<span class=\"property\">object</span>.<span class=\"property\">title</span>) &#123;</span><br><span class=\"line\">            arg.<span class=\"title function_\">splice</span>(j, <span class=\"number\">1</span>);</span><br><span class=\"line\">            j = <span class=\"number\">0</span>;</span><br><span class=\"line\">            arg[i].<span class=\"property\">account</span> += <span class=\"number\">1</span>;</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;;</span><br><span class=\"line\">      state.<span class=\"property\">carMovie</span> = arg;</span><br><span class=\"line\">      <span class=\"keyword\">var</span> argTem = <span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(arg);</span><br><span class=\"line\">      <span class=\"variable language_\">window</span>.<span class=\"property\">localStorage</span>.<span class=\"title function_\">setItem</span>(<span class=\"string\">&#x27;tempMovie&#x27;</span>,argTem);</span><br><span class=\"line\">      <span class=\"comment\">// 电影的数量</span></span><br><span class=\"line\">      <span class=\"keyword\">var</span> total = <span class=\"number\">0</span>;</span><br><span class=\"line\">      <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; arg.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">        total += arg[i].<span class=\"property\">account</span>;</span><br><span class=\"line\">      &#125;;</span><br><span class=\"line\">      state.<span class=\"property\">totalNumber</span> = total;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">actions</span>: &#123;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">modules</span>: &#123;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<p>支付页面中调用:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">computed</span>: &#123;</span><br><span class=\"line\">  <span class=\"title function_\">carMovie</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>.<span class=\"property\">$store</span>.<span class=\"property\">state</span>.<span class=\"property\">carMovie</span>;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>支付页面中更新vue-x中state：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">buyTheMovie</span>(<span class=\"params\">item</span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// var reg = this.$store.state.buyCarMovieList;</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> reg = <span class=\"variable language_\">this</span>.<span class=\"property\">$store</span>.<span class=\"property\">state</span>.<span class=\"property\">carMovie</span>;</span><br><span class=\"line\">  reg.<span class=\"title function_\">push</span>(&#123;</span><br><span class=\"line\">    <span class=\"attr\">account</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">    <span class=\"attr\">object</span>: item</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  <span class=\"variable language_\">this</span>.<span class=\"property\">$store</span>.<span class=\"title function_\">commit</span>(<span class=\"string\">&quot;setShopCar&quot;</span>, reg);</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure></li>\n<li><p>注意</p>\n<ol>\n<li>直接获取state数据，然后修改，这个操作是能够生效的，但是不推荐这个方法，应当所有修改state数据的操作都使用：this.$store.commit(“xxxxx”, xxx)。从而能够保证数据更新的一致性。</li>\n<li>一般调用的时候，涉及到比较复杂的数据，都可以用再computed周期中。</li>\n</ol>\n</li>\n</ul>\n<h2 id=\"记录网站功能-搜索\"><a href=\"#记录网站功能-搜索\" class=\"headerlink\" title=\"记录网站功能-搜索\"></a>记录网站功能-搜索</h2><h3 id=\"搜索功能\"><a href=\"#搜索功能\" class=\"headerlink\" title=\"搜索功能\"></a>搜索功能</h3><p>网站一共获取90部电影，设计了搜索功能，主要搜索依据为电影名字，因为没有找到搜索的api接口，所以直接获取到全部的90部电影后，再进行的全部的电影循环匹配，相对花的时间比较多。</p>\n<p>实现了通过部分关键字显示对应电影，记录如下：</p>\n<p><img src=\"https://limengtupian.oss-cn-beijing.aliyuncs.com/%E6%90%9C%E7%B4%A2/%E6%90%9C%E7%B4%A21.png\"></p>\n<!-- more -->\n\n<h3 id=\"功能实现\"><a href=\"#功能实现\" class=\"headerlink\" title=\"功能实现\"></a>功能实现</h3><ul>\n<li><p>逻辑实现</p>\n<ol>\n<li><p>选择一个合适的事件</p>\n<p>通过取得input框内的value值去对比每一部电影的title，然后可以得出判断，这里需要选择对应的input事件，参考网上的说明，选用oninput事件，找到的说明如下：</p>\n<ul>\n<li><p>一种是onchange事件，触发条件：内容改变且失去焦点。</p>\n</li>\n<li><p>一种是onpropertychange事件，触发条件：元素内容改变即触发，另外js改变内容，该元素的属性改变也会触发。但只在IE11以下支持。</p>\n</li>\n<li><p>一种是html5的oninput事件，触发条件：value值的改变，但是js方式改变value不会触发，且在IE8以上及其他标准浏览器支持。</p>\n</li>\n</ul>\n<p>实际上，网上看到有新的事件对应不同的条件执行，暂时没有去尝试，直接用了防抖函数，如下：</p>\n<p>​       原理：</p>\n<p>​         当浏览器有非直接的文字输入时，compositionstart事件就会同步触发，记住，是同步</p>\n<p>​         当浏览器是直接的文字输入时，compositionend事件就会触发</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> cpLock = <span class=\"literal\">false</span>;</span><br><span class=\"line\">    $(<span class=\"string\">&#x27;input[search]&#x27;</span>).<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;compositionstart&#x27;</span>, <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 输入汉语拼音时锁住搜索框，不进行搜索，或者从汉语拼音转到字母时也可触发</span></span><br><span class=\"line\">        cpLock = <span class=\"literal\">true</span>;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;不搜索&#x27;</span>)</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    $(<span class=\"string\">&#x27;input[search]&#x27;</span>).<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;compositionend&#x27;</span>, <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 结束汉语拼音输入并生成汉字时，解锁搜索框，进行搜索</span></span><br><span class=\"line\">        cpLock = <span class=\"literal\">false</span>;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;汉字搜索&#x27;</span>);</span><br><span class=\"line\">        <span class=\"comment\">// 接下去放ajax请求生成下拉框内容</span></span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    $(<span class=\"string\">&#x27;input[search]&#x27;</span>).<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;input&#x27;</span>, <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!cpLock) &#123;</span><br><span class=\"line\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;字母搜索&#x27;</span>)    </span><br><span class=\"line\">          <span class=\"comment\">// 接下去放ajax请求生成下拉框内容</span></span><br><span class=\"line\">      &#125;</span><br></pre></td></tr></table></figure></li>\n<li><p>需要防抖函数</p>\n<p>防抖函数具体见以下文章：<a href=\"%5Bhttp://www.limeng54231.top/2019/12/02/%E5%87%BD%E6%95%B0%E8%8A%82%E6%B5%81%E5%92%8C%E9%98%B2%E6%8A%96/%5D(http://www.limeng54231.top/2019/12/02/%E5%87%BD%E6%95%B0%E8%8A%82%E6%B5%81%E5%92%8C%E9%98%B2%E6%8A%96/)\">防抖函数和节流函数</a></p>\n</li>\n</ol>\n</li>\n<li><p>代码</p>\n<p>代码如下：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;searchMovie&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;请输入......&quot;</span> @<span class=\"attr\">input</span>=<span class=\"string\">&quot;doSearch&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\"><span class=\"comment\">//防抖函数</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">debounce</span>(<span class=\"params\">fn, delay = <span class=\"number\">2000</span></span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">//可以放入项目中的公共方法中进行调用（鹅只是省事）</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> timer;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> args = <span class=\"variable language_\">arguments</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (timer) &#123;</span><br><span class=\"line\">      <span class=\"built_in\">clearTimeout</span>(timer);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">isLoading</span> = <span class=\"literal\">true</span>;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">loadingIntext</span> = <span class=\"string\">&quot;搜索中......&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&quot;searchMovie&quot;</span>).<span class=\"property\">value</span> == <span class=\"string\">&quot;&quot;</span>) &#123;</span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"property\">items</span> = <span class=\"variable language_\">this</span>.<span class=\"property\">firstPMovie</span>;</span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"property\">isLoading</span> = <span class=\"literal\">false</span>;</span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"property\">loadingIntext</span> = <span class=\"string\">&quot;请稍等......&quot;</span>;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      timer = <span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">        fn.<span class=\"title function_\">apply</span>(<span class=\"variable language_\">this</span>, args); <span class=\"comment\">// this 指向vue</span></span><br><span class=\"line\">      &#125;, delay);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\"><span class=\"attr\">methods</span>:&#123;</span><br><span class=\"line\">    <span class=\"attr\">doSearch</span>: <span class=\"title function_\">debounce</span>(<span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> searchMovieV = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&quot;searchMovie&quot;</span>).<span class=\"property\">value</span>;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> res = <span class=\"variable language_\">this</span>.<span class=\"property\">allMovie</span>;</span><br><span class=\"line\">  <span class=\"variable language_\">this</span>.<span class=\"property\">items</span> = [];</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; res.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (res[i].<span class=\"property\">title</span>.<span class=\"title function_\">includes</span>(searchMovieV)) &#123;</span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"property\">items</span>.<span class=\"title function_\">push</span>(res[i]);</span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"property\">isLoading</span> = <span class=\"literal\">false</span>;</span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"property\">loadingIntext</span> = <span class=\"string\">&quot;请稍等......&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"variable language_\">this</span>.<span class=\"property\">items</span>.<span class=\"property\">length</span> == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">loadingIntext</span> = <span class=\"string\">&quot;没有找到结果哟,3秒后自动返回，稍等......&quot;</span>;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">isLoading</span> = <span class=\"literal\">true</span>;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> setT = <span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"property\">items</span> = <span class=\"variable language_\">this</span>.<span class=\"property\">firstPMovie</span>;</span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"property\">isLoading</span> = <span class=\"literal\">false</span>;</span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"property\">loadingIntext</span> = <span class=\"string\">&quot;请稍等......&quot;</span>;</span><br><span class=\"line\">      <span class=\"built_in\">clearTimeout</span>(setT);</span><br><span class=\"line\">    &#125;, <span class=\"number\">3000</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure></li>\n<li><p><strong>注意</strong></p>\n</li>\n</ul>\n<ol>\n<li><p>如何判断input的值是否符合电影title的关键词</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">res[i].title.includes(searchMovieV)</span><br></pre></td></tr></table></figure>\n\n<p>.includes函数可以判断title内有没有包含seatchmovie 的关键字，只要有对应的任意一个字，就会判断为true</p>\n</li>\n<li><p>再vue中使用防抖函数</p>\n<p>debounce这个函数需要直接写再script内部，然后设置了两个参数，第一个就是执行方法，即fn，第二个是等待时间。</p>\n<p>这里需要注意的是，debounce这个函数内部需要定义一个timer，形成一个闭包，从而使得第二次进入循环后，清除掉第一次的定时函数。</p>\n<p>同时this的指向问题，需要再return函数中用一个变量去存以下this，以确保指针指向的是input。</p>\n<p>参考链接：[防抖函数中的闭包](</p>\n</li>\n</ol>\n<h2 id=\"记录网站功能实现-精灵图\"><a href=\"#记录网站功能实现-精灵图\" class=\"headerlink\" title=\"记录网站功能实现-精灵图\"></a>记录网站功能实现-精灵图</h2><h3 id=\"精灵图\"><a href=\"#精灵图\" class=\"headerlink\" title=\"精灵图\"></a>精灵图</h3><ul>\n<li><p>精灵图技术产生的目的：很多大型网页在首次加载的时候都需要加载很多的小图片，而考虑到在同一时间，服务器拥堵的情况下，为了解决这一问题，采用了精灵图这一技术来缓解加载时间过长从而影响用户体验的这个问题。</p>\n</li>\n<li><p>精灵图技术的本质：所谓精灵图就是把很多的小图片合并到一张较大的图片里，所以在首次加载页面的时候，就不用加载过多的小图片，只需要加载出来将小图片合并起来的那一张大图片也就是精灵图即可，这样在一定程度上减少了页面的加载速度，也一定程度上缓解了服务器的压力。例如王者荣耀页面里的几个小logo:</p>\n<p><img src=\"http://5b0988e595225.cdn.sohucs.com/images/20171128/e5c76a5b52c14b2eadb8036126bbdce2.png\" alt=\"tupian\"></p>\n</li>\n</ul>\n<!-- more -->\n\n<h3 id=\"怎么去实现一张图片加载不同位置\"><a href=\"#怎么去实现一张图片加载不同位置\" class=\"headerlink\" title=\"怎么去实现一张图片加载不同位置\"></a>怎么去实现一张图片加载不同位置</h3><p><strong>主要通过background-position属性去设置不同位置</strong></p>\n<p>如图：</p>\n<ul>\n<li><p>引入背景图片</p>\n<p><img src=\"https://limengtupian.oss-cn-beijing.aliyuncs.com/%E7%B2%BE%E7%81%B5%E5%9B%BEmd/%E7%B2%BE%E7%81%B5%E5%9B%BE1.png\"></p>\n</li>\n<li><p>设置背景图片显示位置<strong>（实际上可以通过js的for循环去设置）</strong></p>\n<p><img src=\"https://limengtupian.oss-cn-beijing.aliyuncs.com/%E7%B2%BE%E7%81%B5%E5%9B%BEmd/%E7%B2%BE%E7%81%B5%E5%9B%BE2.png\"></p>\n</li>\n<li><p>设置hover效果</p>\n<p><img src=\"https://limengtupian.oss-cn-beijing.aliyuncs.com/%E7%B2%BE%E7%81%B5%E5%9B%BEmd/%E7%B2%BE%E7%81%B5%E5%9B%BE3.png\"></p>\n</li>\n</ul>\n<h3 id=\"优缺点\"><a href=\"#优缺点\" class=\"headerlink\" title=\"优缺点\"></a>优缺点</h3><p><strong>优点：</strong></p>\n<p>①减少网页的http请求，从而加快了网页加载速度，提高用户体验。</p>\n<p>②减少图片的体积，因为每个图片都有一个头部信息，把多个图片放到一个图片里，就会共用同一个头信息，从而减少了字节数。</p>\n<p>③解决了网页设计师在图片命名上的困扰，只需对一张集合的图片上命名就可以了，不需要对每一个小元素进行命名。</p>\n<p>④更换风格方便，只需要在一张或少张图片上修改图片的颜色或样式，整个网页的风格就可以改变。</p>\n<p><strong>缺点：</strong></p>\n<p>①在宽屏，高分辨率的屏幕下的自适应页面，你的图片如果不够宽，很容易出现背景断裂。</p>\n<p>②CSS Sprites在开发的时候，要通过photoshop或其他工具测量计算每一个背景单元的精确位置。</p>\n<p>③在维护的时候比较麻烦，如果页面背景有少许改动，一般就要改这张合并的图片。</p>\n<p>④精灵图不能随意改变大小和颜色。改变大小会失真模糊，降低用户体验，Css3新属性可以改变精灵图颜色，但是比较麻烦，并且新属性有兼容问题，现在一般用字体图标代替精灵图。</p>\n<h2 id=\"记录网站功能实现-搜索功能\"><a href=\"#记录网站功能实现-搜索功能\" class=\"headerlink\" title=\"记录网站功能实现-搜索功能\"></a>记录网站功能实现-搜索功能</h2><h3 id=\"网站搜索功能\"><a href=\"#网站搜索功能\" class=\"headerlink\" title=\"网站搜索功能\"></a>网站搜索功能</h3><p>很多的导航网站会再头顶设置不同的搜索引擎的搜索框，提供更方便的搜索功能，如图：</p>\n<p><img src=\"https://limengtupian.oss-cn-beijing.aliyuncs.com/%E6%90%9C%E7%B4%A2%E5%8A%9F%E8%83%BD/%E6%90%9C%E7%B4%A2%E5%8A%9F%E8%83%BD1.png\"></p>\n<p>这个实现也不复杂，如下：</p>\n<!-- more -->\n\n<h3 id=\"如何实现\"><a href=\"#如何实现\" class=\"headerlink\" title=\"如何实现\"></a>如何实现</h3><p>功能的实现也不复杂，是通过一个form，不停的变换form中的action和name去切换不同的搜索引擎的</p>\n<p>代码如下：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">action</span>=<span class=\"string\">&quot;https://www.baidu.com/s&quot;</span> <span class=\"attr\">target</span>=<span class=\"string\">&quot;__blank&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;searchForm&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">input</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">id</span>=<span class=\"string\">&quot;searchInput&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;请输入要搜索的内容：&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;searchValue&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">name</span>=<span class=\"string\">&quot;word&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">autofocus</span></span></span><br><span class=\"line\"><span class=\"tag\">  /&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;submit&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;搜索&quot;</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">data</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">    <span class=\"attr\">items</span>: [</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        <span class=\"attr\">text</span>: <span class=\"string\">&quot;谷歌&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">searchUrl</span>: <span class=\"string\">&quot;http://www.google.com.hk/search?q=&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">name</span>: <span class=\"string\">&quot;q&quot;</span></span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123; <span class=\"attr\">text</span>: <span class=\"string\">&quot;百度&quot;</span>, <span class=\"attr\">searchUrl</span>: <span class=\"string\">&quot;https://www.baidu.com/s&quot;</span>, <span class=\"attr\">name</span>: <span class=\"string\">&quot;word&quot;</span> &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        <span class=\"attr\">text</span>: <span class=\"string\">&quot;搜狗&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">searchUrl</span>: <span class=\"string\">&quot;http://www.sogou.com/web&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">name</span>: <span class=\"string\">&quot;query&quot;</span></span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123; <span class=\"attr\">text</span>: <span class=\"string\">&quot;必应&quot;</span>, <span class=\"attr\">searchUrl</span>: <span class=\"string\">&quot;https://cn.bing.com/search&quot;</span>, <span class=\"attr\">name</span>: <span class=\"string\">&quot;q&quot;</span> &#125;</span><br><span class=\"line\">    ],</span><br><span class=\"line\">    <span class=\"attr\">checkindex</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">    <span class=\"attr\">searchValue</span>: <span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">isActive</span>(<span class=\"params\">item, index</span>) &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">this</span>.<span class=\"property\">checkindex</span> = index;</span><br><span class=\"line\">  <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&quot;searchForm&quot;</span>).<span class=\"property\">action</span> = item.<span class=\"property\">searchUrl</span>;</span><br><span class=\"line\">  <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&quot;searchInput&quot;</span>).<span class=\"property\">name</span> = item.<span class=\"property\">name</span>;</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n\n<p>通过v-for去循环data中的items，去生成不同的搜索引擎按钮，点击不同的按钮，去切换form中的action和input中的name就可以实现搜索功能。</p>\n<p>这个其中主要是通过各大搜索引擎提供的地址去操作，例如百度等，已经提供了公共的搜索接口，非常的方便。</p>\n<h2 id=\"侧边栏随动闪烁问题记录\"><a href=\"#侧边栏随动闪烁问题记录\" class=\"headerlink\" title=\"侧边栏随动闪烁问题记录\"></a>侧边栏随动闪烁问题记录</h2><p>很多网站都有侧边栏随动的效果，当页面在最顶部的时候，侧边栏是正常的元素上下排列效果，当下滑到一定的位置，侧边栏会变成固定的位置。如下：</p>\n<p><img src=\"https://limengtupian.oss-cn-beijing.aliyuncs.com/%E4%BE%A7%E8%BE%B9%E6%A0%8F%E9%97%AA%E7%83%81/1.png\"></p>\n<p>固定位置如下：</p>\n<p><img src=\"https://limengtupian.oss-cn-beijing.aliyuncs.com/%E4%BE%A7%E8%BE%B9%E6%A0%8F%E9%97%AA%E7%83%81/2.png\"></p>\n<!-- more -->\n\n<h3 id=\"功能实现-1\"><a href=\"#功能实现-1\" class=\"headerlink\" title=\"功能实现\"></a>功能实现</h3><p>实现功能是很简单的，直接获取当前位置对应最顶部的值，然后当值大于某个数时，将元素的class增加一个fixed，当小于某个值，再移除这个class</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">position</span>: fixed <span class=\"meta\">!important</span>;</span><br><span class=\"line\"><span class=\"attribute\">transform</span>: <span class=\"built_in\">translateZ</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">-webkit-<span class=\"attribute\">transform</span>: <span class=\"built_in\">translateZ</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\"><span class=\"attribute\">top</span>: <span class=\"number\">70px</span>;</span><br></pre></td></tr></table></figure>\n\n<p>js判断如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> h = <span class=\"variable language_\">this</span>.<span class=\"property\">$refs</span>.<span class=\"property\">carousel</span>.<span class=\"property\">offsetHeight</span>;</span><br><span class=\"line\"><span class=\"variable language_\">this</span>.<span class=\"property\">scrollPosition</span> = <span class=\"variable language_\">document</span>.<span class=\"property\">documentElement</span>.<span class=\"property\">scrollTop</span>;</span><br><span class=\"line\"><span class=\"variable language_\">this</span>.<span class=\"property\">$store</span>.<span class=\"title function_\">commit</span>(<span class=\"string\">&quot;setScrollPosition&quot;</span>, <span class=\"variable language_\">this</span>.<span class=\"property\">scrollPosition</span>);<span class=\"comment\">//记录当前浏览的位置，返回时可以保证用户时之前的浏览位置</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">scrollPosition</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> offtop = <span class=\"variable language_\">document</span>.<span class=\"property\">documentElement</span>.<span class=\"property\">scrollTop</span> + <span class=\"number\">50</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"variable language_\">document</span>.<span class=\"property\">body</span>.<span class=\"property\">clientWidth</span> &gt; <span class=\"number\">972</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (offtop &gt; h) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">movieG2</span> = <span class=\"literal\">true</span>;<span class=\"comment\">//增加class</span></span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">movieG2</span> = <span class=\"literal\">false</span>;<span class=\"comment\">//减少class</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"问题\"><a href=\"#问题\" class=\"headerlink\" title=\"问题\"></a>问题</h3><p>这样产生了问题：</p>\n<p>浏览器中，每次鼠标滚轮都是滚动固定的大小，每次滚动67左右。</p>\n<p>但是当接近判断clss临界条件时，会向下滚动一次就立刻超过临界值，导致，这个侧边栏会从之前的上下排列瞬间切换到fixed排列，这中间侧边栏会闪烁一下。</p>\n<p>我观察了其他网站的实现，发现其他网站向下滚动的距离时固定的，比如，滚动5次，刚好可以达到临界值，然后下一次滚动，刚好可以将正常的文档流改成fixed，所以没有闪烁问题。</p>\n<h3 id=\"实现功能\"><a href=\"#实现功能\" class=\"headerlink\" title=\"实现功能\"></a>实现功能</h3><p>关键属性：mousewheel事件</p>\n<p>mousewheel事件就是鼠标滚轮滚动的事件，每次滚动，可以阻止其默认行为，然后，自己设定下滑的距离，从而实现每次滚动的距离可控。</p>\n<p>代码如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//滚轮事件</span></span><br><span class=\"line\"><span class=\"comment\">// 鼠标滚轮事件</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">getWheelDelta</span>(<span class=\"params\">event</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (event.<span class=\"property\">wheelDelta</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> event.<span class=\"property\">wheelDelta</span>;</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 兼容火狐</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> -event.<span class=\"property\">detail</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 鼠标滚动逻辑（全屏滚动关键逻辑）</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">scrollMouse</span>(<span class=\"params\">event</span>) &#123;</span><br><span class=\"line\">  event.<span class=\"title function_\">preventDefault</span>();</span><br><span class=\"line\">  <span class=\"keyword\">let</span> delta = <span class=\"title function_\">getWheelDelta</span>(event);</span><br><span class=\"line\">  <span class=\"keyword\">let</span> locationNow = <span class=\"variable language_\">document</span>.<span class=\"property\">documentElement</span>.<span class=\"property\">scrollTop</span>;</span><br><span class=\"line\">  <span class=\"comment\">// delta &lt; 0，鼠标往前滚动，页面向下滚动</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (delta &lt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">    <span class=\"title function_\">goDown</span>(locationNow);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"title function_\">goUp</span>(locationNow);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">goDown</span>(<span class=\"params\">locationNow</span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">window</span>.<span class=\"title function_\">scrollTo</span>(<span class=\"number\">0</span>, locationNow + <span class=\"number\">80</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">goUp</span>(<span class=\"params\">locationNow</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (locationNow &gt; <span class=\"number\">80</span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">window</span>.<span class=\"title function_\">scrollTo</span>(<span class=\"number\">0</span>, locationNow - <span class=\"number\">80</span>);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">window</span>.<span class=\"title function_\">scrollTo</span>(<span class=\"number\">0</span>, <span class=\"number\">0</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 鼠标滚轮监听，火狐鼠标滚动事件不同其他</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (navigator.<span class=\"property\">userAgent</span>.<span class=\"title function_\">toLowerCase</span>().<span class=\"title function_\">indexOf</span>(<span class=\"string\">&quot;firefox&quot;</span>) === -<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">document</span>.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&quot;mousewheel&quot;</span>, scrollMouse, &#123; <span class=\"attr\">passive</span>: <span class=\"literal\">false</span> &#125;);</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">document</span>.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&quot;DOMMouseScroll&quot;</span>, scrollMouse);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"实现效果\"><a href=\"#实现效果\" class=\"headerlink\" title=\"实现效果\"></a>实现效果</h3><p>每次滚动都下滑80，这样，就可以比较方便的去修正不同元素的距离。</p>\n<p>修复前：</p>\n<p><img src=\"https://limengtupian.oss-cn-beijing.aliyuncs.com/%E4%BE%A7%E8%BE%B9%E6%A0%8F%E9%97%AA%E7%83%81/%E4%BF%AE%E5%A4%8D%E5%89%8D.gif\"></p>\n<p>修复后：</p>\n<p><img src=\"https://limengtupian.oss-cn-beijing.aliyuncs.com/%E4%BE%A7%E8%BE%B9%E6%A0%8F%E9%97%AA%E7%83%81/%E4%BF%AE%E5%A4%8D%E5%90%8E.gif\"></p>\n<h2 id=\"通过local-storage模拟了注册登录机制\"><a href=\"#通过local-storage模拟了注册登录机制\" class=\"headerlink\" title=\"通过local storage模拟了注册登录机制\"></a>通过local storage模拟了注册登录机制</h2><p>前后端分离模式下，网站的注册、登录机制实现，对于前端来说，主要考虑两个点：</p>\n<ol>\n<li>把用户的账号校验然后发送后端申请验证码</li>\n<li>提交用户的账号和验证码去后端校验，然后后端返回状态码（token）</li>\n</ol>\n<p>以上两点可以通过localstorage去简单模拟的，记录如下：</p>\n<!-- more -->\n\n<h3 id=\"注册登录逻辑流程\"><a href=\"#注册登录逻辑流程\" class=\"headerlink\" title=\"注册登录逻辑流程\"></a>注册登录逻辑流程</h3><p>需要实现的注册功能如下：</p>\n<ol>\n<li>校验手机号码是否正确<ol>\n<li>正确：显示验证码（直接页面上显示一个验证码）</li>\n<li>错误：手机号码下方提示“手机号码错误”</li>\n</ol>\n</li>\n<li>校验手机号码和验证码是否正确<ol>\n<li>正确：信息入库，添加如local storage，跳转至登录页面</li>\n<li>错误：显示验证码错误或者手机号码已经注册</li>\n</ol>\n</li>\n</ol>\n<p>实现登录功能如下：</p>\n<ol>\n<li>校验手机号码是否正确<ol>\n<li>正确：显示验证码（直接页面上显示一个验证码）</li>\n<li>错误：手机号码下方提示“手机号码错误”</li>\n</ol>\n</li>\n<li>校验手机号码和验证码是否正确<ol>\n<li>正确：添加登录状态（token），跳转至个人中心页面</li>\n<li>错误： 显示验证码错误或者手机没有注册</li>\n</ol>\n</li>\n</ol>\n<p>token是一个对象，里面包含了登陆后的信息。如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> passUsrInfo = &#123;</span><br><span class=\"line\">  <span class=\"attr\">usrname</span>: <span class=\"variable language_\">this</span>.<span class=\"property\">items1</span>[<span class=\"number\">0</span>].<span class=\"property\">value</span>,</span><br><span class=\"line\">  <span class=\"attr\">token</span>: <span class=\"string\">&quot;pass&quot;</span>,</span><br><span class=\"line\">  <span class=\"attr\">time</span>: <span class=\"title class_\">Date</span>.<span class=\"title function_\">now</span>(),</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ol>\n<li>usrname：用户名</li>\n<li>token：登录状态</li>\n<li>time：登录时间</li>\n</ol>\n<p>可以通过判断当前时间与time的差值去决定是否还再登录状态，我这里设置时10分钟。</p>\n<h3 id=\"实现代码-2\"><a href=\"#实现代码-2\" class=\"headerlink\" title=\"实现代码\"></a>实现代码</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">toLogin</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">   <span class=\"keyword\">if</span> (<span class=\"variable language_\">this</span>.<span class=\"property\">common</span>.<span class=\"title function_\">phoneNumber</span>(<span class=\"number\">0</span>, <span class=\"variable language_\">this</span>.<span class=\"property\">items1</span>[<span class=\"number\">0</span>].<span class=\"property\">value</span>)) &#123;</span><br><span class=\"line\">     <span class=\"variable language_\">this</span>.<span class=\"property\">items1</span>[<span class=\"number\">0</span>].<span class=\"property\">showerr</span> = <span class=\"literal\">false</span>;</span><br><span class=\"line\">     <span class=\"variable language_\">this</span>.<span class=\"property\">items1</span>[<span class=\"number\">0</span>].<span class=\"property\">err</span> = <span class=\"string\">&quot;手机号码有误&quot;</span>;</span><br><span class=\"line\">     <span class=\"keyword\">if</span> (<span class=\"variable language_\">this</span>.<span class=\"property\">items1</span>[<span class=\"number\">1</span>].<span class=\"property\">value</span> == <span class=\"number\">6666</span>) &#123;</span><br><span class=\"line\">       <span class=\"variable language_\">this</span>.<span class=\"property\">items1</span>[<span class=\"number\">1</span>].<span class=\"property\">showerr</span> = <span class=\"literal\">false</span>;</span><br><span class=\"line\">       <span class=\"keyword\">let</span> tem = <span class=\"title class_\">JSON</span>.<span class=\"title function_\">parse</span>(<span class=\"variable language_\">localStorage</span>.<span class=\"title function_\">getItem</span>(<span class=\"string\">&quot;usrname&quot;</span>)) == <span class=\"literal\">null</span> ? [] : <span class=\"title class_\">JSON</span>.<span class=\"title function_\">parse</span>(<span class=\"variable language_\">localStorage</span>.<span class=\"title function_\">getItem</span>(<span class=\"string\">&quot;usrname&quot;</span>));</span><br><span class=\"line\">       <span class=\"keyword\">let</span> usrInfo = <span class=\"variable language_\">this</span>.<span class=\"property\">items1</span>[<span class=\"number\">0</span>].<span class=\"property\">value</span>;</span><br><span class=\"line\">       <span class=\"keyword\">if</span> (tem.<span class=\"property\">length</span> == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">         tem.<span class=\"title function_\">push</span>(&#123; <span class=\"attr\">usrname</span>: usrInfo &#125;);</span><br><span class=\"line\">         <span class=\"variable language_\">window</span>.<span class=\"property\">localStorage</span>.<span class=\"title function_\">setItem</span>(<span class=\"string\">&quot;usrname&quot;</span>, <span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(tem));</span><br><span class=\"line\">         <span class=\"variable language_\">this</span>.<span class=\"property\">registerOK</span> = <span class=\"literal\">true</span>;</span><br><span class=\"line\">         <span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">           <span class=\"variable language_\">this</span>.<span class=\"property\">$router</span>.<span class=\"title function_\">push</span>(<span class=\"string\">&quot;/login&quot;</span>);</span><br><span class=\"line\">         &#125;, <span class=\"number\">3000</span>);</span><br><span class=\"line\">       &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">         <span class=\"keyword\">let</span> index = tem.<span class=\"title function_\">findIndex</span>(<span class=\"function\">(<span class=\"params\">x</span>) =&gt;</span> x.<span class=\"property\">usrname</span> == usrInfo);</span><br><span class=\"line\">         <span class=\"keyword\">if</span> (index == -<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">           tem.<span class=\"title function_\">push</span>(&#123; <span class=\"attr\">usrname</span>: usrInfo &#125;);</span><br><span class=\"line\">           <span class=\"variable language_\">window</span>.<span class=\"property\">localStorage</span>.<span class=\"title function_\">setItem</span>(<span class=\"string\">&quot;usrname&quot;</span>, <span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(tem));</span><br><span class=\"line\">           <span class=\"variable language_\">this</span>.<span class=\"property\">registerOK</span> = <span class=\"literal\">true</span>;</span><br><span class=\"line\">           <span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">             <span class=\"variable language_\">this</span>.<span class=\"property\">$router</span>.<span class=\"title function_\">push</span>(<span class=\"string\">&quot;/login&quot;</span>);</span><br><span class=\"line\">           &#125;, <span class=\"number\">3000</span>);</span><br><span class=\"line\">         &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">           <span class=\"variable language_\">this</span>.<span class=\"property\">items1</span>[<span class=\"number\">0</span>].<span class=\"property\">err</span> = <span class=\"string\">&quot;该手机号码已经被注册&quot;</span>;</span><br><span class=\"line\">           <span class=\"variable language_\">this</span>.<span class=\"property\">items1</span>[<span class=\"number\">0</span>].<span class=\"property\">showerr</span> = <span class=\"literal\">true</span>;</span><br><span class=\"line\">         &#125;</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">     &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">       <span class=\"variable language_\">this</span>.<span class=\"property\">items1</span>[<span class=\"number\">1</span>].<span class=\"property\">showerr</span> = <span class=\"literal\">true</span>;</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">   &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">     <span class=\"variable language_\">this</span>.<span class=\"property\">items1</span>[<span class=\"number\">0</span>].<span class=\"property\">showerr</span> = <span class=\"literal\">true</span>;</span><br><span class=\"line\">     <span class=\"variable language_\">this</span>.<span class=\"property\">items1</span>[<span class=\"number\">0</span>].<span class=\"property\">err</span> = <span class=\"string\">&quot;手机号码有误&quot;</span>;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure>\n\n<p>以上是登录时，判断手机号码及验证码的逻辑。说明：</p>\n<ol>\n<li><p>this.common.phoneNumber(0, this.items1[0].value)</p>\n<p>这个是一个公共方法，用正则表达式判断手机号码是否正确</p>\n</li>\n<li><p>let tem = JSON.parse(localStorage.getItem(“usrname”)) == null ? [] : JSON.parse(localStorage.getItem(“usrname”))</p>\n<p>这个是获取到本地存储中的注册手机号码，模拟的是数据库中的注册用户信息，去判断手机号码是否注册</p>\n</li>\n</ol>\n<h3 id=\"根据token去显示页面\"><a href=\"#根据token去显示页面\" class=\"headerlink\" title=\"根据token去显示页面\"></a>根据token去显示页面</h3><p>可以再页面加载时候去判断下localstorage内有没有对应的信息，从而去显示不同的页面：</p>\n<p>实现代码：</p>\n<p>首页导航栏：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;showRegLogin&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;col-xs-2 col-xs-offset-7 navbarRight&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">router-link</span> <span class=\"attr\">tag</span>=<span class=\"string\">&quot;a&quot;</span> <span class=\"attr\">to</span>=<span class=\"string\">&quot;/login&quot;</span>&gt;</span>Login<span class=\"tag\">&lt;/<span class=\"name\">router-link</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">router-link</span> <span class=\"attr\">tag</span>=<span class=\"string\">&quot;a&quot;</span> <span class=\"attr\">to</span>=<span class=\"string\">&quot;/register&quot;</span>&gt;</span>Register<span class=\"tag\">&lt;/<span class=\"name\">router-link</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">v-else</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;col-xs-2 col-xs-offset-7 navbarRight&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">router-link</span> <span class=\"attr\">tag</span>=<span class=\"string\">&quot;a&quot;</span> <span class=\"attr\">to</span>=<span class=\"string\">&quot;/center&quot;</span>&gt;</span>Center<span class=\"tag\">&lt;/<span class=\"name\">router-link</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">router-link</span> <span class=\"attr\">tag</span>=<span class=\"string\">&quot;a&quot;</span> <span class=\"attr\">to</span>=<span class=\"string\">&quot;/register&quot;</span>&gt;</span>Register<span class=\"tag\">&lt;/<span class=\"name\">router-link</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">mounted</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">this</span>.<span class=\"property\">showRegLogin</span> = !<span class=\"variable language_\">this</span>.<span class=\"property\">common</span>.<span class=\"title function_\">judgeLogin</span>()</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>购物车栏：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;showList&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;carLists&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;movieLists&quot;</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;name&quot;</span>&gt;</span>电影名称<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;acount&quot;</span>&gt;</span>数量<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">v-for</span>=<span class=\"string\">&quot;(item, index) in carMovie&quot;</span> <span class=\"attr\">:key</span>=<span class=\"string\">&quot;index&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;movieLists&quot;</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;name&quot;</span>&gt;</span>&#123;&#123; item.title &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;acount&quot;</span>&gt;</span>&#123;&#123; item.account &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">v-else</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;carLists&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;showLogin&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">      还没有登录呢，点击</span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">router-link</span> <span class=\"attr\">to</span>=<span class=\"string\">&quot;/login&quot;</span> <span class=\"attr\">tag</span>=<span class=\"string\">&quot;span&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;color:red;cursor:pointer;&quot;</span>&gt;</span>登录<span class=\"tag\">&lt;/<span class=\"name\">router-link</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">toJudge</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">this</span>.<span class=\"property\">showUp</span> = <span class=\"literal\">false</span>;</span><br><span class=\"line\">  <span class=\"variable language_\">this</span>.<span class=\"property\">isLogin</span> = <span class=\"title class_\">JSON</span>.<span class=\"title function_\">parse</span>(<span class=\"variable language_\">window</span>.<span class=\"property\">localStorage</span>.<span class=\"title function_\">getItem</span>(<span class=\"string\">&quot;passUsrInfo&quot;</span>))</span><br><span class=\"line\">    .<span class=\"property\">token</span></span><br><span class=\"line\">    ? <span class=\"title class_\">JSON</span>.<span class=\"title function_\">parse</span>(<span class=\"variable language_\">window</span>.<span class=\"property\">localStorage</span>.<span class=\"title function_\">getItem</span>(<span class=\"string\">&quot;passUsrInfo&quot;</span>)).<span class=\"property\">token</span></span><br><span class=\"line\">    : <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">  <span class=\"comment\">//false没有登录或者登录失效，true已经登录并且失效时间内</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"variable language_\">this</span>.<span class=\"property\">isLogin</span> &amp;&amp; <span class=\"variable language_\">this</span>.<span class=\"property\">common</span>.<span class=\"title function_\">judgeLogin</span>()) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">showList</span> = <span class=\"literal\">true</span>;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">movieAcountLoading</span> = <span class=\"literal\">true</span>;</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">showList</span> = <span class=\"literal\">false</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>效果如下：</p>\n<p>未登录：</p>\n<p><img src=\"https://limengtupian.oss-cn-beijing.aliyuncs.com/%E6%B3%A8%E5%86%8C%E7%99%BB%E5%BD%95%E5%8A%9F%E8%83%BD/1.png\"></p>\n<p><img src=\"https://limengtupian.oss-cn-beijing.aliyuncs.com/%E6%B3%A8%E5%86%8C%E7%99%BB%E5%BD%95%E5%8A%9F%E8%83%BD/2.png\"></p>\n<p>已经登录：</p>\n<p><img src=\"https://limengtupian.oss-cn-beijing.aliyuncs.com/%E6%B3%A8%E5%86%8C%E7%99%BB%E5%BD%95%E5%8A%9F%E8%83%BD/3.png\"></p>\n<p><img src=\"https://limengtupian.oss-cn-beijing.aliyuncs.com/%E6%B3%A8%E5%86%8C%E7%99%BB%E5%BD%95%E5%8A%9F%E8%83%BD/4.png\"></p>\n<h2 id=\"Vue中引入图片失效\"><a href=\"#Vue中引入图片失效\" class=\"headerlink\" title=\"Vue中引入图片失效\"></a>Vue中引入图片失效</h2><h2 id=\"引入图片\"><a href=\"#引入图片\" class=\"headerlink\" title=\"引入图片\"></a>引入图片</h2><p>自己本地开发引入图片可以选择相对路径或者绝对路径，比如：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">:src</span>=<span class=\"string\">&quot;../images/1.png&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>这样是可以在网页中显示的，或者将图片放在网络存储中，引用网络地址。</p>\n<p>但是，在使用Vue进行开发的时候，有遇到一个问题：本地引入图片生效，但是使用Js去替换图片的时候，使用相对路径，就不能正确的生成图片，查阅资料发现了需要更换引入方式。</p>\n<!-- more -->\n\n<h3 id=\"想要实现的样式\"><a href=\"#想要实现的样式\" class=\"headerlink\" title=\"想要实现的样式\"></a>想要实现的样式</h3><p>密码的显示和隐藏样式：</p>\n<p><strong>显示：</strong></p>\n<p><img src=\"https://limengtupian.oss-cn-beijing.aliyuncs.com/open.png\" alt=\"open\"></p>\n<p><strong>隐藏:</strong></p>\n<p><img src=\"https://limengtupian.oss-cn-beijing.aliyuncs.com/close.png\" alt=\"close\"></p>\n<h2 id=\"在Vue中引入图片\"><a href=\"#在Vue中引入图片\" class=\"headerlink\" title=\"在Vue中引入图片\"></a>在Vue中引入图片</h2><ol>\n<li><p>直接使用相对路径</p>\n<p>直接使用相对路径生成的html里面，可以发现在引用的图片地址处，会被加上一串唯一编码。</p>\n<p>如果用JS去修改img的src，生成的图片地址里面是没有编码的，所以不会正确的加载地址。</p>\n</li>\n<li><p>正确的引入</p>\n<ol>\n<li><p><strong>html</strong></p>\n<p>img直接引入地址，需要在src上加上v-bind，也就是冒号：</p>\n<p><img src=\"https://limengtupian.oss-cn-beijing.aliyuncs.com/html.png\" alt=\"html\"></p>\n</li>\n<li><p><strong>data</strong></p>\n<p>data对应的应该有该名称的对应地址属性</p>\n<p><img src=\"https://limengtupian.oss-cn-beijing.aliyuncs.com/icon.png\" alt=\"data\"></p>\n</li>\n<li><p><strong>methds</strong></p>\n<p>直接在方法里面去让src的属性等于对应的src名称</p>\n<p><img src=\"https://limengtupian.oss-cn-beijing.aliyuncs.com/function.png\" alt=\"methds\"></p>\n</li>\n</ol>\n</li>\n</ol>\n<p>这样，可以正确的显示图片，从F12解析可以看到，图片的地址都是已经加上了编码。</p>\n","site":{"data":{}},"excerpt":"<meta name=\"referrer\" content=\"no-referrer\"/>\n\n<h2 id=\"记录网站功能\"><a href=\"#记录网站功能\" class=\"headerlink\" title=\"记录网站功能\"></a>记录网站功能</h2><h3 id=\"网站登录页面和注册页面\"><a href=\"#网站登录页面和注册页面\" class=\"headerlink\" title=\"网站登录页面和注册页面\"></a>网站登录页面和注册页面</h3><p>登录页面和注册页面都做了一个css效果，中间有遇到些问题，记录</p>\n<p>点击后会让input框中的文字位置上浮，实现动态的效果，如下：</p>\n<p><img src=\"https://limengtupian.oss-cn-beijing.aliyuncs.com/%E7%99%BB%E5%BD%95/%E7%99%BB%E5%BD%954.gif\"></p>","more":"<h3 id=\"实现代码\"><a href=\"#实现代码\" class=\"headerlink\" title=\"实现代码\"></a>实现代码</h3><p>实现效果是很简单的，代码如下：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;accAndPass&quot;</span> <span class=\"attr\">v-for</span>=<span class=\"string\">&quot;(item,index) in items1&quot;</span> <span class=\"attr\">:key</span>=<span class=\"string\">&quot;index&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>&gt;</span>&#123;&#123;item.text&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;inputValue&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> @<span class=\"attr\">focus</span>=<span class=\"string\">&quot;turnUp(index)&quot;</span> @<span class=\"attr\">blur</span>=<span class=\"string\">&quot;turnOff(index)&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">:src</span>=<span class=\"string\">&quot;closeIcon&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&#x27;eyes&#x27;</span> @<span class=\"attr\">click</span>=<span class=\"string\">&#x27;showPassWord&#x27;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>当input聚焦的时候添加一个class，失焦的时候去掉这个class即可：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">turnUp</span>(<span class=\"params\">index</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> spans = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementsByTagName</span>(<span class=\"string\">&quot;span&quot;</span>);</span><br><span class=\"line\">  <span class=\"keyword\">var</span> <span class=\"title class_\">Bottomsoild</span> = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementsByClassName</span>(<span class=\"string\">&quot;accAndPass&quot;</span>);</span><br><span class=\"line\">  spans[index].<span class=\"property\">classList</span>.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;showup&quot;</span>);</span><br><span class=\"line\">  <span class=\"title class_\">Bottomsoild</span>[index].<span class=\"property\">classList</span>.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;bottom&quot;</span>);</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\"><span class=\"title function_\">turnOff</span>(<span class=\"params\">index</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> <span class=\"title class_\">Bottomsoild</span> = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementsByClassName</span>(<span class=\"string\">&quot;accAndPass&quot;</span>);</span><br><span class=\"line\">  <span class=\"keyword\">var</span> spans = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementsByTagName</span>(<span class=\"string\">&quot;span&quot;</span>);</span><br><span class=\"line\">  <span class=\"keyword\">var</span> input_Value = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementsByName</span>(<span class=\"string\">&quot;inputValue&quot;</span>);</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (input_Value[index].<span class=\"property\">value</span> !== <span class=\"string\">&quot;&quot;</span>) &#123;</span><br><span class=\"line\">    spans[index].<span class=\"property\">classList</span>.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;showup&quot;</span>);</span><br><span class=\"line\">    <span class=\"title class_\">Bottomsoild</span>[index].<span class=\"property\">classList</span>.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;bottom&quot;</span>);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    spans[index].<span class=\"property\">className</span> = <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">    <span class=\"title class_\">Bottomsoild</span>[index].<span class=\"property\">classList</span>.<span class=\"title function_\">remove</span>(<span class=\"string\">&quot;bottom&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n\n<p>这个主要是css的实现可以关注下，有添加了平滑移动的动画</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.showup</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">top</span>: -<span class=\"number\">35%</span> <span class=\"meta\">!important</span>;</span><br><span class=\"line\">  <span class=\"attribute\">left</span>: <span class=\"number\">0</span> <span class=\"meta\">!important</span>;</span><br><span class=\"line\">  <span class=\"attribute\">transition</span>: <span class=\"number\">0.5s</span>;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: black <span class=\"meta\">!important</span>;</span><br><span class=\"line\">  <span class=\"attribute\">font-weight</span>: <span class=\"number\">600</span>;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">20px</span> <span class=\"meta\">!important</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.bottom</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">border-bottom</span>: <span class=\"number\">2px</span> solid <span class=\"number\">#34495e</span> <span class=\"meta\">!important</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>要注意的是，input框内的登录这个两个字，会占用input的空间，所以需要做处理：</p>\n<p>input框的背景颜色需要改成透明色，再改变登录这个两个字的z-index权重，将input权重高于这两个文字，就可以覆盖这两个文字，并且可以在透明背景下正常显示。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.accAndPass</span> <span class=\"selector-tag\">input</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">50px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">outline</span>: none;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">25px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border</span>: none;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: transparent;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: relative;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.accAndPass</span> &gt; <span class=\"selector-tag\">span</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">  <span class=\"attribute\">top</span>: <span class=\"number\">50%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">left</span>: <span class=\"number\">3%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">transform</span>: <span class=\"built_in\">translateY</span>(-<span class=\"number\">50%</span>);</span><br><span class=\"line\">  <span class=\"attribute\">z-index</span>: -<span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"attribute\">transition</span>: <span class=\"number\">0.5s</span>;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">18px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: lightgray;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>通过按钮隐藏或者显示密码</strong></p>\n<p>主要是更改input内的type，让其在‘text’和‘password’之间去转换,引入图片的时候，如果找不到地址，可以在地址前添加require。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">showPassWord</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> inputs = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementsByName</span>(<span class=\"string\">&quot;inputValue&quot;</span>);</span><br><span class=\"line\">  <span class=\"keyword\">var</span> eyes = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementsByName</span>(<span class=\"string\">&#x27;eyes&#x27;</span>);</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"variable language_\">this</span>.<span class=\"property\">showEyes</span> === <span class=\"literal\">false</span>) &#123;</span><br><span class=\"line\">  inputs[<span class=\"number\">1</span>].<span class=\"property\">type</span> = <span class=\"string\">&#x27;text&#x27;</span>;</span><br><span class=\"line\">  eyes[<span class=\"number\">1</span>].<span class=\"property\">src</span> = <span class=\"variable language_\">this</span>.<span class=\"property\">openIcon</span>;</span><br><span class=\"line\">  &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">  inputs[<span class=\"number\">1</span>].<span class=\"property\">type</span> = <span class=\"string\">&#x27;password&#x27;</span>;</span><br><span class=\"line\">  eyes[<span class=\"number\">1</span>].<span class=\"property\">src</span> = <span class=\"variable language_\">this</span>.<span class=\"property\">closeIcon</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"variable language_\">this</span>.<span class=\"property\">showEyes</span> = !<span class=\"variable language_\">this</span>.<span class=\"property\">showEyes</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">closeIcon: require(&quot;../assets/close.png&quot;),</span><br><span class=\"line\">openIcon: require(&quot;../assets/open.png&quot;),</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"记录网站功能-电影分类\"><a href=\"#记录网站功能-电影分类\" class=\"headerlink\" title=\"记录网站功能-电影分类\"></a>记录网站功能-电影分类</h2><h3 id=\"电影分类\"><a href=\"#电影分类\" class=\"headerlink\" title=\"电影分类\"></a>电影分类</h3><p>通过axios获得到豆瓣top90部电影后，想要在左侧添加一个分类的侧边栏，所以需要对得到的电影进行分类。</p>\n<p>暂时没有找到分类的api接口，只有自己通过js去循环分类出一个新的数组，新数组形式如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">movieGenres.<span class=\"title function_\">push</span>(&#123;</span><br><span class=\"line\">  <span class=\"attr\">index</span>: nowGenres,</span><br><span class=\"line\">  <span class=\"attr\">list</span>: [movieLists[i]]</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>index:电影的类别（比如动作，冒险，剧情等等），</p>\n<p>list：对应类别中的所有电影。</p>\n<p>movieLists[i]：初始通过axios得到的电影详情信息（初始对象）</p>\n<!-- more -->\n\n<h3 id=\"实现代码-1\"><a href=\"#实现代码-1\" class=\"headerlink\" title=\"实现代码\"></a>实现代码</h3><ul>\n<li><p>实现逻辑</p>\n<ol>\n<li>获取到全部电影对象</li>\n<li><ol>\n<li>设定一个空数组用来存放分类后的全部电影：movieGenres[]。</li>\n<li>循环全部对象，判断每一部电影的类别是否存在于新数组中，</li>\n<li>存在则，直接添加到对应的类别数组LIst中去，</li>\n<li>不存在，则将对应类别直接添加到新数组中，</li>\n</ol>\n</li>\n</ol>\n</li>\n<li><p>实现代码</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">formMovieG</span>(<span class=\"params\">movieLists</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> movieGenres = [];</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; movieLists.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> nowGenres = movieLists[i].<span class=\"property\">genres</span>[<span class=\"number\">0</span>];</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"title function_\">toJudge</span>(nowGenres)) &#123;</span><br><span class=\"line\">      movieGenres.<span class=\"title function_\">push</span>(&#123;</span><br><span class=\"line\">        <span class=\"attr\">index</span>: nowGenres,</span><br><span class=\"line\">        <span class=\"attr\">list</span>: [movieLists[i]]</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = <span class=\"number\">0</span>; j &lt; movieGenres.<span class=\"property\">length</span>; j++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (movieGenres[j].<span class=\"property\">index</span> == nowGenres)</span><br><span class=\"line\">          movieGenres[j].<span class=\"property\">list</span>.<span class=\"title function_\">push</span>(movieLists[i]);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">function</span> <span class=\"title function_\">toJudge</span>(<span class=\"params\">nowGenres</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; movieGenres.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (movieGenres[i].<span class=\"property\">index</span> == nowGenres) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> movieGenres;</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n\n<p>movieLists:全部电影（90部没有分类）</p>\n<p>toJudge（）：判断函数，判断是否存在对应类别 ，存在则返回false，不存在则返回true；</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">this</span>.<span class=\"property\">movieGenres</span> = <span class=\"variable language_\">this</span>.<span class=\"title function_\">formMovieG</span>(movieLists);</span><br></pre></td></tr></table></figure>\n\n<p>获取后赋值。</p>\n</li>\n<li><p><em>注意点</em></p>\n<p>新数组的形式：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">movieGenres.push(&#123;</span><br><span class=\"line\">  index: nowGenres,</span><br><span class=\"line\">  *list: [movieLists[i]]*</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>其中list应当为一个数组的形式，因为是多个对象在其中，后续判断类别相同后，需要用push的方法推到list数组中去。</p>\n</li>\n</ul>\n<h2 id=\"记录网站功能-动态生成li\"><a href=\"#记录网站功能-动态生成li\" class=\"headerlink\" title=\"记录网站功能-动态生成li\"></a>记录网站功能-动态生成li</h2><h3 id=\"动态生成元素\"><a href=\"#动态生成元素\" class=\"headerlink\" title=\"动态生成元素\"></a>动态生成元素</h3><p>当获取到电影之后，一页只能显示9个电影，之后的电影则需要通过下方的分页li去显示，不同的种类的电影数量是不一致的，所以对应的下方显示数量li页不一致，所以需要根据电影数量动态生成li。</p>\n<p>全部电影：</p>\n<p><img src=\"https://limengtupian.oss-cn-beijing.aliyuncs.com/%E5%8A%A8%E6%80%81/%E5%8A%A8%E6%80%811.png\"></p>\n<p>局部电影：</p>\n<p><img src=\"https://limengtupian.oss-cn-beijing.aliyuncs.com/%E5%8A%A8%E6%80%81/%E5%8A%A8%E6%80%812.png\"></p>\n<!-- more -->\n\n<h3 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h3><ul>\n<li><p>逻辑</p>\n<ol>\n<li>通过判断当前类目一共有多少电影去生成对应个数的下方li索引，</li>\n<li>切换前，应当先清除所有的li，然后再生成新的li。</li>\n<li>给每个li绑定一个点击事件，当点击时候，当前显示页面的数组替换成对应序号的数组，</li>\n</ol>\n</li>\n<li><p>代码</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 生成下方li列表</span></span><br><span class=\"line\"><span class=\"title function_\">createLiLists</span>(<span class=\"params\">Lilength</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> that = <span class=\"variable language_\">this</span>; <span class=\"comment\">//内部函数中调用函数，用that存储this指向，再调用，that.xxx</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> indexlists = <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&quot;#indexLists&quot;</span>);</span><br><span class=\"line\">  <span class=\"keyword\">var</span> showindex = <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&quot;.showindex&quot;</span>);</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt; <span class=\"title class_\">Lilength</span>; i++) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> node = <span class=\"variable language_\">document</span>.<span class=\"title function_\">createElement</span>(<span class=\"string\">&quot;li&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> textIndex = <span class=\"variable language_\">document</span>.<span class=\"title function_\">createTextNode</span>(i);</span><br><span class=\"line\">    node.<span class=\"title function_\">appendChild</span>(textIndex);</span><br><span class=\"line\">    indexlists.<span class=\"title function_\">appendChild</span>(node);</span><br><span class=\"line\">    node.<span class=\"property\">className</span> = <span class=\"string\">&quot;index&quot;</span>;</span><br><span class=\"line\">    node.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&quot;click&quot;</span>, <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">      that.<span class=\"title function_\">gotoIndex</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">innerText</span>, showindex); <span class=\"comment\">// that调用</span></span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"variable language_\">this</span>.<span class=\"property\">liIndexList</span> = <span class=\"title class_\">Lilength</span>;</span><br><span class=\"line\">  showindex.<span class=\"property\">innerText</span> = <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 清除li</span></span><br><span class=\"line\"><span class=\"title function_\">clearLiLists</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// this.liIndexList = Lilength;</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> indexlists = <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&quot;#indexLists&quot;</span>);</span><br><span class=\"line\">  <span class=\"keyword\">var</span> liS = indexlists.<span class=\"title function_\">querySelectorAll</span>(<span class=\"string\">&quot;.index&quot;</span>);</span><br><span class=\"line\">  <span class=\"comment\">// 清除lis，排他</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = liS.<span class=\"property\">length</span> - <span class=\"number\">1</span>; i &gt;= <span class=\"number\">0</span>; i--) &#123;</span><br><span class=\"line\">    indexlists.<span class=\"title function_\">removeChild</span>(liS[i]);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//点击事件</span></span><br><span class=\"line\"><span class=\"title function_\">gotoIndex</span>(<span class=\"params\">e, showindex</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> index = <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelectorAll</span>(<span class=\"string\">&quot;.index&quot;</span>);</span><br><span class=\"line\">  <span class=\"comment\">// var showindex = document.querySelector(&quot;.showindex&quot;);</span></span><br><span class=\"line\">  <span class=\"variable language_\">this</span>.<span class=\"property\">isLoading</span> = <span class=\"literal\">true</span>;</span><br><span class=\"line\">  <span class=\"comment\">//单页面应用，定时器并不会自动关闭，需要手动清除</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> out = <span class=\"built_in\">setInterval</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"variable language_\">this</span>.<span class=\"property\">allMovie</span>.<span class=\"property\">length</span> == <span class=\"number\">90</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (<span class=\"variable language_\">this</span>.<span class=\"property\">liIndexList</span> == <span class=\"number\">11</span>) &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">items</span> = <span class=\"variable language_\">this</span>.<span class=\"property\">allMovie</span>.<span class=\"title function_\">slice</span>(</span><br><span class=\"line\">          <span class=\"built_in\">parseInt</span>(e) * <span class=\"number\">9</span> - <span class=\"number\">9</span>,</span><br><span class=\"line\">          <span class=\"built_in\">parseInt</span>(e) * <span class=\"number\">9</span>,</span><br><span class=\"line\">          (<span class=\"variable language_\">this</span>.<span class=\"property\">isLoading</span> = <span class=\"literal\">false</span>)</span><br><span class=\"line\">        );</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">items</span> = <span class=\"variable language_\">this</span>.<span class=\"property\">movieGenres_index_list</span>.<span class=\"title function_\">slice</span>(</span><br><span class=\"line\">          <span class=\"built_in\">parseInt</span>(e) * <span class=\"number\">9</span> - <span class=\"number\">9</span>,</span><br><span class=\"line\">          <span class=\"built_in\">parseInt</span>(e) * <span class=\"number\">9</span>,</span><br><span class=\"line\">          (<span class=\"variable language_\">this</span>.<span class=\"property\">isLoading</span> = <span class=\"literal\">false</span>)</span><br><span class=\"line\">        );</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"built_in\">clearInterval</span>(out);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;, <span class=\"number\">100</span>);</span><br><span class=\"line\">  showindex.<span class=\"property\">innerText</span> = e;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; index.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">    index[i].<span class=\"property\">classList</span>.<span class=\"title function_\">remove</span>(<span class=\"string\">&quot;light&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  index[e - <span class=\"number\">1</span>].<span class=\"property\">classList</span>.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;light&quot;</span>);</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure></li>\n<li><p>注意点</p>\n<ol>\n<li><p>生成元素后需要添加元素，才能生效</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> node = <span class=\"variable language_\">document</span>.<span class=\"title function_\">createElement</span>(<span class=\"string\">&quot;li&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> textIndex = <span class=\"variable language_\">document</span>.<span class=\"title function_\">createTextNode</span>(i);</span><br><span class=\"line\">node.<span class=\"title function_\">appendChild</span>(textIndex);</span><br><span class=\"line\">indexlists.<span class=\"title function_\">appendChild</span>(node);</span><br></pre></td></tr></table></figure>\n\n<p>这里生成了li和li内部的数字i，然后需要append到父元素indexlists上，才能生效。</p>\n</li>\n<li><p>函数内部调用函数添加事件，使用了that</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"keyword\">let</span> that = <span class=\"variable language_\">this</span>; <span class=\"comment\">//内部函数中调用函数，用that存储this指向，再调用，that.xxx</span></span><br><span class=\"line\"> node.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&quot;click&quot;</span>, <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  that.<span class=\"title function_\">gotoIndex</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">innerText</span>, showindex); <span class=\"comment\">// that调用</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>addEventListener内使用其他函数gotoIndex，直接使用this.gotoIndex不生效，使用that生效。</p>\n</li>\n<li><p>写了一个定时器，判断是否将90部电影循环完毕，再执行绑定点击跳转事件，避免未加载完成90部电影点击无效。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> out = <span class=\"built_in\">setInterval</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"variable language_\">this</span>.<span class=\"property\">allMovie</span>.<span class=\"property\">length</span> == <span class=\"number\">90</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (<span class=\"variable language_\">this</span>.<span class=\"property\">liIndexList</span> == <span class=\"number\">11</span>) &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">items</span> = <span class=\"variable language_\">this</span>.<span class=\"property\">allMovie</span>.<span class=\"title function_\">slice</span>(</span><br><span class=\"line\">          <span class=\"built_in\">parseInt</span>(e) * <span class=\"number\">9</span> - <span class=\"number\">9</span>,</span><br><span class=\"line\">          <span class=\"built_in\">parseInt</span>(e) * <span class=\"number\">9</span>,</span><br><span class=\"line\">          (<span class=\"variable language_\">this</span>.<span class=\"property\">isLoading</span> = <span class=\"literal\">false</span>)</span><br><span class=\"line\">        );</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">items</span> = <span class=\"variable language_\">this</span>.<span class=\"property\">movieGenres_index_list</span>.<span class=\"title function_\">slice</span>(</span><br><span class=\"line\">          <span class=\"built_in\">parseInt</span>(e) * <span class=\"number\">9</span> - <span class=\"number\">9</span>,</span><br><span class=\"line\">          <span class=\"built_in\">parseInt</span>(e) * <span class=\"number\">9</span>,</span><br><span class=\"line\">          (<span class=\"variable language_\">this</span>.<span class=\"property\">isLoading</span> = <span class=\"literal\">false</span>)</span><br><span class=\"line\">        );</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"built_in\">clearInterval</span>(out);<span class=\"comment\">//单页面应用，定时器并不会自动关闭，需要手动清除</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;, <span class=\"number\">100</span>);</span><br></pre></td></tr></table></figure>\n\n<p>刚打开页面时候，去给li添加事件，会发现报错，因为此时，还没有获取到全部的电影，所以没有办法执行对应的数字跳转到对应的页面电影。</p>\n<p>所以执行一个定时循环函数去判断电影是不是获取完毕，获取完毕了，再执行添加函数。</p>\n<p>如果是有对应的api数据，则比较方便，只用获取到对应的index去后端请求。</p>\n</li>\n</ol>\n</li>\n</ul>\n<h2 id=\"记录网站功能-购物车\"><a href=\"#记录网站功能-购物车\" class=\"headerlink\" title=\"记录网站功能-购物车\"></a>记录网站功能-购物车</h2><h3 id=\"网站购物车功能\"><a href=\"#网站购物车功能\" class=\"headerlink\" title=\"网站购物车功能\"></a>网站购物车功能</h3><p>需要在两个页面（电影列表和电影详情）去添加一个购物车功能，而且通过购物车可以跳转到支付页面，支付页面中页可以直接修改购物车的电影数量。</p>\n<p>一般去多页面操作同一数据，都会使用一些工具，现在用的是vue-x 。</p>\n<p>传统方法主要是通过父子组件之间的传值来进行操作：</p>\n<ol>\n<li><p>父组件传给子组件的数据</p>\n<ol>\n<li><p>父组件需要在子组件标签处添加一个自定义标签</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Shop</span> <span class=\"attr\">:number</span>=<span class=\"string\">&quot;allMovie.length&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">Shop</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">Shop</span> <span class=\"keyword\">from</span> <span class=\"string\">&quot;@/components/shoppingCar.vue&quot;</span>;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">data</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">        <span class=\"attr\">allMovie</span>: []</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure></li>\n<li><p>子组件需要注册props</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h4</span>&gt;</span>影库共有&#123;&#123;number&#125;&#125;部电影<span class=\"tag\">&lt;/<span class=\"name\">h4</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">props</span>:[<span class=\"string\">&quot;number&quot;</span>],</span><br></pre></td></tr></table></figure></li>\n</ol>\n<p>这样，就可以通过标签的方法，子组件调用父组件处拿到number里的allmovie的length了。</p>\n<!-- more --></li>\n<li><p>子组件传给父组件的数据</p>\n<ol>\n<li><p>子组件需要给元素绑定一个事件，通过事件传参</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span>  @<span class=\"attr\">click</span>=<span class=\"string\">&quot;toParent()&quot;</span>&gt;</span>点击传值<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">methods</span>: &#123;</span><br><span class=\"line\">    <span class=\"title function_\">toParent</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">  <span class=\"variable language_\">this</span>.$emit(<span class=\"string\">&#x27;sendToFather&#x27;</span>,<span class=\"variable language_\">this</span>.<span class=\"property\">message</span>)</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">data</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">   <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">     <span class=\"attr\">message</span>:&#123;<span class=\"attr\">name</span>:<span class=\"string\">&quot;购物车&quot;</span>,<span class=\"attr\">color</span>:<span class=\"string\">&quot;red&quot;</span>&#125;,</span><br><span class=\"line\">   &#125;</span><br></pre></td></tr></table></figure></li>\n<li><p>父组件通过调用子组件定义的一个特定名字方法来获得子组件参数</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Shop</span>  @<span class=\"attr\">sendToFather</span>=<span class=\"string\">&quot;getChild&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">Shop</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">methods</span>: &#123;</span><br><span class=\"line\">  <span class=\"title function_\">getChild</span>(<span class=\"params\">data</span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(data);</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>控制台会输出子组件的message数组。</p>\n</li>\n</ol>\n</li>\n</ol>\n<h3 id=\"购物车功能vue-x实现\"><a href=\"#购物车功能vue-x实现\" class=\"headerlink\" title=\"购物车功能vue-x实现\"></a>购物车功能vue-x实现</h3><p>涉及到多个页面操作同一数据源，并且其中有页面不是父子关系。使用vue-x更加便捷</p>\n<ul>\n<li><p>逻辑</p>\n<p>vue-x的使用核心是两个，一个是state，另一个是mutations。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export default new Vuex.Store(&#123;</span><br><span class=\"line\">  state: &#123;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  mutations: &#123;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  actions: &#123;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  modules: &#123;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n\n\n<ol>\n<li>state是页面所需要调用的一个数据源，比如我要在购物车中展示的所有电影数组，这个数组可以在购物车和支付页面都显示出来</li>\n<li>mutations是其他页面提交新的数据过来的时候，需要对传递过来的数据做一些操作（比如要添加一些数量表示，要筛选出重复项等等），然后再赋值给state中的数据源，从而更新所有页面的数据。</li>\n</ol>\n</li>\n<li><p>代码 </p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Vuex</span>.<span class=\"title class_\">Store</span>(&#123;</span><br><span class=\"line\">  <span class=\"attr\">state</span>: &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 当前购物车的电影(经过了数量整理)</span></span><br><span class=\"line\">    <span class=\"attr\">carMovie</span>: [],</span><br><span class=\"line\">    <span class=\"comment\">//数量</span></span><br><span class=\"line\">    <span class=\"attr\">totalNumber</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">mutations</span>: &#123;</span><br><span class=\"line\">    <span class=\"title function_\">setShopCar</span>(<span class=\"params\">state, arg</span>) &#123;</span><br><span class=\"line\">      <span class=\"comment\">//处理数组中的重复项，将重复项剔除，并且account 加一</span></span><br><span class=\"line\">      <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; arg.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = <span class=\"number\">0</span>; j &lt; arg.<span class=\"property\">length</span>; j++) &#123;</span><br><span class=\"line\">          <span class=\"keyword\">if</span> (i != j &amp;&amp; arg[i].<span class=\"property\">object</span>.<span class=\"property\">title</span> == arg[j].<span class=\"property\">object</span>.<span class=\"property\">title</span>) &#123;</span><br><span class=\"line\">            arg.<span class=\"title function_\">splice</span>(j, <span class=\"number\">1</span>);</span><br><span class=\"line\">            j = <span class=\"number\">0</span>;</span><br><span class=\"line\">            arg[i].<span class=\"property\">account</span> += <span class=\"number\">1</span>;</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;;</span><br><span class=\"line\">      state.<span class=\"property\">carMovie</span> = arg;</span><br><span class=\"line\">      <span class=\"keyword\">var</span> argTem = <span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(arg);</span><br><span class=\"line\">      <span class=\"variable language_\">window</span>.<span class=\"property\">localStorage</span>.<span class=\"title function_\">setItem</span>(<span class=\"string\">&#x27;tempMovie&#x27;</span>,argTem);</span><br><span class=\"line\">      <span class=\"comment\">// 电影的数量</span></span><br><span class=\"line\">      <span class=\"keyword\">var</span> total = <span class=\"number\">0</span>;</span><br><span class=\"line\">      <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; arg.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">        total += arg[i].<span class=\"property\">account</span>;</span><br><span class=\"line\">      &#125;;</span><br><span class=\"line\">      state.<span class=\"property\">totalNumber</span> = total;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">actions</span>: &#123;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">modules</span>: &#123;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<p>支付页面中调用:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">computed</span>: &#123;</span><br><span class=\"line\">  <span class=\"title function_\">carMovie</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>.<span class=\"property\">$store</span>.<span class=\"property\">state</span>.<span class=\"property\">carMovie</span>;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>支付页面中更新vue-x中state：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">buyTheMovie</span>(<span class=\"params\">item</span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// var reg = this.$store.state.buyCarMovieList;</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> reg = <span class=\"variable language_\">this</span>.<span class=\"property\">$store</span>.<span class=\"property\">state</span>.<span class=\"property\">carMovie</span>;</span><br><span class=\"line\">  reg.<span class=\"title function_\">push</span>(&#123;</span><br><span class=\"line\">    <span class=\"attr\">account</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">    <span class=\"attr\">object</span>: item</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  <span class=\"variable language_\">this</span>.<span class=\"property\">$store</span>.<span class=\"title function_\">commit</span>(<span class=\"string\">&quot;setShopCar&quot;</span>, reg);</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure></li>\n<li><p>注意</p>\n<ol>\n<li>直接获取state数据，然后修改，这个操作是能够生效的，但是不推荐这个方法，应当所有修改state数据的操作都使用：this.$store.commit(“xxxxx”, xxx)。从而能够保证数据更新的一致性。</li>\n<li>一般调用的时候，涉及到比较复杂的数据，都可以用再computed周期中。</li>\n</ol>\n</li>\n</ul>\n<h2 id=\"记录网站功能-搜索\"><a href=\"#记录网站功能-搜索\" class=\"headerlink\" title=\"记录网站功能-搜索\"></a>记录网站功能-搜索</h2><h3 id=\"搜索功能\"><a href=\"#搜索功能\" class=\"headerlink\" title=\"搜索功能\"></a>搜索功能</h3><p>网站一共获取90部电影，设计了搜索功能，主要搜索依据为电影名字，因为没有找到搜索的api接口，所以直接获取到全部的90部电影后，再进行的全部的电影循环匹配，相对花的时间比较多。</p>\n<p>实现了通过部分关键字显示对应电影，记录如下：</p>\n<p><img src=\"https://limengtupian.oss-cn-beijing.aliyuncs.com/%E6%90%9C%E7%B4%A2/%E6%90%9C%E7%B4%A21.png\"></p>\n<!-- more -->\n\n<h3 id=\"功能实现\"><a href=\"#功能实现\" class=\"headerlink\" title=\"功能实现\"></a>功能实现</h3><ul>\n<li><p>逻辑实现</p>\n<ol>\n<li><p>选择一个合适的事件</p>\n<p>通过取得input框内的value值去对比每一部电影的title，然后可以得出判断，这里需要选择对应的input事件，参考网上的说明，选用oninput事件，找到的说明如下：</p>\n<ul>\n<li><p>一种是onchange事件，触发条件：内容改变且失去焦点。</p>\n</li>\n<li><p>一种是onpropertychange事件，触发条件：元素内容改变即触发，另外js改变内容，该元素的属性改变也会触发。但只在IE11以下支持。</p>\n</li>\n<li><p>一种是html5的oninput事件，触发条件：value值的改变，但是js方式改变value不会触发，且在IE8以上及其他标准浏览器支持。</p>\n</li>\n</ul>\n<p>实际上，网上看到有新的事件对应不同的条件执行，暂时没有去尝试，直接用了防抖函数，如下：</p>\n<p>​       原理：</p>\n<p>​         当浏览器有非直接的文字输入时，compositionstart事件就会同步触发，记住，是同步</p>\n<p>​         当浏览器是直接的文字输入时，compositionend事件就会触发</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> cpLock = <span class=\"literal\">false</span>;</span><br><span class=\"line\">    $(<span class=\"string\">&#x27;input[search]&#x27;</span>).<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;compositionstart&#x27;</span>, <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 输入汉语拼音时锁住搜索框，不进行搜索，或者从汉语拼音转到字母时也可触发</span></span><br><span class=\"line\">        cpLock = <span class=\"literal\">true</span>;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;不搜索&#x27;</span>)</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    $(<span class=\"string\">&#x27;input[search]&#x27;</span>).<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;compositionend&#x27;</span>, <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 结束汉语拼音输入并生成汉字时，解锁搜索框，进行搜索</span></span><br><span class=\"line\">        cpLock = <span class=\"literal\">false</span>;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;汉字搜索&#x27;</span>);</span><br><span class=\"line\">        <span class=\"comment\">// 接下去放ajax请求生成下拉框内容</span></span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    $(<span class=\"string\">&#x27;input[search]&#x27;</span>).<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;input&#x27;</span>, <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!cpLock) &#123;</span><br><span class=\"line\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;字母搜索&#x27;</span>)    </span><br><span class=\"line\">          <span class=\"comment\">// 接下去放ajax请求生成下拉框内容</span></span><br><span class=\"line\">      &#125;</span><br></pre></td></tr></table></figure></li>\n<li><p>需要防抖函数</p>\n<p>防抖函数具体见以下文章：<a href=\"%5Bhttp://www.limeng54231.top/2019/12/02/%E5%87%BD%E6%95%B0%E8%8A%82%E6%B5%81%E5%92%8C%E9%98%B2%E6%8A%96/%5D(http://www.limeng54231.top/2019/12/02/%E5%87%BD%E6%95%B0%E8%8A%82%E6%B5%81%E5%92%8C%E9%98%B2%E6%8A%96/)\">防抖函数和节流函数</a></p>\n</li>\n</ol>\n</li>\n<li><p>代码</p>\n<p>代码如下：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;searchMovie&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;请输入......&quot;</span> @<span class=\"attr\">input</span>=<span class=\"string\">&quot;doSearch&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\"><span class=\"comment\">//防抖函数</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">debounce</span>(<span class=\"params\">fn, delay = <span class=\"number\">2000</span></span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">//可以放入项目中的公共方法中进行调用（鹅只是省事）</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> timer;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> args = <span class=\"variable language_\">arguments</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (timer) &#123;</span><br><span class=\"line\">      <span class=\"built_in\">clearTimeout</span>(timer);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">isLoading</span> = <span class=\"literal\">true</span>;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">loadingIntext</span> = <span class=\"string\">&quot;搜索中......&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&quot;searchMovie&quot;</span>).<span class=\"property\">value</span> == <span class=\"string\">&quot;&quot;</span>) &#123;</span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"property\">items</span> = <span class=\"variable language_\">this</span>.<span class=\"property\">firstPMovie</span>;</span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"property\">isLoading</span> = <span class=\"literal\">false</span>;</span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"property\">loadingIntext</span> = <span class=\"string\">&quot;请稍等......&quot;</span>;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      timer = <span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">        fn.<span class=\"title function_\">apply</span>(<span class=\"variable language_\">this</span>, args); <span class=\"comment\">// this 指向vue</span></span><br><span class=\"line\">      &#125;, delay);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\"><span class=\"attr\">methods</span>:&#123;</span><br><span class=\"line\">    <span class=\"attr\">doSearch</span>: <span class=\"title function_\">debounce</span>(<span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> searchMovieV = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&quot;searchMovie&quot;</span>).<span class=\"property\">value</span>;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> res = <span class=\"variable language_\">this</span>.<span class=\"property\">allMovie</span>;</span><br><span class=\"line\">  <span class=\"variable language_\">this</span>.<span class=\"property\">items</span> = [];</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; res.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (res[i].<span class=\"property\">title</span>.<span class=\"title function_\">includes</span>(searchMovieV)) &#123;</span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"property\">items</span>.<span class=\"title function_\">push</span>(res[i]);</span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"property\">isLoading</span> = <span class=\"literal\">false</span>;</span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"property\">loadingIntext</span> = <span class=\"string\">&quot;请稍等......&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"variable language_\">this</span>.<span class=\"property\">items</span>.<span class=\"property\">length</span> == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">loadingIntext</span> = <span class=\"string\">&quot;没有找到结果哟,3秒后自动返回，稍等......&quot;</span>;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">isLoading</span> = <span class=\"literal\">true</span>;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> setT = <span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"property\">items</span> = <span class=\"variable language_\">this</span>.<span class=\"property\">firstPMovie</span>;</span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"property\">isLoading</span> = <span class=\"literal\">false</span>;</span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"property\">loadingIntext</span> = <span class=\"string\">&quot;请稍等......&quot;</span>;</span><br><span class=\"line\">      <span class=\"built_in\">clearTimeout</span>(setT);</span><br><span class=\"line\">    &#125;, <span class=\"number\">3000</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure></li>\n<li><p><strong>注意</strong></p>\n</li>\n</ul>\n<ol>\n<li><p>如何判断input的值是否符合电影title的关键词</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">res[i].title.includes(searchMovieV)</span><br></pre></td></tr></table></figure>\n\n<p>.includes函数可以判断title内有没有包含seatchmovie 的关键字，只要有对应的任意一个字，就会判断为true</p>\n</li>\n<li><p>再vue中使用防抖函数</p>\n<p>debounce这个函数需要直接写再script内部，然后设置了两个参数，第一个就是执行方法，即fn，第二个是等待时间。</p>\n<p>这里需要注意的是，debounce这个函数内部需要定义一个timer，形成一个闭包，从而使得第二次进入循环后，清除掉第一次的定时函数。</p>\n<p>同时this的指向问题，需要再return函数中用一个变量去存以下this，以确保指针指向的是input。</p>\n<p>参考链接：[防抖函数中的闭包](</p>\n</li>\n</ol>\n<h2 id=\"记录网站功能实现-精灵图\"><a href=\"#记录网站功能实现-精灵图\" class=\"headerlink\" title=\"记录网站功能实现-精灵图\"></a>记录网站功能实现-精灵图</h2><h3 id=\"精灵图\"><a href=\"#精灵图\" class=\"headerlink\" title=\"精灵图\"></a>精灵图</h3><ul>\n<li><p>精灵图技术产生的目的：很多大型网页在首次加载的时候都需要加载很多的小图片，而考虑到在同一时间，服务器拥堵的情况下，为了解决这一问题，采用了精灵图这一技术来缓解加载时间过长从而影响用户体验的这个问题。</p>\n</li>\n<li><p>精灵图技术的本质：所谓精灵图就是把很多的小图片合并到一张较大的图片里，所以在首次加载页面的时候，就不用加载过多的小图片，只需要加载出来将小图片合并起来的那一张大图片也就是精灵图即可，这样在一定程度上减少了页面的加载速度，也一定程度上缓解了服务器的压力。例如王者荣耀页面里的几个小logo:</p>\n<p><img src=\"http://5b0988e595225.cdn.sohucs.com/images/20171128/e5c76a5b52c14b2eadb8036126bbdce2.png\" alt=\"tupian\"></p>\n</li>\n</ul>\n<!-- more -->\n\n<h3 id=\"怎么去实现一张图片加载不同位置\"><a href=\"#怎么去实现一张图片加载不同位置\" class=\"headerlink\" title=\"怎么去实现一张图片加载不同位置\"></a>怎么去实现一张图片加载不同位置</h3><p><strong>主要通过background-position属性去设置不同位置</strong></p>\n<p>如图：</p>\n<ul>\n<li><p>引入背景图片</p>\n<p><img src=\"https://limengtupian.oss-cn-beijing.aliyuncs.com/%E7%B2%BE%E7%81%B5%E5%9B%BEmd/%E7%B2%BE%E7%81%B5%E5%9B%BE1.png\"></p>\n</li>\n<li><p>设置背景图片显示位置<strong>（实际上可以通过js的for循环去设置）</strong></p>\n<p><img src=\"https://limengtupian.oss-cn-beijing.aliyuncs.com/%E7%B2%BE%E7%81%B5%E5%9B%BEmd/%E7%B2%BE%E7%81%B5%E5%9B%BE2.png\"></p>\n</li>\n<li><p>设置hover效果</p>\n<p><img src=\"https://limengtupian.oss-cn-beijing.aliyuncs.com/%E7%B2%BE%E7%81%B5%E5%9B%BEmd/%E7%B2%BE%E7%81%B5%E5%9B%BE3.png\"></p>\n</li>\n</ul>\n<h3 id=\"优缺点\"><a href=\"#优缺点\" class=\"headerlink\" title=\"优缺点\"></a>优缺点</h3><p><strong>优点：</strong></p>\n<p>①减少网页的http请求，从而加快了网页加载速度，提高用户体验。</p>\n<p>②减少图片的体积，因为每个图片都有一个头部信息，把多个图片放到一个图片里，就会共用同一个头信息，从而减少了字节数。</p>\n<p>③解决了网页设计师在图片命名上的困扰，只需对一张集合的图片上命名就可以了，不需要对每一个小元素进行命名。</p>\n<p>④更换风格方便，只需要在一张或少张图片上修改图片的颜色或样式，整个网页的风格就可以改变。</p>\n<p><strong>缺点：</strong></p>\n<p>①在宽屏，高分辨率的屏幕下的自适应页面，你的图片如果不够宽，很容易出现背景断裂。</p>\n<p>②CSS Sprites在开发的时候，要通过photoshop或其他工具测量计算每一个背景单元的精确位置。</p>\n<p>③在维护的时候比较麻烦，如果页面背景有少许改动，一般就要改这张合并的图片。</p>\n<p>④精灵图不能随意改变大小和颜色。改变大小会失真模糊，降低用户体验，Css3新属性可以改变精灵图颜色，但是比较麻烦，并且新属性有兼容问题，现在一般用字体图标代替精灵图。</p>\n<h2 id=\"记录网站功能实现-搜索功能\"><a href=\"#记录网站功能实现-搜索功能\" class=\"headerlink\" title=\"记录网站功能实现-搜索功能\"></a>记录网站功能实现-搜索功能</h2><h3 id=\"网站搜索功能\"><a href=\"#网站搜索功能\" class=\"headerlink\" title=\"网站搜索功能\"></a>网站搜索功能</h3><p>很多的导航网站会再头顶设置不同的搜索引擎的搜索框，提供更方便的搜索功能，如图：</p>\n<p><img src=\"https://limengtupian.oss-cn-beijing.aliyuncs.com/%E6%90%9C%E7%B4%A2%E5%8A%9F%E8%83%BD/%E6%90%9C%E7%B4%A2%E5%8A%9F%E8%83%BD1.png\"></p>\n<p>这个实现也不复杂，如下：</p>\n<!-- more -->\n\n<h3 id=\"如何实现\"><a href=\"#如何实现\" class=\"headerlink\" title=\"如何实现\"></a>如何实现</h3><p>功能的实现也不复杂，是通过一个form，不停的变换form中的action和name去切换不同的搜索引擎的</p>\n<p>代码如下：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">action</span>=<span class=\"string\">&quot;https://www.baidu.com/s&quot;</span> <span class=\"attr\">target</span>=<span class=\"string\">&quot;__blank&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;searchForm&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">input</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">id</span>=<span class=\"string\">&quot;searchInput&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;请输入要搜索的内容：&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;searchValue&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">name</span>=<span class=\"string\">&quot;word&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">autofocus</span></span></span><br><span class=\"line\"><span class=\"tag\">  /&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;submit&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;搜索&quot;</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">data</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">    <span class=\"attr\">items</span>: [</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        <span class=\"attr\">text</span>: <span class=\"string\">&quot;谷歌&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">searchUrl</span>: <span class=\"string\">&quot;http://www.google.com.hk/search?q=&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">name</span>: <span class=\"string\">&quot;q&quot;</span></span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123; <span class=\"attr\">text</span>: <span class=\"string\">&quot;百度&quot;</span>, <span class=\"attr\">searchUrl</span>: <span class=\"string\">&quot;https://www.baidu.com/s&quot;</span>, <span class=\"attr\">name</span>: <span class=\"string\">&quot;word&quot;</span> &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        <span class=\"attr\">text</span>: <span class=\"string\">&quot;搜狗&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">searchUrl</span>: <span class=\"string\">&quot;http://www.sogou.com/web&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">name</span>: <span class=\"string\">&quot;query&quot;</span></span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123; <span class=\"attr\">text</span>: <span class=\"string\">&quot;必应&quot;</span>, <span class=\"attr\">searchUrl</span>: <span class=\"string\">&quot;https://cn.bing.com/search&quot;</span>, <span class=\"attr\">name</span>: <span class=\"string\">&quot;q&quot;</span> &#125;</span><br><span class=\"line\">    ],</span><br><span class=\"line\">    <span class=\"attr\">checkindex</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">    <span class=\"attr\">searchValue</span>: <span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">isActive</span>(<span class=\"params\">item, index</span>) &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">this</span>.<span class=\"property\">checkindex</span> = index;</span><br><span class=\"line\">  <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&quot;searchForm&quot;</span>).<span class=\"property\">action</span> = item.<span class=\"property\">searchUrl</span>;</span><br><span class=\"line\">  <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&quot;searchInput&quot;</span>).<span class=\"property\">name</span> = item.<span class=\"property\">name</span>;</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n\n<p>通过v-for去循环data中的items，去生成不同的搜索引擎按钮，点击不同的按钮，去切换form中的action和input中的name就可以实现搜索功能。</p>\n<p>这个其中主要是通过各大搜索引擎提供的地址去操作，例如百度等，已经提供了公共的搜索接口，非常的方便。</p>\n<h2 id=\"侧边栏随动闪烁问题记录\"><a href=\"#侧边栏随动闪烁问题记录\" class=\"headerlink\" title=\"侧边栏随动闪烁问题记录\"></a>侧边栏随动闪烁问题记录</h2><p>很多网站都有侧边栏随动的效果，当页面在最顶部的时候，侧边栏是正常的元素上下排列效果，当下滑到一定的位置，侧边栏会变成固定的位置。如下：</p>\n<p><img src=\"https://limengtupian.oss-cn-beijing.aliyuncs.com/%E4%BE%A7%E8%BE%B9%E6%A0%8F%E9%97%AA%E7%83%81/1.png\"></p>\n<p>固定位置如下：</p>\n<p><img src=\"https://limengtupian.oss-cn-beijing.aliyuncs.com/%E4%BE%A7%E8%BE%B9%E6%A0%8F%E9%97%AA%E7%83%81/2.png\"></p>\n<!-- more -->\n\n<h3 id=\"功能实现-1\"><a href=\"#功能实现-1\" class=\"headerlink\" title=\"功能实现\"></a>功能实现</h3><p>实现功能是很简单的，直接获取当前位置对应最顶部的值，然后当值大于某个数时，将元素的class增加一个fixed，当小于某个值，再移除这个class</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">position</span>: fixed <span class=\"meta\">!important</span>;</span><br><span class=\"line\"><span class=\"attribute\">transform</span>: <span class=\"built_in\">translateZ</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">-webkit-<span class=\"attribute\">transform</span>: <span class=\"built_in\">translateZ</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\"><span class=\"attribute\">top</span>: <span class=\"number\">70px</span>;</span><br></pre></td></tr></table></figure>\n\n<p>js判断如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> h = <span class=\"variable language_\">this</span>.<span class=\"property\">$refs</span>.<span class=\"property\">carousel</span>.<span class=\"property\">offsetHeight</span>;</span><br><span class=\"line\"><span class=\"variable language_\">this</span>.<span class=\"property\">scrollPosition</span> = <span class=\"variable language_\">document</span>.<span class=\"property\">documentElement</span>.<span class=\"property\">scrollTop</span>;</span><br><span class=\"line\"><span class=\"variable language_\">this</span>.<span class=\"property\">$store</span>.<span class=\"title function_\">commit</span>(<span class=\"string\">&quot;setScrollPosition&quot;</span>, <span class=\"variable language_\">this</span>.<span class=\"property\">scrollPosition</span>);<span class=\"comment\">//记录当前浏览的位置，返回时可以保证用户时之前的浏览位置</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">scrollPosition</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> offtop = <span class=\"variable language_\">document</span>.<span class=\"property\">documentElement</span>.<span class=\"property\">scrollTop</span> + <span class=\"number\">50</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"variable language_\">document</span>.<span class=\"property\">body</span>.<span class=\"property\">clientWidth</span> &gt; <span class=\"number\">972</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (offtop &gt; h) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">movieG2</span> = <span class=\"literal\">true</span>;<span class=\"comment\">//增加class</span></span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">movieG2</span> = <span class=\"literal\">false</span>;<span class=\"comment\">//减少class</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"问题\"><a href=\"#问题\" class=\"headerlink\" title=\"问题\"></a>问题</h3><p>这样产生了问题：</p>\n<p>浏览器中，每次鼠标滚轮都是滚动固定的大小，每次滚动67左右。</p>\n<p>但是当接近判断clss临界条件时，会向下滚动一次就立刻超过临界值，导致，这个侧边栏会从之前的上下排列瞬间切换到fixed排列，这中间侧边栏会闪烁一下。</p>\n<p>我观察了其他网站的实现，发现其他网站向下滚动的距离时固定的，比如，滚动5次，刚好可以达到临界值，然后下一次滚动，刚好可以将正常的文档流改成fixed，所以没有闪烁问题。</p>\n<h3 id=\"实现功能\"><a href=\"#实现功能\" class=\"headerlink\" title=\"实现功能\"></a>实现功能</h3><p>关键属性：mousewheel事件</p>\n<p>mousewheel事件就是鼠标滚轮滚动的事件，每次滚动，可以阻止其默认行为，然后，自己设定下滑的距离，从而实现每次滚动的距离可控。</p>\n<p>代码如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//滚轮事件</span></span><br><span class=\"line\"><span class=\"comment\">// 鼠标滚轮事件</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">getWheelDelta</span>(<span class=\"params\">event</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (event.<span class=\"property\">wheelDelta</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> event.<span class=\"property\">wheelDelta</span>;</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 兼容火狐</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> -event.<span class=\"property\">detail</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 鼠标滚动逻辑（全屏滚动关键逻辑）</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">scrollMouse</span>(<span class=\"params\">event</span>) &#123;</span><br><span class=\"line\">  event.<span class=\"title function_\">preventDefault</span>();</span><br><span class=\"line\">  <span class=\"keyword\">let</span> delta = <span class=\"title function_\">getWheelDelta</span>(event);</span><br><span class=\"line\">  <span class=\"keyword\">let</span> locationNow = <span class=\"variable language_\">document</span>.<span class=\"property\">documentElement</span>.<span class=\"property\">scrollTop</span>;</span><br><span class=\"line\">  <span class=\"comment\">// delta &lt; 0，鼠标往前滚动，页面向下滚动</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (delta &lt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">    <span class=\"title function_\">goDown</span>(locationNow);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"title function_\">goUp</span>(locationNow);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">goDown</span>(<span class=\"params\">locationNow</span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">window</span>.<span class=\"title function_\">scrollTo</span>(<span class=\"number\">0</span>, locationNow + <span class=\"number\">80</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">goUp</span>(<span class=\"params\">locationNow</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (locationNow &gt; <span class=\"number\">80</span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">window</span>.<span class=\"title function_\">scrollTo</span>(<span class=\"number\">0</span>, locationNow - <span class=\"number\">80</span>);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">window</span>.<span class=\"title function_\">scrollTo</span>(<span class=\"number\">0</span>, <span class=\"number\">0</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 鼠标滚轮监听，火狐鼠标滚动事件不同其他</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (navigator.<span class=\"property\">userAgent</span>.<span class=\"title function_\">toLowerCase</span>().<span class=\"title function_\">indexOf</span>(<span class=\"string\">&quot;firefox&quot;</span>) === -<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">document</span>.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&quot;mousewheel&quot;</span>, scrollMouse, &#123; <span class=\"attr\">passive</span>: <span class=\"literal\">false</span> &#125;);</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">document</span>.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&quot;DOMMouseScroll&quot;</span>, scrollMouse);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"实现效果\"><a href=\"#实现效果\" class=\"headerlink\" title=\"实现效果\"></a>实现效果</h3><p>每次滚动都下滑80，这样，就可以比较方便的去修正不同元素的距离。</p>\n<p>修复前：</p>\n<p><img src=\"https://limengtupian.oss-cn-beijing.aliyuncs.com/%E4%BE%A7%E8%BE%B9%E6%A0%8F%E9%97%AA%E7%83%81/%E4%BF%AE%E5%A4%8D%E5%89%8D.gif\"></p>\n<p>修复后：</p>\n<p><img src=\"https://limengtupian.oss-cn-beijing.aliyuncs.com/%E4%BE%A7%E8%BE%B9%E6%A0%8F%E9%97%AA%E7%83%81/%E4%BF%AE%E5%A4%8D%E5%90%8E.gif\"></p>\n<h2 id=\"通过local-storage模拟了注册登录机制\"><a href=\"#通过local-storage模拟了注册登录机制\" class=\"headerlink\" title=\"通过local storage模拟了注册登录机制\"></a>通过local storage模拟了注册登录机制</h2><p>前后端分离模式下，网站的注册、登录机制实现，对于前端来说，主要考虑两个点：</p>\n<ol>\n<li>把用户的账号校验然后发送后端申请验证码</li>\n<li>提交用户的账号和验证码去后端校验，然后后端返回状态码（token）</li>\n</ol>\n<p>以上两点可以通过localstorage去简单模拟的，记录如下：</p>\n<!-- more -->\n\n<h3 id=\"注册登录逻辑流程\"><a href=\"#注册登录逻辑流程\" class=\"headerlink\" title=\"注册登录逻辑流程\"></a>注册登录逻辑流程</h3><p>需要实现的注册功能如下：</p>\n<ol>\n<li>校验手机号码是否正确<ol>\n<li>正确：显示验证码（直接页面上显示一个验证码）</li>\n<li>错误：手机号码下方提示“手机号码错误”</li>\n</ol>\n</li>\n<li>校验手机号码和验证码是否正确<ol>\n<li>正确：信息入库，添加如local storage，跳转至登录页面</li>\n<li>错误：显示验证码错误或者手机号码已经注册</li>\n</ol>\n</li>\n</ol>\n<p>实现登录功能如下：</p>\n<ol>\n<li>校验手机号码是否正确<ol>\n<li>正确：显示验证码（直接页面上显示一个验证码）</li>\n<li>错误：手机号码下方提示“手机号码错误”</li>\n</ol>\n</li>\n<li>校验手机号码和验证码是否正确<ol>\n<li>正确：添加登录状态（token），跳转至个人中心页面</li>\n<li>错误： 显示验证码错误或者手机没有注册</li>\n</ol>\n</li>\n</ol>\n<p>token是一个对象，里面包含了登陆后的信息。如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> passUsrInfo = &#123;</span><br><span class=\"line\">  <span class=\"attr\">usrname</span>: <span class=\"variable language_\">this</span>.<span class=\"property\">items1</span>[<span class=\"number\">0</span>].<span class=\"property\">value</span>,</span><br><span class=\"line\">  <span class=\"attr\">token</span>: <span class=\"string\">&quot;pass&quot;</span>,</span><br><span class=\"line\">  <span class=\"attr\">time</span>: <span class=\"title class_\">Date</span>.<span class=\"title function_\">now</span>(),</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ol>\n<li>usrname：用户名</li>\n<li>token：登录状态</li>\n<li>time：登录时间</li>\n</ol>\n<p>可以通过判断当前时间与time的差值去决定是否还再登录状态，我这里设置时10分钟。</p>\n<h3 id=\"实现代码-2\"><a href=\"#实现代码-2\" class=\"headerlink\" title=\"实现代码\"></a>实现代码</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">toLogin</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">   <span class=\"keyword\">if</span> (<span class=\"variable language_\">this</span>.<span class=\"property\">common</span>.<span class=\"title function_\">phoneNumber</span>(<span class=\"number\">0</span>, <span class=\"variable language_\">this</span>.<span class=\"property\">items1</span>[<span class=\"number\">0</span>].<span class=\"property\">value</span>)) &#123;</span><br><span class=\"line\">     <span class=\"variable language_\">this</span>.<span class=\"property\">items1</span>[<span class=\"number\">0</span>].<span class=\"property\">showerr</span> = <span class=\"literal\">false</span>;</span><br><span class=\"line\">     <span class=\"variable language_\">this</span>.<span class=\"property\">items1</span>[<span class=\"number\">0</span>].<span class=\"property\">err</span> = <span class=\"string\">&quot;手机号码有误&quot;</span>;</span><br><span class=\"line\">     <span class=\"keyword\">if</span> (<span class=\"variable language_\">this</span>.<span class=\"property\">items1</span>[<span class=\"number\">1</span>].<span class=\"property\">value</span> == <span class=\"number\">6666</span>) &#123;</span><br><span class=\"line\">       <span class=\"variable language_\">this</span>.<span class=\"property\">items1</span>[<span class=\"number\">1</span>].<span class=\"property\">showerr</span> = <span class=\"literal\">false</span>;</span><br><span class=\"line\">       <span class=\"keyword\">let</span> tem = <span class=\"title class_\">JSON</span>.<span class=\"title function_\">parse</span>(<span class=\"variable language_\">localStorage</span>.<span class=\"title function_\">getItem</span>(<span class=\"string\">&quot;usrname&quot;</span>)) == <span class=\"literal\">null</span> ? [] : <span class=\"title class_\">JSON</span>.<span class=\"title function_\">parse</span>(<span class=\"variable language_\">localStorage</span>.<span class=\"title function_\">getItem</span>(<span class=\"string\">&quot;usrname&quot;</span>));</span><br><span class=\"line\">       <span class=\"keyword\">let</span> usrInfo = <span class=\"variable language_\">this</span>.<span class=\"property\">items1</span>[<span class=\"number\">0</span>].<span class=\"property\">value</span>;</span><br><span class=\"line\">       <span class=\"keyword\">if</span> (tem.<span class=\"property\">length</span> == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">         tem.<span class=\"title function_\">push</span>(&#123; <span class=\"attr\">usrname</span>: usrInfo &#125;);</span><br><span class=\"line\">         <span class=\"variable language_\">window</span>.<span class=\"property\">localStorage</span>.<span class=\"title function_\">setItem</span>(<span class=\"string\">&quot;usrname&quot;</span>, <span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(tem));</span><br><span class=\"line\">         <span class=\"variable language_\">this</span>.<span class=\"property\">registerOK</span> = <span class=\"literal\">true</span>;</span><br><span class=\"line\">         <span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">           <span class=\"variable language_\">this</span>.<span class=\"property\">$router</span>.<span class=\"title function_\">push</span>(<span class=\"string\">&quot;/login&quot;</span>);</span><br><span class=\"line\">         &#125;, <span class=\"number\">3000</span>);</span><br><span class=\"line\">       &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">         <span class=\"keyword\">let</span> index = tem.<span class=\"title function_\">findIndex</span>(<span class=\"function\">(<span class=\"params\">x</span>) =&gt;</span> x.<span class=\"property\">usrname</span> == usrInfo);</span><br><span class=\"line\">         <span class=\"keyword\">if</span> (index == -<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">           tem.<span class=\"title function_\">push</span>(&#123; <span class=\"attr\">usrname</span>: usrInfo &#125;);</span><br><span class=\"line\">           <span class=\"variable language_\">window</span>.<span class=\"property\">localStorage</span>.<span class=\"title function_\">setItem</span>(<span class=\"string\">&quot;usrname&quot;</span>, <span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(tem));</span><br><span class=\"line\">           <span class=\"variable language_\">this</span>.<span class=\"property\">registerOK</span> = <span class=\"literal\">true</span>;</span><br><span class=\"line\">           <span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">             <span class=\"variable language_\">this</span>.<span class=\"property\">$router</span>.<span class=\"title function_\">push</span>(<span class=\"string\">&quot;/login&quot;</span>);</span><br><span class=\"line\">           &#125;, <span class=\"number\">3000</span>);</span><br><span class=\"line\">         &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">           <span class=\"variable language_\">this</span>.<span class=\"property\">items1</span>[<span class=\"number\">0</span>].<span class=\"property\">err</span> = <span class=\"string\">&quot;该手机号码已经被注册&quot;</span>;</span><br><span class=\"line\">           <span class=\"variable language_\">this</span>.<span class=\"property\">items1</span>[<span class=\"number\">0</span>].<span class=\"property\">showerr</span> = <span class=\"literal\">true</span>;</span><br><span class=\"line\">         &#125;</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">     &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">       <span class=\"variable language_\">this</span>.<span class=\"property\">items1</span>[<span class=\"number\">1</span>].<span class=\"property\">showerr</span> = <span class=\"literal\">true</span>;</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">   &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">     <span class=\"variable language_\">this</span>.<span class=\"property\">items1</span>[<span class=\"number\">0</span>].<span class=\"property\">showerr</span> = <span class=\"literal\">true</span>;</span><br><span class=\"line\">     <span class=\"variable language_\">this</span>.<span class=\"property\">items1</span>[<span class=\"number\">0</span>].<span class=\"property\">err</span> = <span class=\"string\">&quot;手机号码有误&quot;</span>;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure>\n\n<p>以上是登录时，判断手机号码及验证码的逻辑。说明：</p>\n<ol>\n<li><p>this.common.phoneNumber(0, this.items1[0].value)</p>\n<p>这个是一个公共方法，用正则表达式判断手机号码是否正确</p>\n</li>\n<li><p>let tem = JSON.parse(localStorage.getItem(“usrname”)) == null ? [] : JSON.parse(localStorage.getItem(“usrname”))</p>\n<p>这个是获取到本地存储中的注册手机号码，模拟的是数据库中的注册用户信息，去判断手机号码是否注册</p>\n</li>\n</ol>\n<h3 id=\"根据token去显示页面\"><a href=\"#根据token去显示页面\" class=\"headerlink\" title=\"根据token去显示页面\"></a>根据token去显示页面</h3><p>可以再页面加载时候去判断下localstorage内有没有对应的信息，从而去显示不同的页面：</p>\n<p>实现代码：</p>\n<p>首页导航栏：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;showRegLogin&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;col-xs-2 col-xs-offset-7 navbarRight&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">router-link</span> <span class=\"attr\">tag</span>=<span class=\"string\">&quot;a&quot;</span> <span class=\"attr\">to</span>=<span class=\"string\">&quot;/login&quot;</span>&gt;</span>Login<span class=\"tag\">&lt;/<span class=\"name\">router-link</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">router-link</span> <span class=\"attr\">tag</span>=<span class=\"string\">&quot;a&quot;</span> <span class=\"attr\">to</span>=<span class=\"string\">&quot;/register&quot;</span>&gt;</span>Register<span class=\"tag\">&lt;/<span class=\"name\">router-link</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">v-else</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;col-xs-2 col-xs-offset-7 navbarRight&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">router-link</span> <span class=\"attr\">tag</span>=<span class=\"string\">&quot;a&quot;</span> <span class=\"attr\">to</span>=<span class=\"string\">&quot;/center&quot;</span>&gt;</span>Center<span class=\"tag\">&lt;/<span class=\"name\">router-link</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">router-link</span> <span class=\"attr\">tag</span>=<span class=\"string\">&quot;a&quot;</span> <span class=\"attr\">to</span>=<span class=\"string\">&quot;/register&quot;</span>&gt;</span>Register<span class=\"tag\">&lt;/<span class=\"name\">router-link</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">mounted</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">this</span>.<span class=\"property\">showRegLogin</span> = !<span class=\"variable language_\">this</span>.<span class=\"property\">common</span>.<span class=\"title function_\">judgeLogin</span>()</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>购物车栏：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;showList&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;carLists&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;movieLists&quot;</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;name&quot;</span>&gt;</span>电影名称<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;acount&quot;</span>&gt;</span>数量<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">v-for</span>=<span class=\"string\">&quot;(item, index) in carMovie&quot;</span> <span class=\"attr\">:key</span>=<span class=\"string\">&quot;index&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;movieLists&quot;</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;name&quot;</span>&gt;</span>&#123;&#123; item.title &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;acount&quot;</span>&gt;</span>&#123;&#123; item.account &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">v-else</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;carLists&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;showLogin&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">      还没有登录呢，点击</span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">router-link</span> <span class=\"attr\">to</span>=<span class=\"string\">&quot;/login&quot;</span> <span class=\"attr\">tag</span>=<span class=\"string\">&quot;span&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;color:red;cursor:pointer;&quot;</span>&gt;</span>登录<span class=\"tag\">&lt;/<span class=\"name\">router-link</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">toJudge</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">this</span>.<span class=\"property\">showUp</span> = <span class=\"literal\">false</span>;</span><br><span class=\"line\">  <span class=\"variable language_\">this</span>.<span class=\"property\">isLogin</span> = <span class=\"title class_\">JSON</span>.<span class=\"title function_\">parse</span>(<span class=\"variable language_\">window</span>.<span class=\"property\">localStorage</span>.<span class=\"title function_\">getItem</span>(<span class=\"string\">&quot;passUsrInfo&quot;</span>))</span><br><span class=\"line\">    .<span class=\"property\">token</span></span><br><span class=\"line\">    ? <span class=\"title class_\">JSON</span>.<span class=\"title function_\">parse</span>(<span class=\"variable language_\">window</span>.<span class=\"property\">localStorage</span>.<span class=\"title function_\">getItem</span>(<span class=\"string\">&quot;passUsrInfo&quot;</span>)).<span class=\"property\">token</span></span><br><span class=\"line\">    : <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">  <span class=\"comment\">//false没有登录或者登录失效，true已经登录并且失效时间内</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"variable language_\">this</span>.<span class=\"property\">isLogin</span> &amp;&amp; <span class=\"variable language_\">this</span>.<span class=\"property\">common</span>.<span class=\"title function_\">judgeLogin</span>()) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">showList</span> = <span class=\"literal\">true</span>;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">movieAcountLoading</span> = <span class=\"literal\">true</span>;</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">showList</span> = <span class=\"literal\">false</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>效果如下：</p>\n<p>未登录：</p>\n<p><img src=\"https://limengtupian.oss-cn-beijing.aliyuncs.com/%E6%B3%A8%E5%86%8C%E7%99%BB%E5%BD%95%E5%8A%9F%E8%83%BD/1.png\"></p>\n<p><img src=\"https://limengtupian.oss-cn-beijing.aliyuncs.com/%E6%B3%A8%E5%86%8C%E7%99%BB%E5%BD%95%E5%8A%9F%E8%83%BD/2.png\"></p>\n<p>已经登录：</p>\n<p><img src=\"https://limengtupian.oss-cn-beijing.aliyuncs.com/%E6%B3%A8%E5%86%8C%E7%99%BB%E5%BD%95%E5%8A%9F%E8%83%BD/3.png\"></p>\n<p><img src=\"https://limengtupian.oss-cn-beijing.aliyuncs.com/%E6%B3%A8%E5%86%8C%E7%99%BB%E5%BD%95%E5%8A%9F%E8%83%BD/4.png\"></p>\n<h2 id=\"Vue中引入图片失效\"><a href=\"#Vue中引入图片失效\" class=\"headerlink\" title=\"Vue中引入图片失效\"></a>Vue中引入图片失效</h2><h2 id=\"引入图片\"><a href=\"#引入图片\" class=\"headerlink\" title=\"引入图片\"></a>引入图片</h2><p>自己本地开发引入图片可以选择相对路径或者绝对路径，比如：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">:src</span>=<span class=\"string\">&quot;../images/1.png&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>这样是可以在网页中显示的，或者将图片放在网络存储中，引用网络地址。</p>\n<p>但是，在使用Vue进行开发的时候，有遇到一个问题：本地引入图片生效，但是使用Js去替换图片的时候，使用相对路径，就不能正确的生成图片，查阅资料发现了需要更换引入方式。</p>\n<!-- more -->\n\n<h3 id=\"想要实现的样式\"><a href=\"#想要实现的样式\" class=\"headerlink\" title=\"想要实现的样式\"></a>想要实现的样式</h3><p>密码的显示和隐藏样式：</p>\n<p><strong>显示：</strong></p>\n<p><img src=\"https://limengtupian.oss-cn-beijing.aliyuncs.com/open.png\" alt=\"open\"></p>\n<p><strong>隐藏:</strong></p>\n<p><img src=\"https://limengtupian.oss-cn-beijing.aliyuncs.com/close.png\" alt=\"close\"></p>\n<h2 id=\"在Vue中引入图片\"><a href=\"#在Vue中引入图片\" class=\"headerlink\" title=\"在Vue中引入图片\"></a>在Vue中引入图片</h2><ol>\n<li><p>直接使用相对路径</p>\n<p>直接使用相对路径生成的html里面，可以发现在引用的图片地址处，会被加上一串唯一编码。</p>\n<p>如果用JS去修改img的src，生成的图片地址里面是没有编码的，所以不会正确的加载地址。</p>\n</li>\n<li><p>正确的引入</p>\n<ol>\n<li><p><strong>html</strong></p>\n<p>img直接引入地址，需要在src上加上v-bind，也就是冒号：</p>\n<p><img src=\"https://limengtupian.oss-cn-beijing.aliyuncs.com/html.png\" alt=\"html\"></p>\n</li>\n<li><p><strong>data</strong></p>\n<p>data对应的应该有该名称的对应地址属性</p>\n<p><img src=\"https://limengtupian.oss-cn-beijing.aliyuncs.com/icon.png\" alt=\"data\"></p>\n</li>\n<li><p><strong>methds</strong></p>\n<p>直接在方法里面去让src的属性等于对应的src名称</p>\n<p><img src=\"https://limengtupian.oss-cn-beijing.aliyuncs.com/function.png\" alt=\"methds\"></p>\n</li>\n</ol>\n</li>\n</ol>\n<p>这样，可以正确的显示图片，从F12解析可以看到，图片的地址都是已经加上了编码。</p>"},{"title":"路由守卫使用-判断登录状态","date":"2020-03-24T10:16:26.000Z","_content":"\n<meta name=\"referrer\" content=\"no-referrer\"/>\n\n## 路由守卫使用-判断登录状态\n\n之前已经通过local storage模拟了注册登录机制，从而控制了页面根据不同的登录状态显示内容的不同。\n\n当用户已经登录的情况下：\n\n1.  首页右上角会显示center和register，而不是login和register\n2. 可以直接通过movielist界面看到购物车内容，并且进入pay界面\n\n当没有登录的情况下，不能显示center和购物车内容。\n\n这其中还有一个问题，登录状态模拟的是10分钟有效期。当有效期结束，但是页面还停留在center页面时，再次刷新页面，依旧会停留再center页面，这个不符合逻辑。\n\n应当再次刷新后，直接跳转到login界面。\n\n这个可以通过vue-router的路由守卫去实现，如下；\n\n<!-- more -->\n\n### vue-router路由守卫配置\n\n一开始犯了一个错误，将router.beforeEach（）放到了router中的index.js中了，这个明显不对。、\n\n应当将其配置到main.js中。\n\n并且需要注意的是，router.beforeEach（）需要放置到new vue之前\n\nmain.js配置如下：\n\n```js\nimport Vue from 'vue'\nimport App from './App.vue'\nimport router from './router' //引入router\nimport store from './store'\n\nVue.config.productionTip = false\n\nimport common from '@/comF/common.js'\nVue.prototype.common = common\n\nimport axios from 'axios'\nVue.prototype.axios = axios\n\n// 路由变化跳转页面回到顶部\nrouter.afterEach((to,from,next) => {\n  window.scrollTo(0,0);\n})\n\nVue.filter(\"price\",function(value) {\n  var num2 = Number(value).toFixed(2);\n  var num = num2.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1,\");\n  return num;\n})\n\n// 全局路由守卫\nrouter.beforeEach((to, from, next) => {\n  let nameLists = [\"/center\", \"/mall/pay\"]\n  let isLogin = JSON.parse(window.localStorage.getItem(\"passUsrInfo\")) ? JSON.parse(window.localStorage.getItem(\"passUsrInfo\")).token : \"\";\n  let index = nameLists.findIndex(v => v == to.path)\n  if (index > -1) {  // 判断该路由是否需要登录权限\n    console.log(\"1\")\n    if (isLogin) { // 判断是否已经登录\n      console.log(\"11\")\n      next()\n    }\n    else {\n      console.log(\"12\")\n      next({\n        path: '/loading',\n        query: { redirect: to.fullPath }  // 将跳转的路由path作为参数，登录成功后跳转到该路由\n      })\n    }\n  }\n  else {\n    next()\n  }\n})\n\nnew Vue({\n  router,\n  store,\n  render: h => h(App)\n}).$mount('#app')\n\n```\n\n说明：\n\n1. import router from './router' //引入router\n2. router.beforeEach((to, from, next) //设置路由守卫\n3. new Vue（）//new 一个vue\n\nrouter的配置就按照正常的配置进行。\n\n### 实现效果\n\n如下图：\n\n登录至个人中心后，删除local storage的token，然后刷新页面，会自动跳转至loading，两秒钟后再跳转至login页面。\n\n![](https://limengtupian.oss-cn-beijing.aliyuncs.com/%E8%B7%AF%E7%94%B1%E5%AE%88%E5%8D%AB%E5%AE%9E%E7%8E%B0/1.gif)","source":"_posts/路由守卫使用-判断登录状态.md","raw":"---\ntitle: 路由守卫使用-判断登录状态\ndate: 2020-03-24 18:16:26\ntags: [路由守卫,vue-router]\n---\n\n<meta name=\"referrer\" content=\"no-referrer\"/>\n\n## 路由守卫使用-判断登录状态\n\n之前已经通过local storage模拟了注册登录机制，从而控制了页面根据不同的登录状态显示内容的不同。\n\n当用户已经登录的情况下：\n\n1.  首页右上角会显示center和register，而不是login和register\n2. 可以直接通过movielist界面看到购物车内容，并且进入pay界面\n\n当没有登录的情况下，不能显示center和购物车内容。\n\n这其中还有一个问题，登录状态模拟的是10分钟有效期。当有效期结束，但是页面还停留在center页面时，再次刷新页面，依旧会停留再center页面，这个不符合逻辑。\n\n应当再次刷新后，直接跳转到login界面。\n\n这个可以通过vue-router的路由守卫去实现，如下；\n\n<!-- more -->\n\n### vue-router路由守卫配置\n\n一开始犯了一个错误，将router.beforeEach（）放到了router中的index.js中了，这个明显不对。、\n\n应当将其配置到main.js中。\n\n并且需要注意的是，router.beforeEach（）需要放置到new vue之前\n\nmain.js配置如下：\n\n```js\nimport Vue from 'vue'\nimport App from './App.vue'\nimport router from './router' //引入router\nimport store from './store'\n\nVue.config.productionTip = false\n\nimport common from '@/comF/common.js'\nVue.prototype.common = common\n\nimport axios from 'axios'\nVue.prototype.axios = axios\n\n// 路由变化跳转页面回到顶部\nrouter.afterEach((to,from,next) => {\n  window.scrollTo(0,0);\n})\n\nVue.filter(\"price\",function(value) {\n  var num2 = Number(value).toFixed(2);\n  var num = num2.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1,\");\n  return num;\n})\n\n// 全局路由守卫\nrouter.beforeEach((to, from, next) => {\n  let nameLists = [\"/center\", \"/mall/pay\"]\n  let isLogin = JSON.parse(window.localStorage.getItem(\"passUsrInfo\")) ? JSON.parse(window.localStorage.getItem(\"passUsrInfo\")).token : \"\";\n  let index = nameLists.findIndex(v => v == to.path)\n  if (index > -1) {  // 判断该路由是否需要登录权限\n    console.log(\"1\")\n    if (isLogin) { // 判断是否已经登录\n      console.log(\"11\")\n      next()\n    }\n    else {\n      console.log(\"12\")\n      next({\n        path: '/loading',\n        query: { redirect: to.fullPath }  // 将跳转的路由path作为参数，登录成功后跳转到该路由\n      })\n    }\n  }\n  else {\n    next()\n  }\n})\n\nnew Vue({\n  router,\n  store,\n  render: h => h(App)\n}).$mount('#app')\n\n```\n\n说明：\n\n1. import router from './router' //引入router\n2. router.beforeEach((to, from, next) //设置路由守卫\n3. new Vue（）//new 一个vue\n\nrouter的配置就按照正常的配置进行。\n\n### 实现效果\n\n如下图：\n\n登录至个人中心后，删除local storage的token，然后刷新页面，会自动跳转至loading，两秒钟后再跳转至login页面。\n\n![](https://limengtupian.oss-cn-beijing.aliyuncs.com/%E8%B7%AF%E7%94%B1%E5%AE%88%E5%8D%AB%E5%AE%9E%E7%8E%B0/1.gif)","slug":"路由守卫使用-判断登录状态","published":1,"updated":"2020-07-03T08:03:22.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl0uux6wt00497sufhjaaghu6","content":"<meta name=\"referrer\" content=\"no-referrer\"/>\n\n<h2 id=\"路由守卫使用-判断登录状态\"><a href=\"#路由守卫使用-判断登录状态\" class=\"headerlink\" title=\"路由守卫使用-判断登录状态\"></a>路由守卫使用-判断登录状态</h2><p>之前已经通过local storage模拟了注册登录机制，从而控制了页面根据不同的登录状态显示内容的不同。</p>\n<p>当用户已经登录的情况下：</p>\n<ol>\n<li> 首页右上角会显示center和register，而不是login和register</li>\n<li>可以直接通过movielist界面看到购物车内容，并且进入pay界面</li>\n</ol>\n<p>当没有登录的情况下，不能显示center和购物车内容。</p>\n<p>这其中还有一个问题，登录状态模拟的是10分钟有效期。当有效期结束，但是页面还停留在center页面时，再次刷新页面，依旧会停留再center页面，这个不符合逻辑。</p>\n<p>应当再次刷新后，直接跳转到login界面。</p>\n<p>这个可以通过vue-router的路由守卫去实现，如下；</p>\n<span id=\"more\"></span>\n\n<h3 id=\"vue-router路由守卫配置\"><a href=\"#vue-router路由守卫配置\" class=\"headerlink\" title=\"vue-router路由守卫配置\"></a>vue-router路由守卫配置</h3><p>一开始犯了一个错误，将router.beforeEach（）放到了router中的index.js中了，这个明显不对。、</p>\n<p>应当将其配置到main.js中。</p>\n<p>并且需要注意的是，router.beforeEach（）需要放置到new vue之前</p>\n<p>main.js配置如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">Vue</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">App</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./App.vue&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> router <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./router&#x27;</span> <span class=\"comment\">//引入router</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> store <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./store&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Vue</span>.<span class=\"property\">config</span>.<span class=\"property\">productionTip</span> = <span class=\"literal\">false</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> common <span class=\"keyword\">from</span> <span class=\"string\">&#x27;@/comF/common.js&#x27;</span></span><br><span class=\"line\"><span class=\"title class_\">Vue</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">common</span> = common</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> axios <span class=\"keyword\">from</span> <span class=\"string\">&#x27;axios&#x27;</span></span><br><span class=\"line\"><span class=\"title class_\">Vue</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">axios</span> = axios</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 路由变化跳转页面回到顶部</span></span><br><span class=\"line\">router.<span class=\"title function_\">afterEach</span>(<span class=\"function\">(<span class=\"params\">to,<span class=\"keyword\">from</span>,next</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">window</span>.<span class=\"title function_\">scrollTo</span>(<span class=\"number\">0</span>,<span class=\"number\">0</span>);</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Vue</span>.<span class=\"title function_\">filter</span>(<span class=\"string\">&quot;price&quot;</span>,<span class=\"keyword\">function</span>(<span class=\"params\">value</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> num2 = <span class=\"title class_\">Number</span>(value).<span class=\"title function_\">toFixed</span>(<span class=\"number\">2</span>);</span><br><span class=\"line\">  <span class=\"keyword\">var</span> num = num2.<span class=\"title function_\">toString</span>().<span class=\"title function_\">replace</span>(<span class=\"regexp\">/(\\d)(?=(\\d&#123;3&#125;)+(?!\\d))/g</span>, <span class=\"string\">&quot;$1,&quot;</span>);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> num;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 全局路由守卫</span></span><br><span class=\"line\">router.<span class=\"title function_\">beforeEach</span>(<span class=\"function\">(<span class=\"params\">to, <span class=\"keyword\">from</span>, next</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> nameLists = [<span class=\"string\">&quot;/center&quot;</span>, <span class=\"string\">&quot;/mall/pay&quot;</span>]</span><br><span class=\"line\">  <span class=\"keyword\">let</span> isLogin = <span class=\"title class_\">JSON</span>.<span class=\"title function_\">parse</span>(<span class=\"variable language_\">window</span>.<span class=\"property\">localStorage</span>.<span class=\"title function_\">getItem</span>(<span class=\"string\">&quot;passUsrInfo&quot;</span>)) ? <span class=\"title class_\">JSON</span>.<span class=\"title function_\">parse</span>(<span class=\"variable language_\">window</span>.<span class=\"property\">localStorage</span>.<span class=\"title function_\">getItem</span>(<span class=\"string\">&quot;passUsrInfo&quot;</span>)).<span class=\"property\">token</span> : <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> index = nameLists.<span class=\"title function_\">findIndex</span>(<span class=\"function\"><span class=\"params\">v</span> =&gt;</span> v == to.<span class=\"property\">path</span>)</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (index &gt; -<span class=\"number\">1</span>) &#123;  <span class=\"comment\">// 判断该路由是否需要登录权限</span></span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;1&quot;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (isLogin) &#123; <span class=\"comment\">// 判断是否已经登录</span></span><br><span class=\"line\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;11&quot;</span>)</span><br><span class=\"line\">      <span class=\"title function_\">next</span>()</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;12&quot;</span>)</span><br><span class=\"line\">      <span class=\"title function_\">next</span>(&#123;</span><br><span class=\"line\">        <span class=\"attr\">path</span>: <span class=\"string\">&#x27;/loading&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">query</span>: &#123; <span class=\"attr\">redirect</span>: to.<span class=\"property\">fullPath</span> &#125;  <span class=\"comment\">// 将跳转的路由path作为参数，登录成功后跳转到该路由</span></span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"title function_\">next</span>()</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">new</span> <span class=\"title class_\">Vue</span>(&#123;</span><br><span class=\"line\">  router,</span><br><span class=\"line\">  store,</span><br><span class=\"line\">  <span class=\"attr\">render</span>: <span class=\"function\"><span class=\"params\">h</span> =&gt;</span> <span class=\"title function_\">h</span>(<span class=\"title class_\">App</span>)</span><br><span class=\"line\">&#125;).$mount(<span class=\"string\">&#x27;#app&#x27;</span>)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>说明：</p>\n<ol>\n<li>import router from ‘./router’ //引入router</li>\n<li>router.beforeEach((to, from, next) //设置路由守卫</li>\n<li>new Vue（）//new 一个vue</li>\n</ol>\n<p>router的配置就按照正常的配置进行。</p>\n<h3 id=\"实现效果\"><a href=\"#实现效果\" class=\"headerlink\" title=\"实现效果\"></a>实现效果</h3><p>如下图：</p>\n<p>登录至个人中心后，删除local storage的token，然后刷新页面，会自动跳转至loading，两秒钟后再跳转至login页面。</p>\n<p><img src=\"https://limengtupian.oss-cn-beijing.aliyuncs.com/%E8%B7%AF%E7%94%B1%E5%AE%88%E5%8D%AB%E5%AE%9E%E7%8E%B0/1.gif\"></p>\n","site":{"data":{}},"excerpt":"<meta name=\"referrer\" content=\"no-referrer\"/>\n\n<h2 id=\"路由守卫使用-判断登录状态\"><a href=\"#路由守卫使用-判断登录状态\" class=\"headerlink\" title=\"路由守卫使用-判断登录状态\"></a>路由守卫使用-判断登录状态</h2><p>之前已经通过local storage模拟了注册登录机制，从而控制了页面根据不同的登录状态显示内容的不同。</p>\n<p>当用户已经登录的情况下：</p>\n<ol>\n<li> 首页右上角会显示center和register，而不是login和register</li>\n<li>可以直接通过movielist界面看到购物车内容，并且进入pay界面</li>\n</ol>\n<p>当没有登录的情况下，不能显示center和购物车内容。</p>\n<p>这其中还有一个问题，登录状态模拟的是10分钟有效期。当有效期结束，但是页面还停留在center页面时，再次刷新页面，依旧会停留再center页面，这个不符合逻辑。</p>\n<p>应当再次刷新后，直接跳转到login界面。</p>\n<p>这个可以通过vue-router的路由守卫去实现，如下；</p>","more":"<h3 id=\"vue-router路由守卫配置\"><a href=\"#vue-router路由守卫配置\" class=\"headerlink\" title=\"vue-router路由守卫配置\"></a>vue-router路由守卫配置</h3><p>一开始犯了一个错误，将router.beforeEach（）放到了router中的index.js中了，这个明显不对。、</p>\n<p>应当将其配置到main.js中。</p>\n<p>并且需要注意的是，router.beforeEach（）需要放置到new vue之前</p>\n<p>main.js配置如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">Vue</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">App</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./App.vue&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> router <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./router&#x27;</span> <span class=\"comment\">//引入router</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> store <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./store&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Vue</span>.<span class=\"property\">config</span>.<span class=\"property\">productionTip</span> = <span class=\"literal\">false</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> common <span class=\"keyword\">from</span> <span class=\"string\">&#x27;@/comF/common.js&#x27;</span></span><br><span class=\"line\"><span class=\"title class_\">Vue</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">common</span> = common</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> axios <span class=\"keyword\">from</span> <span class=\"string\">&#x27;axios&#x27;</span></span><br><span class=\"line\"><span class=\"title class_\">Vue</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">axios</span> = axios</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 路由变化跳转页面回到顶部</span></span><br><span class=\"line\">router.<span class=\"title function_\">afterEach</span>(<span class=\"function\">(<span class=\"params\">to,<span class=\"keyword\">from</span>,next</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">window</span>.<span class=\"title function_\">scrollTo</span>(<span class=\"number\">0</span>,<span class=\"number\">0</span>);</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Vue</span>.<span class=\"title function_\">filter</span>(<span class=\"string\">&quot;price&quot;</span>,<span class=\"keyword\">function</span>(<span class=\"params\">value</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> num2 = <span class=\"title class_\">Number</span>(value).<span class=\"title function_\">toFixed</span>(<span class=\"number\">2</span>);</span><br><span class=\"line\">  <span class=\"keyword\">var</span> num = num2.<span class=\"title function_\">toString</span>().<span class=\"title function_\">replace</span>(<span class=\"regexp\">/(\\d)(?=(\\d&#123;3&#125;)+(?!\\d))/g</span>, <span class=\"string\">&quot;$1,&quot;</span>);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> num;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 全局路由守卫</span></span><br><span class=\"line\">router.<span class=\"title function_\">beforeEach</span>(<span class=\"function\">(<span class=\"params\">to, <span class=\"keyword\">from</span>, next</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> nameLists = [<span class=\"string\">&quot;/center&quot;</span>, <span class=\"string\">&quot;/mall/pay&quot;</span>]</span><br><span class=\"line\">  <span class=\"keyword\">let</span> isLogin = <span class=\"title class_\">JSON</span>.<span class=\"title function_\">parse</span>(<span class=\"variable language_\">window</span>.<span class=\"property\">localStorage</span>.<span class=\"title function_\">getItem</span>(<span class=\"string\">&quot;passUsrInfo&quot;</span>)) ? <span class=\"title class_\">JSON</span>.<span class=\"title function_\">parse</span>(<span class=\"variable language_\">window</span>.<span class=\"property\">localStorage</span>.<span class=\"title function_\">getItem</span>(<span class=\"string\">&quot;passUsrInfo&quot;</span>)).<span class=\"property\">token</span> : <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> index = nameLists.<span class=\"title function_\">findIndex</span>(<span class=\"function\"><span class=\"params\">v</span> =&gt;</span> v == to.<span class=\"property\">path</span>)</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (index &gt; -<span class=\"number\">1</span>) &#123;  <span class=\"comment\">// 判断该路由是否需要登录权限</span></span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;1&quot;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (isLogin) &#123; <span class=\"comment\">// 判断是否已经登录</span></span><br><span class=\"line\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;11&quot;</span>)</span><br><span class=\"line\">      <span class=\"title function_\">next</span>()</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;12&quot;</span>)</span><br><span class=\"line\">      <span class=\"title function_\">next</span>(&#123;</span><br><span class=\"line\">        <span class=\"attr\">path</span>: <span class=\"string\">&#x27;/loading&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">query</span>: &#123; <span class=\"attr\">redirect</span>: to.<span class=\"property\">fullPath</span> &#125;  <span class=\"comment\">// 将跳转的路由path作为参数，登录成功后跳转到该路由</span></span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"title function_\">next</span>()</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">new</span> <span class=\"title class_\">Vue</span>(&#123;</span><br><span class=\"line\">  router,</span><br><span class=\"line\">  store,</span><br><span class=\"line\">  <span class=\"attr\">render</span>: <span class=\"function\"><span class=\"params\">h</span> =&gt;</span> <span class=\"title function_\">h</span>(<span class=\"title class_\">App</span>)</span><br><span class=\"line\">&#125;).$mount(<span class=\"string\">&#x27;#app&#x27;</span>)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>说明：</p>\n<ol>\n<li>import router from ‘./router’ //引入router</li>\n<li>router.beforeEach((to, from, next) //设置路由守卫</li>\n<li>new Vue（）//new 一个vue</li>\n</ol>\n<p>router的配置就按照正常的配置进行。</p>\n<h3 id=\"实现效果\"><a href=\"#实现效果\" class=\"headerlink\" title=\"实现效果\"></a>实现效果</h3><p>如下图：</p>\n<p>登录至个人中心后，删除local storage的token，然后刷新页面，会自动跳转至loading，两秒钟后再跳转至login页面。</p>\n<p><img src=\"https://limengtupian.oss-cn-beijing.aliyuncs.com/%E8%B7%AF%E7%94%B1%E5%AE%88%E5%8D%AB%E5%AE%9E%E7%8E%B0/1.gif\"></p>"},{"title":"静态布局、自适应布局、流式布局、响应式布局、弹性布局等的概念和区别","date":"2019-12-02T09:16:26.000Z","_content":"\n<meta name=\"referrer\" content=\"no-referrer\"/>\n\n## 静态布局、自适应布局、流式布局、响应式布局、弹性布局等的概念和区别/圣杯布局\n\n### 静态布局\n\n1. 布局特点：不管浏览器尺寸具体是多少，网页布局始终按照最初写代码时的布局来显示。常规的pc的网站都是静态（定宽度）布局的，也就是设置了min-width，这样的话，如果小于这个宽度就会出现滚动条，如果大于这个宽度则内容居中外加背景，这种设计常见与pc端。\n\n2. 布局特点：不管浏览器尺寸具体是多少，网页布局始终按照最初写代码时的布局来显示。\n\n   常规的pc的网站都是静态（定宽度）布局的，也就是设置了min-width，这样的话，如果小于这个宽度就会出现滚动条，如果大于这个宽度则内容居中外加背景，这种设计常见与pc端。\n\n3. * 优点：这种布局方式对设计师和CSS编写者来说都是最简单的，亦没有兼容性问题。\n   * 缺点：显而易见，即不能根据用户的屏幕尺寸做出不同的表现。\n<!-- more -->\n\n### 流式布局\n\n1. 流式布局（Liquid）的特点（也叫\"Fluid\") 是页面元素的宽度按照屏幕分辨率进行适配调整，但整体布局不变。代表作栅栏系统（网格系统）。\n2. 网页中主要的划分区域的尺寸使用百分数（搭配min-*、max-*属性使用），例如，设置网页主体的宽度为80%，min-width为960px。图片也作类似处理（width:100%, max-width一般设定为图片本身的尺寸，防止被拉伸而失真）。\n3. 布局和设计\n   * 布局特点：屏幕分辨率变化时，页面里元素的大小会变化而但布局不变。【这就导致如果屏幕太大或者太小都会导致元素无法正常显示】\n\n   * 设计方法：使用%百分比定义宽度，高度大都是用px来固定住，可以根据可视区域 (viewport) 和父元素的实时尺寸进行调整，尽可能的适应各种分辨率。往往配合 max-width/min-width 等属性控制尺寸流动范围以免过大或者过小影响阅读。\n4. 优点和缺点\n   * 按照屏幕分辨率进行适配调整，但整体布局不变。适应早期的web布局，兼容性高\n   * **缺点明显**：**主要的问题**是如果屏幕尺度跨度太大，那么在相对其原始设计而言过小或过大的屏幕上不能正常显示。因为宽度使用%百分比定义，但是高度和文字大小等大都是用px来固定，所以在大屏幕的手机下显示效果会变成有些页面元素宽度被拉的很长，但是高度、文字大小还是和原来一样（即：**这些东西无法变得“流式”**），显示非常不协调。\n\n### 自适应布局\n\n1. 自适应布局的特点是分别为不同的屏幕分辨率定义布局，即创建多个静态布局，每个静态布局对应一个屏幕分辨率范围。\n2. 实现方法\n   * 使用 @media 媒体查询给不同尺寸和介质的设备切换不同的样式。在优秀的响应范围设计下可以给适配范围内的设备最好的体验，在同一个设备下实际还是固定的布局。\n3. 特点\n   * 布局特点：屏幕分辨率变化时，页面里面元素的位置会变化而大小不会变化。\n4. 本质上是多个多个***静态布局***。\n\n### 响应式布局\n\n1. **可以把响应式布局看作是流式布局和自适应布局设计理念的融合**。\n2. 响应式设计的目标是确保一个页面在所有终端上（各种尺寸的PC、手机、手表、冰箱的Web浏览器等等）都能显示出令人满意的效果，对CSS编写者而言，在实现上不拘泥于具体手法，但通常是糅合了流式布局+弹性布局，再搭配媒体查询技术使用。\n3. 设计方法：\n   * 媒体查询+流式布局。通常使用 @media 媒体查询 和网格系统 (Grid System) 配合相对布局单位进行布局，实际上就是综合响应式、流动等上述技术通过 CSS 给单一网页不同设备返回不同样式的技术统称。\n4. 特点：\n   * 每个屏幕分辨率下面会有一个布局样式，即元素位置和大小都会变。\n5. 优点和缺点：\n   * 适应pc和移动端，如果足够耐心，效果完美\n   * （1）媒体查询是有限的，也就是可以枚举出来的，只能适应主流的宽高。（2）要匹配足够多的屏幕大小，工作量不小，设计也需要多个版本。需要很多个@media。\n6. 代表比如bootstrap，element等都是响应式的设计布局\n\n### 弹性布局\n\n1. 这类布局的特点是，**包裹文字的各元素的尺寸采用em/rem做单位，而页面的主要划分区域的尺寸仍使用百分数或px做单位（同「流式布局」或「静态/固定布局」）**。**早期浏览器不支持整个页面按比例缩放**，仅支持网页内文字尺寸的放大，这种情况下。使用em/rem做单位，可以使包裹文字的元素随着文字的缩放而缩放。\n2. **rem,em区别**：\n   * rem,em都是顺应不同网页字体大小展现而产生的。其中，em是相对其父元素，在实际应用中相对而言会带来很多不便；而rem是始终相对于html大小，即页面根元素。\n3. 根据不同的屏幕尺寸，rem改变的是font-size的大小，但是本质上，客户看到的布局是没有改变的，这一点不同于响应式布局。\n4. **响应式和弹性布局之间的对比：**\n   * rem布局：改变浏览器宽度，页面所有元素的高宽都等比例缩放，也就是大屏幕下导航是横的，小屏幕下还是横的只不过变小了。\n   * 响应式布局：改变浏览器宽度，“布局”会随之变化，不是一成不变的，例如导航栏在大屏幕下是横排，在小屏幕下是竖排，在超小屏幕下隐藏为菜单，也就是说如果有足够的耐心，在每一种屏幕下都应该有合理的布局，完美的效果。\n\n### 总结\n\n> 1. 如果只做pc端，那么静态布局（定宽度）是最好的选择；\n>\n> 2. 如果做移动端，且设计对高度和元素间距要求不高，那么弹性布局（rem+js）是最好的选择，一份css+一份js调节font-size搞定；\n>\n> 3. 如果pc，移动要兼容，而且要求很高那么响应式布局还是最好的选择，前提是设计根据不同的高宽做不同的设计，响应式根据媒体查询做不同的布局。\n\n## 圣杯布局的三种实现\n\n圣杯布局和双飞翼布局一直是前端面试的高频考点，圣杯布局的出现是来自由 Matthew Levine 在 2006 年写的一篇文章 《In Search of the Holy Grail》。 比起双飞翼布局，它的起源不是源于对页面的形象表达。在西方，圣杯是表达“渴求之物”的意思。而双飞翼布局则是源于淘宝的UED，可以说是灵感来自于页面渲染。\n\n### 效果图\n\n布局形式如下：\n\n- header和footer各自占领屏幕所有宽度，高度固定。\n- 中间的container是一个三栏布局。\n- 三栏布局两侧宽度固定不变，中间部分自动填充整个区域。\n- 中间部分的高度是三栏中最高的区域的高度。\n  ![shengbie](https://img-blog.csdnimg.cn/20190118092113972.png)\n  三种实现形式\n\n1. **浮动**\n\n   1. 设置header，footer高度\n\n   2. #container内部子元素有float浮动，所以会导致一些问题，所以添加了overflow：hidden；实际上也可以使用overflow：auto；\n\n   3. container左右两边需要留出左右对应的位置，padding-left: 200px;padding-right: 150px;\n\n   4. 给左右元素设置浮动后，脱离文档流。使用margin-left：-100%；和margin-right：-150px定位到对应的位置。\n\n      > 清除浮动参考:清除浮动\n\n   ```html\n   <body>\n     <div id=\"header\">#header</div>\n     <div id=\"container\">\n       <div id=\"center\" class=\"column\">#center</div>\n       <div id=\"left\" class=\"column\">#left</div>\n       <div id=\"right\" class=\"column\">#right</div>\n     </div>\n     <div id=\"footer\">#footer</div>\n   </body>\n   ```\n\n   ```css\n     body {\n       min-width: 550px;  /* 2x leftContent width + rightContent width */\n       font-weight: bold;\n       font-size: 20px;\n     }\n    \n     #header, #footer {\n       background: rgba(29, 27, 27, 0.726);\n       text-align: center;\n       height: 60px;\n       line-height: 60px;\n     }\n    \n     #container {\n       padding-left: 200px;   /* leftContent width */\n       padding-right: 150px;  /* rightContent width */\n       overflow: hidden;\n     }\n    \n     #container .column {\n       position: relative;\n       float: left;\n       text-align: center;\n       height: 300px;\n       line-height: 300px;\n     }\n    \n     #center {\n       width: 100%;\n       background: rgb(206, 201, 201);\n     }\n    \n     #left {\n       width: 200px;           /* leftContent width */\n       right: 200px;           /* leftContent width */\n       margin-left: -100%;\n       background: rgba(95, 179, 235, 0.972);\n     }\n    \n     #right {\n       width: 150px;           /* rightContent width */\n       margin-right: -150px;   /* rightContent width */\n       background: rgb(231, 105, 2);\n   ```\n\n   \n\n2. **flex布局**\n\n   - header和footer设置样式，横向撑满。\n\n   - container中的left、center、right依次排布即可\n\n   - 给container设置弹性布局 `display: flex;`\n\n   - left和right区域定宽，center设置 `flex: 1;` 即可\n\n     ```html\n     <body>\n       <div id=\"header\">#header</div>\n       <div id=\"container\">\n         <div id=\"left\" class=\"column\">#left</div>\n         <div id=\"center\" class=\"column\">#center</div>\n         <div id=\"right\" class=\"column\">#right</div>\n       </div>\n       <div id=\"footer\">#footer</div>\n     </body>\n     ```\n\n     ```css\n       body {\n         min-width: 550px;  \n         font-weight: bold;\n         font-size: 20px;\n       }\n       #header, #footer {\n         background: rgba(29, 27, 27, 0.726);\n         text-align: center;\n         height: 60px;\n         line-height: 60px;\n       }\n       #container {\n        display: flex;\n       }\n       #container .column {\n         text-align: center;\n         height: 300px;\n         line-height: 300px;\n       }\n       #center {\n         flex: 1;\n         background: rgb(206, 201, 201);\n       }\n       #left {\n         width: 200px;        \n         background: rgba(95, 179, 235, 0.972);\n       }\n       #right {\n         width: 150px;           \n         background: rgb(231, 105, 2);\n       }\n     ```\n\n3. **grid布局**\n\n   如上图所示，我们把body划分成三行四列的网格，其中有5条列网格线\n\n   给body元素添加display: grid;属性变成一个grid(网格)\n   给header元素设置grid-row: 1; 和 grid-column: 1/5; 意思是占据第一行网格的从第一条列网格线开始到第五条列网格线结束\n   给footer元素设置grid-row: 1; 和 grid-column: 1/5; 意思是占据第三行网格的从第一条列网格线开始到第五条列网格线结束\n   给left元素设置grid-row: 2; 和 grid-column: 1/2; 意思是占据第二行网格的从第一条列网格线开始到第二条列网格线结束\n   给center元素设置grid-row: 2; 和 grid-column: 2/4; 意思是占据第二行网格的从第二条列网格线开始到第四条列网格线结束\n   给right元素设置grid-row: 2; 和 grid-column: 4/5; 意思是占据第二行网格的从第四条列网格线开始到第五条列网格线结束\n\n   ```html\n   <body>\n     <div id=\"header\">#header</div>\n     <div id=\"left\" class=\"column\">#left</div>\n     <div id=\"center\" class=\"column\">#center</div>\n     <div id=\"right\" class=\"column\">#right</div>\n     <div id=\"footer\">#footer</div>\n   </body>\n   ```\n\n   ```css\n    body {\n       min-width: 550px;\n       font-weight: bold;\n       font-size: 20px;\n       display: grid;\n     }\n     #header,\n     #footer {\n       background: rgba(29, 27, 27, 0.726);\n       text-align: center;\n       height: 60px;\n       line-height: 60px;\n     }\n     #header {\n       grid-row: 1;\n       grid-column: 1/5;\n     }\n     #footer {\n       grid-row: 3;\n       grid-column: 1/5;\n     }\n     .column {\n       text-align: center;\n       height: 300px;\n       line-height: 300px;\n     }\n     #left {\n       grid-row: 2;\n       grid-column: 1/2;\n       background: rgba(95, 179, 235, 0.972);\n     }\n     #center {\n       grid-row: 2;\n       grid-column: 2/4;\n       background: rgb(206, 201, 201);\n     }\n     #right {\n       grid-row: 2;\n       grid-column: 4/5;\n       background: rgb(231, 105, 2);\n     }\n   ```\n\n4. 三种实现形式\n\n   三种实现形式内，不考虑兼容性的情况下，***flex布局***是使用比较广的，浮动的布局相对比较麻烦，需要设定各种margin和padding和position的定位，grid布局属于二维布局，就兼容性来说，还是比flex要差一些。\n\n## CSS实现文字和图片的水平垂直居中\n\n居中是一开始学习使用css遇到比较多的情况，不同的情况有不同的居中方式，随着前端的规范和写法的进步，有各种各样的方法实现，现在来记录一下。\n主要有文字、div块级元素和图片的居中，以下分几种情况说明。\n\n### 文字居中\n\n1. 单行文字（多行文字）\n\n   * 水平居中\n\n   ```css\n   text-align：center\n   ```\n\n   * 垂直居中\n     只要height值等于line-height值就ok\n\n   ```css\n   .son{height:100px;line-height:100px;}\n   ```\n\n   <!-- more -->\n\n2. 多行文字\n\n   * 垂直居中\n\n     1. 高度固定\n        **关键属性：**display:tabel-cell; vertical-align:middle;\n\n     ```css\n     <style>\n     div{height:300px;\n     width:200px;\n     vertical-align:middle;\n     display:table-cell;\n     word-break:break-all;\n     }\n     </style>\n     ```\n\n     2. 父级元素高度固定，子元素为行内元素\n        **关键属性：**父级:diaplay:tabel; 子集：display:tabel-cell; vertical-align:middle;\n\n     ```css\n     <style>div{height:300px;width:200px;display:table;word-break:break-all;background:#666;\n     }\n     span{display:table-cell;vertical-align:middle;\n     }\n     </style>\n     <div>\n     <span>some things</span>\n     </div>\n     ```\n\n     3. 父级元素高度固定，子元素为块元素且高度固定\n        **关键属性：**定位 + margin-top：负值；\n\n     ```css\n     <style type=\"text/css\">\n     *{margin:0;padding:0;}\n     div{height:300px;width:200px;position:relative;word-break:break-all;background:#666;}\n     p{position:absolute;top:50%;left:0;height:80px;margin-top:-40px;background:red;}\n     </style>     \n     <div>\n     <p>some things</p>\n     </div>\n     ```\n\n     4. 父级元素高度固定，子元素为块元素且高度不固定\n        **关键属性：**定位 + transform：translateY(-50%);\n\n     ```css\n     <style>\n     *{margin:0;padding:0;}  /*不加的话会被p或其他标签默认样式影响*/\n     div{height:300px;width:200px;position:relative; word-break:break-all;background:#666;}\n     p{position:absolute;top:50%;left:0;transform:translateY(-50%);}/*个人建议，被包裹的块标签就不要height，用内容将高度撑开就好*/\n     </style>\n     <div>\n     <p>some things</p>\n     </div>\n     ```\n\n     5. 父子元素高度均固定\n        **关键属性：**定位 + margin：auto；\n\n     ```css\n     <style>\n     *{margin:0;padding:0;}\n     div{height:300px;width:400px;position:relative;word-break:break-all;background:#666;}\n     p{position:absolute;top:0;bottom:0;right:0;left:0;margin:auto;height:80px;width:200px;background:red;}\n     </style>\n     <div>\n     <p>some things</p>\n     </div>\n     ```\n\n### 块级元素居中\n\n* 水平居中\n\n  1. 行内元素(inline 或 inline-* 元素)\n     此类元素需要水平居中，则父级元素必须是块级元素(block level)，且父级元素上需要这样设置样式：\n\n  ```css\n  .parent {\n   text-align: center;\n  }\n  ```\n\n  2. 块级元素\n     块级元素水平居中，需要设置 margin-left 和 margin-right 为 auto，且需要显示设置宽度，不然就占满整行，就无所谓水平居中了。\n\n  ```css\n  .block {\n   width: 300px;\n   margin: 0 auto;\n  }\n  ```\n\n  3. 同一行多个块级元素\n     如果是在同一行里需要居中多个块级元素，可以尝试下面的两种方法：\n\n  ```css\n  /* 方法一 */\n  .parent {\n      text-align: center;\n  }\n  .parent div {\n      display: inline-block;\n  }\n  /* 方法二 */\n  .parent {\n      display: -webkit-box;\n      display: -ms-flexbox;\n      display: flex;\n      -webkit-box-pack: center;\n      -ms-flex-pack: center;\n      justify-content: center;\n  }\n  ```\n\n* 垂直居中\n\n  1. 元素高度已知 \n     知道块元素的高度，那么使用绝对定位和负的 margin 即可实现垂直居中：\n\n  ```css\n  .parent {\n   position: relative;\n  }\n  .parent div {\n      position: absolute;\n      top: 50%;\n      height: 50px;\n      margin-top: -25px;\n  }\n  ```\n\n  2. 块级元素高度是可变的\n     这个时候就需要用 transform 的Y轴平移来实现了：\n\n  ```css\n  .parent {\n      position: relative;\n  }\n  .parent div {\n      position: absolute;\n      top: 50%;\n      transform: translateY(-50%);\n  }\n  ```\n\n  3. flexbox布局\n     flex主要是考虑布局问题\n\n  ```css\n  .parent {\n      display: flexbox;\n      justify-content: center;\n      flex-direction: column;\n  }\n  ```\n\n  4. 块级元素高度不是固定的，且不由内容决定\n\n  ```css\n  .parent {\n      position: relative;\n  }\n  .parent div {\n      position: absolute;\n      top: 30%;\n      bottom: 30%; \n  }\n  ```\n\n* 水平垂直居中\n\n  1. 知道宽高的盒子\n\n  ```css\n  .parent {\n   position: realtive;\n  }\n  .parent div {\n      width: 300px;\n      height: 300px;\n      posotion: absoltue;\n      left: 50%;\n      top: 50%;\n      margin-left: -150px;\n      margin-top: -150px;\n  }\n  ```\n\n  2. 不知道宽高的盒子\n\n  ```css\n  .parent {\n      position: realtive;\n  }\n  .parent div {\n      posotion: absoltue;\n      left: 50%;\n      top: 50%;\n      transform: translate(-50%, -50%);   \n  }\n  ```\n\n  3. flex布局\n\n  ```css\n  .parent {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n  }\n  ```\n\n<meta name=\"referrer\" content=\"no-referrer\"/>\n\n\n\n## flex设置成1和auto有什么区别\n\n ### flex的取值\n\n首先明确一点是， `flex` 是 `flex-grow`、`flex-shrink`、`flex-basis`的缩写。`flex` 的默认值是以上三个属性值的组合。\n\n那么，flex：1；和flex：auto；有对应的全写如下：\n\n```html\t\n.item {flex: auto;}\n```\n\n> ```html\n> .item {\n>  flex-grow: 1;\n>  flex-shrink: 1;\n>  flex-basis: auto;\n> }\n> ```\n\n```html\n.item {flex: 1;}\n```\n\n> ```html\n> .item {\n>  flex-grow: 1;\n>  flex-shrink: 1;\n>  flex-basis: 0%;\n> }\n> ```\n\n这三个缩写代表什么意思呢？\n\n<!-- more -->\n\n* flex-shrink属性指定了flex元素的收缩规则。flex元素仅在交替宽度之和大于容器的时候才会发生收缩，其收缩的大小是依据flex-shrink的值。\n* flex-grow属性用于设置或检索弹性盒子的扩展比率。\n* `flex-basis` 规定的是子元素的基准值。所以是否溢出的计算与此属性息息相关。`flex-basis` 规定的范围取决于 `box-sizing`。这里主要讨论以下 `flex-basis` 的取值情况：\n  1. `auto`：首先检索该子元素的主尺寸，如果主尺寸不为 `auto`，则使用值采取主尺寸之值；如果也是 `auto`，则使用值为 `content`。\n  2. `content`：指根据该子元素的内容自动布局。有的用户代理没有实现取 `content` 值，等效的替代方案是 `flex-basis` 和主尺寸都取 `auto`。\n  3. 百分比：根据其包含块（即伸缩父容器）的主尺寸计算。如果包含块的主尺寸未定义（即父容器的主尺寸取决于子元素），则计算结果和设为 `auto` 一样。\n\n### 举个例子\n\n```html\n<div class=\"parent\">\n    <div class=\"item-1\"></div>\n    <div class=\"item-2\"></div>\n    <div class=\"item-3\"></div>\n</div>\n```\n\n```css\n<style type=\"text/css\">\n    .parent {\n        display: flex;\n        width: 600px;\n    }\n    .parent > div {\n        height: 100px;\n    }\n    .item-1 {\n        width: 140px;\n        flex: 2 1 0%;\n        background: blue;\n    }\n    .item-2 {\n        width: 100px;\n        flex: 2 1 auto;\n        background: darkblue;\n    }\n    .item-3 {\n        flex: 1 1 200px;\n        background: lightblue;\n    }\n</style>\n```\n\n\n\n子元素的总基准值是：.item-1:0% + item-2:auto + .item-3:200px = 300px，其中\n\n```\n- 0% 即 0 宽度\n- auto 对应取主尺寸即 100px\n```\n\n故剩余空间为 600px - 300px = 300px\n\n有剩余空间，需要分配剩余空间，需要flex-grow，就是flex:2,lex:2,lex:1;\n\n剩余空间分配如下：\n\n```\n- item-1 和 item-2 各分配 2/5，各得 120px\n- item-3 分配 1/5，得 60px\n```\n\n各项目最终宽度为：\n\n```\n- item-1 = 0% + 120px = 120px\n- item-2 = auto + 120px = 220px\n- item-3 = 200px + 60px = 260px\n```\n\n***注意***\n\n- 当 item-1 基准值取 0% 的时候，是把该项目视为零尺寸的，故即便声明其尺寸为 140px，也并没有什么用，形同虚设\n- 而 item-2 基准值取 `auto` 的时候，根据规则基准值使用值是主尺寸值即 100px，故这 100px 不会纳入剩余空间\n\n### 全部设置\n\n```\n.item {flex: 2333 3222 234px;}\n.item {\n    flex-grow: 2333;\n    flex-shrink: 3222;\n    flex-basis: 234px;\n}\n```\n\n当 `flex` 取值为 `none`，则计算值为 0 0 auto，如下是等同的：\n\n```\n.item {flex: none;}\n.item {\n    flex-grow: 0;\n    flex-shrink: 0;\n    flex-basis: auto;\n}\n```\n\n当 `flex` 取值为 `auto`，则计算值为 1 1 auto，如下是等同的：\n\n```\n.item {flex: auto;}\n.item {\n    flex-grow: 1;\n    flex-shrink: 1;\n    flex-basis: auto;\n}\n```\n\n当 `flex` 取值为一个非负数字，则该数字为 `flex-grow` 值，`flex-shrink` 取 1，`flex-basis` 取 0%，如下是等同的：\n\n```\n.item {flex: 1;}\n.item {\n    flex-grow: 1;\n    flex-shrink: 1;\n    flex-basis: 0%;\n}\n```\n\n当 `flex` 取值为一个长度或百分比，则视为 `flex-basis` 值，`flex-grow` 取 1，`flex-shrink` 取 1，有如下等同情况（注意 0% 是一个百分比而不是一个非负数字）：\n\n```\n.item-1 {flex: 0%;}\n.item-1 {\n    flex-grow: 1;\n    flex-shrink: 1;\n    flex-basis: 0%;\n}\n.item-2 {flex: 24px;}\n.item-1 {\n    flex-grow: 1;\n    flex-shrink: 1;\n    flex-basis: 24px;\n}\n```\n\n当 `flex` 取值为两个非负数字，则分别视为 `flex-grow` 和 `flex-shrink` 的值，`flex-basis` 取 0%，如下是等同的：\n\n```\n.item {flex: 2 3;}\n.item {\n    flex-grow: 2;\n    flex-shrink: 3;\n    flex-basis: 0%;\n}\n```\n\n当 `flex` 取值为一个非负数字和一个长度或百分比，则分别视为 `flex-grow` 和 `flex-basis` 的值，`flex-shrink` 取 1，如下是等同的：\n\n```\n.item {flex: 2333 3222px;}\n.item {\n    flex-grow: 2333;\n    flex-shrink: 1;\n    flex-basis: 3222px;\n}\n```\n\n<meta name=\"referrer\" content=\"no-referrer\"/>\n\n## 移动端优先和桌面端优先\n\n### **什么是“移动端优先”和“桌面优先”方法**\n\n\n构建响应式网站是如今前端开发者的必备技能，当我们谈到响应式网站时，“移动端优先”这个词立刻就会出现在脑海中。\n\n我们知道从“移动端优先”这个角度开始设计很重要，但我们很少谈到使用“移动端优先”的方法来写代码。\n\n今天，我想与你分享“移动端优先”添加样式的方法，为什么这种方法更好，以及如何发挥它的魔力。\n\n<!-- more -->\n\n### 移动端优先和桌面端优先 区别\n\n“移动端优先”添加样式的方法指的是首先在移动设备上应用样式，然后通过媒体查询在样式表中加入应用于大屏幕的高级样式和其他覆盖样式。\n\n这个方法使用min-width媒体查询。\n\n```js\n// 这个样式在0px到600px应用\nbody { background: red; }\n\n// 这个样式在大于600px时应用\n@media (min-width: 600px) {\n    body { background: green; }\n}\n```\n\n另一方面，“桌面优先”添加样式的方法指的是首先在桌面设备上应用样式，然后通过媒体查询在样式表中加入应用于小屏幕的高级样式和其他覆盖样式。\n\n这个方法使用max-width媒体查询。\n\n```js\n// 这个样式在大于600px时应用\nbody { background: green; }\n\n// 这个样式在0px到600px应用\n@media (max-width: 600px) {\n    body { background: red; }\n}\n```\n\n### 为什么是移动端优先？\n\n* 为大屏幕编写的代码通常会比为小屏幕编写的代码更复杂，所以编写“移动端优先”代码可以简化你的代码。\n\n* 设想这样一个场景，你的网站有一个“内容-边栏”布局，.content在移动端占会100%的宽度，在桌面则占60%的宽度。\n\n  ![](https://zellwk.com/images/2014/12/mw-5.png)\n\n移动端代码为：\n\n```js\n.content {\n    // 为小屏幕设置属性\n    // 这里不需要设置任何属性，因为我们可以使用默认样式\n\n    // 为大屏幕设置属性\n    @media (min-width: 800px) {\n        float: left;\n        width: 60%;\n    }\n}\n```\n\n桌面端代码：\n\n```js\n.content {\n    // 为大屏幕设置属性\n    float: left;\n    width: 60%;\n\n    // 为小屏幕设置属性\n    // 注意我们需要重写两个默认属性才能使这个布局正常显示\n    @media (max-width: 800px) {\n        float: none;\n        width: 100%;\n    }\n}\n```\n\n* **这里的主要区别就是移动端的布局更多的情况是占用屏幕较大的布局，比如都是100%的占用，可以通过继承直接生成对应的布局。**\n\n### 结合max-width去使用\n\n* 当你的样式再不同的尺寸下都都不同的显示效果时，也可以通过max-width去终止之前尺寸的布局，节省后续布局的操作。\n\n  ![](https://zellwk.com/images/2014/12/mw-4.png)\n\n```js\n.gallery__item {\n    float: left;\n    margin-right: 5%;\n    margin-bottom: 5%;\n    @media (max-width: 800px) {\n        width: 30%;\n        &:nth-child(3n) {\n            margin-right: 0;\n        }\n    }\n\n    // min-width和max-width查询结合使用\n    @media (min-width: 800px) and (max-width: 1200px) {\n        width: 21.25%; // (100% - 15%) / 4\n        &:nth-child(4n) {\n            margin-right: 0;\n        }\n    }\n\n    @media (min-width: 1200px) {\n        width: 16%; // (100% - 20%) / 5\n        &:nth-child(5n) {\n            margin-right: 0;\n        }\n    }\n}\n```\n\n### 总结\n\n建立响应式网站时，min-width媒体查询非常有用，因为它减低了代码复杂度。不过，从上面的例子中可以看出，min-width查询并非所有问题的解决方案，有时在样式表中使用max-width查询也是有益的，它能帮助你保持代码更DRY。\n\n<meta name=\"referrer\" content=\"no-referrer\"/>\n\n## 移动端常用的meta标签\n\n### meta标签记录\n\n记录一下常用的meta标签\n\n<!-- more -->\n\n``` html\t\n<!DOCTYPE html> <!-- 使用 HTML5 doctype，不区分大小写 -->\n<html lang=\"zh-cmn-Hans\"> <!-- 更加标准的 lang 属性写法 http://zhi.hu/XyIa -->\n<head>\n    <!-- 声明文档使用的字符编码 -->\n    <meta charset='utf-8'>\n    <!-- 优先使用 IE 最新版本和 Chrome -->\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\"/>\n    <!-- 页面描述 -->\n    <meta name=\"description\" content=\"不超过150个字符\"/>\n    <!-- 页面关键词 -->\n    <meta name=\"keywords\" content=\"\"/>\n    <!-- 网页作者 -->\n    <meta name=\"author\" content=\"name, email@gmail.com\"/>\n    <!-- 搜索引擎抓取 -->\n    <meta name=\"robots\" content=\"index,follow\"/>\n    <!-- 为移动设备添加 viewport -->\n    <meta name=\"viewport\" content=\"initial-scale=1, maximum-scale=3, minimum-scale=1, user-scalable=no\">\n    <!-- `width=device-width` 会导致 iPhone 5 添加到主屏后以 WebApp 全屏模式打开页面时出现黑边 http://bigc.at/ios-webapp-viewport-meta.orz -->\n \n    <!-- iOS 设备 begin -->\n    <meta name=\"apple-mobile-web-app-title\" content=\"标题\">\n    <!-- 添加到主屏后的标题（iOS 6 新增） -->\n    <meta name=\"apple-mobile-web-app-capable\" content=\"yes\"/>\n    <!-- 是否启用 WebApp 全屏模式，删除苹果默认的工具栏和菜单栏 -->\n \n    <meta name=\"apple-itunes-app\" content=\"app-id=myAppStoreID, affiliate-data=myAffiliateData, app-argument=myURL\">\n    <!-- 添加智能 App 广告条 Smart App Banner（iOS 6+ Safari） -->\n    <meta name=\"apple-mobile-web-app-status-bar-style\" content=\"black\"/>\n    <!-- 设置苹果工具栏颜色 -->\n    <meta name=\"format-detection\" content=\"telphone=no, email=no\"/>\n    <!-- 忽略页面中的数字识别为电话，忽略email识别 -->\n    <!-- 启用360浏览器的极速模式(webkit) -->\n    <meta name=\"renderer\" content=\"webkit\">\n    <!-- 避免IE使用兼容模式 -->\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <!-- 不让百度转码 -->\n    <meta http-equiv=\"Cache-Control\" content=\"no-siteapp\" />\n    <!-- 针对手持设备优化，主要是针对一些老的不识别viewport的浏览器，比如黑莓 -->\n    <meta name=\"HandheldFriendly\" content=\"true\">\n    <!-- 微软的老式浏览器 -->\n    <meta name=\"MobileOptimized\" content=\"320\">\n    <!-- uc强制竖屏 -->\n    <meta name=\"screen-orientation\" content=\"portrait\">\n    <!-- QQ强制竖屏 -->\n    <meta name=\"x5-orientation\" content=\"portrait\">\n    <!-- UC强制全屏 -->\n    <meta name=\"full-screen\" content=\"yes\">\n    <!-- QQ强制全屏 -->\n    <meta name=\"x5-fullscreen\" content=\"true\">\n    <!-- UC应用模式 -->\n    <meta name=\"browsermode\" content=\"application\">\n    <!-- QQ应用模式 -->\n    <meta name=\"x5-page-mode\" content=\"app\">\n    <!-- windows phone 点击无高光 -->\n    <meta name=\"msapplication-tap-highlight\" content=\"no\">\n    <!-- iOS 图标 begin -->\n    <link rel=\"apple-touch-icon-precomposed\" href=\"/apple-touch-icon-57x57-precomposed.png\"/>\n    <!-- iPhone 和 iTouch，默认 57x57 像素，必须有 -->\n    <link rel=\"apple-touch-icon-precomposed\" sizes=\"114x114\" href=\"/apple-touch-icon-114x114-precomposed.png\"/>\n    <!-- Retina iPhone 和 Retina iTouch，114x114 像素，可以没有，但推荐有 -->\n    <link rel=\"apple-touch-icon-precomposed\" sizes=\"144x144\" href=\"/apple-touch-icon-144x144-precomposed.png\"/>\n    <!-- Retina iPad，144x144 像素，可以没有，但推荐有 -->\n    <!-- iOS 图标 end -->\n \n    <!-- iOS 启动画面 begin -->\n    <link rel=\"apple-touch-startup-image\" sizes=\"768x1004\" href=\"/splash-screen-768x1004.png\"/>\n    <!-- iPad 竖屏 768 x 1004（标准分辨率） -->\n    <link rel=\"apple-touch-startup-image\" sizes=\"1536x2008\" href=\"/splash-screen-1536x2008.png\"/>\n    <!-- iPad 竖屏 1536x2008（Retina） -->\n    <link rel=\"apple-touch-startup-image\" sizes=\"1024x748\" href=\"/Default-Portrait-1024x748.png\"/>\n    <!-- iPad 横屏 1024x748（标准分辨率） -->\n    <link rel=\"apple-touch-startup-image\" sizes=\"2048x1496\" href=\"/splash-screen-2048x1496.png\"/>\n    <!-- iPad 横屏 2048x1496（Retina） -->\n \n    <link rel=\"apple-touch-startup-image\" href=\"/splash-screen-320x480.png\"/>\n    <!-- iPhone/iPod Touch 竖屏 320x480 (标准分辨率) -->\n    <link rel=\"apple-touch-startup-image\" sizes=\"640x960\" href=\"/splash-screen-640x960.png\"/>\n    <!-- iPhone/iPod Touch 竖屏 640x960 (Retina) -->\n    <link rel=\"apple-touch-startup-image\" sizes=\"640x1136\" href=\"/splash-screen-640x1136.png\"/>\n    <!-- iPhone 5/iPod Touch 5 竖屏 640x1136 (Retina) -->\n    <!-- iOS 启动画面 end -->\n \n    <!-- iOS 设备 end -->\n    <meta name=\"msapplication-TileColor\" content=\"#000\"/>\n    <!-- Windows 8 磁贴颜色 -->\n    <meta name=\"msapplication-TileImage\" content=\"icon.png\"/>\n    <!-- Windows 8 磁贴图标 -->\n \n    <link rel=\"alternate\" type=\"application/rss+xml\" title=\"RSS\" href=\"/rss.xml\"/>\n    <!-- 添加 RSS 订阅 -->\n    <link rel=\"shortcut icon\" type=\"image/ico\" href=\"/favicon.ico\"/>\n    <!-- 添加 favicon icon -->\n\n    <!-- sns 社交标签 begin -->\n    <!-- 参考微博API -->\n    <meta property=\"og:type\" content=\"类型\" />\n    <meta property=\"og:url\" content=\"URL地址\" />\n    <meta property=\"og:title\" content=\"标题\" />\n    <meta property=\"og:image\" content=\"图片\" />\n    <meta property=\"og:description\" content=\"描述\" />\n    <!-- sns 社交标签 end -->\n \n    <title>标题</title>\n</head>\n```\n\n","source":"_posts/静态布局、自适应布局、流式布局、响应式布局、弹性布局等的概念和区别.md","raw":"---\ntitle: 静态布局、自适应布局、流式布局、响应式布局、弹性布局等的概念和区别\ndate: 2019-12-02 17:16:26\ntags: [自适应布局,响应式布局，弹性布局]\n---\n\n<meta name=\"referrer\" content=\"no-referrer\"/>\n\n## 静态布局、自适应布局、流式布局、响应式布局、弹性布局等的概念和区别/圣杯布局\n\n### 静态布局\n\n1. 布局特点：不管浏览器尺寸具体是多少，网页布局始终按照最初写代码时的布局来显示。常规的pc的网站都是静态（定宽度）布局的，也就是设置了min-width，这样的话，如果小于这个宽度就会出现滚动条，如果大于这个宽度则内容居中外加背景，这种设计常见与pc端。\n\n2. 布局特点：不管浏览器尺寸具体是多少，网页布局始终按照最初写代码时的布局来显示。\n\n   常规的pc的网站都是静态（定宽度）布局的，也就是设置了min-width，这样的话，如果小于这个宽度就会出现滚动条，如果大于这个宽度则内容居中外加背景，这种设计常见与pc端。\n\n3. * 优点：这种布局方式对设计师和CSS编写者来说都是最简单的，亦没有兼容性问题。\n   * 缺点：显而易见，即不能根据用户的屏幕尺寸做出不同的表现。\n<!-- more -->\n\n### 流式布局\n\n1. 流式布局（Liquid）的特点（也叫\"Fluid\") 是页面元素的宽度按照屏幕分辨率进行适配调整，但整体布局不变。代表作栅栏系统（网格系统）。\n2. 网页中主要的划分区域的尺寸使用百分数（搭配min-*、max-*属性使用），例如，设置网页主体的宽度为80%，min-width为960px。图片也作类似处理（width:100%, max-width一般设定为图片本身的尺寸，防止被拉伸而失真）。\n3. 布局和设计\n   * 布局特点：屏幕分辨率变化时，页面里元素的大小会变化而但布局不变。【这就导致如果屏幕太大或者太小都会导致元素无法正常显示】\n\n   * 设计方法：使用%百分比定义宽度，高度大都是用px来固定住，可以根据可视区域 (viewport) 和父元素的实时尺寸进行调整，尽可能的适应各种分辨率。往往配合 max-width/min-width 等属性控制尺寸流动范围以免过大或者过小影响阅读。\n4. 优点和缺点\n   * 按照屏幕分辨率进行适配调整，但整体布局不变。适应早期的web布局，兼容性高\n   * **缺点明显**：**主要的问题**是如果屏幕尺度跨度太大，那么在相对其原始设计而言过小或过大的屏幕上不能正常显示。因为宽度使用%百分比定义，但是高度和文字大小等大都是用px来固定，所以在大屏幕的手机下显示效果会变成有些页面元素宽度被拉的很长，但是高度、文字大小还是和原来一样（即：**这些东西无法变得“流式”**），显示非常不协调。\n\n### 自适应布局\n\n1. 自适应布局的特点是分别为不同的屏幕分辨率定义布局，即创建多个静态布局，每个静态布局对应一个屏幕分辨率范围。\n2. 实现方法\n   * 使用 @media 媒体查询给不同尺寸和介质的设备切换不同的样式。在优秀的响应范围设计下可以给适配范围内的设备最好的体验，在同一个设备下实际还是固定的布局。\n3. 特点\n   * 布局特点：屏幕分辨率变化时，页面里面元素的位置会变化而大小不会变化。\n4. 本质上是多个多个***静态布局***。\n\n### 响应式布局\n\n1. **可以把响应式布局看作是流式布局和自适应布局设计理念的融合**。\n2. 响应式设计的目标是确保一个页面在所有终端上（各种尺寸的PC、手机、手表、冰箱的Web浏览器等等）都能显示出令人满意的效果，对CSS编写者而言，在实现上不拘泥于具体手法，但通常是糅合了流式布局+弹性布局，再搭配媒体查询技术使用。\n3. 设计方法：\n   * 媒体查询+流式布局。通常使用 @media 媒体查询 和网格系统 (Grid System) 配合相对布局单位进行布局，实际上就是综合响应式、流动等上述技术通过 CSS 给单一网页不同设备返回不同样式的技术统称。\n4. 特点：\n   * 每个屏幕分辨率下面会有一个布局样式，即元素位置和大小都会变。\n5. 优点和缺点：\n   * 适应pc和移动端，如果足够耐心，效果完美\n   * （1）媒体查询是有限的，也就是可以枚举出来的，只能适应主流的宽高。（2）要匹配足够多的屏幕大小，工作量不小，设计也需要多个版本。需要很多个@media。\n6. 代表比如bootstrap，element等都是响应式的设计布局\n\n### 弹性布局\n\n1. 这类布局的特点是，**包裹文字的各元素的尺寸采用em/rem做单位，而页面的主要划分区域的尺寸仍使用百分数或px做单位（同「流式布局」或「静态/固定布局」）**。**早期浏览器不支持整个页面按比例缩放**，仅支持网页内文字尺寸的放大，这种情况下。使用em/rem做单位，可以使包裹文字的元素随着文字的缩放而缩放。\n2. **rem,em区别**：\n   * rem,em都是顺应不同网页字体大小展现而产生的。其中，em是相对其父元素，在实际应用中相对而言会带来很多不便；而rem是始终相对于html大小，即页面根元素。\n3. 根据不同的屏幕尺寸，rem改变的是font-size的大小，但是本质上，客户看到的布局是没有改变的，这一点不同于响应式布局。\n4. **响应式和弹性布局之间的对比：**\n   * rem布局：改变浏览器宽度，页面所有元素的高宽都等比例缩放，也就是大屏幕下导航是横的，小屏幕下还是横的只不过变小了。\n   * 响应式布局：改变浏览器宽度，“布局”会随之变化，不是一成不变的，例如导航栏在大屏幕下是横排，在小屏幕下是竖排，在超小屏幕下隐藏为菜单，也就是说如果有足够的耐心，在每一种屏幕下都应该有合理的布局，完美的效果。\n\n### 总结\n\n> 1. 如果只做pc端，那么静态布局（定宽度）是最好的选择；\n>\n> 2. 如果做移动端，且设计对高度和元素间距要求不高，那么弹性布局（rem+js）是最好的选择，一份css+一份js调节font-size搞定；\n>\n> 3. 如果pc，移动要兼容，而且要求很高那么响应式布局还是最好的选择，前提是设计根据不同的高宽做不同的设计，响应式根据媒体查询做不同的布局。\n\n## 圣杯布局的三种实现\n\n圣杯布局和双飞翼布局一直是前端面试的高频考点，圣杯布局的出现是来自由 Matthew Levine 在 2006 年写的一篇文章 《In Search of the Holy Grail》。 比起双飞翼布局，它的起源不是源于对页面的形象表达。在西方，圣杯是表达“渴求之物”的意思。而双飞翼布局则是源于淘宝的UED，可以说是灵感来自于页面渲染。\n\n### 效果图\n\n布局形式如下：\n\n- header和footer各自占领屏幕所有宽度，高度固定。\n- 中间的container是一个三栏布局。\n- 三栏布局两侧宽度固定不变，中间部分自动填充整个区域。\n- 中间部分的高度是三栏中最高的区域的高度。\n  ![shengbie](https://img-blog.csdnimg.cn/20190118092113972.png)\n  三种实现形式\n\n1. **浮动**\n\n   1. 设置header，footer高度\n\n   2. #container内部子元素有float浮动，所以会导致一些问题，所以添加了overflow：hidden；实际上也可以使用overflow：auto；\n\n   3. container左右两边需要留出左右对应的位置，padding-left: 200px;padding-right: 150px;\n\n   4. 给左右元素设置浮动后，脱离文档流。使用margin-left：-100%；和margin-right：-150px定位到对应的位置。\n\n      > 清除浮动参考:清除浮动\n\n   ```html\n   <body>\n     <div id=\"header\">#header</div>\n     <div id=\"container\">\n       <div id=\"center\" class=\"column\">#center</div>\n       <div id=\"left\" class=\"column\">#left</div>\n       <div id=\"right\" class=\"column\">#right</div>\n     </div>\n     <div id=\"footer\">#footer</div>\n   </body>\n   ```\n\n   ```css\n     body {\n       min-width: 550px;  /* 2x leftContent width + rightContent width */\n       font-weight: bold;\n       font-size: 20px;\n     }\n    \n     #header, #footer {\n       background: rgba(29, 27, 27, 0.726);\n       text-align: center;\n       height: 60px;\n       line-height: 60px;\n     }\n    \n     #container {\n       padding-left: 200px;   /* leftContent width */\n       padding-right: 150px;  /* rightContent width */\n       overflow: hidden;\n     }\n    \n     #container .column {\n       position: relative;\n       float: left;\n       text-align: center;\n       height: 300px;\n       line-height: 300px;\n     }\n    \n     #center {\n       width: 100%;\n       background: rgb(206, 201, 201);\n     }\n    \n     #left {\n       width: 200px;           /* leftContent width */\n       right: 200px;           /* leftContent width */\n       margin-left: -100%;\n       background: rgba(95, 179, 235, 0.972);\n     }\n    \n     #right {\n       width: 150px;           /* rightContent width */\n       margin-right: -150px;   /* rightContent width */\n       background: rgb(231, 105, 2);\n   ```\n\n   \n\n2. **flex布局**\n\n   - header和footer设置样式，横向撑满。\n\n   - container中的left、center、right依次排布即可\n\n   - 给container设置弹性布局 `display: flex;`\n\n   - left和right区域定宽，center设置 `flex: 1;` 即可\n\n     ```html\n     <body>\n       <div id=\"header\">#header</div>\n       <div id=\"container\">\n         <div id=\"left\" class=\"column\">#left</div>\n         <div id=\"center\" class=\"column\">#center</div>\n         <div id=\"right\" class=\"column\">#right</div>\n       </div>\n       <div id=\"footer\">#footer</div>\n     </body>\n     ```\n\n     ```css\n       body {\n         min-width: 550px;  \n         font-weight: bold;\n         font-size: 20px;\n       }\n       #header, #footer {\n         background: rgba(29, 27, 27, 0.726);\n         text-align: center;\n         height: 60px;\n         line-height: 60px;\n       }\n       #container {\n        display: flex;\n       }\n       #container .column {\n         text-align: center;\n         height: 300px;\n         line-height: 300px;\n       }\n       #center {\n         flex: 1;\n         background: rgb(206, 201, 201);\n       }\n       #left {\n         width: 200px;        \n         background: rgba(95, 179, 235, 0.972);\n       }\n       #right {\n         width: 150px;           \n         background: rgb(231, 105, 2);\n       }\n     ```\n\n3. **grid布局**\n\n   如上图所示，我们把body划分成三行四列的网格，其中有5条列网格线\n\n   给body元素添加display: grid;属性变成一个grid(网格)\n   给header元素设置grid-row: 1; 和 grid-column: 1/5; 意思是占据第一行网格的从第一条列网格线开始到第五条列网格线结束\n   给footer元素设置grid-row: 1; 和 grid-column: 1/5; 意思是占据第三行网格的从第一条列网格线开始到第五条列网格线结束\n   给left元素设置grid-row: 2; 和 grid-column: 1/2; 意思是占据第二行网格的从第一条列网格线开始到第二条列网格线结束\n   给center元素设置grid-row: 2; 和 grid-column: 2/4; 意思是占据第二行网格的从第二条列网格线开始到第四条列网格线结束\n   给right元素设置grid-row: 2; 和 grid-column: 4/5; 意思是占据第二行网格的从第四条列网格线开始到第五条列网格线结束\n\n   ```html\n   <body>\n     <div id=\"header\">#header</div>\n     <div id=\"left\" class=\"column\">#left</div>\n     <div id=\"center\" class=\"column\">#center</div>\n     <div id=\"right\" class=\"column\">#right</div>\n     <div id=\"footer\">#footer</div>\n   </body>\n   ```\n\n   ```css\n    body {\n       min-width: 550px;\n       font-weight: bold;\n       font-size: 20px;\n       display: grid;\n     }\n     #header,\n     #footer {\n       background: rgba(29, 27, 27, 0.726);\n       text-align: center;\n       height: 60px;\n       line-height: 60px;\n     }\n     #header {\n       grid-row: 1;\n       grid-column: 1/5;\n     }\n     #footer {\n       grid-row: 3;\n       grid-column: 1/5;\n     }\n     .column {\n       text-align: center;\n       height: 300px;\n       line-height: 300px;\n     }\n     #left {\n       grid-row: 2;\n       grid-column: 1/2;\n       background: rgba(95, 179, 235, 0.972);\n     }\n     #center {\n       grid-row: 2;\n       grid-column: 2/4;\n       background: rgb(206, 201, 201);\n     }\n     #right {\n       grid-row: 2;\n       grid-column: 4/5;\n       background: rgb(231, 105, 2);\n     }\n   ```\n\n4. 三种实现形式\n\n   三种实现形式内，不考虑兼容性的情况下，***flex布局***是使用比较广的，浮动的布局相对比较麻烦，需要设定各种margin和padding和position的定位，grid布局属于二维布局，就兼容性来说，还是比flex要差一些。\n\n## CSS实现文字和图片的水平垂直居中\n\n居中是一开始学习使用css遇到比较多的情况，不同的情况有不同的居中方式，随着前端的规范和写法的进步，有各种各样的方法实现，现在来记录一下。\n主要有文字、div块级元素和图片的居中，以下分几种情况说明。\n\n### 文字居中\n\n1. 单行文字（多行文字）\n\n   * 水平居中\n\n   ```css\n   text-align：center\n   ```\n\n   * 垂直居中\n     只要height值等于line-height值就ok\n\n   ```css\n   .son{height:100px;line-height:100px;}\n   ```\n\n   <!-- more -->\n\n2. 多行文字\n\n   * 垂直居中\n\n     1. 高度固定\n        **关键属性：**display:tabel-cell; vertical-align:middle;\n\n     ```css\n     <style>\n     div{height:300px;\n     width:200px;\n     vertical-align:middle;\n     display:table-cell;\n     word-break:break-all;\n     }\n     </style>\n     ```\n\n     2. 父级元素高度固定，子元素为行内元素\n        **关键属性：**父级:diaplay:tabel; 子集：display:tabel-cell; vertical-align:middle;\n\n     ```css\n     <style>div{height:300px;width:200px;display:table;word-break:break-all;background:#666;\n     }\n     span{display:table-cell;vertical-align:middle;\n     }\n     </style>\n     <div>\n     <span>some things</span>\n     </div>\n     ```\n\n     3. 父级元素高度固定，子元素为块元素且高度固定\n        **关键属性：**定位 + margin-top：负值；\n\n     ```css\n     <style type=\"text/css\">\n     *{margin:0;padding:0;}\n     div{height:300px;width:200px;position:relative;word-break:break-all;background:#666;}\n     p{position:absolute;top:50%;left:0;height:80px;margin-top:-40px;background:red;}\n     </style>     \n     <div>\n     <p>some things</p>\n     </div>\n     ```\n\n     4. 父级元素高度固定，子元素为块元素且高度不固定\n        **关键属性：**定位 + transform：translateY(-50%);\n\n     ```css\n     <style>\n     *{margin:0;padding:0;}  /*不加的话会被p或其他标签默认样式影响*/\n     div{height:300px;width:200px;position:relative; word-break:break-all;background:#666;}\n     p{position:absolute;top:50%;left:0;transform:translateY(-50%);}/*个人建议，被包裹的块标签就不要height，用内容将高度撑开就好*/\n     </style>\n     <div>\n     <p>some things</p>\n     </div>\n     ```\n\n     5. 父子元素高度均固定\n        **关键属性：**定位 + margin：auto；\n\n     ```css\n     <style>\n     *{margin:0;padding:0;}\n     div{height:300px;width:400px;position:relative;word-break:break-all;background:#666;}\n     p{position:absolute;top:0;bottom:0;right:0;left:0;margin:auto;height:80px;width:200px;background:red;}\n     </style>\n     <div>\n     <p>some things</p>\n     </div>\n     ```\n\n### 块级元素居中\n\n* 水平居中\n\n  1. 行内元素(inline 或 inline-* 元素)\n     此类元素需要水平居中，则父级元素必须是块级元素(block level)，且父级元素上需要这样设置样式：\n\n  ```css\n  .parent {\n   text-align: center;\n  }\n  ```\n\n  2. 块级元素\n     块级元素水平居中，需要设置 margin-left 和 margin-right 为 auto，且需要显示设置宽度，不然就占满整行，就无所谓水平居中了。\n\n  ```css\n  .block {\n   width: 300px;\n   margin: 0 auto;\n  }\n  ```\n\n  3. 同一行多个块级元素\n     如果是在同一行里需要居中多个块级元素，可以尝试下面的两种方法：\n\n  ```css\n  /* 方法一 */\n  .parent {\n      text-align: center;\n  }\n  .parent div {\n      display: inline-block;\n  }\n  /* 方法二 */\n  .parent {\n      display: -webkit-box;\n      display: -ms-flexbox;\n      display: flex;\n      -webkit-box-pack: center;\n      -ms-flex-pack: center;\n      justify-content: center;\n  }\n  ```\n\n* 垂直居中\n\n  1. 元素高度已知 \n     知道块元素的高度，那么使用绝对定位和负的 margin 即可实现垂直居中：\n\n  ```css\n  .parent {\n   position: relative;\n  }\n  .parent div {\n      position: absolute;\n      top: 50%;\n      height: 50px;\n      margin-top: -25px;\n  }\n  ```\n\n  2. 块级元素高度是可变的\n     这个时候就需要用 transform 的Y轴平移来实现了：\n\n  ```css\n  .parent {\n      position: relative;\n  }\n  .parent div {\n      position: absolute;\n      top: 50%;\n      transform: translateY(-50%);\n  }\n  ```\n\n  3. flexbox布局\n     flex主要是考虑布局问题\n\n  ```css\n  .parent {\n      display: flexbox;\n      justify-content: center;\n      flex-direction: column;\n  }\n  ```\n\n  4. 块级元素高度不是固定的，且不由内容决定\n\n  ```css\n  .parent {\n      position: relative;\n  }\n  .parent div {\n      position: absolute;\n      top: 30%;\n      bottom: 30%; \n  }\n  ```\n\n* 水平垂直居中\n\n  1. 知道宽高的盒子\n\n  ```css\n  .parent {\n   position: realtive;\n  }\n  .parent div {\n      width: 300px;\n      height: 300px;\n      posotion: absoltue;\n      left: 50%;\n      top: 50%;\n      margin-left: -150px;\n      margin-top: -150px;\n  }\n  ```\n\n  2. 不知道宽高的盒子\n\n  ```css\n  .parent {\n      position: realtive;\n  }\n  .parent div {\n      posotion: absoltue;\n      left: 50%;\n      top: 50%;\n      transform: translate(-50%, -50%);   \n  }\n  ```\n\n  3. flex布局\n\n  ```css\n  .parent {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n  }\n  ```\n\n<meta name=\"referrer\" content=\"no-referrer\"/>\n\n\n\n## flex设置成1和auto有什么区别\n\n ### flex的取值\n\n首先明确一点是， `flex` 是 `flex-grow`、`flex-shrink`、`flex-basis`的缩写。`flex` 的默认值是以上三个属性值的组合。\n\n那么，flex：1；和flex：auto；有对应的全写如下：\n\n```html\t\n.item {flex: auto;}\n```\n\n> ```html\n> .item {\n>  flex-grow: 1;\n>  flex-shrink: 1;\n>  flex-basis: auto;\n> }\n> ```\n\n```html\n.item {flex: 1;}\n```\n\n> ```html\n> .item {\n>  flex-grow: 1;\n>  flex-shrink: 1;\n>  flex-basis: 0%;\n> }\n> ```\n\n这三个缩写代表什么意思呢？\n\n<!-- more -->\n\n* flex-shrink属性指定了flex元素的收缩规则。flex元素仅在交替宽度之和大于容器的时候才会发生收缩，其收缩的大小是依据flex-shrink的值。\n* flex-grow属性用于设置或检索弹性盒子的扩展比率。\n* `flex-basis` 规定的是子元素的基准值。所以是否溢出的计算与此属性息息相关。`flex-basis` 规定的范围取决于 `box-sizing`。这里主要讨论以下 `flex-basis` 的取值情况：\n  1. `auto`：首先检索该子元素的主尺寸，如果主尺寸不为 `auto`，则使用值采取主尺寸之值；如果也是 `auto`，则使用值为 `content`。\n  2. `content`：指根据该子元素的内容自动布局。有的用户代理没有实现取 `content` 值，等效的替代方案是 `flex-basis` 和主尺寸都取 `auto`。\n  3. 百分比：根据其包含块（即伸缩父容器）的主尺寸计算。如果包含块的主尺寸未定义（即父容器的主尺寸取决于子元素），则计算结果和设为 `auto` 一样。\n\n### 举个例子\n\n```html\n<div class=\"parent\">\n    <div class=\"item-1\"></div>\n    <div class=\"item-2\"></div>\n    <div class=\"item-3\"></div>\n</div>\n```\n\n```css\n<style type=\"text/css\">\n    .parent {\n        display: flex;\n        width: 600px;\n    }\n    .parent > div {\n        height: 100px;\n    }\n    .item-1 {\n        width: 140px;\n        flex: 2 1 0%;\n        background: blue;\n    }\n    .item-2 {\n        width: 100px;\n        flex: 2 1 auto;\n        background: darkblue;\n    }\n    .item-3 {\n        flex: 1 1 200px;\n        background: lightblue;\n    }\n</style>\n```\n\n\n\n子元素的总基准值是：.item-1:0% + item-2:auto + .item-3:200px = 300px，其中\n\n```\n- 0% 即 0 宽度\n- auto 对应取主尺寸即 100px\n```\n\n故剩余空间为 600px - 300px = 300px\n\n有剩余空间，需要分配剩余空间，需要flex-grow，就是flex:2,lex:2,lex:1;\n\n剩余空间分配如下：\n\n```\n- item-1 和 item-2 各分配 2/5，各得 120px\n- item-3 分配 1/5，得 60px\n```\n\n各项目最终宽度为：\n\n```\n- item-1 = 0% + 120px = 120px\n- item-2 = auto + 120px = 220px\n- item-3 = 200px + 60px = 260px\n```\n\n***注意***\n\n- 当 item-1 基准值取 0% 的时候，是把该项目视为零尺寸的，故即便声明其尺寸为 140px，也并没有什么用，形同虚设\n- 而 item-2 基准值取 `auto` 的时候，根据规则基准值使用值是主尺寸值即 100px，故这 100px 不会纳入剩余空间\n\n### 全部设置\n\n```\n.item {flex: 2333 3222 234px;}\n.item {\n    flex-grow: 2333;\n    flex-shrink: 3222;\n    flex-basis: 234px;\n}\n```\n\n当 `flex` 取值为 `none`，则计算值为 0 0 auto，如下是等同的：\n\n```\n.item {flex: none;}\n.item {\n    flex-grow: 0;\n    flex-shrink: 0;\n    flex-basis: auto;\n}\n```\n\n当 `flex` 取值为 `auto`，则计算值为 1 1 auto，如下是等同的：\n\n```\n.item {flex: auto;}\n.item {\n    flex-grow: 1;\n    flex-shrink: 1;\n    flex-basis: auto;\n}\n```\n\n当 `flex` 取值为一个非负数字，则该数字为 `flex-grow` 值，`flex-shrink` 取 1，`flex-basis` 取 0%，如下是等同的：\n\n```\n.item {flex: 1;}\n.item {\n    flex-grow: 1;\n    flex-shrink: 1;\n    flex-basis: 0%;\n}\n```\n\n当 `flex` 取值为一个长度或百分比，则视为 `flex-basis` 值，`flex-grow` 取 1，`flex-shrink` 取 1，有如下等同情况（注意 0% 是一个百分比而不是一个非负数字）：\n\n```\n.item-1 {flex: 0%;}\n.item-1 {\n    flex-grow: 1;\n    flex-shrink: 1;\n    flex-basis: 0%;\n}\n.item-2 {flex: 24px;}\n.item-1 {\n    flex-grow: 1;\n    flex-shrink: 1;\n    flex-basis: 24px;\n}\n```\n\n当 `flex` 取值为两个非负数字，则分别视为 `flex-grow` 和 `flex-shrink` 的值，`flex-basis` 取 0%，如下是等同的：\n\n```\n.item {flex: 2 3;}\n.item {\n    flex-grow: 2;\n    flex-shrink: 3;\n    flex-basis: 0%;\n}\n```\n\n当 `flex` 取值为一个非负数字和一个长度或百分比，则分别视为 `flex-grow` 和 `flex-basis` 的值，`flex-shrink` 取 1，如下是等同的：\n\n```\n.item {flex: 2333 3222px;}\n.item {\n    flex-grow: 2333;\n    flex-shrink: 1;\n    flex-basis: 3222px;\n}\n```\n\n<meta name=\"referrer\" content=\"no-referrer\"/>\n\n## 移动端优先和桌面端优先\n\n### **什么是“移动端优先”和“桌面优先”方法**\n\n\n构建响应式网站是如今前端开发者的必备技能，当我们谈到响应式网站时，“移动端优先”这个词立刻就会出现在脑海中。\n\n我们知道从“移动端优先”这个角度开始设计很重要，但我们很少谈到使用“移动端优先”的方法来写代码。\n\n今天，我想与你分享“移动端优先”添加样式的方法，为什么这种方法更好，以及如何发挥它的魔力。\n\n<!-- more -->\n\n### 移动端优先和桌面端优先 区别\n\n“移动端优先”添加样式的方法指的是首先在移动设备上应用样式，然后通过媒体查询在样式表中加入应用于大屏幕的高级样式和其他覆盖样式。\n\n这个方法使用min-width媒体查询。\n\n```js\n// 这个样式在0px到600px应用\nbody { background: red; }\n\n// 这个样式在大于600px时应用\n@media (min-width: 600px) {\n    body { background: green; }\n}\n```\n\n另一方面，“桌面优先”添加样式的方法指的是首先在桌面设备上应用样式，然后通过媒体查询在样式表中加入应用于小屏幕的高级样式和其他覆盖样式。\n\n这个方法使用max-width媒体查询。\n\n```js\n// 这个样式在大于600px时应用\nbody { background: green; }\n\n// 这个样式在0px到600px应用\n@media (max-width: 600px) {\n    body { background: red; }\n}\n```\n\n### 为什么是移动端优先？\n\n* 为大屏幕编写的代码通常会比为小屏幕编写的代码更复杂，所以编写“移动端优先”代码可以简化你的代码。\n\n* 设想这样一个场景，你的网站有一个“内容-边栏”布局，.content在移动端占会100%的宽度，在桌面则占60%的宽度。\n\n  ![](https://zellwk.com/images/2014/12/mw-5.png)\n\n移动端代码为：\n\n```js\n.content {\n    // 为小屏幕设置属性\n    // 这里不需要设置任何属性，因为我们可以使用默认样式\n\n    // 为大屏幕设置属性\n    @media (min-width: 800px) {\n        float: left;\n        width: 60%;\n    }\n}\n```\n\n桌面端代码：\n\n```js\n.content {\n    // 为大屏幕设置属性\n    float: left;\n    width: 60%;\n\n    // 为小屏幕设置属性\n    // 注意我们需要重写两个默认属性才能使这个布局正常显示\n    @media (max-width: 800px) {\n        float: none;\n        width: 100%;\n    }\n}\n```\n\n* **这里的主要区别就是移动端的布局更多的情况是占用屏幕较大的布局，比如都是100%的占用，可以通过继承直接生成对应的布局。**\n\n### 结合max-width去使用\n\n* 当你的样式再不同的尺寸下都都不同的显示效果时，也可以通过max-width去终止之前尺寸的布局，节省后续布局的操作。\n\n  ![](https://zellwk.com/images/2014/12/mw-4.png)\n\n```js\n.gallery__item {\n    float: left;\n    margin-right: 5%;\n    margin-bottom: 5%;\n    @media (max-width: 800px) {\n        width: 30%;\n        &:nth-child(3n) {\n            margin-right: 0;\n        }\n    }\n\n    // min-width和max-width查询结合使用\n    @media (min-width: 800px) and (max-width: 1200px) {\n        width: 21.25%; // (100% - 15%) / 4\n        &:nth-child(4n) {\n            margin-right: 0;\n        }\n    }\n\n    @media (min-width: 1200px) {\n        width: 16%; // (100% - 20%) / 5\n        &:nth-child(5n) {\n            margin-right: 0;\n        }\n    }\n}\n```\n\n### 总结\n\n建立响应式网站时，min-width媒体查询非常有用，因为它减低了代码复杂度。不过，从上面的例子中可以看出，min-width查询并非所有问题的解决方案，有时在样式表中使用max-width查询也是有益的，它能帮助你保持代码更DRY。\n\n<meta name=\"referrer\" content=\"no-referrer\"/>\n\n## 移动端常用的meta标签\n\n### meta标签记录\n\n记录一下常用的meta标签\n\n<!-- more -->\n\n``` html\t\n<!DOCTYPE html> <!-- 使用 HTML5 doctype，不区分大小写 -->\n<html lang=\"zh-cmn-Hans\"> <!-- 更加标准的 lang 属性写法 http://zhi.hu/XyIa -->\n<head>\n    <!-- 声明文档使用的字符编码 -->\n    <meta charset='utf-8'>\n    <!-- 优先使用 IE 最新版本和 Chrome -->\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\"/>\n    <!-- 页面描述 -->\n    <meta name=\"description\" content=\"不超过150个字符\"/>\n    <!-- 页面关键词 -->\n    <meta name=\"keywords\" content=\"\"/>\n    <!-- 网页作者 -->\n    <meta name=\"author\" content=\"name, email@gmail.com\"/>\n    <!-- 搜索引擎抓取 -->\n    <meta name=\"robots\" content=\"index,follow\"/>\n    <!-- 为移动设备添加 viewport -->\n    <meta name=\"viewport\" content=\"initial-scale=1, maximum-scale=3, minimum-scale=1, user-scalable=no\">\n    <!-- `width=device-width` 会导致 iPhone 5 添加到主屏后以 WebApp 全屏模式打开页面时出现黑边 http://bigc.at/ios-webapp-viewport-meta.orz -->\n \n    <!-- iOS 设备 begin -->\n    <meta name=\"apple-mobile-web-app-title\" content=\"标题\">\n    <!-- 添加到主屏后的标题（iOS 6 新增） -->\n    <meta name=\"apple-mobile-web-app-capable\" content=\"yes\"/>\n    <!-- 是否启用 WebApp 全屏模式，删除苹果默认的工具栏和菜单栏 -->\n \n    <meta name=\"apple-itunes-app\" content=\"app-id=myAppStoreID, affiliate-data=myAffiliateData, app-argument=myURL\">\n    <!-- 添加智能 App 广告条 Smart App Banner（iOS 6+ Safari） -->\n    <meta name=\"apple-mobile-web-app-status-bar-style\" content=\"black\"/>\n    <!-- 设置苹果工具栏颜色 -->\n    <meta name=\"format-detection\" content=\"telphone=no, email=no\"/>\n    <!-- 忽略页面中的数字识别为电话，忽略email识别 -->\n    <!-- 启用360浏览器的极速模式(webkit) -->\n    <meta name=\"renderer\" content=\"webkit\">\n    <!-- 避免IE使用兼容模式 -->\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <!-- 不让百度转码 -->\n    <meta http-equiv=\"Cache-Control\" content=\"no-siteapp\" />\n    <!-- 针对手持设备优化，主要是针对一些老的不识别viewport的浏览器，比如黑莓 -->\n    <meta name=\"HandheldFriendly\" content=\"true\">\n    <!-- 微软的老式浏览器 -->\n    <meta name=\"MobileOptimized\" content=\"320\">\n    <!-- uc强制竖屏 -->\n    <meta name=\"screen-orientation\" content=\"portrait\">\n    <!-- QQ强制竖屏 -->\n    <meta name=\"x5-orientation\" content=\"portrait\">\n    <!-- UC强制全屏 -->\n    <meta name=\"full-screen\" content=\"yes\">\n    <!-- QQ强制全屏 -->\n    <meta name=\"x5-fullscreen\" content=\"true\">\n    <!-- UC应用模式 -->\n    <meta name=\"browsermode\" content=\"application\">\n    <!-- QQ应用模式 -->\n    <meta name=\"x5-page-mode\" content=\"app\">\n    <!-- windows phone 点击无高光 -->\n    <meta name=\"msapplication-tap-highlight\" content=\"no\">\n    <!-- iOS 图标 begin -->\n    <link rel=\"apple-touch-icon-precomposed\" href=\"/apple-touch-icon-57x57-precomposed.png\"/>\n    <!-- iPhone 和 iTouch，默认 57x57 像素，必须有 -->\n    <link rel=\"apple-touch-icon-precomposed\" sizes=\"114x114\" href=\"/apple-touch-icon-114x114-precomposed.png\"/>\n    <!-- Retina iPhone 和 Retina iTouch，114x114 像素，可以没有，但推荐有 -->\n    <link rel=\"apple-touch-icon-precomposed\" sizes=\"144x144\" href=\"/apple-touch-icon-144x144-precomposed.png\"/>\n    <!-- Retina iPad，144x144 像素，可以没有，但推荐有 -->\n    <!-- iOS 图标 end -->\n \n    <!-- iOS 启动画面 begin -->\n    <link rel=\"apple-touch-startup-image\" sizes=\"768x1004\" href=\"/splash-screen-768x1004.png\"/>\n    <!-- iPad 竖屏 768 x 1004（标准分辨率） -->\n    <link rel=\"apple-touch-startup-image\" sizes=\"1536x2008\" href=\"/splash-screen-1536x2008.png\"/>\n    <!-- iPad 竖屏 1536x2008（Retina） -->\n    <link rel=\"apple-touch-startup-image\" sizes=\"1024x748\" href=\"/Default-Portrait-1024x748.png\"/>\n    <!-- iPad 横屏 1024x748（标准分辨率） -->\n    <link rel=\"apple-touch-startup-image\" sizes=\"2048x1496\" href=\"/splash-screen-2048x1496.png\"/>\n    <!-- iPad 横屏 2048x1496（Retina） -->\n \n    <link rel=\"apple-touch-startup-image\" href=\"/splash-screen-320x480.png\"/>\n    <!-- iPhone/iPod Touch 竖屏 320x480 (标准分辨率) -->\n    <link rel=\"apple-touch-startup-image\" sizes=\"640x960\" href=\"/splash-screen-640x960.png\"/>\n    <!-- iPhone/iPod Touch 竖屏 640x960 (Retina) -->\n    <link rel=\"apple-touch-startup-image\" sizes=\"640x1136\" href=\"/splash-screen-640x1136.png\"/>\n    <!-- iPhone 5/iPod Touch 5 竖屏 640x1136 (Retina) -->\n    <!-- iOS 启动画面 end -->\n \n    <!-- iOS 设备 end -->\n    <meta name=\"msapplication-TileColor\" content=\"#000\"/>\n    <!-- Windows 8 磁贴颜色 -->\n    <meta name=\"msapplication-TileImage\" content=\"icon.png\"/>\n    <!-- Windows 8 磁贴图标 -->\n \n    <link rel=\"alternate\" type=\"application/rss+xml\" title=\"RSS\" href=\"/rss.xml\"/>\n    <!-- 添加 RSS 订阅 -->\n    <link rel=\"shortcut icon\" type=\"image/ico\" href=\"/favicon.ico\"/>\n    <!-- 添加 favicon icon -->\n\n    <!-- sns 社交标签 begin -->\n    <!-- 参考微博API -->\n    <meta property=\"og:type\" content=\"类型\" />\n    <meta property=\"og:url\" content=\"URL地址\" />\n    <meta property=\"og:title\" content=\"标题\" />\n    <meta property=\"og:image\" content=\"图片\" />\n    <meta property=\"og:description\" content=\"描述\" />\n    <!-- sns 社交标签 end -->\n \n    <title>标题</title>\n</head>\n```\n\n","slug":"静态布局、自适应布局、流式布局、响应式布局、弹性布局等的概念和区别","published":1,"updated":"2020-07-03T08:02:40.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl0uux6wu004a7sufewyg9x3a","content":"<meta name=\"referrer\" content=\"no-referrer\"/>\n\n<h2 id=\"静态布局、自适应布局、流式布局、响应式布局、弹性布局等的概念和区别-圣杯布局\"><a href=\"#静态布局、自适应布局、流式布局、响应式布局、弹性布局等的概念和区别-圣杯布局\" class=\"headerlink\" title=\"静态布局、自适应布局、流式布局、响应式布局、弹性布局等的概念和区别/圣杯布局\"></a>静态布局、自适应布局、流式布局、响应式布局、弹性布局等的概念和区别/圣杯布局</h2><h3 id=\"静态布局\"><a href=\"#静态布局\" class=\"headerlink\" title=\"静态布局\"></a>静态布局</h3><ol>\n<li><p>布局特点：不管浏览器尺寸具体是多少，网页布局始终按照最初写代码时的布局来显示。常规的pc的网站都是静态（定宽度）布局的，也就是设置了min-width，这样的话，如果小于这个宽度就会出现滚动条，如果大于这个宽度则内容居中外加背景，这种设计常见与pc端。</p>\n</li>\n<li><p>布局特点：不管浏览器尺寸具体是多少，网页布局始终按照最初写代码时的布局来显示。</p>\n<p>常规的pc的网站都是静态（定宽度）布局的，也就是设置了min-width，这样的话，如果小于这个宽度就会出现滚动条，如果大于这个宽度则内容居中外加背景，这种设计常见与pc端。</p>\n</li>\n<li><ul>\n<li>优点：这种布局方式对设计师和CSS编写者来说都是最简单的，亦没有兼容性问题。</li>\n<li>缺点：显而易见，即不能根据用户的屏幕尺寸做出不同的表现。<span id=\"more\"></span></li>\n</ul>\n</li>\n</ol>\n<h3 id=\"流式布局\"><a href=\"#流式布局\" class=\"headerlink\" title=\"流式布局\"></a>流式布局</h3><ol>\n<li><p>流式布局（Liquid）的特点（也叫”Fluid”) 是页面元素的宽度按照屏幕分辨率进行适配调整，但整体布局不变。代表作栅栏系统（网格系统）。</p>\n</li>\n<li><p>网页中主要的划分区域的尺寸使用百分数（搭配min-*、max-*属性使用），例如，设置网页主体的宽度为80%，min-width为960px。图片也作类似处理（width:100%, max-width一般设定为图片本身的尺寸，防止被拉伸而失真）。</p>\n</li>\n<li><p>布局和设计</p>\n<ul>\n<li><p>布局特点：屏幕分辨率变化时，页面里元素的大小会变化而但布局不变。【这就导致如果屏幕太大或者太小都会导致元素无法正常显示】</p>\n</li>\n<li><p>设计方法：使用%百分比定义宽度，高度大都是用px来固定住，可以根据可视区域 (viewport) 和父元素的实时尺寸进行调整，尽可能的适应各种分辨率。往往配合 max-width/min-width 等属性控制尺寸流动范围以免过大或者过小影响阅读。</p>\n</li>\n</ul>\n</li>\n<li><p>优点和缺点</p>\n<ul>\n<li>按照屏幕分辨率进行适配调整，但整体布局不变。适应早期的web布局，兼容性高</li>\n<li><strong>缺点明显</strong>：<strong>主要的问题</strong>是如果屏幕尺度跨度太大，那么在相对其原始设计而言过小或过大的屏幕上不能正常显示。因为宽度使用%百分比定义，但是高度和文字大小等大都是用px来固定，所以在大屏幕的手机下显示效果会变成有些页面元素宽度被拉的很长，但是高度、文字大小还是和原来一样（即：<strong>这些东西无法变得“流式”</strong>），显示非常不协调。</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"自适应布局\"><a href=\"#自适应布局\" class=\"headerlink\" title=\"自适应布局\"></a>自适应布局</h3><ol>\n<li>自适应布局的特点是分别为不同的屏幕分辨率定义布局，即创建多个静态布局，每个静态布局对应一个屏幕分辨率范围。</li>\n<li>实现方法<ul>\n<li>使用 @media 媒体查询给不同尺寸和介质的设备切换不同的样式。在优秀的响应范围设计下可以给适配范围内的设备最好的体验，在同一个设备下实际还是固定的布局。</li>\n</ul>\n</li>\n<li>特点<ul>\n<li>布局特点：屏幕分辨率变化时，页面里面元素的位置会变化而大小不会变化。</li>\n</ul>\n</li>\n<li>本质上是多个多个<em><strong>静态布局</strong></em>。</li>\n</ol>\n<h3 id=\"响应式布局\"><a href=\"#响应式布局\" class=\"headerlink\" title=\"响应式布局\"></a>响应式布局</h3><ol>\n<li><strong>可以把响应式布局看作是流式布局和自适应布局设计理念的融合</strong>。</li>\n<li>响应式设计的目标是确保一个页面在所有终端上（各种尺寸的PC、手机、手表、冰箱的Web浏览器等等）都能显示出令人满意的效果，对CSS编写者而言，在实现上不拘泥于具体手法，但通常是糅合了流式布局+弹性布局，再搭配媒体查询技术使用。</li>\n<li>设计方法：<ul>\n<li>媒体查询+流式布局。通常使用 @media 媒体查询 和网格系统 (Grid System) 配合相对布局单位进行布局，实际上就是综合响应式、流动等上述技术通过 CSS 给单一网页不同设备返回不同样式的技术统称。</li>\n</ul>\n</li>\n<li>特点：<ul>\n<li>每个屏幕分辨率下面会有一个布局样式，即元素位置和大小都会变。</li>\n</ul>\n</li>\n<li>优点和缺点：<ul>\n<li>适应pc和移动端，如果足够耐心，效果完美</li>\n<li>（1）媒体查询是有限的，也就是可以枚举出来的，只能适应主流的宽高。（2）要匹配足够多的屏幕大小，工作量不小，设计也需要多个版本。需要很多个@media。</li>\n</ul>\n</li>\n<li>代表比如bootstrap，element等都是响应式的设计布局</li>\n</ol>\n<h3 id=\"弹性布局\"><a href=\"#弹性布局\" class=\"headerlink\" title=\"弹性布局\"></a>弹性布局</h3><ol>\n<li>这类布局的特点是，<strong>包裹文字的各元素的尺寸采用em/rem做单位，而页面的主要划分区域的尺寸仍使用百分数或px做单位（同「流式布局」或「静态/固定布局」）</strong>。<strong>早期浏览器不支持整个页面按比例缩放</strong>，仅支持网页内文字尺寸的放大，这种情况下。使用em/rem做单位，可以使包裹文字的元素随着文字的缩放而缩放。</li>\n<li><strong>rem,em区别</strong>：<ul>\n<li>rem,em都是顺应不同网页字体大小展现而产生的。其中，em是相对其父元素，在实际应用中相对而言会带来很多不便；而rem是始终相对于html大小，即页面根元素。</li>\n</ul>\n</li>\n<li>根据不同的屏幕尺寸，rem改变的是font-size的大小，但是本质上，客户看到的布局是没有改变的，这一点不同于响应式布局。</li>\n<li><strong>响应式和弹性布局之间的对比：</strong><ul>\n<li>rem布局：改变浏览器宽度，页面所有元素的高宽都等比例缩放，也就是大屏幕下导航是横的，小屏幕下还是横的只不过变小了。</li>\n<li>响应式布局：改变浏览器宽度，“布局”会随之变化，不是一成不变的，例如导航栏在大屏幕下是横排，在小屏幕下是竖排，在超小屏幕下隐藏为菜单，也就是说如果有足够的耐心，在每一种屏幕下都应该有合理的布局，完美的效果。</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><blockquote>\n<ol>\n<li><p>如果只做pc端，那么静态布局（定宽度）是最好的选择；</p>\n</li>\n<li><p>如果做移动端，且设计对高度和元素间距要求不高，那么弹性布局（rem+js）是最好的选择，一份css+一份js调节font-size搞定；</p>\n</li>\n<li><p>如果pc，移动要兼容，而且要求很高那么响应式布局还是最好的选择，前提是设计根据不同的高宽做不同的设计，响应式根据媒体查询做不同的布局。</p>\n</li>\n</ol>\n</blockquote>\n<h2 id=\"圣杯布局的三种实现\"><a href=\"#圣杯布局的三种实现\" class=\"headerlink\" title=\"圣杯布局的三种实现\"></a>圣杯布局的三种实现</h2><p>圣杯布局和双飞翼布局一直是前端面试的高频考点，圣杯布局的出现是来自由 Matthew Levine 在 2006 年写的一篇文章 《In Search of the Holy Grail》。 比起双飞翼布局，它的起源不是源于对页面的形象表达。在西方，圣杯是表达“渴求之物”的意思。而双飞翼布局则是源于淘宝的UED，可以说是灵感来自于页面渲染。</p>\n<h3 id=\"效果图\"><a href=\"#效果图\" class=\"headerlink\" title=\"效果图\"></a>效果图</h3><p>布局形式如下：</p>\n<ul>\n<li>header和footer各自占领屏幕所有宽度，高度固定。</li>\n<li>中间的container是一个三栏布局。</li>\n<li>三栏布局两侧宽度固定不变，中间部分自动填充整个区域。</li>\n<li>中间部分的高度是三栏中最高的区域的高度。<br><img src=\"https://img-blog.csdnimg.cn/20190118092113972.png\" alt=\"shengbie\"><br>三种实现形式</li>\n</ul>\n<ol>\n<li><p><strong>浮动</strong></p>\n<ol>\n<li><p>设置header，footer高度</p>\n</li>\n<li><p>#container内部子元素有float浮动，所以会导致一些问题，所以添加了overflow：hidden；实际上也可以使用overflow：auto；</p>\n</li>\n<li><p>container左右两边需要留出左右对应的位置，padding-left: 200px;padding-right: 150px;</p>\n</li>\n<li><p>给左右元素设置浮动后，脱离文档流。使用margin-left：-100%；和margin-right：-150px定位到对应的位置。</p>\n<blockquote>\n<p>清除浮动参考:清除浮动</p>\n</blockquote>\n</li>\n</ol>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;header&quot;</span>&gt;</span>#header<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;container&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;center&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;column&quot;</span>&gt;</span>#center<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;left&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;column&quot;</span>&gt;</span>#left<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;right&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;column&quot;</span>&gt;</span>#right<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;footer&quot;</span>&gt;</span>#footer<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">body</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">min-width</span>: <span class=\"number\">550px</span>;  <span class=\"comment\">/* 2x leftContent width + rightContent width */</span></span><br><span class=\"line\">  <span class=\"attribute\">font-weight</span>: bold;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"selector-id\">#header</span>, <span class=\"selector-id\">#footer</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"built_in\">rgba</span>(<span class=\"number\">29</span>, <span class=\"number\">27</span>, <span class=\"number\">27</span>, <span class=\"number\">0.726</span>);</span><br><span class=\"line\">  <span class=\"attribute\">text-align</span>: center;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">60px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">line-height</span>: <span class=\"number\">60px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"selector-id\">#container</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">padding-left</span>: <span class=\"number\">200px</span>;   <span class=\"comment\">/* leftContent width */</span></span><br><span class=\"line\">  <span class=\"attribute\">padding-right</span>: <span class=\"number\">150px</span>;  <span class=\"comment\">/* rightContent width */</span></span><br><span class=\"line\">  <span class=\"attribute\">overflow</span>: hidden;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"selector-id\">#container</span> <span class=\"selector-class\">.column</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: relative;</span><br><span class=\"line\">  <span class=\"attribute\">float</span>: left;</span><br><span class=\"line\">  <span class=\"attribute\">text-align</span>: center;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">300px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">line-height</span>: <span class=\"number\">300px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"selector-id\">#center</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"built_in\">rgb</span>(<span class=\"number\">206</span>, <span class=\"number\">201</span>, <span class=\"number\">201</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"selector-id\">#left</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">200px</span>;           <span class=\"comment\">/* leftContent width */</span></span><br><span class=\"line\">  <span class=\"attribute\">right</span>: <span class=\"number\">200px</span>;           <span class=\"comment\">/* leftContent width */</span></span><br><span class=\"line\">  <span class=\"attribute\">margin-left</span>: -<span class=\"number\">100%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"built_in\">rgba</span>(<span class=\"number\">95</span>, <span class=\"number\">179</span>, <span class=\"number\">235</span>, <span class=\"number\">0.972</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"selector-id\">#right</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">150px</span>;           <span class=\"comment\">/* rightContent width */</span></span><br><span class=\"line\">  <span class=\"attribute\">margin-right</span>: -<span class=\"number\">150px</span>;   <span class=\"comment\">/* rightContent width */</span></span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"built_in\">rgb</span>(<span class=\"number\">231</span>, <span class=\"number\">105</span>, <span class=\"number\">2</span>);</span><br></pre></td></tr></table></figure></li>\n<li><p><strong>flex布局</strong></p>\n<ul>\n<li><p>header和footer设置样式，横向撑满。</p>\n</li>\n<li><p>container中的left、center、right依次排布即可</p>\n</li>\n<li><p>给container设置弹性布局 <code>display: flex;</code></p>\n</li>\n<li><p>left和right区域定宽，center设置 <code>flex: 1;</code> 即可</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;header&quot;</span>&gt;</span>#header<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;container&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;left&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;column&quot;</span>&gt;</span>#left<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;center&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;column&quot;</span>&gt;</span>#center<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;right&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;column&quot;</span>&gt;</span>#right<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;footer&quot;</span>&gt;</span>#footer<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">body</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">min-width</span>: <span class=\"number\">550px</span>;  </span><br><span class=\"line\">  <span class=\"attribute\">font-weight</span>: bold;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-id\">#header</span>, <span class=\"selector-id\">#footer</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"built_in\">rgba</span>(<span class=\"number\">29</span>, <span class=\"number\">27</span>, <span class=\"number\">27</span>, <span class=\"number\">0.726</span>);</span><br><span class=\"line\">  <span class=\"attribute\">text-align</span>: center;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">60px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">line-height</span>: <span class=\"number\">60px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-id\">#container</span> &#123;</span><br><span class=\"line\"> <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-id\">#container</span> <span class=\"selector-class\">.column</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">text-align</span>: center;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">300px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">line-height</span>: <span class=\"number\">300px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-id\">#center</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">flex</span>: <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"built_in\">rgb</span>(<span class=\"number\">206</span>, <span class=\"number\">201</span>, <span class=\"number\">201</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-id\">#left</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">200px</span>;        </span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"built_in\">rgba</span>(<span class=\"number\">95</span>, <span class=\"number\">179</span>, <span class=\"number\">235</span>, <span class=\"number\">0.972</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-id\">#right</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">150px</span>;           </span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"built_in\">rgb</span>(<span class=\"number\">231</span>, <span class=\"number\">105</span>, <span class=\"number\">2</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li><p><strong>grid布局</strong></p>\n<p>如上图所示，我们把body划分成三行四列的网格，其中有5条列网格线</p>\n<p>给body元素添加display: grid;属性变成一个grid(网格)<br>给header元素设置grid-row: 1; 和 grid-column: 1/5; 意思是占据第一行网格的从第一条列网格线开始到第五条列网格线结束<br>给footer元素设置grid-row: 1; 和 grid-column: 1/5; 意思是占据第三行网格的从第一条列网格线开始到第五条列网格线结束<br>给left元素设置grid-row: 2; 和 grid-column: 1/2; 意思是占据第二行网格的从第一条列网格线开始到第二条列网格线结束<br>给center元素设置grid-row: 2; 和 grid-column: 2/4; 意思是占据第二行网格的从第二条列网格线开始到第四条列网格线结束<br>给right元素设置grid-row: 2; 和 grid-column: 4/5; 意思是占据第二行网格的从第四条列网格线开始到第五条列网格线结束</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;header&quot;</span>&gt;</span>#header<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;left&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;column&quot;</span>&gt;</span>#left<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;center&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;column&quot;</span>&gt;</span>#center<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;right&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;column&quot;</span>&gt;</span>#right<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;footer&quot;</span>&gt;</span>#footer<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">body</span> &#123;</span><br><span class=\"line\">   <span class=\"attribute\">min-width</span>: <span class=\"number\">550px</span>;</span><br><span class=\"line\">   <span class=\"attribute\">font-weight</span>: bold;</span><br><span class=\"line\">   <span class=\"attribute\">font-size</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">   <span class=\"attribute\">display</span>: grid;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"> <span class=\"selector-id\">#header</span>,</span><br><span class=\"line\"> <span class=\"selector-id\">#footer</span> &#123;</span><br><span class=\"line\">   <span class=\"attribute\">background</span>: <span class=\"built_in\">rgba</span>(<span class=\"number\">29</span>, <span class=\"number\">27</span>, <span class=\"number\">27</span>, <span class=\"number\">0.726</span>);</span><br><span class=\"line\">   <span class=\"attribute\">text-align</span>: center;</span><br><span class=\"line\">   <span class=\"attribute\">height</span>: <span class=\"number\">60px</span>;</span><br><span class=\"line\">   <span class=\"attribute\">line-height</span>: <span class=\"number\">60px</span>;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"> <span class=\"selector-id\">#header</span> &#123;</span><br><span class=\"line\">   <span class=\"attribute\">grid-row</span>: <span class=\"number\">1</span>;</span><br><span class=\"line\">   <span class=\"attribute\">grid-column</span>: <span class=\"number\">1</span>/<span class=\"number\">5</span>;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"> <span class=\"selector-id\">#footer</span> &#123;</span><br><span class=\"line\">   <span class=\"attribute\">grid-row</span>: <span class=\"number\">3</span>;</span><br><span class=\"line\">   <span class=\"attribute\">grid-column</span>: <span class=\"number\">1</span>/<span class=\"number\">5</span>;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"> <span class=\"selector-class\">.column</span> &#123;</span><br><span class=\"line\">   <span class=\"attribute\">text-align</span>: center;</span><br><span class=\"line\">   <span class=\"attribute\">height</span>: <span class=\"number\">300px</span>;</span><br><span class=\"line\">   <span class=\"attribute\">line-height</span>: <span class=\"number\">300px</span>;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"> <span class=\"selector-id\">#left</span> &#123;</span><br><span class=\"line\">   <span class=\"attribute\">grid-row</span>: <span class=\"number\">2</span>;</span><br><span class=\"line\">   <span class=\"attribute\">grid-column</span>: <span class=\"number\">1</span>/<span class=\"number\">2</span>;</span><br><span class=\"line\">   <span class=\"attribute\">background</span>: <span class=\"built_in\">rgba</span>(<span class=\"number\">95</span>, <span class=\"number\">179</span>, <span class=\"number\">235</span>, <span class=\"number\">0.972</span>);</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"> <span class=\"selector-id\">#center</span> &#123;</span><br><span class=\"line\">   <span class=\"attribute\">grid-row</span>: <span class=\"number\">2</span>;</span><br><span class=\"line\">   <span class=\"attribute\">grid-column</span>: <span class=\"number\">2</span>/<span class=\"number\">4</span>;</span><br><span class=\"line\">   <span class=\"attribute\">background</span>: <span class=\"built_in\">rgb</span>(<span class=\"number\">206</span>, <span class=\"number\">201</span>, <span class=\"number\">201</span>);</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"> <span class=\"selector-id\">#right</span> &#123;</span><br><span class=\"line\">   <span class=\"attribute\">grid-row</span>: <span class=\"number\">2</span>;</span><br><span class=\"line\">   <span class=\"attribute\">grid-column</span>: <span class=\"number\">4</span>/<span class=\"number\">5</span>;</span><br><span class=\"line\">   <span class=\"attribute\">background</span>: <span class=\"built_in\">rgb</span>(<span class=\"number\">231</span>, <span class=\"number\">105</span>, <span class=\"number\">2</span>);</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure></li>\n<li><p>三种实现形式</p>\n<p>三种实现形式内，不考虑兼容性的情况下，<em><strong>flex布局</strong></em>是使用比较广的，浮动的布局相对比较麻烦，需要设定各种margin和padding和position的定位，grid布局属于二维布局，就兼容性来说，还是比flex要差一些。</p>\n</li>\n</ol>\n<h2 id=\"CSS实现文字和图片的水平垂直居中\"><a href=\"#CSS实现文字和图片的水平垂直居中\" class=\"headerlink\" title=\"CSS实现文字和图片的水平垂直居中\"></a>CSS实现文字和图片的水平垂直居中</h2><p>居中是一开始学习使用css遇到比较多的情况，不同的情况有不同的居中方式，随着前端的规范和写法的进步，有各种各样的方法实现，现在来记录一下。<br>主要有文字、div块级元素和图片的居中，以下分几种情况说明。</p>\n<h3 id=\"文字居中\"><a href=\"#文字居中\" class=\"headerlink\" title=\"文字居中\"></a>文字居中</h3><ol>\n<li><p>单行文字（多行文字）</p>\n<ul>\n<li>水平居中</li>\n</ul>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">text-align</span>：center</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>垂直居中<br>只要height值等于line-height值就ok</li>\n</ul>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.son</span>&#123;<span class=\"attribute\">height</span>:<span class=\"number\">100px</span>;<span class=\"attribute\">line-height</span>:<span class=\"number\">100px</span>;&#125;</span><br></pre></td></tr></table></figure>\n\n<!-- more --></li>\n<li><p>多行文字</p>\n<ul>\n<li><p>垂直居中</p>\n<ol>\n<li>高度固定<br><strong>关键属性：</strong>display:tabel-cell; vertical-align:middle;</li>\n</ol>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;style&gt;</span><br><span class=\"line\"><span class=\"selector-tag\">div</span>&#123;<span class=\"attribute\">height</span>:<span class=\"number\">300px</span>;</span><br><span class=\"line\"><span class=\"attribute\">width</span>:<span class=\"number\">200px</span>;</span><br><span class=\"line\"><span class=\"attribute\">vertical-align</span>:middle;</span><br><span class=\"line\"><span class=\"attribute\">display</span>:table-cell;</span><br><span class=\"line\"><span class=\"attribute\">word-break</span>:break-all;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/style&gt;</span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>父级元素高度固定，子元素为行内元素<br><strong>关键属性：</strong>父级:diaplay:tabel; 子集：display:tabel-cell; vertical-align:middle;</li>\n</ol>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;style&gt;<span class=\"selector-tag\">div</span>&#123;<span class=\"attribute\">height</span>:<span class=\"number\">300px</span>;<span class=\"attribute\">width</span>:<span class=\"number\">200px</span>;<span class=\"attribute\">display</span>:table;<span class=\"attribute\">word-break</span>:break-all;<span class=\"attribute\">background</span>:<span class=\"number\">#666</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-tag\">span</span>&#123;<span class=\"attribute\">display</span>:table-cell;<span class=\"attribute\">vertical-align</span>:middle;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/style&gt;</span><br><span class=\"line\">&lt;<span class=\"selector-tag\">div</span>&gt;</span><br><span class=\"line\">&lt;<span class=\"selector-tag\">span</span>&gt;some things&lt;/<span class=\"selector-tag\">span</span>&gt;</span><br><span class=\"line\">&lt;/<span class=\"selector-tag\">div</span>&gt;</span><br></pre></td></tr></table></figure>\n\n<ol start=\"3\">\n<li>父级元素高度固定，子元素为块元素且高度固定<br><strong>关键属性：</strong>定位 + margin-top：负值；</li>\n</ol>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;style type=&quot;text/css&quot;&gt;</span><br><span class=\"line\">*&#123;<span class=\"attribute\">margin</span>:<span class=\"number\">0</span>;<span class=\"attribute\">padding</span>:<span class=\"number\">0</span>;&#125;</span><br><span class=\"line\"><span class=\"selector-tag\">div</span>&#123;<span class=\"attribute\">height</span>:<span class=\"number\">300px</span>;<span class=\"attribute\">width</span>:<span class=\"number\">200px</span>;<span class=\"attribute\">position</span>:relative;<span class=\"attribute\">word-break</span>:break-all;<span class=\"attribute\">background</span>:<span class=\"number\">#666</span>;&#125;</span><br><span class=\"line\"><span class=\"selector-tag\">p</span>&#123;<span class=\"attribute\">position</span>:absolute;<span class=\"attribute\">top</span>:<span class=\"number\">50%</span>;<span class=\"attribute\">left</span>:<span class=\"number\">0</span>;<span class=\"attribute\">height</span>:<span class=\"number\">80px</span>;<span class=\"attribute\">margin-top</span>:-<span class=\"number\">40px</span>;<span class=\"attribute\">background</span>:red;&#125;</span><br><span class=\"line\">&lt;/style&gt;     </span><br><span class=\"line\">&lt;<span class=\"selector-tag\">div</span>&gt;</span><br><span class=\"line\">&lt;<span class=\"selector-tag\">p</span>&gt;some things&lt;/<span class=\"selector-tag\">p</span>&gt;</span><br><span class=\"line\">&lt;/<span class=\"selector-tag\">div</span>&gt;</span><br></pre></td></tr></table></figure>\n\n<ol start=\"4\">\n<li>父级元素高度固定，子元素为块元素且高度不固定<br><strong>关键属性：</strong>定位 + transform：translateY(-50%);</li>\n</ol>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;style&gt;</span><br><span class=\"line\">*&#123;<span class=\"attribute\">margin</span>:<span class=\"number\">0</span>;<span class=\"attribute\">padding</span>:<span class=\"number\">0</span>;&#125;  <span class=\"comment\">/*不加的话会被p或其他标签默认样式影响*/</span></span><br><span class=\"line\"><span class=\"selector-tag\">div</span>&#123;<span class=\"attribute\">height</span>:<span class=\"number\">300px</span>;<span class=\"attribute\">width</span>:<span class=\"number\">200px</span>;<span class=\"attribute\">position</span>:relative; <span class=\"attribute\">word-break</span>:break-all;<span class=\"attribute\">background</span>:<span class=\"number\">#666</span>;&#125;</span><br><span class=\"line\"><span class=\"selector-tag\">p</span>&#123;<span class=\"attribute\">position</span>:absolute;<span class=\"attribute\">top</span>:<span class=\"number\">50%</span>;<span class=\"attribute\">left</span>:<span class=\"number\">0</span>;<span class=\"attribute\">transform</span>:<span class=\"built_in\">translateY</span>(-<span class=\"number\">50%</span>);&#125;<span class=\"comment\">/*个人建议，被包裹的块标签就不要height，用内容将高度撑开就好*/</span></span><br><span class=\"line\">&lt;/style&gt;</span><br><span class=\"line\">&lt;<span class=\"selector-tag\">div</span>&gt;</span><br><span class=\"line\">&lt;<span class=\"selector-tag\">p</span>&gt;some things&lt;/<span class=\"selector-tag\">p</span>&gt;</span><br><span class=\"line\">&lt;/<span class=\"selector-tag\">div</span>&gt;</span><br></pre></td></tr></table></figure>\n\n<ol start=\"5\">\n<li>父子元素高度均固定<br><strong>关键属性：</strong>定位 + margin：auto；</li>\n</ol>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;style&gt;</span><br><span class=\"line\">*&#123;<span class=\"attribute\">margin</span>:<span class=\"number\">0</span>;<span class=\"attribute\">padding</span>:<span class=\"number\">0</span>;&#125;</span><br><span class=\"line\"><span class=\"selector-tag\">div</span>&#123;<span class=\"attribute\">height</span>:<span class=\"number\">300px</span>;<span class=\"attribute\">width</span>:<span class=\"number\">400px</span>;<span class=\"attribute\">position</span>:relative;<span class=\"attribute\">word-break</span>:break-all;<span class=\"attribute\">background</span>:<span class=\"number\">#666</span>;&#125;</span><br><span class=\"line\"><span class=\"selector-tag\">p</span>&#123;<span class=\"attribute\">position</span>:absolute;<span class=\"attribute\">top</span>:<span class=\"number\">0</span>;<span class=\"attribute\">bottom</span>:<span class=\"number\">0</span>;<span class=\"attribute\">right</span>:<span class=\"number\">0</span>;<span class=\"attribute\">left</span>:<span class=\"number\">0</span>;<span class=\"attribute\">margin</span>:auto;<span class=\"attribute\">height</span>:<span class=\"number\">80px</span>;<span class=\"attribute\">width</span>:<span class=\"number\">200px</span>;<span class=\"attribute\">background</span>:red;&#125;</span><br><span class=\"line\">&lt;/style&gt;</span><br><span class=\"line\">&lt;<span class=\"selector-tag\">div</span>&gt;</span><br><span class=\"line\">&lt;<span class=\"selector-tag\">p</span>&gt;some things&lt;/<span class=\"selector-tag\">p</span>&gt;</span><br><span class=\"line\">&lt;/<span class=\"selector-tag\">div</span>&gt;</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n</ol>\n<h3 id=\"块级元素居中\"><a href=\"#块级元素居中\" class=\"headerlink\" title=\"块级元素居中\"></a>块级元素居中</h3><ul>\n<li><p>水平居中</p>\n<ol>\n<li>行内元素(inline 或 inline-* 元素)<br>此类元素需要水平居中，则父级元素必须是块级元素(block level)，且父级元素上需要这样设置样式：</li>\n</ol>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.parent</span> &#123;</span><br><span class=\"line\"> <span class=\"attribute\">text-align</span>: center;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>块级元素<br>块级元素水平居中，需要设置 margin-left 和 margin-right 为 auto，且需要显示设置宽度，不然就占满整行，就无所谓水平居中了。</li>\n</ol>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.block</span> &#123;</span><br><span class=\"line\"> <span class=\"attribute\">width</span>: <span class=\"number\">300px</span>;</span><br><span class=\"line\"> <span class=\"attribute\">margin</span>: <span class=\"number\">0</span> auto;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ol start=\"3\">\n<li>同一行多个块级元素<br>如果是在同一行里需要居中多个块级元素，可以尝试下面的两种方法：</li>\n</ol>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* 方法一 */</span></span><br><span class=\"line\"><span class=\"selector-class\">.parent</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">text-align</span>: center;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.parent</span> <span class=\"selector-tag\">div</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">display</span>: inline-block;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/* 方法二 */</span></span><br><span class=\"line\"><span class=\"selector-class\">.parent</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">display</span>: -webkit-box;</span><br><span class=\"line\">    <span class=\"attribute\">display</span>: -ms-flexbox;</span><br><span class=\"line\">    <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">    -webkit-box-pack: center;</span><br><span class=\"line\">    -ms-<span class=\"attribute\">flex</span>-pack: center;</span><br><span class=\"line\">    <span class=\"attribute\">justify-content</span>: center;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li><p>垂直居中</p>\n<ol>\n<li>元素高度已知<br>知道块元素的高度，那么使用绝对定位和负的 margin 即可实现垂直居中：</li>\n</ol>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.parent</span> &#123;</span><br><span class=\"line\"> <span class=\"attribute\">position</span>: relative;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.parent</span> <span class=\"selector-tag\">div</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">    <span class=\"attribute\">top</span>: <span class=\"number\">50%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">height</span>: <span class=\"number\">50px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">margin-top</span>: -<span class=\"number\">25px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>块级元素高度是可变的<br>这个时候就需要用 transform 的Y轴平移来实现了：</li>\n</ol>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.parent</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">position</span>: relative;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.parent</span> <span class=\"selector-tag\">div</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">    <span class=\"attribute\">top</span>: <span class=\"number\">50%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">transform</span>: <span class=\"built_in\">translateY</span>(-<span class=\"number\">50%</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ol start=\"3\">\n<li>flexbox布局<br>flex主要是考虑布局问题</li>\n</ol>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.parent</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">display</span>: flexbox;</span><br><span class=\"line\">    <span class=\"attribute\">justify-content</span>: center;</span><br><span class=\"line\">    <span class=\"attribute\">flex-direction</span>: column;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ol start=\"4\">\n<li>块级元素高度不是固定的，且不由内容决定</li>\n</ol>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.parent</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">position</span>: relative;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.parent</span> <span class=\"selector-tag\">div</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">    <span class=\"attribute\">top</span>: <span class=\"number\">30%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">bottom</span>: <span class=\"number\">30%</span>; </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li><p>水平垂直居中</p>\n<ol>\n<li>知道宽高的盒子</li>\n</ol>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.parent</span> &#123;</span><br><span class=\"line\"> <span class=\"attribute\">position</span>: realtive;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.parent</span> <span class=\"selector-tag\">div</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">300px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">height</span>: <span class=\"number\">300px</span>;</span><br><span class=\"line\">    posotion: absoltue;</span><br><span class=\"line\">    <span class=\"attribute\">left</span>: <span class=\"number\">50%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">top</span>: <span class=\"number\">50%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">margin-left</span>: -<span class=\"number\">150px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">margin-top</span>: -<span class=\"number\">150px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>不知道宽高的盒子</li>\n</ol>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.parent</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">position</span>: realtive;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.parent</span> <span class=\"selector-tag\">div</span> &#123;</span><br><span class=\"line\">    posotion: absoltue;</span><br><span class=\"line\">    <span class=\"attribute\">left</span>: <span class=\"number\">50%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">top</span>: <span class=\"number\">50%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">transform</span>: <span class=\"built_in\">translate</span>(-<span class=\"number\">50%</span>, -<span class=\"number\">50%</span>);   </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ol start=\"3\">\n<li>flex布局</li>\n</ol>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.parent</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">    <span class=\"attribute\">justify-content</span>: center;</span><br><span class=\"line\">    <span class=\"attribute\">align-items</span>: center;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<meta name=\"referrer\" content=\"no-referrer\"/>\n\n\n\n<h2 id=\"flex设置成1和auto有什么区别\"><a href=\"#flex设置成1和auto有什么区别\" class=\"headerlink\" title=\"flex设置成1和auto有什么区别\"></a>flex设置成1和auto有什么区别</h2><h3 id=\"flex的取值\"><a href=\"#flex的取值\" class=\"headerlink\" title=\"flex的取值\"></a>flex的取值</h3><p>首先明确一点是， <code>flex</code> 是 <code>flex-grow</code>、<code>flex-shrink</code>、<code>flex-basis</code>的缩写。<code>flex</code> 的默认值是以上三个属性值的组合。</p>\n<p>那么，flex：1；和flex：auto；有对应的全写如下：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.item &#123;flex: auto;&#125;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.item &#123;</span><br><span class=\"line\"> flex-grow: 1;</span><br><span class=\"line\"> flex-shrink: 1;</span><br><span class=\"line\"> flex-basis: auto;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</blockquote>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.item &#123;flex: 1;&#125;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.item &#123;</span><br><span class=\"line\"> flex-grow: 1;</span><br><span class=\"line\"> flex-shrink: 1;</span><br><span class=\"line\"> flex-basis: 0%;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</blockquote>\n<p>这三个缩写代表什么意思呢？</p>\n<!-- more -->\n\n<ul>\n<li>flex-shrink属性指定了flex元素的收缩规则。flex元素仅在交替宽度之和大于容器的时候才会发生收缩，其收缩的大小是依据flex-shrink的值。</li>\n<li>flex-grow属性用于设置或检索弹性盒子的扩展比率。</li>\n<li><code>flex-basis</code> 规定的是子元素的基准值。所以是否溢出的计算与此属性息息相关。<code>flex-basis</code> 规定的范围取决于 <code>box-sizing</code>。这里主要讨论以下 <code>flex-basis</code> 的取值情况：<ol>\n<li><code>auto</code>：首先检索该子元素的主尺寸，如果主尺寸不为 <code>auto</code>，则使用值采取主尺寸之值；如果也是 <code>auto</code>，则使用值为 <code>content</code>。</li>\n<li><code>content</code>：指根据该子元素的内容自动布局。有的用户代理没有实现取 <code>content</code> 值，等效的替代方案是 <code>flex-basis</code> 和主尺寸都取 <code>auto</code>。</li>\n<li>百分比：根据其包含块（即伸缩父容器）的主尺寸计算。如果包含块的主尺寸未定义（即父容器的主尺寸取决于子元素），则计算结果和设为 <code>auto</code> 一样。</li>\n</ol>\n</li>\n</ul>\n<h3 id=\"举个例子\"><a href=\"#举个例子\" class=\"headerlink\" title=\"举个例子\"></a>举个例子</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;parent&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;item-1&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;item-2&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;item-3&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;style type=&quot;text/css&quot;&gt;</span><br><span class=\"line\">    <span class=\"selector-class\">.parent</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">        <span class=\"attribute\">width</span>: <span class=\"number\">600px</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-class\">.parent</span> &gt; <span class=\"selector-tag\">div</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">height</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-class\">.item-1</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">width</span>: <span class=\"number\">140px</span>;</span><br><span class=\"line\">        <span class=\"attribute\">flex</span>: <span class=\"number\">2</span> <span class=\"number\">1</span> <span class=\"number\">0%</span>;</span><br><span class=\"line\">        <span class=\"attribute\">background</span>: blue;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-class\">.item-2</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">        <span class=\"attribute\">flex</span>: <span class=\"number\">2</span> <span class=\"number\">1</span> auto;</span><br><span class=\"line\">        <span class=\"attribute\">background</span>: darkblue;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-class\">.item-3</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">flex</span>: <span class=\"number\">1</span> <span class=\"number\">1</span> <span class=\"number\">200px</span>;</span><br><span class=\"line\">        <span class=\"attribute\">background</span>: lightblue;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&lt;/style&gt;</span><br></pre></td></tr></table></figure>\n\n\n\n<p>子元素的总基准值是：.item-1:0% + item-2:auto + .item-3:200px = 300px，其中</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- 0% 即 0 宽度</span><br><span class=\"line\">- auto 对应取主尺寸即 100px</span><br></pre></td></tr></table></figure>\n\n<p>故剩余空间为 600px - 300px = 300px</p>\n<p>有剩余空间，需要分配剩余空间，需要flex-grow，就是flex:2,lex:2,lex:1;</p>\n<p>剩余空间分配如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- item-1 和 item-2 各分配 2/5，各得 120px</span><br><span class=\"line\">- item-3 分配 1/5，得 60px</span><br></pre></td></tr></table></figure>\n\n<p>各项目最终宽度为：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- item-1 = 0% + 120px = 120px</span><br><span class=\"line\">- item-2 = auto + 120px = 220px</span><br><span class=\"line\">- item-3 = 200px + 60px = 260px</span><br></pre></td></tr></table></figure>\n\n<p><em><strong>注意</strong></em></p>\n<ul>\n<li>当 item-1 基准值取 0% 的时候，是把该项目视为零尺寸的，故即便声明其尺寸为 140px，也并没有什么用，形同虚设</li>\n<li>而 item-2 基准值取 <code>auto</code> 的时候，根据规则基准值使用值是主尺寸值即 100px，故这 100px 不会纳入剩余空间</li>\n</ul>\n<h3 id=\"全部设置\"><a href=\"#全部设置\" class=\"headerlink\" title=\"全部设置\"></a>全部设置</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.item &#123;flex: 2333 3222 234px;&#125;</span><br><span class=\"line\">.item &#123;</span><br><span class=\"line\">    flex-grow: 2333;</span><br><span class=\"line\">    flex-shrink: 3222;</span><br><span class=\"line\">    flex-basis: 234px;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>当 <code>flex</code> 取值为 <code>none</code>，则计算值为 0 0 auto，如下是等同的：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.item &#123;flex: none;&#125;</span><br><span class=\"line\">.item &#123;</span><br><span class=\"line\">    flex-grow: 0;</span><br><span class=\"line\">    flex-shrink: 0;</span><br><span class=\"line\">    flex-basis: auto;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>当 <code>flex</code> 取值为 <code>auto</code>，则计算值为 1 1 auto，如下是等同的：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.item &#123;flex: auto;&#125;</span><br><span class=\"line\">.item &#123;</span><br><span class=\"line\">    flex-grow: 1;</span><br><span class=\"line\">    flex-shrink: 1;</span><br><span class=\"line\">    flex-basis: auto;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>当 <code>flex</code> 取值为一个非负数字，则该数字为 <code>flex-grow</code> 值，<code>flex-shrink</code> 取 1，<code>flex-basis</code> 取 0%，如下是等同的：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.item &#123;flex: 1;&#125;</span><br><span class=\"line\">.item &#123;</span><br><span class=\"line\">    flex-grow: 1;</span><br><span class=\"line\">    flex-shrink: 1;</span><br><span class=\"line\">    flex-basis: 0%;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>当 <code>flex</code> 取值为一个长度或百分比，则视为 <code>flex-basis</code> 值，<code>flex-grow</code> 取 1，<code>flex-shrink</code> 取 1，有如下等同情况（注意 0% 是一个百分比而不是一个非负数字）：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.item-1 &#123;flex: 0%;&#125;</span><br><span class=\"line\">.item-1 &#123;</span><br><span class=\"line\">    flex-grow: 1;</span><br><span class=\"line\">    flex-shrink: 1;</span><br><span class=\"line\">    flex-basis: 0%;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.item-2 &#123;flex: 24px;&#125;</span><br><span class=\"line\">.item-1 &#123;</span><br><span class=\"line\">    flex-grow: 1;</span><br><span class=\"line\">    flex-shrink: 1;</span><br><span class=\"line\">    flex-basis: 24px;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>当 <code>flex</code> 取值为两个非负数字，则分别视为 <code>flex-grow</code> 和 <code>flex-shrink</code> 的值，<code>flex-basis</code> 取 0%，如下是等同的：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.item &#123;flex: 2 3;&#125;</span><br><span class=\"line\">.item &#123;</span><br><span class=\"line\">    flex-grow: 2;</span><br><span class=\"line\">    flex-shrink: 3;</span><br><span class=\"line\">    flex-basis: 0%;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>当 <code>flex</code> 取值为一个非负数字和一个长度或百分比，则分别视为 <code>flex-grow</code> 和 <code>flex-basis</code> 的值，<code>flex-shrink</code> 取 1，如下是等同的：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.item &#123;flex: 2333 3222px;&#125;</span><br><span class=\"line\">.item &#123;</span><br><span class=\"line\">    flex-grow: 2333;</span><br><span class=\"line\">    flex-shrink: 1;</span><br><span class=\"line\">    flex-basis: 3222px;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<meta name=\"referrer\" content=\"no-referrer\"/>\n\n<h2 id=\"移动端优先和桌面端优先\"><a href=\"#移动端优先和桌面端优先\" class=\"headerlink\" title=\"移动端优先和桌面端优先\"></a>移动端优先和桌面端优先</h2><h3 id=\"什么是“移动端优先”和“桌面优先”方法\"><a href=\"#什么是“移动端优先”和“桌面优先”方法\" class=\"headerlink\" title=\"什么是“移动端优先”和“桌面优先”方法\"></a><strong>什么是“移动端优先”和“桌面优先”方法</strong></h3><p>构建响应式网站是如今前端开发者的必备技能，当我们谈到响应式网站时，“移动端优先”这个词立刻就会出现在脑海中。</p>\n<p>我们知道从“移动端优先”这个角度开始设计很重要，但我们很少谈到使用“移动端优先”的方法来写代码。</p>\n<p>今天，我想与你分享“移动端优先”添加样式的方法，为什么这种方法更好，以及如何发挥它的魔力。</p>\n<!-- more -->\n\n<h3 id=\"移动端优先和桌面端优先-区别\"><a href=\"#移动端优先和桌面端优先-区别\" class=\"headerlink\" title=\"移动端优先和桌面端优先 区别\"></a>移动端优先和桌面端优先 区别</h3><p>“移动端优先”添加样式的方法指的是首先在移动设备上应用样式，然后通过媒体查询在样式表中加入应用于大屏幕的高级样式和其他覆盖样式。</p>\n<p>这个方法使用min-width媒体查询。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 这个样式在0px到600px应用</span></span><br><span class=\"line\">body &#123; <span class=\"attr\">background</span>: red; &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 这个样式在大于600px时应用</span></span><br><span class=\"line\">@media (min-<span class=\"attr\">width</span>: 600px) &#123;</span><br><span class=\"line\">    body &#123; <span class=\"attr\">background</span>: green; &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>另一方面，“桌面优先”添加样式的方法指的是首先在桌面设备上应用样式，然后通过媒体查询在样式表中加入应用于小屏幕的高级样式和其他覆盖样式。</p>\n<p>这个方法使用max-width媒体查询。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 这个样式在大于600px时应用</span></span><br><span class=\"line\">body &#123; <span class=\"attr\">background</span>: green; &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 这个样式在0px到600px应用</span></span><br><span class=\"line\">@media (max-<span class=\"attr\">width</span>: 600px) &#123;</span><br><span class=\"line\">    body &#123; <span class=\"attr\">background</span>: red; &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"为什么是移动端优先？\"><a href=\"#为什么是移动端优先？\" class=\"headerlink\" title=\"为什么是移动端优先？\"></a>为什么是移动端优先？</h3><ul>\n<li><p>为大屏幕编写的代码通常会比为小屏幕编写的代码更复杂，所以编写“移动端优先”代码可以简化你的代码。</p>\n</li>\n<li><p>设想这样一个场景，你的网站有一个“内容-边栏”布局，.content在移动端占会100%的宽度，在桌面则占60%的宽度。</p>\n<p><img src=\"https://zellwk.com/images/2014/12/mw-5.png\"></p>\n</li>\n</ul>\n<p>移动端代码为：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.<span class=\"property\">content</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 为小屏幕设置属性</span></span><br><span class=\"line\">    <span class=\"comment\">// 这里不需要设置任何属性，因为我们可以使用默认样式</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 为大屏幕设置属性</span></span><br><span class=\"line\">    @media (min-<span class=\"attr\">width</span>: 800px) &#123;</span><br><span class=\"line\">        <span class=\"attr\">float</span>: left;</span><br><span class=\"line\">        <span class=\"attr\">width</span>: <span class=\"number\">60</span>%;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>桌面端代码：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.<span class=\"property\">content</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 为大屏幕设置属性</span></span><br><span class=\"line\">    <span class=\"attr\">float</span>: left;</span><br><span class=\"line\">    <span class=\"attr\">width</span>: <span class=\"number\">60</span>%;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 为小屏幕设置属性</span></span><br><span class=\"line\">    <span class=\"comment\">// 注意我们需要重写两个默认属性才能使这个布局正常显示</span></span><br><span class=\"line\">    @media (max-<span class=\"attr\">width</span>: 800px) &#123;</span><br><span class=\"line\">        <span class=\"attr\">float</span>: none;</span><br><span class=\"line\">        <span class=\"attr\">width</span>: <span class=\"number\">100</span>%;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><strong>这里的主要区别就是移动端的布局更多的情况是占用屏幕较大的布局，比如都是100%的占用，可以通过继承直接生成对应的布局。</strong></li>\n</ul>\n<h3 id=\"结合max-width去使用\"><a href=\"#结合max-width去使用\" class=\"headerlink\" title=\"结合max-width去使用\"></a>结合max-width去使用</h3><ul>\n<li><p>当你的样式再不同的尺寸下都都不同的显示效果时，也可以通过max-width去终止之前尺寸的布局，节省后续布局的操作。</p>\n<p><img src=\"https://zellwk.com/images/2014/12/mw-4.png\"></p>\n</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.<span class=\"property\">gallery__item</span> &#123;</span><br><span class=\"line\">    <span class=\"attr\">float</span>: left;</span><br><span class=\"line\">    margin-<span class=\"attr\">right</span>: <span class=\"number\">5</span>%;</span><br><span class=\"line\">    margin-<span class=\"attr\">bottom</span>: <span class=\"number\">5</span>%;</span><br><span class=\"line\">    @media (max-<span class=\"attr\">width</span>: 800px) &#123;</span><br><span class=\"line\">        <span class=\"attr\">width</span>: <span class=\"number\">30</span>%;</span><br><span class=\"line\">        &amp;:nth-<span class=\"title function_\">child</span>(<span class=\"params\"><span class=\"number\">3n</span></span>) &#123;</span><br><span class=\"line\">            margin-<span class=\"attr\">right</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// min-width和max-width查询结合使用</span></span><br><span class=\"line\">    @media (min-<span class=\"attr\">width</span>: 800px) and (max-<span class=\"attr\">width</span>: 1200px) &#123;</span><br><span class=\"line\">        <span class=\"attr\">width</span>: <span class=\"number\">21.25</span>%; <span class=\"comment\">// (100% - 15%) / 4</span></span><br><span class=\"line\">        &amp;:nth-<span class=\"title function_\">child</span>(<span class=\"params\"><span class=\"number\">4n</span></span>) &#123;</span><br><span class=\"line\">            margin-<span class=\"attr\">right</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    @media (min-<span class=\"attr\">width</span>: 1200px) &#123;</span><br><span class=\"line\">        <span class=\"attr\">width</span>: <span class=\"number\">16</span>%; <span class=\"comment\">// (100% - 20%) / 5</span></span><br><span class=\"line\">        &amp;:nth-<span class=\"title function_\">child</span>(<span class=\"params\"><span class=\"number\">5n</span></span>) &#123;</span><br><span class=\"line\">            margin-<span class=\"attr\">right</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"总结-1\"><a href=\"#总结-1\" class=\"headerlink\" title=\"总结\"></a>总结</h3><p>建立响应式网站时，min-width媒体查询非常有用，因为它减低了代码复杂度。不过，从上面的例子中可以看出，min-width查询并非所有问题的解决方案，有时在样式表中使用max-width查询也是有益的，它能帮助你保持代码更DRY。</p>\n<meta name=\"referrer\" content=\"no-referrer\"/>\n\n<h2 id=\"移动端常用的meta标签\"><a href=\"#移动端常用的meta标签\" class=\"headerlink\" title=\"移动端常用的meta标签\"></a>移动端常用的meta标签</h2><h3 id=\"meta标签记录\"><a href=\"#meta标签记录\" class=\"headerlink\" title=\"meta标签记录\"></a>meta标签记录</h3><p>记录一下常用的meta标签</p>\n<!-- more -->\n\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span> <span class=\"comment\">&lt;!-- 使用 HTML5 doctype，不区分大小写 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;zh-cmn-Hans&quot;</span>&gt;</span> <span class=\"comment\">&lt;!-- 更加标准的 lang 属性写法 http://zhi.hu/XyIa --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 声明文档使用的字符编码 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&#x27;utf-8&#x27;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 优先使用 IE 最新版本和 Chrome --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;IE=edge,chrome=1&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 页面描述 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;description&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;不超过150个字符&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 页面关键词 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;keywords&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 网页作者 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;author&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;name, email@gmail.com&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 搜索引擎抓取 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;robots&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;index,follow&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 为移动设备添加 viewport --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;initial-scale=1, maximum-scale=3, minimum-scale=1, user-scalable=no&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- `width=device-width` 会导致 iPhone 5 添加到主屏后以 WebApp 全屏模式打开页面时出现黑边 http://bigc.at/ios-webapp-viewport-meta.orz --&gt;</span></span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- iOS 设备 begin --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;apple-mobile-web-app-title&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;标题&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 添加到主屏后的标题（iOS 6 新增） --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;apple-mobile-web-app-capable&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;yes&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 是否启用 WebApp 全屏模式，删除苹果默认的工具栏和菜单栏 --&gt;</span></span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;apple-itunes-app&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;app-id=myAppStoreID, affiliate-data=myAffiliateData, app-argument=myURL&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 添加智能 App 广告条 Smart App Banner（iOS 6+ Safari） --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;apple-mobile-web-app-status-bar-style&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;black&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 设置苹果工具栏颜色 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;format-detection&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;telphone=no, email=no&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 忽略页面中的数字识别为电话，忽略email识别 --&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 启用360浏览器的极速模式(webkit) --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;renderer&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;webkit&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 避免IE使用兼容模式 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 不让百度转码 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;Cache-Control&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;no-siteapp&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 针对手持设备优化，主要是针对一些老的不识别viewport的浏览器，比如黑莓 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;HandheldFriendly&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;true&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 微软的老式浏览器 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;MobileOptimized&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;320&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- uc强制竖屏 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;screen-orientation&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;portrait&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- QQ强制竖屏 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;x5-orientation&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;portrait&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- UC强制全屏 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;full-screen&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;yes&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- QQ强制全屏 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;x5-fullscreen&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;true&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- UC应用模式 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;browsermode&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;application&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- QQ应用模式 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;x5-page-mode&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;app&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- windows phone 点击无高光 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;msapplication-tap-highlight&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;no&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- iOS 图标 begin --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">&quot;apple-touch-icon-precomposed&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;/apple-touch-icon-57x57-precomposed.png&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- iPhone 和 iTouch，默认 57x57 像素，必须有 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">&quot;apple-touch-icon-precomposed&quot;</span> <span class=\"attr\">sizes</span>=<span class=\"string\">&quot;114x114&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;/apple-touch-icon-114x114-precomposed.png&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- Retina iPhone 和 Retina iTouch，114x114 像素，可以没有，但推荐有 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">&quot;apple-touch-icon-precomposed&quot;</span> <span class=\"attr\">sizes</span>=<span class=\"string\">&quot;144x144&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;/apple-touch-icon-144x144-precomposed.png&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- Retina iPad，144x144 像素，可以没有，但推荐有 --&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- iOS 图标 end --&gt;</span></span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- iOS 启动画面 begin --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">&quot;apple-touch-startup-image&quot;</span> <span class=\"attr\">sizes</span>=<span class=\"string\">&quot;768x1004&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;/splash-screen-768x1004.png&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- iPad 竖屏 768 x 1004（标准分辨率） --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">&quot;apple-touch-startup-image&quot;</span> <span class=\"attr\">sizes</span>=<span class=\"string\">&quot;1536x2008&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;/splash-screen-1536x2008.png&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- iPad 竖屏 1536x2008（Retina） --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">&quot;apple-touch-startup-image&quot;</span> <span class=\"attr\">sizes</span>=<span class=\"string\">&quot;1024x748&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;/Default-Portrait-1024x748.png&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- iPad 横屏 1024x748（标准分辨率） --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">&quot;apple-touch-startup-image&quot;</span> <span class=\"attr\">sizes</span>=<span class=\"string\">&quot;2048x1496&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;/splash-screen-2048x1496.png&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- iPad 横屏 2048x1496（Retina） --&gt;</span></span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">&quot;apple-touch-startup-image&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;/splash-screen-320x480.png&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- iPhone/iPod Touch 竖屏 320x480 (标准分辨率) --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">&quot;apple-touch-startup-image&quot;</span> <span class=\"attr\">sizes</span>=<span class=\"string\">&quot;640x960&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;/splash-screen-640x960.png&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- iPhone/iPod Touch 竖屏 640x960 (Retina) --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">&quot;apple-touch-startup-image&quot;</span> <span class=\"attr\">sizes</span>=<span class=\"string\">&quot;640x1136&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;/splash-screen-640x1136.png&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- iPhone 5/iPod Touch 5 竖屏 640x1136 (Retina) --&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- iOS 启动画面 end --&gt;</span></span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- iOS 设备 end --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;msapplication-TileColor&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;#000&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- Windows 8 磁贴颜色 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;msapplication-TileImage&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;icon.png&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- Windows 8 磁贴图标 --&gt;</span></span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">&quot;alternate&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;application/rss+xml&quot;</span> <span class=\"attr\">title</span>=<span class=\"string\">&quot;RSS&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;/rss.xml&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 添加 RSS 订阅 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">&quot;shortcut icon&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;image/ico&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;/favicon.ico&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 添加 favicon icon --&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- sns 社交标签 begin --&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 参考微博API --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">property</span>=<span class=\"string\">&quot;og:type&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;类型&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">property</span>=<span class=\"string\">&quot;og:url&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;URL地址&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">property</span>=<span class=\"string\">&quot;og:title&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;标题&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">property</span>=<span class=\"string\">&quot;og:image&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;图片&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">property</span>=<span class=\"string\">&quot;og:description&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;描述&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- sns 社交标签 end --&gt;</span></span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>标题<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"<meta name=\"referrer\" content=\"no-referrer\"/>\n\n<h2 id=\"静态布局、自适应布局、流式布局、响应式布局、弹性布局等的概念和区别-圣杯布局\"><a href=\"#静态布局、自适应布局、流式布局、响应式布局、弹性布局等的概念和区别-圣杯布局\" class=\"headerlink\" title=\"静态布局、自适应布局、流式布局、响应式布局、弹性布局等的概念和区别/圣杯布局\"></a>静态布局、自适应布局、流式布局、响应式布局、弹性布局等的概念和区别/圣杯布局</h2><h3 id=\"静态布局\"><a href=\"#静态布局\" class=\"headerlink\" title=\"静态布局\"></a>静态布局</h3><ol>\n<li><p>布局特点：不管浏览器尺寸具体是多少，网页布局始终按照最初写代码时的布局来显示。常规的pc的网站都是静态（定宽度）布局的，也就是设置了min-width，这样的话，如果小于这个宽度就会出现滚动条，如果大于这个宽度则内容居中外加背景，这种设计常见与pc端。</p>\n</li>\n<li><p>布局特点：不管浏览器尺寸具体是多少，网页布局始终按照最初写代码时的布局来显示。</p>\n<p>常规的pc的网站都是静态（定宽度）布局的，也就是设置了min-width，这样的话，如果小于这个宽度就会出现滚动条，如果大于这个宽度则内容居中外加背景，这种设计常见与pc端。</p>\n</li>\n<li><ul>\n<li>优点：这种布局方式对设计师和CSS编写者来说都是最简单的，亦没有兼容性问题。</li>\n<li>缺点：显而易见，即不能根据用户的屏幕尺寸做出不同的表现。","more":"</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"流式布局\"><a href=\"#流式布局\" class=\"headerlink\" title=\"流式布局\"></a>流式布局</h3><ol>\n<li><p>流式布局（Liquid）的特点（也叫”Fluid”) 是页面元素的宽度按照屏幕分辨率进行适配调整，但整体布局不变。代表作栅栏系统（网格系统）。</p>\n</li>\n<li><p>网页中主要的划分区域的尺寸使用百分数（搭配min-*、max-*属性使用），例如，设置网页主体的宽度为80%，min-width为960px。图片也作类似处理（width:100%, max-width一般设定为图片本身的尺寸，防止被拉伸而失真）。</p>\n</li>\n<li><p>布局和设计</p>\n<ul>\n<li><p>布局特点：屏幕分辨率变化时，页面里元素的大小会变化而但布局不变。【这就导致如果屏幕太大或者太小都会导致元素无法正常显示】</p>\n</li>\n<li><p>设计方法：使用%百分比定义宽度，高度大都是用px来固定住，可以根据可视区域 (viewport) 和父元素的实时尺寸进行调整，尽可能的适应各种分辨率。往往配合 max-width/min-width 等属性控制尺寸流动范围以免过大或者过小影响阅读。</p>\n</li>\n</ul>\n</li>\n<li><p>优点和缺点</p>\n<ul>\n<li>按照屏幕分辨率进行适配调整，但整体布局不变。适应早期的web布局，兼容性高</li>\n<li><strong>缺点明显</strong>：<strong>主要的问题</strong>是如果屏幕尺度跨度太大，那么在相对其原始设计而言过小或过大的屏幕上不能正常显示。因为宽度使用%百分比定义，但是高度和文字大小等大都是用px来固定，所以在大屏幕的手机下显示效果会变成有些页面元素宽度被拉的很长，但是高度、文字大小还是和原来一样（即：<strong>这些东西无法变得“流式”</strong>），显示非常不协调。</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"自适应布局\"><a href=\"#自适应布局\" class=\"headerlink\" title=\"自适应布局\"></a>自适应布局</h3><ol>\n<li>自适应布局的特点是分别为不同的屏幕分辨率定义布局，即创建多个静态布局，每个静态布局对应一个屏幕分辨率范围。</li>\n<li>实现方法<ul>\n<li>使用 @media 媒体查询给不同尺寸和介质的设备切换不同的样式。在优秀的响应范围设计下可以给适配范围内的设备最好的体验，在同一个设备下实际还是固定的布局。</li>\n</ul>\n</li>\n<li>特点<ul>\n<li>布局特点：屏幕分辨率变化时，页面里面元素的位置会变化而大小不会变化。</li>\n</ul>\n</li>\n<li>本质上是多个多个<em><strong>静态布局</strong></em>。</li>\n</ol>\n<h3 id=\"响应式布局\"><a href=\"#响应式布局\" class=\"headerlink\" title=\"响应式布局\"></a>响应式布局</h3><ol>\n<li><strong>可以把响应式布局看作是流式布局和自适应布局设计理念的融合</strong>。</li>\n<li>响应式设计的目标是确保一个页面在所有终端上（各种尺寸的PC、手机、手表、冰箱的Web浏览器等等）都能显示出令人满意的效果，对CSS编写者而言，在实现上不拘泥于具体手法，但通常是糅合了流式布局+弹性布局，再搭配媒体查询技术使用。</li>\n<li>设计方法：<ul>\n<li>媒体查询+流式布局。通常使用 @media 媒体查询 和网格系统 (Grid System) 配合相对布局单位进行布局，实际上就是综合响应式、流动等上述技术通过 CSS 给单一网页不同设备返回不同样式的技术统称。</li>\n</ul>\n</li>\n<li>特点：<ul>\n<li>每个屏幕分辨率下面会有一个布局样式，即元素位置和大小都会变。</li>\n</ul>\n</li>\n<li>优点和缺点：<ul>\n<li>适应pc和移动端，如果足够耐心，效果完美</li>\n<li>（1）媒体查询是有限的，也就是可以枚举出来的，只能适应主流的宽高。（2）要匹配足够多的屏幕大小，工作量不小，设计也需要多个版本。需要很多个@media。</li>\n</ul>\n</li>\n<li>代表比如bootstrap，element等都是响应式的设计布局</li>\n</ol>\n<h3 id=\"弹性布局\"><a href=\"#弹性布局\" class=\"headerlink\" title=\"弹性布局\"></a>弹性布局</h3><ol>\n<li>这类布局的特点是，<strong>包裹文字的各元素的尺寸采用em/rem做单位，而页面的主要划分区域的尺寸仍使用百分数或px做单位（同「流式布局」或「静态/固定布局」）</strong>。<strong>早期浏览器不支持整个页面按比例缩放</strong>，仅支持网页内文字尺寸的放大，这种情况下。使用em/rem做单位，可以使包裹文字的元素随着文字的缩放而缩放。</li>\n<li><strong>rem,em区别</strong>：<ul>\n<li>rem,em都是顺应不同网页字体大小展现而产生的。其中，em是相对其父元素，在实际应用中相对而言会带来很多不便；而rem是始终相对于html大小，即页面根元素。</li>\n</ul>\n</li>\n<li>根据不同的屏幕尺寸，rem改变的是font-size的大小，但是本质上，客户看到的布局是没有改变的，这一点不同于响应式布局。</li>\n<li><strong>响应式和弹性布局之间的对比：</strong><ul>\n<li>rem布局：改变浏览器宽度，页面所有元素的高宽都等比例缩放，也就是大屏幕下导航是横的，小屏幕下还是横的只不过变小了。</li>\n<li>响应式布局：改变浏览器宽度，“布局”会随之变化，不是一成不变的，例如导航栏在大屏幕下是横排，在小屏幕下是竖排，在超小屏幕下隐藏为菜单，也就是说如果有足够的耐心，在每一种屏幕下都应该有合理的布局，完美的效果。</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><blockquote>\n<ol>\n<li><p>如果只做pc端，那么静态布局（定宽度）是最好的选择；</p>\n</li>\n<li><p>如果做移动端，且设计对高度和元素间距要求不高，那么弹性布局（rem+js）是最好的选择，一份css+一份js调节font-size搞定；</p>\n</li>\n<li><p>如果pc，移动要兼容，而且要求很高那么响应式布局还是最好的选择，前提是设计根据不同的高宽做不同的设计，响应式根据媒体查询做不同的布局。</p>\n</li>\n</ol>\n</blockquote>\n<h2 id=\"圣杯布局的三种实现\"><a href=\"#圣杯布局的三种实现\" class=\"headerlink\" title=\"圣杯布局的三种实现\"></a>圣杯布局的三种实现</h2><p>圣杯布局和双飞翼布局一直是前端面试的高频考点，圣杯布局的出现是来自由 Matthew Levine 在 2006 年写的一篇文章 《In Search of the Holy Grail》。 比起双飞翼布局，它的起源不是源于对页面的形象表达。在西方，圣杯是表达“渴求之物”的意思。而双飞翼布局则是源于淘宝的UED，可以说是灵感来自于页面渲染。</p>\n<h3 id=\"效果图\"><a href=\"#效果图\" class=\"headerlink\" title=\"效果图\"></a>效果图</h3><p>布局形式如下：</p>\n<ul>\n<li>header和footer各自占领屏幕所有宽度，高度固定。</li>\n<li>中间的container是一个三栏布局。</li>\n<li>三栏布局两侧宽度固定不变，中间部分自动填充整个区域。</li>\n<li>中间部分的高度是三栏中最高的区域的高度。<br><img src=\"https://img-blog.csdnimg.cn/20190118092113972.png\" alt=\"shengbie\"><br>三种实现形式</li>\n</ul>\n<ol>\n<li><p><strong>浮动</strong></p>\n<ol>\n<li><p>设置header，footer高度</p>\n</li>\n<li><p>#container内部子元素有float浮动，所以会导致一些问题，所以添加了overflow：hidden；实际上也可以使用overflow：auto；</p>\n</li>\n<li><p>container左右两边需要留出左右对应的位置，padding-left: 200px;padding-right: 150px;</p>\n</li>\n<li><p>给左右元素设置浮动后，脱离文档流。使用margin-left：-100%；和margin-right：-150px定位到对应的位置。</p>\n<blockquote>\n<p>清除浮动参考:清除浮动</p>\n</blockquote>\n</li>\n</ol>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;header&quot;</span>&gt;</span>#header<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;container&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;center&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;column&quot;</span>&gt;</span>#center<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;left&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;column&quot;</span>&gt;</span>#left<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;right&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;column&quot;</span>&gt;</span>#right<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;footer&quot;</span>&gt;</span>#footer<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">body</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">min-width</span>: <span class=\"number\">550px</span>;  <span class=\"comment\">/* 2x leftContent width + rightContent width */</span></span><br><span class=\"line\">  <span class=\"attribute\">font-weight</span>: bold;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"selector-id\">#header</span>, <span class=\"selector-id\">#footer</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"built_in\">rgba</span>(<span class=\"number\">29</span>, <span class=\"number\">27</span>, <span class=\"number\">27</span>, <span class=\"number\">0.726</span>);</span><br><span class=\"line\">  <span class=\"attribute\">text-align</span>: center;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">60px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">line-height</span>: <span class=\"number\">60px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"selector-id\">#container</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">padding-left</span>: <span class=\"number\">200px</span>;   <span class=\"comment\">/* leftContent width */</span></span><br><span class=\"line\">  <span class=\"attribute\">padding-right</span>: <span class=\"number\">150px</span>;  <span class=\"comment\">/* rightContent width */</span></span><br><span class=\"line\">  <span class=\"attribute\">overflow</span>: hidden;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"selector-id\">#container</span> <span class=\"selector-class\">.column</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: relative;</span><br><span class=\"line\">  <span class=\"attribute\">float</span>: left;</span><br><span class=\"line\">  <span class=\"attribute\">text-align</span>: center;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">300px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">line-height</span>: <span class=\"number\">300px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"selector-id\">#center</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"built_in\">rgb</span>(<span class=\"number\">206</span>, <span class=\"number\">201</span>, <span class=\"number\">201</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"selector-id\">#left</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">200px</span>;           <span class=\"comment\">/* leftContent width */</span></span><br><span class=\"line\">  <span class=\"attribute\">right</span>: <span class=\"number\">200px</span>;           <span class=\"comment\">/* leftContent width */</span></span><br><span class=\"line\">  <span class=\"attribute\">margin-left</span>: -<span class=\"number\">100%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"built_in\">rgba</span>(<span class=\"number\">95</span>, <span class=\"number\">179</span>, <span class=\"number\">235</span>, <span class=\"number\">0.972</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"selector-id\">#right</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">150px</span>;           <span class=\"comment\">/* rightContent width */</span></span><br><span class=\"line\">  <span class=\"attribute\">margin-right</span>: -<span class=\"number\">150px</span>;   <span class=\"comment\">/* rightContent width */</span></span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"built_in\">rgb</span>(<span class=\"number\">231</span>, <span class=\"number\">105</span>, <span class=\"number\">2</span>);</span><br></pre></td></tr></table></figure></li>\n<li><p><strong>flex布局</strong></p>\n<ul>\n<li><p>header和footer设置样式，横向撑满。</p>\n</li>\n<li><p>container中的left、center、right依次排布即可</p>\n</li>\n<li><p>给container设置弹性布局 <code>display: flex;</code></p>\n</li>\n<li><p>left和right区域定宽，center设置 <code>flex: 1;</code> 即可</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;header&quot;</span>&gt;</span>#header<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;container&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;left&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;column&quot;</span>&gt;</span>#left<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;center&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;column&quot;</span>&gt;</span>#center<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;right&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;column&quot;</span>&gt;</span>#right<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;footer&quot;</span>&gt;</span>#footer<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">body</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">min-width</span>: <span class=\"number\">550px</span>;  </span><br><span class=\"line\">  <span class=\"attribute\">font-weight</span>: bold;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-id\">#header</span>, <span class=\"selector-id\">#footer</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"built_in\">rgba</span>(<span class=\"number\">29</span>, <span class=\"number\">27</span>, <span class=\"number\">27</span>, <span class=\"number\">0.726</span>);</span><br><span class=\"line\">  <span class=\"attribute\">text-align</span>: center;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">60px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">line-height</span>: <span class=\"number\">60px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-id\">#container</span> &#123;</span><br><span class=\"line\"> <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-id\">#container</span> <span class=\"selector-class\">.column</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">text-align</span>: center;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">300px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">line-height</span>: <span class=\"number\">300px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-id\">#center</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">flex</span>: <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"built_in\">rgb</span>(<span class=\"number\">206</span>, <span class=\"number\">201</span>, <span class=\"number\">201</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-id\">#left</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">200px</span>;        </span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"built_in\">rgba</span>(<span class=\"number\">95</span>, <span class=\"number\">179</span>, <span class=\"number\">235</span>, <span class=\"number\">0.972</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-id\">#right</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">150px</span>;           </span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"built_in\">rgb</span>(<span class=\"number\">231</span>, <span class=\"number\">105</span>, <span class=\"number\">2</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li><p><strong>grid布局</strong></p>\n<p>如上图所示，我们把body划分成三行四列的网格，其中有5条列网格线</p>\n<p>给body元素添加display: grid;属性变成一个grid(网格)<br>给header元素设置grid-row: 1; 和 grid-column: 1/5; 意思是占据第一行网格的从第一条列网格线开始到第五条列网格线结束<br>给footer元素设置grid-row: 1; 和 grid-column: 1/5; 意思是占据第三行网格的从第一条列网格线开始到第五条列网格线结束<br>给left元素设置grid-row: 2; 和 grid-column: 1/2; 意思是占据第二行网格的从第一条列网格线开始到第二条列网格线结束<br>给center元素设置grid-row: 2; 和 grid-column: 2/4; 意思是占据第二行网格的从第二条列网格线开始到第四条列网格线结束<br>给right元素设置grid-row: 2; 和 grid-column: 4/5; 意思是占据第二行网格的从第四条列网格线开始到第五条列网格线结束</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;header&quot;</span>&gt;</span>#header<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;left&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;column&quot;</span>&gt;</span>#left<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;center&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;column&quot;</span>&gt;</span>#center<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;right&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;column&quot;</span>&gt;</span>#right<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;footer&quot;</span>&gt;</span>#footer<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">body</span> &#123;</span><br><span class=\"line\">   <span class=\"attribute\">min-width</span>: <span class=\"number\">550px</span>;</span><br><span class=\"line\">   <span class=\"attribute\">font-weight</span>: bold;</span><br><span class=\"line\">   <span class=\"attribute\">font-size</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">   <span class=\"attribute\">display</span>: grid;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"> <span class=\"selector-id\">#header</span>,</span><br><span class=\"line\"> <span class=\"selector-id\">#footer</span> &#123;</span><br><span class=\"line\">   <span class=\"attribute\">background</span>: <span class=\"built_in\">rgba</span>(<span class=\"number\">29</span>, <span class=\"number\">27</span>, <span class=\"number\">27</span>, <span class=\"number\">0.726</span>);</span><br><span class=\"line\">   <span class=\"attribute\">text-align</span>: center;</span><br><span class=\"line\">   <span class=\"attribute\">height</span>: <span class=\"number\">60px</span>;</span><br><span class=\"line\">   <span class=\"attribute\">line-height</span>: <span class=\"number\">60px</span>;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"> <span class=\"selector-id\">#header</span> &#123;</span><br><span class=\"line\">   <span class=\"attribute\">grid-row</span>: <span class=\"number\">1</span>;</span><br><span class=\"line\">   <span class=\"attribute\">grid-column</span>: <span class=\"number\">1</span>/<span class=\"number\">5</span>;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"> <span class=\"selector-id\">#footer</span> &#123;</span><br><span class=\"line\">   <span class=\"attribute\">grid-row</span>: <span class=\"number\">3</span>;</span><br><span class=\"line\">   <span class=\"attribute\">grid-column</span>: <span class=\"number\">1</span>/<span class=\"number\">5</span>;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"> <span class=\"selector-class\">.column</span> &#123;</span><br><span class=\"line\">   <span class=\"attribute\">text-align</span>: center;</span><br><span class=\"line\">   <span class=\"attribute\">height</span>: <span class=\"number\">300px</span>;</span><br><span class=\"line\">   <span class=\"attribute\">line-height</span>: <span class=\"number\">300px</span>;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"> <span class=\"selector-id\">#left</span> &#123;</span><br><span class=\"line\">   <span class=\"attribute\">grid-row</span>: <span class=\"number\">2</span>;</span><br><span class=\"line\">   <span class=\"attribute\">grid-column</span>: <span class=\"number\">1</span>/<span class=\"number\">2</span>;</span><br><span class=\"line\">   <span class=\"attribute\">background</span>: <span class=\"built_in\">rgba</span>(<span class=\"number\">95</span>, <span class=\"number\">179</span>, <span class=\"number\">235</span>, <span class=\"number\">0.972</span>);</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"> <span class=\"selector-id\">#center</span> &#123;</span><br><span class=\"line\">   <span class=\"attribute\">grid-row</span>: <span class=\"number\">2</span>;</span><br><span class=\"line\">   <span class=\"attribute\">grid-column</span>: <span class=\"number\">2</span>/<span class=\"number\">4</span>;</span><br><span class=\"line\">   <span class=\"attribute\">background</span>: <span class=\"built_in\">rgb</span>(<span class=\"number\">206</span>, <span class=\"number\">201</span>, <span class=\"number\">201</span>);</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"> <span class=\"selector-id\">#right</span> &#123;</span><br><span class=\"line\">   <span class=\"attribute\">grid-row</span>: <span class=\"number\">2</span>;</span><br><span class=\"line\">   <span class=\"attribute\">grid-column</span>: <span class=\"number\">4</span>/<span class=\"number\">5</span>;</span><br><span class=\"line\">   <span class=\"attribute\">background</span>: <span class=\"built_in\">rgb</span>(<span class=\"number\">231</span>, <span class=\"number\">105</span>, <span class=\"number\">2</span>);</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure></li>\n<li><p>三种实现形式</p>\n<p>三种实现形式内，不考虑兼容性的情况下，<em><strong>flex布局</strong></em>是使用比较广的，浮动的布局相对比较麻烦，需要设定各种margin和padding和position的定位，grid布局属于二维布局，就兼容性来说，还是比flex要差一些。</p>\n</li>\n</ol>\n<h2 id=\"CSS实现文字和图片的水平垂直居中\"><a href=\"#CSS实现文字和图片的水平垂直居中\" class=\"headerlink\" title=\"CSS实现文字和图片的水平垂直居中\"></a>CSS实现文字和图片的水平垂直居中</h2><p>居中是一开始学习使用css遇到比较多的情况，不同的情况有不同的居中方式，随着前端的规范和写法的进步，有各种各样的方法实现，现在来记录一下。<br>主要有文字、div块级元素和图片的居中，以下分几种情况说明。</p>\n<h3 id=\"文字居中\"><a href=\"#文字居中\" class=\"headerlink\" title=\"文字居中\"></a>文字居中</h3><ol>\n<li><p>单行文字（多行文字）</p>\n<ul>\n<li>水平居中</li>\n</ul>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">text-align</span>：center</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>垂直居中<br>只要height值等于line-height值就ok</li>\n</ul>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.son</span>&#123;<span class=\"attribute\">height</span>:<span class=\"number\">100px</span>;<span class=\"attribute\">line-height</span>:<span class=\"number\">100px</span>;&#125;</span><br></pre></td></tr></table></figure>\n\n<!-- more --></li>\n<li><p>多行文字</p>\n<ul>\n<li><p>垂直居中</p>\n<ol>\n<li>高度固定<br><strong>关键属性：</strong>display:tabel-cell; vertical-align:middle;</li>\n</ol>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;style&gt;</span><br><span class=\"line\"><span class=\"selector-tag\">div</span>&#123;<span class=\"attribute\">height</span>:<span class=\"number\">300px</span>;</span><br><span class=\"line\"><span class=\"attribute\">width</span>:<span class=\"number\">200px</span>;</span><br><span class=\"line\"><span class=\"attribute\">vertical-align</span>:middle;</span><br><span class=\"line\"><span class=\"attribute\">display</span>:table-cell;</span><br><span class=\"line\"><span class=\"attribute\">word-break</span>:break-all;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/style&gt;</span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>父级元素高度固定，子元素为行内元素<br><strong>关键属性：</strong>父级:diaplay:tabel; 子集：display:tabel-cell; vertical-align:middle;</li>\n</ol>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;style&gt;<span class=\"selector-tag\">div</span>&#123;<span class=\"attribute\">height</span>:<span class=\"number\">300px</span>;<span class=\"attribute\">width</span>:<span class=\"number\">200px</span>;<span class=\"attribute\">display</span>:table;<span class=\"attribute\">word-break</span>:break-all;<span class=\"attribute\">background</span>:<span class=\"number\">#666</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-tag\">span</span>&#123;<span class=\"attribute\">display</span>:table-cell;<span class=\"attribute\">vertical-align</span>:middle;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/style&gt;</span><br><span class=\"line\">&lt;<span class=\"selector-tag\">div</span>&gt;</span><br><span class=\"line\">&lt;<span class=\"selector-tag\">span</span>&gt;some things&lt;/<span class=\"selector-tag\">span</span>&gt;</span><br><span class=\"line\">&lt;/<span class=\"selector-tag\">div</span>&gt;</span><br></pre></td></tr></table></figure>\n\n<ol start=\"3\">\n<li>父级元素高度固定，子元素为块元素且高度固定<br><strong>关键属性：</strong>定位 + margin-top：负值；</li>\n</ol>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;style type=&quot;text/css&quot;&gt;</span><br><span class=\"line\">*&#123;<span class=\"attribute\">margin</span>:<span class=\"number\">0</span>;<span class=\"attribute\">padding</span>:<span class=\"number\">0</span>;&#125;</span><br><span class=\"line\"><span class=\"selector-tag\">div</span>&#123;<span class=\"attribute\">height</span>:<span class=\"number\">300px</span>;<span class=\"attribute\">width</span>:<span class=\"number\">200px</span>;<span class=\"attribute\">position</span>:relative;<span class=\"attribute\">word-break</span>:break-all;<span class=\"attribute\">background</span>:<span class=\"number\">#666</span>;&#125;</span><br><span class=\"line\"><span class=\"selector-tag\">p</span>&#123;<span class=\"attribute\">position</span>:absolute;<span class=\"attribute\">top</span>:<span class=\"number\">50%</span>;<span class=\"attribute\">left</span>:<span class=\"number\">0</span>;<span class=\"attribute\">height</span>:<span class=\"number\">80px</span>;<span class=\"attribute\">margin-top</span>:-<span class=\"number\">40px</span>;<span class=\"attribute\">background</span>:red;&#125;</span><br><span class=\"line\">&lt;/style&gt;     </span><br><span class=\"line\">&lt;<span class=\"selector-tag\">div</span>&gt;</span><br><span class=\"line\">&lt;<span class=\"selector-tag\">p</span>&gt;some things&lt;/<span class=\"selector-tag\">p</span>&gt;</span><br><span class=\"line\">&lt;/<span class=\"selector-tag\">div</span>&gt;</span><br></pre></td></tr></table></figure>\n\n<ol start=\"4\">\n<li>父级元素高度固定，子元素为块元素且高度不固定<br><strong>关键属性：</strong>定位 + transform：translateY(-50%);</li>\n</ol>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;style&gt;</span><br><span class=\"line\">*&#123;<span class=\"attribute\">margin</span>:<span class=\"number\">0</span>;<span class=\"attribute\">padding</span>:<span class=\"number\">0</span>;&#125;  <span class=\"comment\">/*不加的话会被p或其他标签默认样式影响*/</span></span><br><span class=\"line\"><span class=\"selector-tag\">div</span>&#123;<span class=\"attribute\">height</span>:<span class=\"number\">300px</span>;<span class=\"attribute\">width</span>:<span class=\"number\">200px</span>;<span class=\"attribute\">position</span>:relative; <span class=\"attribute\">word-break</span>:break-all;<span class=\"attribute\">background</span>:<span class=\"number\">#666</span>;&#125;</span><br><span class=\"line\"><span class=\"selector-tag\">p</span>&#123;<span class=\"attribute\">position</span>:absolute;<span class=\"attribute\">top</span>:<span class=\"number\">50%</span>;<span class=\"attribute\">left</span>:<span class=\"number\">0</span>;<span class=\"attribute\">transform</span>:<span class=\"built_in\">translateY</span>(-<span class=\"number\">50%</span>);&#125;<span class=\"comment\">/*个人建议，被包裹的块标签就不要height，用内容将高度撑开就好*/</span></span><br><span class=\"line\">&lt;/style&gt;</span><br><span class=\"line\">&lt;<span class=\"selector-tag\">div</span>&gt;</span><br><span class=\"line\">&lt;<span class=\"selector-tag\">p</span>&gt;some things&lt;/<span class=\"selector-tag\">p</span>&gt;</span><br><span class=\"line\">&lt;/<span class=\"selector-tag\">div</span>&gt;</span><br></pre></td></tr></table></figure>\n\n<ol start=\"5\">\n<li>父子元素高度均固定<br><strong>关键属性：</strong>定位 + margin：auto；</li>\n</ol>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;style&gt;</span><br><span class=\"line\">*&#123;<span class=\"attribute\">margin</span>:<span class=\"number\">0</span>;<span class=\"attribute\">padding</span>:<span class=\"number\">0</span>;&#125;</span><br><span class=\"line\"><span class=\"selector-tag\">div</span>&#123;<span class=\"attribute\">height</span>:<span class=\"number\">300px</span>;<span class=\"attribute\">width</span>:<span class=\"number\">400px</span>;<span class=\"attribute\">position</span>:relative;<span class=\"attribute\">word-break</span>:break-all;<span class=\"attribute\">background</span>:<span class=\"number\">#666</span>;&#125;</span><br><span class=\"line\"><span class=\"selector-tag\">p</span>&#123;<span class=\"attribute\">position</span>:absolute;<span class=\"attribute\">top</span>:<span class=\"number\">0</span>;<span class=\"attribute\">bottom</span>:<span class=\"number\">0</span>;<span class=\"attribute\">right</span>:<span class=\"number\">0</span>;<span class=\"attribute\">left</span>:<span class=\"number\">0</span>;<span class=\"attribute\">margin</span>:auto;<span class=\"attribute\">height</span>:<span class=\"number\">80px</span>;<span class=\"attribute\">width</span>:<span class=\"number\">200px</span>;<span class=\"attribute\">background</span>:red;&#125;</span><br><span class=\"line\">&lt;/style&gt;</span><br><span class=\"line\">&lt;<span class=\"selector-tag\">div</span>&gt;</span><br><span class=\"line\">&lt;<span class=\"selector-tag\">p</span>&gt;some things&lt;/<span class=\"selector-tag\">p</span>&gt;</span><br><span class=\"line\">&lt;/<span class=\"selector-tag\">div</span>&gt;</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n</ol>\n<h3 id=\"块级元素居中\"><a href=\"#块级元素居中\" class=\"headerlink\" title=\"块级元素居中\"></a>块级元素居中</h3><ul>\n<li><p>水平居中</p>\n<ol>\n<li>行内元素(inline 或 inline-* 元素)<br>此类元素需要水平居中，则父级元素必须是块级元素(block level)，且父级元素上需要这样设置样式：</li>\n</ol>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.parent</span> &#123;</span><br><span class=\"line\"> <span class=\"attribute\">text-align</span>: center;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>块级元素<br>块级元素水平居中，需要设置 margin-left 和 margin-right 为 auto，且需要显示设置宽度，不然就占满整行，就无所谓水平居中了。</li>\n</ol>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.block</span> &#123;</span><br><span class=\"line\"> <span class=\"attribute\">width</span>: <span class=\"number\">300px</span>;</span><br><span class=\"line\"> <span class=\"attribute\">margin</span>: <span class=\"number\">0</span> auto;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ol start=\"3\">\n<li>同一行多个块级元素<br>如果是在同一行里需要居中多个块级元素，可以尝试下面的两种方法：</li>\n</ol>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* 方法一 */</span></span><br><span class=\"line\"><span class=\"selector-class\">.parent</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">text-align</span>: center;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.parent</span> <span class=\"selector-tag\">div</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">display</span>: inline-block;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/* 方法二 */</span></span><br><span class=\"line\"><span class=\"selector-class\">.parent</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">display</span>: -webkit-box;</span><br><span class=\"line\">    <span class=\"attribute\">display</span>: -ms-flexbox;</span><br><span class=\"line\">    <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">    -webkit-box-pack: center;</span><br><span class=\"line\">    -ms-<span class=\"attribute\">flex</span>-pack: center;</span><br><span class=\"line\">    <span class=\"attribute\">justify-content</span>: center;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li><p>垂直居中</p>\n<ol>\n<li>元素高度已知<br>知道块元素的高度，那么使用绝对定位和负的 margin 即可实现垂直居中：</li>\n</ol>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.parent</span> &#123;</span><br><span class=\"line\"> <span class=\"attribute\">position</span>: relative;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.parent</span> <span class=\"selector-tag\">div</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">    <span class=\"attribute\">top</span>: <span class=\"number\">50%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">height</span>: <span class=\"number\">50px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">margin-top</span>: -<span class=\"number\">25px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>块级元素高度是可变的<br>这个时候就需要用 transform 的Y轴平移来实现了：</li>\n</ol>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.parent</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">position</span>: relative;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.parent</span> <span class=\"selector-tag\">div</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">    <span class=\"attribute\">top</span>: <span class=\"number\">50%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">transform</span>: <span class=\"built_in\">translateY</span>(-<span class=\"number\">50%</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ol start=\"3\">\n<li>flexbox布局<br>flex主要是考虑布局问题</li>\n</ol>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.parent</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">display</span>: flexbox;</span><br><span class=\"line\">    <span class=\"attribute\">justify-content</span>: center;</span><br><span class=\"line\">    <span class=\"attribute\">flex-direction</span>: column;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ol start=\"4\">\n<li>块级元素高度不是固定的，且不由内容决定</li>\n</ol>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.parent</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">position</span>: relative;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.parent</span> <span class=\"selector-tag\">div</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">    <span class=\"attribute\">top</span>: <span class=\"number\">30%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">bottom</span>: <span class=\"number\">30%</span>; </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li><p>水平垂直居中</p>\n<ol>\n<li>知道宽高的盒子</li>\n</ol>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.parent</span> &#123;</span><br><span class=\"line\"> <span class=\"attribute\">position</span>: realtive;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.parent</span> <span class=\"selector-tag\">div</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">300px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">height</span>: <span class=\"number\">300px</span>;</span><br><span class=\"line\">    posotion: absoltue;</span><br><span class=\"line\">    <span class=\"attribute\">left</span>: <span class=\"number\">50%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">top</span>: <span class=\"number\">50%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">margin-left</span>: -<span class=\"number\">150px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">margin-top</span>: -<span class=\"number\">150px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>不知道宽高的盒子</li>\n</ol>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.parent</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">position</span>: realtive;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.parent</span> <span class=\"selector-tag\">div</span> &#123;</span><br><span class=\"line\">    posotion: absoltue;</span><br><span class=\"line\">    <span class=\"attribute\">left</span>: <span class=\"number\">50%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">top</span>: <span class=\"number\">50%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">transform</span>: <span class=\"built_in\">translate</span>(-<span class=\"number\">50%</span>, -<span class=\"number\">50%</span>);   </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ol start=\"3\">\n<li>flex布局</li>\n</ol>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.parent</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">    <span class=\"attribute\">justify-content</span>: center;</span><br><span class=\"line\">    <span class=\"attribute\">align-items</span>: center;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<meta name=\"referrer\" content=\"no-referrer\"/>\n\n\n\n<h2 id=\"flex设置成1和auto有什么区别\"><a href=\"#flex设置成1和auto有什么区别\" class=\"headerlink\" title=\"flex设置成1和auto有什么区别\"></a>flex设置成1和auto有什么区别</h2><h3 id=\"flex的取值\"><a href=\"#flex的取值\" class=\"headerlink\" title=\"flex的取值\"></a>flex的取值</h3><p>首先明确一点是， <code>flex</code> 是 <code>flex-grow</code>、<code>flex-shrink</code>、<code>flex-basis</code>的缩写。<code>flex</code> 的默认值是以上三个属性值的组合。</p>\n<p>那么，flex：1；和flex：auto；有对应的全写如下：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.item &#123;flex: auto;&#125;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.item &#123;</span><br><span class=\"line\"> flex-grow: 1;</span><br><span class=\"line\"> flex-shrink: 1;</span><br><span class=\"line\"> flex-basis: auto;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</blockquote>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.item &#123;flex: 1;&#125;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.item &#123;</span><br><span class=\"line\"> flex-grow: 1;</span><br><span class=\"line\"> flex-shrink: 1;</span><br><span class=\"line\"> flex-basis: 0%;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</blockquote>\n<p>这三个缩写代表什么意思呢？</p>\n<!-- more -->\n\n<ul>\n<li>flex-shrink属性指定了flex元素的收缩规则。flex元素仅在交替宽度之和大于容器的时候才会发生收缩，其收缩的大小是依据flex-shrink的值。</li>\n<li>flex-grow属性用于设置或检索弹性盒子的扩展比率。</li>\n<li><code>flex-basis</code> 规定的是子元素的基准值。所以是否溢出的计算与此属性息息相关。<code>flex-basis</code> 规定的范围取决于 <code>box-sizing</code>。这里主要讨论以下 <code>flex-basis</code> 的取值情况：<ol>\n<li><code>auto</code>：首先检索该子元素的主尺寸，如果主尺寸不为 <code>auto</code>，则使用值采取主尺寸之值；如果也是 <code>auto</code>，则使用值为 <code>content</code>。</li>\n<li><code>content</code>：指根据该子元素的内容自动布局。有的用户代理没有实现取 <code>content</code> 值，等效的替代方案是 <code>flex-basis</code> 和主尺寸都取 <code>auto</code>。</li>\n<li>百分比：根据其包含块（即伸缩父容器）的主尺寸计算。如果包含块的主尺寸未定义（即父容器的主尺寸取决于子元素），则计算结果和设为 <code>auto</code> 一样。</li>\n</ol>\n</li>\n</ul>\n<h3 id=\"举个例子\"><a href=\"#举个例子\" class=\"headerlink\" title=\"举个例子\"></a>举个例子</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;parent&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;item-1&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;item-2&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;item-3&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;style type=&quot;text/css&quot;&gt;</span><br><span class=\"line\">    <span class=\"selector-class\">.parent</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">        <span class=\"attribute\">width</span>: <span class=\"number\">600px</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-class\">.parent</span> &gt; <span class=\"selector-tag\">div</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">height</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-class\">.item-1</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">width</span>: <span class=\"number\">140px</span>;</span><br><span class=\"line\">        <span class=\"attribute\">flex</span>: <span class=\"number\">2</span> <span class=\"number\">1</span> <span class=\"number\">0%</span>;</span><br><span class=\"line\">        <span class=\"attribute\">background</span>: blue;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-class\">.item-2</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">        <span class=\"attribute\">flex</span>: <span class=\"number\">2</span> <span class=\"number\">1</span> auto;</span><br><span class=\"line\">        <span class=\"attribute\">background</span>: darkblue;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-class\">.item-3</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">flex</span>: <span class=\"number\">1</span> <span class=\"number\">1</span> <span class=\"number\">200px</span>;</span><br><span class=\"line\">        <span class=\"attribute\">background</span>: lightblue;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&lt;/style&gt;</span><br></pre></td></tr></table></figure>\n\n\n\n<p>子元素的总基准值是：.item-1:0% + item-2:auto + .item-3:200px = 300px，其中</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- 0% 即 0 宽度</span><br><span class=\"line\">- auto 对应取主尺寸即 100px</span><br></pre></td></tr></table></figure>\n\n<p>故剩余空间为 600px - 300px = 300px</p>\n<p>有剩余空间，需要分配剩余空间，需要flex-grow，就是flex:2,lex:2,lex:1;</p>\n<p>剩余空间分配如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- item-1 和 item-2 各分配 2/5，各得 120px</span><br><span class=\"line\">- item-3 分配 1/5，得 60px</span><br></pre></td></tr></table></figure>\n\n<p>各项目最终宽度为：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- item-1 = 0% + 120px = 120px</span><br><span class=\"line\">- item-2 = auto + 120px = 220px</span><br><span class=\"line\">- item-3 = 200px + 60px = 260px</span><br></pre></td></tr></table></figure>\n\n<p><em><strong>注意</strong></em></p>\n<ul>\n<li>当 item-1 基准值取 0% 的时候，是把该项目视为零尺寸的，故即便声明其尺寸为 140px，也并没有什么用，形同虚设</li>\n<li>而 item-2 基准值取 <code>auto</code> 的时候，根据规则基准值使用值是主尺寸值即 100px，故这 100px 不会纳入剩余空间</li>\n</ul>\n<h3 id=\"全部设置\"><a href=\"#全部设置\" class=\"headerlink\" title=\"全部设置\"></a>全部设置</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.item &#123;flex: 2333 3222 234px;&#125;</span><br><span class=\"line\">.item &#123;</span><br><span class=\"line\">    flex-grow: 2333;</span><br><span class=\"line\">    flex-shrink: 3222;</span><br><span class=\"line\">    flex-basis: 234px;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>当 <code>flex</code> 取值为 <code>none</code>，则计算值为 0 0 auto，如下是等同的：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.item &#123;flex: none;&#125;</span><br><span class=\"line\">.item &#123;</span><br><span class=\"line\">    flex-grow: 0;</span><br><span class=\"line\">    flex-shrink: 0;</span><br><span class=\"line\">    flex-basis: auto;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>当 <code>flex</code> 取值为 <code>auto</code>，则计算值为 1 1 auto，如下是等同的：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.item &#123;flex: auto;&#125;</span><br><span class=\"line\">.item &#123;</span><br><span class=\"line\">    flex-grow: 1;</span><br><span class=\"line\">    flex-shrink: 1;</span><br><span class=\"line\">    flex-basis: auto;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>当 <code>flex</code> 取值为一个非负数字，则该数字为 <code>flex-grow</code> 值，<code>flex-shrink</code> 取 1，<code>flex-basis</code> 取 0%，如下是等同的：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.item &#123;flex: 1;&#125;</span><br><span class=\"line\">.item &#123;</span><br><span class=\"line\">    flex-grow: 1;</span><br><span class=\"line\">    flex-shrink: 1;</span><br><span class=\"line\">    flex-basis: 0%;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>当 <code>flex</code> 取值为一个长度或百分比，则视为 <code>flex-basis</code> 值，<code>flex-grow</code> 取 1，<code>flex-shrink</code> 取 1，有如下等同情况（注意 0% 是一个百分比而不是一个非负数字）：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.item-1 &#123;flex: 0%;&#125;</span><br><span class=\"line\">.item-1 &#123;</span><br><span class=\"line\">    flex-grow: 1;</span><br><span class=\"line\">    flex-shrink: 1;</span><br><span class=\"line\">    flex-basis: 0%;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.item-2 &#123;flex: 24px;&#125;</span><br><span class=\"line\">.item-1 &#123;</span><br><span class=\"line\">    flex-grow: 1;</span><br><span class=\"line\">    flex-shrink: 1;</span><br><span class=\"line\">    flex-basis: 24px;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>当 <code>flex</code> 取值为两个非负数字，则分别视为 <code>flex-grow</code> 和 <code>flex-shrink</code> 的值，<code>flex-basis</code> 取 0%，如下是等同的：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.item &#123;flex: 2 3;&#125;</span><br><span class=\"line\">.item &#123;</span><br><span class=\"line\">    flex-grow: 2;</span><br><span class=\"line\">    flex-shrink: 3;</span><br><span class=\"line\">    flex-basis: 0%;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>当 <code>flex</code> 取值为一个非负数字和一个长度或百分比，则分别视为 <code>flex-grow</code> 和 <code>flex-basis</code> 的值，<code>flex-shrink</code> 取 1，如下是等同的：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.item &#123;flex: 2333 3222px;&#125;</span><br><span class=\"line\">.item &#123;</span><br><span class=\"line\">    flex-grow: 2333;</span><br><span class=\"line\">    flex-shrink: 1;</span><br><span class=\"line\">    flex-basis: 3222px;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<meta name=\"referrer\" content=\"no-referrer\"/>\n\n<h2 id=\"移动端优先和桌面端优先\"><a href=\"#移动端优先和桌面端优先\" class=\"headerlink\" title=\"移动端优先和桌面端优先\"></a>移动端优先和桌面端优先</h2><h3 id=\"什么是“移动端优先”和“桌面优先”方法\"><a href=\"#什么是“移动端优先”和“桌面优先”方法\" class=\"headerlink\" title=\"什么是“移动端优先”和“桌面优先”方法\"></a><strong>什么是“移动端优先”和“桌面优先”方法</strong></h3><p>构建响应式网站是如今前端开发者的必备技能，当我们谈到响应式网站时，“移动端优先”这个词立刻就会出现在脑海中。</p>\n<p>我们知道从“移动端优先”这个角度开始设计很重要，但我们很少谈到使用“移动端优先”的方法来写代码。</p>\n<p>今天，我想与你分享“移动端优先”添加样式的方法，为什么这种方法更好，以及如何发挥它的魔力。</p>\n<!-- more -->\n\n<h3 id=\"移动端优先和桌面端优先-区别\"><a href=\"#移动端优先和桌面端优先-区别\" class=\"headerlink\" title=\"移动端优先和桌面端优先 区别\"></a>移动端优先和桌面端优先 区别</h3><p>“移动端优先”添加样式的方法指的是首先在移动设备上应用样式，然后通过媒体查询在样式表中加入应用于大屏幕的高级样式和其他覆盖样式。</p>\n<p>这个方法使用min-width媒体查询。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 这个样式在0px到600px应用</span></span><br><span class=\"line\">body &#123; <span class=\"attr\">background</span>: red; &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 这个样式在大于600px时应用</span></span><br><span class=\"line\">@media (min-<span class=\"attr\">width</span>: 600px) &#123;</span><br><span class=\"line\">    body &#123; <span class=\"attr\">background</span>: green; &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>另一方面，“桌面优先”添加样式的方法指的是首先在桌面设备上应用样式，然后通过媒体查询在样式表中加入应用于小屏幕的高级样式和其他覆盖样式。</p>\n<p>这个方法使用max-width媒体查询。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 这个样式在大于600px时应用</span></span><br><span class=\"line\">body &#123; <span class=\"attr\">background</span>: green; &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 这个样式在0px到600px应用</span></span><br><span class=\"line\">@media (max-<span class=\"attr\">width</span>: 600px) &#123;</span><br><span class=\"line\">    body &#123; <span class=\"attr\">background</span>: red; &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"为什么是移动端优先？\"><a href=\"#为什么是移动端优先？\" class=\"headerlink\" title=\"为什么是移动端优先？\"></a>为什么是移动端优先？</h3><ul>\n<li><p>为大屏幕编写的代码通常会比为小屏幕编写的代码更复杂，所以编写“移动端优先”代码可以简化你的代码。</p>\n</li>\n<li><p>设想这样一个场景，你的网站有一个“内容-边栏”布局，.content在移动端占会100%的宽度，在桌面则占60%的宽度。</p>\n<p><img src=\"https://zellwk.com/images/2014/12/mw-5.png\"></p>\n</li>\n</ul>\n<p>移动端代码为：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.<span class=\"property\">content</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 为小屏幕设置属性</span></span><br><span class=\"line\">    <span class=\"comment\">// 这里不需要设置任何属性，因为我们可以使用默认样式</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 为大屏幕设置属性</span></span><br><span class=\"line\">    @media (min-<span class=\"attr\">width</span>: 800px) &#123;</span><br><span class=\"line\">        <span class=\"attr\">float</span>: left;</span><br><span class=\"line\">        <span class=\"attr\">width</span>: <span class=\"number\">60</span>%;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>桌面端代码：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.<span class=\"property\">content</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 为大屏幕设置属性</span></span><br><span class=\"line\">    <span class=\"attr\">float</span>: left;</span><br><span class=\"line\">    <span class=\"attr\">width</span>: <span class=\"number\">60</span>%;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 为小屏幕设置属性</span></span><br><span class=\"line\">    <span class=\"comment\">// 注意我们需要重写两个默认属性才能使这个布局正常显示</span></span><br><span class=\"line\">    @media (max-<span class=\"attr\">width</span>: 800px) &#123;</span><br><span class=\"line\">        <span class=\"attr\">float</span>: none;</span><br><span class=\"line\">        <span class=\"attr\">width</span>: <span class=\"number\">100</span>%;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><strong>这里的主要区别就是移动端的布局更多的情况是占用屏幕较大的布局，比如都是100%的占用，可以通过继承直接生成对应的布局。</strong></li>\n</ul>\n<h3 id=\"结合max-width去使用\"><a href=\"#结合max-width去使用\" class=\"headerlink\" title=\"结合max-width去使用\"></a>结合max-width去使用</h3><ul>\n<li><p>当你的样式再不同的尺寸下都都不同的显示效果时，也可以通过max-width去终止之前尺寸的布局，节省后续布局的操作。</p>\n<p><img src=\"https://zellwk.com/images/2014/12/mw-4.png\"></p>\n</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.<span class=\"property\">gallery__item</span> &#123;</span><br><span class=\"line\">    <span class=\"attr\">float</span>: left;</span><br><span class=\"line\">    margin-<span class=\"attr\">right</span>: <span class=\"number\">5</span>%;</span><br><span class=\"line\">    margin-<span class=\"attr\">bottom</span>: <span class=\"number\">5</span>%;</span><br><span class=\"line\">    @media (max-<span class=\"attr\">width</span>: 800px) &#123;</span><br><span class=\"line\">        <span class=\"attr\">width</span>: <span class=\"number\">30</span>%;</span><br><span class=\"line\">        &amp;:nth-<span class=\"title function_\">child</span>(<span class=\"params\"><span class=\"number\">3n</span></span>) &#123;</span><br><span class=\"line\">            margin-<span class=\"attr\">right</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// min-width和max-width查询结合使用</span></span><br><span class=\"line\">    @media (min-<span class=\"attr\">width</span>: 800px) and (max-<span class=\"attr\">width</span>: 1200px) &#123;</span><br><span class=\"line\">        <span class=\"attr\">width</span>: <span class=\"number\">21.25</span>%; <span class=\"comment\">// (100% - 15%) / 4</span></span><br><span class=\"line\">        &amp;:nth-<span class=\"title function_\">child</span>(<span class=\"params\"><span class=\"number\">4n</span></span>) &#123;</span><br><span class=\"line\">            margin-<span class=\"attr\">right</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    @media (min-<span class=\"attr\">width</span>: 1200px) &#123;</span><br><span class=\"line\">        <span class=\"attr\">width</span>: <span class=\"number\">16</span>%; <span class=\"comment\">// (100% - 20%) / 5</span></span><br><span class=\"line\">        &amp;:nth-<span class=\"title function_\">child</span>(<span class=\"params\"><span class=\"number\">5n</span></span>) &#123;</span><br><span class=\"line\">            margin-<span class=\"attr\">right</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"总结-1\"><a href=\"#总结-1\" class=\"headerlink\" title=\"总结\"></a>总结</h3><p>建立响应式网站时，min-width媒体查询非常有用，因为它减低了代码复杂度。不过，从上面的例子中可以看出，min-width查询并非所有问题的解决方案，有时在样式表中使用max-width查询也是有益的，它能帮助你保持代码更DRY。</p>\n<meta name=\"referrer\" content=\"no-referrer\"/>\n\n<h2 id=\"移动端常用的meta标签\"><a href=\"#移动端常用的meta标签\" class=\"headerlink\" title=\"移动端常用的meta标签\"></a>移动端常用的meta标签</h2><h3 id=\"meta标签记录\"><a href=\"#meta标签记录\" class=\"headerlink\" title=\"meta标签记录\"></a>meta标签记录</h3><p>记录一下常用的meta标签</p>\n<!-- more -->\n\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span> <span class=\"comment\">&lt;!-- 使用 HTML5 doctype，不区分大小写 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;zh-cmn-Hans&quot;</span>&gt;</span> <span class=\"comment\">&lt;!-- 更加标准的 lang 属性写法 http://zhi.hu/XyIa --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 声明文档使用的字符编码 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&#x27;utf-8&#x27;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 优先使用 IE 最新版本和 Chrome --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;IE=edge,chrome=1&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 页面描述 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;description&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;不超过150个字符&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 页面关键词 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;keywords&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 网页作者 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;author&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;name, email@gmail.com&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 搜索引擎抓取 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;robots&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;index,follow&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 为移动设备添加 viewport --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;initial-scale=1, maximum-scale=3, minimum-scale=1, user-scalable=no&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- `width=device-width` 会导致 iPhone 5 添加到主屏后以 WebApp 全屏模式打开页面时出现黑边 http://bigc.at/ios-webapp-viewport-meta.orz --&gt;</span></span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- iOS 设备 begin --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;apple-mobile-web-app-title&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;标题&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 添加到主屏后的标题（iOS 6 新增） --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;apple-mobile-web-app-capable&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;yes&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 是否启用 WebApp 全屏模式，删除苹果默认的工具栏和菜单栏 --&gt;</span></span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;apple-itunes-app&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;app-id=myAppStoreID, affiliate-data=myAffiliateData, app-argument=myURL&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 添加智能 App 广告条 Smart App Banner（iOS 6+ Safari） --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;apple-mobile-web-app-status-bar-style&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;black&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 设置苹果工具栏颜色 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;format-detection&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;telphone=no, email=no&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 忽略页面中的数字识别为电话，忽略email识别 --&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 启用360浏览器的极速模式(webkit) --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;renderer&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;webkit&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 避免IE使用兼容模式 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 不让百度转码 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;Cache-Control&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;no-siteapp&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 针对手持设备优化，主要是针对一些老的不识别viewport的浏览器，比如黑莓 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;HandheldFriendly&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;true&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 微软的老式浏览器 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;MobileOptimized&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;320&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- uc强制竖屏 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;screen-orientation&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;portrait&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- QQ强制竖屏 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;x5-orientation&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;portrait&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- UC强制全屏 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;full-screen&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;yes&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- QQ强制全屏 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;x5-fullscreen&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;true&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- UC应用模式 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;browsermode&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;application&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- QQ应用模式 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;x5-page-mode&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;app&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- windows phone 点击无高光 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;msapplication-tap-highlight&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;no&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- iOS 图标 begin --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">&quot;apple-touch-icon-precomposed&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;/apple-touch-icon-57x57-precomposed.png&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- iPhone 和 iTouch，默认 57x57 像素，必须有 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">&quot;apple-touch-icon-precomposed&quot;</span> <span class=\"attr\">sizes</span>=<span class=\"string\">&quot;114x114&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;/apple-touch-icon-114x114-precomposed.png&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- Retina iPhone 和 Retina iTouch，114x114 像素，可以没有，但推荐有 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">&quot;apple-touch-icon-precomposed&quot;</span> <span class=\"attr\">sizes</span>=<span class=\"string\">&quot;144x144&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;/apple-touch-icon-144x144-precomposed.png&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- Retina iPad，144x144 像素，可以没有，但推荐有 --&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- iOS 图标 end --&gt;</span></span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- iOS 启动画面 begin --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">&quot;apple-touch-startup-image&quot;</span> <span class=\"attr\">sizes</span>=<span class=\"string\">&quot;768x1004&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;/splash-screen-768x1004.png&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- iPad 竖屏 768 x 1004（标准分辨率） --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">&quot;apple-touch-startup-image&quot;</span> <span class=\"attr\">sizes</span>=<span class=\"string\">&quot;1536x2008&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;/splash-screen-1536x2008.png&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- iPad 竖屏 1536x2008（Retina） --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">&quot;apple-touch-startup-image&quot;</span> <span class=\"attr\">sizes</span>=<span class=\"string\">&quot;1024x748&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;/Default-Portrait-1024x748.png&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- iPad 横屏 1024x748（标准分辨率） --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">&quot;apple-touch-startup-image&quot;</span> <span class=\"attr\">sizes</span>=<span class=\"string\">&quot;2048x1496&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;/splash-screen-2048x1496.png&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- iPad 横屏 2048x1496（Retina） --&gt;</span></span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">&quot;apple-touch-startup-image&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;/splash-screen-320x480.png&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- iPhone/iPod Touch 竖屏 320x480 (标准分辨率) --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">&quot;apple-touch-startup-image&quot;</span> <span class=\"attr\">sizes</span>=<span class=\"string\">&quot;640x960&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;/splash-screen-640x960.png&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- iPhone/iPod Touch 竖屏 640x960 (Retina) --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">&quot;apple-touch-startup-image&quot;</span> <span class=\"attr\">sizes</span>=<span class=\"string\">&quot;640x1136&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;/splash-screen-640x1136.png&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- iPhone 5/iPod Touch 5 竖屏 640x1136 (Retina) --&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- iOS 启动画面 end --&gt;</span></span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- iOS 设备 end --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;msapplication-TileColor&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;#000&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- Windows 8 磁贴颜色 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;msapplication-TileImage&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;icon.png&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- Windows 8 磁贴图标 --&gt;</span></span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">&quot;alternate&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;application/rss+xml&quot;</span> <span class=\"attr\">title</span>=<span class=\"string\">&quot;RSS&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;/rss.xml&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 添加 RSS 订阅 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">&quot;shortcut icon&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;image/ico&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;/favicon.ico&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 添加 favicon icon --&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- sns 社交标签 begin --&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 参考微博API --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">property</span>=<span class=\"string\">&quot;og:type&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;类型&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">property</span>=<span class=\"string\">&quot;og:url&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;URL地址&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">property</span>=<span class=\"string\">&quot;og:title&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;标题&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">property</span>=<span class=\"string\">&quot;og:image&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;图片&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">property</span>=<span class=\"string\">&quot;og:description&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;描述&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- sns 社交标签 end --&gt;</span></span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>标题<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br></pre></td></tr></table></figure>"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"cl0uux6v100007suf60f3bud5","tag_id":"cl0uux6v800027suf1zpgavsm","_id":"cl0uux6vg000b7sufb4iu2i99"},{"post_id":"cl0uux6v100007suf60f3bud5","tag_id":"cl0uux6vd00067suf8lhshxxb","_id":"cl0uux6vi000d7sufg76md5fc"},{"post_id":"cl0uux6v600017sufdgjkhfn2","tag_id":"cl0uux6vf00097suf8qvu6o5p","_id":"cl0uux6vk000g7suf5h37a2nq"},{"post_id":"cl0uux6va00037sufdemeba8n","tag_id":"cl0uux6vi000e7suf9o857xhy","_id":"cl0uux6vq000r7suf04qz4klm"},{"post_id":"cl0uux6va00037sufdemeba8n","tag_id":"cl0uux6vl000i7suffh3og4d3","_id":"cl0uux6vq000t7sufbnbcd8vt"},{"post_id":"cl0uux6va00037sufdemeba8n","tag_id":"cl0uux6vn000m7sufcnsr03tc","_id":"cl0uux6vr000w7sufe3nb5ssl"},{"post_id":"cl0uux6vr000v7sufhgznacpo","tag_id":"cl0uux6vp000p7sufa0pndawc","_id":"cl0uux6vs000y7sufhb4a17k6"},{"post_id":"cl0uux6vb00047sufhzjgdk2b","tag_id":"cl0uux6vp000p7sufa0pndawc","_id":"cl0uux6vt00117suf70x3f5q5"},{"post_id":"cl0uux6vb00047sufhzjgdk2b","tag_id":"cl0uux6vq000u7sufh3l0e4lj","_id":"cl0uux6vt00137suf11pyf0kl"},{"post_id":"cl0uux6vr000x7sufabp21pd9","tag_id":"cl0uux6vp000p7sufa0pndawc","_id":"cl0uux6vv00167suf97dnb6s8"},{"post_id":"cl0uux6vr000x7sufabp21pd9","tag_id":"cl0uux6vq000u7sufh3l0e4lj","_id":"cl0uux6vw00187suf3l7sam4c"},{"post_id":"cl0uux6vt00127suffnw83zej","tag_id":"cl0uux6vp000p7sufa0pndawc","_id":"cl0uux6vx001b7suffdnofber"},{"post_id":"cl0uux6vt00127suffnw83zej","tag_id":"cl0uux6vq000u7sufh3l0e4lj","_id":"cl0uux6vy001d7sufb71nbd0m"},{"post_id":"cl0uux6vt00147sufhy4yfg65","tag_id":"cl0uux6vp000p7sufa0pndawc","_id":"cl0uux6vz001g7suff3q56o1v"},{"post_id":"cl0uux6vt00147sufhy4yfg65","tag_id":"cl0uux6vq000u7sufh3l0e4lj","_id":"cl0uux6w0001i7suf3rny3p10"},{"post_id":"cl0uux6vv00177suf7v009fs6","tag_id":"cl0uux6vp000p7sufa0pndawc","_id":"cl0uux6w1001l7sufh6yx8avs"},{"post_id":"cl0uux6vv00177suf7v009fs6","tag_id":"cl0uux6vq000u7sufh3l0e4lj","_id":"cl0uux6w1001n7sufh7s497y2"},{"post_id":"cl0uux6vw00197suf66am53xn","tag_id":"cl0uux6vp000p7sufa0pndawc","_id":"cl0uux6w4001p7suff2gk0sq2"},{"post_id":"cl0uux6vw00197suf66am53xn","tag_id":"cl0uux6vq000u7sufh3l0e4lj","_id":"cl0uux6w5001s7suf821u7y54"},{"post_id":"cl0uux6vx001c7sufc4pe62h0","tag_id":"cl0uux6vp000p7sufa0pndawc","_id":"cl0uux6w6001u7sufhap8hvj2"},{"post_id":"cl0uux6vx001c7sufc4pe62h0","tag_id":"cl0uux6vq000u7sufh3l0e4lj","_id":"cl0uux6w7001x7sufgsbh1jln"},{"post_id":"cl0uux6vc00057suf9evkhos7","tag_id":"cl0uux6vs000z7suf2amo2znf","_id":"cl0uux6w7001z7suf3e99anyc"},{"post_id":"cl0uux6vc00057suf9evkhos7","tag_id":"cl0uux6vq000u7sufh3l0e4lj","_id":"cl0uux6w800227sufhoobcvw0"},{"post_id":"cl0uux6vc00057suf9evkhos7","tag_id":"cl0uux6vx001a7suf5hjtb6mg","_id":"cl0uux6w900247suf53xy9jyx"},{"post_id":"cl0uux6w0001j7sufbw797ewj","tag_id":"cl0uux6vp000p7sufa0pndawc","_id":"cl0uux6wa00277suf02kx9efh"},{"post_id":"cl0uux6w0001j7sufbw797ewj","tag_id":"cl0uux6vq000u7sufh3l0e4lj","_id":"cl0uux6wa00297suf6dv79zu2"},{"post_id":"cl0uux6vd00077suf0xxtdnp7","tag_id":"cl0uux6vz001f7suf3arifgp3","_id":"cl0uux6wb002b7suf5vieaox4"},{"post_id":"cl0uux6vd00077suf0xxtdnp7","tag_id":"cl0uux6w1001k7suf2pkegzs6","_id":"cl0uux6wb002d7suf4rhhc7t1"},{"post_id":"cl0uux6w2001o7sufaxd48di8","tag_id":"cl0uux6vp000p7sufa0pndawc","_id":"cl0uux6wb002e7suf4ogu9i3z"},{"post_id":"cl0uux6w5001r7sufge8qeh6v","tag_id":"cl0uux6vp000p7sufa0pndawc","_id":"cl0uux6wc002g7suf42dn4hxz"},{"post_id":"cl0uux6w5001r7sufge8qeh6v","tag_id":"cl0uux6vq000u7sufh3l0e4lj","_id":"cl0uux6wc002h7suf6kdo5jsy"},{"post_id":"cl0uux6w5001t7suf023ehoht","tag_id":"cl0uux6vp000p7sufa0pndawc","_id":"cl0uux6wc002j7sufdfhv03ux"},{"post_id":"cl0uux6w5001t7suf023ehoht","tag_id":"cl0uux6vq000u7sufh3l0e4lj","_id":"cl0uux6wc002k7sufd0ct5p58"},{"post_id":"cl0uux6w6001v7suf988ib7f2","tag_id":"cl0uux6vp000p7sufa0pndawc","_id":"cl0uux6wd002m7suf6sctfyfa"},{"post_id":"cl0uux6w6001v7suf988ib7f2","tag_id":"cl0uux6vq000u7sufh3l0e4lj","_id":"cl0uux6wd002n7sufbywzc4uc"},{"post_id":"cl0uux6vg000a7sufhzjmcdg7","tag_id":"cl0uux6w4001q7suf7pbb1qlx","_id":"cl0uux6wd002p7suf93ye1coy"},{"post_id":"cl0uux6vg000a7sufhzjmcdg7","tag_id":"cl0uux6w6001w7suf222xejpd","_id":"cl0uux6wd002q7sufb7dy8e22"},{"post_id":"cl0uux6w800237sufcci8g3xn","tag_id":"cl0uux6vp000p7sufa0pndawc","_id":"cl0uux6we002s7suf6ja4fp5k"},{"post_id":"cl0uux6w800237sufcci8g3xn","tag_id":"cl0uux6vq000u7sufh3l0e4lj","_id":"cl0uux6we002t7sufa0wx3g7x"},{"post_id":"cl0uux6w900257suf9wdxb20y","tag_id":"cl0uux6vp000p7sufa0pndawc","_id":"cl0uux6we002v7suffwh5ggn1"},{"post_id":"cl0uux6w900257suf9wdxb20y","tag_id":"cl0uux6vq000u7sufh3l0e4lj","_id":"cl0uux6we002w7sufaxfx4s8s"},{"post_id":"cl0uux6wa00287suf2q5e6x5x","tag_id":"cl0uux6vp000p7sufa0pndawc","_id":"cl0uux6wf002y7suf5zmh4ifl"},{"post_id":"cl0uux6wa00287suf2q5e6x5x","tag_id":"cl0uux6vq000u7sufh3l0e4lj","_id":"cl0uux6wf002z7suf9fw5748k"},{"post_id":"cl0uux6vh000c7suf3twhg5o1","tag_id":"cl0uux6w800217suf39zsevde","_id":"cl0uux6wf00317sufho6n095y"},{"post_id":"cl0uux6vh000c7suf3twhg5o1","tag_id":"cl0uux6w900267suf4mxt49jf","_id":"cl0uux6wf00327sufaukcazkt"},{"post_id":"cl0uux6vj000f7suf5q6dawmq","tag_id":"cl0uux6wb002c7sufe83aftil","_id":"cl0uux6wg00347sufg5gh4x1e"},{"post_id":"cl0uux6vj000f7suf5q6dawmq","tag_id":"cl0uux6wb002f7suf3rtq6a50","_id":"cl0uux6wi00357suf15y9f5bq"},{"post_id":"cl0uux6vk000h7suf3lhdcszt","tag_id":"cl0uux6vp000p7sufa0pndawc","_id":"cl0uux6wi00377suf750y9b2m"},{"post_id":"cl0uux6vk000h7suf3lhdcszt","tag_id":"cl0uux6vq000u7sufh3l0e4lj","_id":"cl0uux6wj00387suf4w8l9qwk"},{"post_id":"cl0uux6vl000j7suf6uvvcl6h","tag_id":"cl0uux6vp000p7sufa0pndawc","_id":"cl0uux6wj003a7suf7ibzfilc"},{"post_id":"cl0uux6vl000j7suf6uvvcl6h","tag_id":"cl0uux6vq000u7sufh3l0e4lj","_id":"cl0uux6wj003b7sufam562y7a"},{"post_id":"cl0uux6vm000k7suf8a4pbr9v","tag_id":"cl0uux6vp000p7sufa0pndawc","_id":"cl0uux6wk003d7suffl1302fr"},{"post_id":"cl0uux6vm000k7suf8a4pbr9v","tag_id":"cl0uux6vq000u7sufh3l0e4lj","_id":"cl0uux6wk003e7sufgrqsbrii"},{"post_id":"cl0uux6vn000l7suf3b3nb1ga","tag_id":"cl0uux6vp000p7sufa0pndawc","_id":"cl0uux6wk003g7suf2hyf6v70"},{"post_id":"cl0uux6vn000l7suf3b3nb1ga","tag_id":"cl0uux6vq000u7sufh3l0e4lj","_id":"cl0uux6wm003h7suf9sqn173f"},{"post_id":"cl0uux6vo000n7sufd6tda7ng","tag_id":"cl0uux6vp000p7sufa0pndawc","_id":"cl0uux6wm003j7suffysf9ymp"},{"post_id":"cl0uux6vo000n7sufd6tda7ng","tag_id":"cl0uux6vq000u7sufh3l0e4lj","_id":"cl0uux6wm003k7suf5y393mbj"},{"post_id":"cl0uux6vo000o7suf2bwlbl6u","tag_id":"cl0uux6w6001w7suf222xejpd","_id":"cl0uux6wm003m7suf7eyuc7k8"},{"post_id":"cl0uux6vo000o7suf2bwlbl6u","tag_id":"cl0uux6wk003f7suf0tsi4tqj","_id":"cl0uux6wn003n7suf8mhu16hw"},{"post_id":"cl0uux6vp000q7suf2kazbkyk","tag_id":"cl0uux6vp000p7sufa0pndawc","_id":"cl0uux6wn003p7suf5rq6fuvn"},{"post_id":"cl0uux6vp000q7suf2kazbkyk","tag_id":"cl0uux6vq000u7sufh3l0e4lj","_id":"cl0uux6wn003q7suf18fmdcih"},{"post_id":"cl0uux6vq000s7sufcix7b2cn","tag_id":"cl0uux6vp000p7sufa0pndawc","_id":"cl0uux6wn003s7suf8zcvc7fo"},{"post_id":"cl0uux6vq000s7sufcix7b2cn","tag_id":"cl0uux6vq000u7sufh3l0e4lj","_id":"cl0uux6wn003t7suf0a2o5a1z"},{"post_id":"cl0uux6vs00107sufdh259pe2","tag_id":"cl0uux6wb002c7sufe83aftil","_id":"cl0uux6wo003v7suf63em5u30"},{"post_id":"cl0uux6vs00107sufdh259pe2","tag_id":"cl0uux6wn003r7suf4u1c6m88","_id":"cl0uux6wo003w7sufbldna89o"},{"post_id":"cl0uux6vy001e7suf5ycabiyh","tag_id":"cl0uux6wn003u7suf1gl4394q","_id":"cl0uux6wo003y7sufev1be77q"},{"post_id":"cl0uux6vz001h7suf4l0ihfj3","tag_id":"cl0uux6wo003x7sufae66817y","_id":"cl0uux6wp00417sufe950ando"},{"post_id":"cl0uux6vz001h7suf4l0ihfj3","tag_id":"cl0uux6wo003z7sufekth8hlk","_id":"cl0uux6wp00427suf1dnt4zwe"},{"post_id":"cl0uux6w1001m7suf5p1abbol","tag_id":"cl0uux6v800027suf1zpgavsm","_id":"cl0uux6wp00447suf2w6e2gqi"},{"post_id":"cl0uux6w1001m7suf5p1abbol","tag_id":"cl0uux6wo00407suf4sv4dmjx","_id":"cl0uux6wp00457suf1rajfege"},{"post_id":"cl0uux6w7001y7suf1ud2fix5","tag_id":"cl0uux6wp00437sufd9b0bgbk","_id":"cl0uux6wp00477suf0njrcndl"},{"post_id":"cl0uux6wa002a7sufcoyahoru","tag_id":"cl0uux6wp00467sufavfp035t","_id":"cl0uux6wq00487sufbby2ailh"},{"post_id":"cl0uux6wt00497sufhjaaghu6","tag_id":"cl0uux6wu004b7suf3ppzggjh","_id":"cl0uux6wv004e7sufacdr57f2"},{"post_id":"cl0uux6wt00497sufhjaaghu6","tag_id":"cl0uux6wv004c7suf0fjth4c7","_id":"cl0uux6wv004f7sufd4789c38"},{"post_id":"cl0uux6wu004a7sufewyg9x3a","tag_id":"cl0uux6wv004d7suf337tavab","_id":"cl0uux6ww004h7suf7cy16epx"},{"post_id":"cl0uux6wu004a7sufewyg9x3a","tag_id":"cl0uux6wv004g7suffhg6fde1","_id":"cl0uux6ww004i7suf4ke5fk7u"}],"Tag":[{"name":"ES6","_id":"cl0uux6v800027suf1zpgavsm"},{"name":"解构","_id":"cl0uux6vd00067suf8lhshxxb"},{"name":"echart","_id":"cl0uux6vf00097suf8qvu6o5p"},{"name":"ElementUI","_id":"cl0uux6vi000e7suf9o857xhy"},{"name":"form，tabs","_id":"cl0uux6vl000i7suffh3og4d3"},{"name":"table","_id":"cl0uux6vn000m7sufcnsr03tc"},{"name":"js","_id":"cl0uux6vp000p7sufa0pndawc"},{"name":"hexo","_id":"cl0uux6vq000u7sufh3l0e4lj"},{"name":"图片地址","_id":"cl0uux6vs000z7suf2amo2znf"},{"name":"refer","_id":"cl0uux6vx001a7suf5hjtb6mg"},{"name":"PostMessage","_id":"cl0uux6vz001f7suf3arifgp3"},{"name":"跨域","_id":"cl0uux6w1001k7suf2pkegzs6"},{"name":"cancletoken","_id":"cl0uux6w4001q7suf7pbb1qlx"},{"name":"vue","_id":"cl0uux6w6001w7suf222xejpd"},{"name":"github","_id":"cl0uux6w800217suf39zsevde"},{"name":"git","_id":"cl0uux6w900267suf4mxt49jf"},{"name":"node","_id":"cl0uux6wb002c7sufe83aftil"},{"name":"mongodb","_id":"cl0uux6wb002f7suf3rtq6a50"},{"name":"优化","_id":"cl0uux6wk003f7suf0tsi4tqj"},{"name":"express，multer","_id":"cl0uux6wn003r7suf4u1c6m88"},{"name":"小程序","_id":"cl0uux6wn003u7suf1gl4394q"},{"name":"原生","_id":"cl0uux6wo003x7sufae66817y"},{"name":"JavaScript","_id":"cl0uux6wo003z7sufekth8hlk"},{"name":"新特性","_id":"cl0uux6wo00407suf4sv4dmjx"},{"name":"centsos","_id":"cl0uux6wp00437sufd9b0bgbk"},{"name":"登录，动画","_id":"cl0uux6wp00467sufavfp035t"},{"name":"路由守卫","_id":"cl0uux6wu004b7suf3ppzggjh"},{"name":"vue-router","_id":"cl0uux6wv004c7suf0fjth4c7"},{"name":"自适应布局","_id":"cl0uux6wv004d7suf337tavab"},{"name":"响应式布局，弹性布局","_id":"cl0uux6wv004g7suffhg6fde1"}]}}